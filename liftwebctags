!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Diff.scala	/^  def diff(val1: JValue, val2: JValue): Diff = (val1, val2) match {$/;"	V
2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Merge.scala	/^  def merge(val1: JValue, val2: JValue): JValue = (val1, val2) match {$/;"	V
2assoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  implicit def jobject2assoc(o: JObject) = new JsonListAssoc(o.obj)$/;"	o
A	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  type A = Nothing$/;"	T
A	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/A.scala	/^object A extends DispatchSnippet {$/;"	o
AFuncHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  sealed trait AFuncHolder extends Function1[List[String], Any] {$/;"	t
AMQPAddListener	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^case class AMQPAddListener(a: LiftActor)$/;"	c
AMQPAddListener	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^case class AMQPAddListener(a: LiftActor)$/;"	m
AMQPDispatcher	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^abstract class AMQPDispatcher[T](cf: ConnectionFactory, host: String, port: Int) extends LiftActor {$/;"	a
AMQPDispatcher	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^abstract class AMQPDispatcher[T](cf: ConnectionFactory, host: String, port: Int) extends LiftActor {$/;"	c
AMQPExampleFunPack	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^object AMQPExampleFunPack {$/;"	o
AMQPMessage	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^case class AMQPMessage[T](message: T)$/;"	c
AMQPMessage	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^case class AMQPMessage[T](message: T)$/;"	m
AMQPReconnect	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^case class AMQPReconnect(delay: Long)$/;"	c
AMQPReconnect	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^case class AMQPReconnect(delay: Long)$/;"	m
AMQPSender	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^abstract class AMQPSender[T](cf: ConnectionFactory, host: String, port: Int, exchange: String, routingKey: String) extends LiftActor {$/;"	a
AMQPSender	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^abstract class AMQPSender[T](cf: ConnectionFactory, host: String, port: Int, exchange: String, routingKey: String) extends LiftActor {$/;"	c
ANY	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^case object ANY extends ContentModel {$/;"	o
ARRAY	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    case object ARRAY extends BlockMode$/;"	o
ARef	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class ARef( name : String, href : String) extends ATextile(Nil, Nil) {$/;"	c
ARef	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class ARef( name : String, href : String) extends ATextile(Nil, Nil) {$/;"	m
ATextile	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  abstract class ATextile(val theElems : List[Textile], attrs : List[Attribute]) extends Textile {$/;"	a
ATextile	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  abstract class ATextile(val theElems : List[Textile], attrs : List[Attribute]) extends Textile {$/;"	c
ATransition	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  abstract class ATransition(val to: StV,val on: PartialFunction[Meta#Event, Any]) {$/;"	a
ATransition	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  abstract class ATransition(val to: StV,val on: PartialFunction[Meta#Event, Any]) {$/;"	c
AU	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^object AU extends CurrencyZone {$/;"	o
AUD	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    abstract class AUD extends AbstractCurrency("AUD") with DollarCurrency {}$/;"	a
AUD	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    abstract class AUD extends AbstractCurrency("AUD") with DollarCurrency {}$/;"	c
AUTHORIZATION	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthMessage.scala	/^  val AUTHORIZATION = Pattern.compile("\\\\s*(\\\\w*)\\\\s+(.*)")$/;"	V
AUTH_SCHEME	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthMessage.scala	/^  val AUTH_SCHEME = "OAuth"$/;"	V
AboutMe	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object AboutMe extends FacebookField("about_me")$/;"	o
AbstractCurrency	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    abstract class AbstractCurrency(val designation: String) extends Ordered[Currency] {$/;"	a
AbstractCurrency	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    abstract class AbstractCurrency(val designation: String) extends Ordered[Currency] {$/;"	c
AbstractScreen	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^private[liftweb] trait AbstractScreen extends Factory {$/;"	t
AbstractSyntax	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/AbstractSyntax.scala	/^trait AbstractSyntax {$/;"	t
AcceptedResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class AcceptedResponse() extends LiftResponse with HeaderStuff {$/;"	c
AcceptedResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class AcceptedResponse() extends LiftResponse with HeaderStuff {$/;"	m
AccessToken	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^    val AccessToken = oathPathPrefix ::: List("access_token")$/;"	V
Acronym	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Acronym(thing : String, acro : String) extends ATextile(Nil, Nil) {$/;"	c
Acronym	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Acronym(thing : String, acro : String) extends ATextile(Nil, Nil) {$/;"	m
ActionMessageSet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class ActionMessageSet(msg: List[() => Any], req: Req) extends CometMessage$/;"	c
ActionMessageSet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class ActionMessageSet(msg: List[() => Any], req: Req) extends CometMessage$/;"	m
Activator	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^class Activator extends BundleActivator {$/;"	c
Activities	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object Activities extends FacebookField("activities")$/;"	o
ActorPing	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ActorPing.scala	/^object ActorPing {$/;"	o
ActorPingException	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ActorPing.scala	/^case class ActorPingException(msg: String, e: Throwable) extends RuntimeException(msg, e)$/;"	c
ActorPingException	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ActorPing.scala	/^case class ActorPingException(msg: String, e: Throwable) extends RuntimeException(msg, e)$/;"	m
ActorPingSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ActorPingSpec.scala	/^object ActorPingSpec extends Specification with PingedService with WaitFor {$/;"	o
ActorPingSpecTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ActorPingSpec.scala	/^class ActorPingSpecTest extends JUnit4(ActorPingSpec)$/;"	c
ActorPingUnit	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ActorPingUnit.scala	/^object ActorPingUnit extends Specification with PingedService with WaitFor {$/;"	o
ActorPingUnitTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ActorPingUnit.scala	/^class ActorPingUnitTest extends JUnit4(ActorPingUnit)$/;"	c
ActorWatcher	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^object ActorWatcher extends scala.actors.Actor {$/;"	o
AddAListener	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class AddAListener(who: SimpleActor[Any])$/;"	c
AddAListener	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class AddAListener(who: SimpleActor[Any])$/;"	m
AddListener	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class AddListener(actor: LiftActor)$/;"	c
AddListener	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class AddListener(actor: LiftActor)$/;"	m
AddPhotoTags	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class AddPhotoTags(photoId: Long, tags: PhotoTag*) extends FacebookMethod("facebook.photos.addTag", PhotoId(photoId), Tags(tags: _*))$/;"	c
AddPhotoTags	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class AddPhotoTags(photoId: Long, tags: PhotoTag*) extends FacebookMethod("facebook.photos.addTag", PhotoId(photoId), Tags(tags: _*))$/;"	m
AddPhotoTagsParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^trait AddPhotoTagsParam extends FacebookParam$/;"	t
AddSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^private[http] case class AddSession(session: LiftSession)$/;"	c
AddSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^private[http] case class AddSession(session: LiftSession)$/;"	m
AddedApp	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object AddedApp extends FacebookField("has_added_app")$/;"	o
Address	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class Address(street: String, city: String)$/;"	c
Address	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class Address(street: String, city: String)$/;"	m
AddressType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  sealed abstract class AddressType(val adr: String) extends RoutingType$/;"	a
AddressType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  sealed abstract class AddressType(val adr: String) extends RoutingType$/;"	c
Advanced	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^  trait Advanced[+A] extends BufferedIterator[A] {$/;"	t
Affiliations	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object Affiliations extends FacebookField("affiliations")$/;"	o
After	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class After(time: TimeSpan, toDo: JsCmd) extends JsCmd {$/;"	c
After	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class After(time: TimeSpan, toDo: JsCmd) extends JsCmd {$/;"	m
After	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  case class After(when: TimeSpan, override val to: StV) extends ATransition(to, {case TimerEvent(len) if (when.millis <= len.millis) => true}) {$/;"	c
After	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  case class After(when: TimeSpan, override val to: StV) extends ATransition(to, {case TimerEvent(len) if (when.millis <= len.millis) => true}) {$/;"	m
AjaxContext	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^case class AjaxContext(success: Box[String], failure: Box[String], responseType: AjaxType.Value)$/;"	c
AjaxContext	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^case class AjaxContext(success: Box[String], failure: Box[String], responseType: AjaxType.Value)$/;"	m
AjaxContext	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^object AjaxContext {$/;"	o
AjaxEditableField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/AjaxMapper.scala	/^trait AjaxEditableField[FieldType,OwnerType <: Mapper[OwnerType]] extends MappedField[FieldType,OwnerType] {$/;"	t
AjaxInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JSArtifacts.scala	/^case class AjaxInfo(data: JsExp, action: String, timeout: Long,$/;"	c
AjaxInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JSArtifacts.scala	/^case class AjaxInfo(data: JsExp, action: String, timeout: Long,$/;"	m
AjaxInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JSArtifacts.scala	/^object AjaxInfo {$/;"	o
AjaxMessageMeta	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msgs.scala	/^case class AjaxMessageMeta(title: Box[String], cssClass: Box[String])$/;"	c
AjaxMessageMeta	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msgs.scala	/^case class AjaxMessageMeta(title: Box[String], cssClass: Box[String])$/;"	m
AjaxType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^object AjaxType extends Enumeration("javascript", "json") {$/;"	o
AlbumId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class AlbumId(albumId: Long) extends FacebookParam("aid", albumId) with GetPhotosParam with AddPhotoTagsParam with UploadPhotoParam$/;"	c
AlbumId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class AlbumId(albumId: Long) extends FacebookParam("aid", albumId) with GetPhotosParam with AddPhotoTagsParam with UploadPhotoParam$/;"	m
AlbumIds	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class AlbumIds(albumIds: Long*) extends FacebookParam("aids", albumIds.mkString(",")) with GetAlbumsParam$/;"	c
AlbumIds	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class AlbumIds(albumIds: Long*) extends FacebookParam("aids", albumIds.mkString(",")) with GetAlbumsParam$/;"	m
Alert	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class Alert(text: String) extends JsCmd {$/;"	c
Alert	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class Alert(text: String) extends JsCmd {$/;"	m
Align	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Align(align : Char) extends Attribute {$/;"	c
Align	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Align(align : Char) extends Attribute {$/;"	m
Alive	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ActorPingSpec.scala	/^  case object Alive$/;"	o
All	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  val All = Value(1, "All")$/;"	V
Alt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^  case class Alt(rs: _regexpT*)  extends RegExp {$/;"	c
Alt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^  case class Alt(rs: _regexpT*)  extends RegExp {$/;"	m
AltXML	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^object AltXML {$/;"	o
Anchor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Anchor(elems : List[Textile], href : String, alt : String, attrs : List[Attribute], disableLinks: Boolean) extends ATextile(elems, attrs) {$/;"	c
Anchor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Anchor(elems : List[Textile], href : String, alt : String, attrs : List[Attribute], disableLinks: Boolean) extends ATextile(elems, attrs) {$/;"	m
Animal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^trait Animal$/;"	t
Animals	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^case class Animals(animals: List[Animal], pet: Animal)$/;"	c
Animals	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^case class Animals(animals: List[Animal], pet: Animal)$/;"	m
Annotation	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Annotation.scala	/^abstract class Annotation {}$/;"	a
Annotation	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Annotation.scala	/^abstract class Annotation {}$/;"	c
AnonFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  object AnonFunc {$/;"	o
AnonFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  trait AnonFunc extends JsExp {$/;"	t
AnswerQuestion	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class AnswerQuestion(what: Any, listeners: List[(ListenerId, AnswerRender => Unit)]) extends CometMessage$/;"	c
AnswerQuestion	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class AnswerQuestion(what: Any, listeners: List[(ListenerId, AnswerRender => Unit)]) extends CometMessage$/;"	m
AnswerRender	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class AnswerRender(response: XmlOrJsCmd, who: LiftCometActor, when: Long, displayAll: Boolean) extends CometMessage$/;"	c
AnswerRender	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class AnswerRender(response: XmlOrJsCmd, who: LiftCometActor, when: Long, displayAll: Boolean) extends CometMessage$/;"	m
AnyActor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  type AnyActor = {def !(in: Any): Unit}$/;"	T
AnyAttribute	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class AnyAttribute(name : String, value : String) extends Attribute {$/;"	c
AnyAttribute	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class AnyAttribute(name : String, value : String) extends Attribute {$/;"	m
AnyBound	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  type AnyBound = T forSome {type T}$/;"	T
AnyClass	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^  type AnyClass = Class[T] forSome { type T }$/;"	T
AnyHedgeRHS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/grammar/HedgeRHS.scala	/^case object AnyHedgeRHS extends HedgeRHS$/;"	o
AnyIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  @serializable protected class AnyIterator extends Iterator[Any] {$/;"	c
AnyLocParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  type AnyLocParam = LocParam[Any]$/;"	T
AnyTreeRHS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/grammar/TreeRHS.scala	/^case object AnyTreeRHS extends TreeRHS$/;"	o
AnyVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^abstract class AnyVar[T, MyType <: AnyVar[T, MyType]](dflt: => T) extends AnyVarTrait[T, MyType] {$/;"	a
AnyVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^abstract class AnyVar[T, MyType <: AnyVar[T, MyType]](dflt: => T) extends AnyVarTrait[T, MyType] {$/;"	c
AnyVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^object AnyVar {$/;"	o
AnyVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^object AnyVar {$/;"	o
AnyVarTrait	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^trait AnyVarTrait[T, MyType <: AnyVarTrait[T, MyType]] extends PSettableValueHolder[T] with HasCalcDefaultValue[T] {$/;"	t
AppTest	/Users/Mads/Dev/logicOfScientificDiscovery/src/test/scala/sidewayscoding/AppTest.scala	/^class AppTest extends TestCase("app") {$/;"	c
AppTest	/Users/Mads/Dev/logicOfScientificDiscovery/src/test/scala/sidewayscoding/AppTest.scala	/^object AppTest {$/;"	o
AppUser	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object AppUser extends FacebookField("is_app_user")$/;"	o
AppendHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  object AppendHtml {$/;"	o
AppendToHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  object AppendToHtml {$/;"	o
Application	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Application.scala	/^trait Application {$/;"	t
AppliedType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Type.scala	/^case class AppliedType(tpe: Type, args: List[Type]) extends Type$/;"	c
AppliedType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Type.scala	/^case class AppliedType(tpe: Type, args: List[Type]) extends Type$/;"	m
Apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Apply(fun: Tree, args: List[Tree]) extends Tree$/;"	c
Apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Apply(fun: Tree, args: List[Tree]) extends Tree$/;"	m
AreFriends	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class AreFriends(friends1: Collection[Long], friends2: Collection[Long]) extends FacebookMethod("facebook.friends.areFriends", FacebookParam("uids1", friends1.mkString(",")), FacebookParam("uids2", friends2.mkString(",")))$/;"	c
AreFriends	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class AreFriends(friends1: Collection[Long], friends2: Collection[Long]) extends FacebookMethod("facebook.friends.areFriends", FacebookParam("uids1", friends1.mkString(",")), FacebookParam("uids2", friends2.mkString(",")))$/;"	m
Arg	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  case class Arg(path: String, mapping: Mapping) extends Mapping$/;"	c
Arg	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  case class Arg(path: String, mapping: Mapping) extends Mapping$/;"	m
Array	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^   def Array[A](xs: A*): Array[A] = {$/;"	f
Array	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^final class Array[A](_length: Int) extends Array.Array0[A] {$/;"	c
Array	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^object Array {$/;"	o
Array0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^   trait Array0[A] extends RandomAccessSeq.Mutable[A] with ArrayLike[A] {$/;"	t
ArrayBuffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayBuffer.scala	/^class ArrayBuffer[A] extends RandomAccessSeq.Mutable[A] with Buffer[A] with ResizableArray[A] {$/;"	c
ArrayIndexOutOfBoundsException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  type ArrayIndexOutOfBoundsException  = java.lang.ArrayIndexOutOfBoundsException$/;"	T
ArrayLike	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^   trait ArrayLike[A] extends RandomAccessSeq.Mutable[A] {$/;"	t
ArrayList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/ArrayList.scala	/^class ArrayList[A](override val underlying : java.util.ArrayList[A]) extends BufferWrapper[A]  {$/;"	c
ArrayStack	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^class ArrayStack[T] private(private var table : Array[AnyRef],$/;"	c
ArrowAssoc	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  class ArrowAssoc[A](x: A) {$/;"	c
AscOrDesc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^trait AscOrDesc {$/;"	t
Ascending	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^case object Ascending extends AscOrDesc {$/;"	o
AskQuestion	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class AskQuestion(what: Any, who: LiftCometActor, listeners: List[(ListenerId, AnswerRender => Unit)]) extends CometMessage$/;"	c
AskQuestion	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class AskQuestion(what: Any, who: LiftCometActor, listeners: List[(ListenerId, AnswerRender => Unit)]) extends CometMessage$/;"	m
AskRender	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case object AskRender extends CometMessage$/;"	o
Assert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^  trait Assert {$/;"	t
AssertFailed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^  case class AssertFailed(msg: String, stackTrace: Boolean) extends RuntimeException {$/;"	c
AssertFailed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^  case class AssertFailed(msg: String, stackTrace: Boolean) extends RuntimeException {$/;"	m
Assign	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Assign(destination: Tree, source: Tree) extends Tree$/;"	c
Assign	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Assign(destination: Tree, source: Tree) extends Tree$/;"	m
AssocMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^private [collection] object AssocMap{$/;"	o
AssocMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^private[collection] sealed abstract class AssocMap[Key, +Value] extends immutable.Map[Key, Value]{$/;"	a
AssocMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^private[collection] sealed abstract class AssocMap[Key, +Value] extends immutable.Map[Key, Value]{$/;"	c
AssocMapIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^private[collection] class AssocMapIterator[Key, Value](var it : AssocMap[Key, Value]) extends Iterator[(Key, Value)]{$/;"	c
AsyncRenderComet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^class AsyncRenderComet extends CometActor {$/;"	c
AsyncRenderer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^object AsyncRenderer extends LiftActor {$/;"	o
Asynchr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/jolib.scala	/^  abstract class Asynchr(join: Join) extends Signal(join) {$/;"	a
Asynchr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/jolib.scala	/^  abstract class Asynchr(join: Join) extends Signal(join) {$/;"	c
Atom	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Atom.scala	/^class Atom[+A](val data: A) extends SpecialNode {  $/;"	c
AtomCategoryResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class AtomCategoryResponse(xml: Node) extends LiftResponse {$/;"	c
AtomCategoryResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class AtomCategoryResponse(xml: Node) extends LiftResponse {$/;"	m
AtomCreatedResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class AtomCreatedResponse(xml: Node) extends LiftResponse {$/;"	c
AtomCreatedResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class AtomCreatedResponse(xml: Node) extends LiftResponse {$/;"	m
AtomResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class AtomResponse(xml: Node) extends NodeResponse {$/;"	c
AtomResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class AtomResponse(xml: Node) extends NodeResponse {$/;"	m
AtomServiceResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class AtomServiceResponse(xml: Node) extends LiftResponse {$/;"	c
AtomServiceResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class AtomServiceResponse(xml: Node) extends LiftResponse {$/;"	m
AtomikosTransactionService	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/atomikos/AtomikosTransactionService.scala	/^object AtomikosTransactionService extends$/;"	o
AttListDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class AttListDecl(name: String, attrs:List[AttrDecl])$/;"	c
AttListDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class AttListDecl(name: String, attrs:List[AttrDecl])$/;"	m
AttrBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class AttrBindParam(name: String, myValue: NodeSeq,$/;"	c
AttrBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class AttrBindParam(name: String, myValue: NodeSeq,$/;"	m
AttrDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class AttrDecl(name: String, tpe: String, default: DefaultDecl) {$/;"	c
AttrDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class AttrDecl(name: String, tpe: String, default: DefaultDecl) {$/;"	m
AttrHelper	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^trait AttrHelper[+Holder[X]] {$/;"	t
Attrib	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  case class Attrib(test: NameTest, e: Expr) extends GenExp;$/;"	c
Attrib	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  case class Attrib(test: NameTest, e: Expr) extends GenExp;$/;"	m
Attribute	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  abstract class Attribute extends Textile {$/;"	a
Attribute	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  abstract class Attribute extends Textile {$/;"	c
Attribute	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Attribute.scala	/^abstract class Attribute {}$/;"	a
Attribute	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Attribute.scala	/^abstract class Attribute {}$/;"	c
Australia	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^  val Australia = C10$/;"	V
Australia	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/CountryField.scala	/^  val Australia = C10$/;"	V
AuthCreateToken	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object AuthCreateToken extends SessionlessFacebookMethod("facebook.auth.createToken")$/;"	o
AuthExchange	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^    val AuthExchange = oathPathPrefix ::: List("auth_exchange")$/;"	V
AuthGetSession	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class AuthGetSession(authToken: String) extends SessionlessFacebookMethod("facebook.auth.getSession", AuthToken(authToken))$/;"	c
AuthGetSession	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class AuthGetSession(authToken: String) extends SessionlessFacebookMethod("facebook.auth.getSession", AuthToken(authToken))$/;"	m
AuthRole	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/Role.scala	/^object AuthRole {$/;"	o
AuthToken	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class AuthToken(token: String) extends FacebookParam("auth_token", token)$/;"	c
AuthToken	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class AuthToken(token: String) extends FacebookParam("auth_token", token)$/;"	m
AuthenticationAlgorithm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^sealed abstract class AuthenticationAlgorithm {$/;"	a
AuthenticationAlgorithm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^sealed abstract class AuthenticationAlgorithm {$/;"	c
AuthenticationScheme	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^sealed abstract class AuthenticationScheme {$/;"	a
AuthenticationScheme	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^sealed abstract class AuthenticationScheme {$/;"	c
AutoComplete	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^class AutoComplete {$/;"	c
AutoComplete	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^object AutoComplete {$/;"	o
AutoCompleteDemo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/AutoCompleteDemo.scala	/^class AutoCompleteDemo {$/;"	c
Award	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Award.scala	/^class Award extends LongKeyedMapper[Award] with IdPK {$/;"	c
Award	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Award.scala	/^object Award extends Award with LongKeyedMetaMapper[Award] with SafeSave[Award] {$/;"	o
AwardSnippet	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/AwardSnippet.scala	/^class AwardSnippet {$/;"	c
AwardSource	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/AwardSource.scala	/^class AwardSource extends LongKeyedMapper[AwardSource] with IdPK {$/;"	c
AwardSource	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/AwardSource.scala	/^object AwardSource extends AwardSource with LongKeyedMetaMapper[AwardSource] {$/;"	o
BAD_REQUEST	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^    val BAD_REQUEST = 400$/;"	V
BCC	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class BCC(address: String) extends AddressType(address)$/;"	c
BCC	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class BCC(address: String) extends AddressType(address)$/;"	m
BLACK	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  final val BLACK      = "\\033[30m"$/;"	V
BLACK_B	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  final val BLACK_B    = "\\033[40m"$/;"	V
BLINK	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  final val BLINK      = "\\033[5m"$/;"	V
BLUE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  final val BLUE       = "\\033[34m"$/;"	V
BLUE_B	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  final val BLUE_B     = "\\033[44m"$/;"	V
BOLD	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  final val BOLD       = "\\033[1m"$/;"	V
BYTE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static final int CHAR = 0, BYTE = 1, SHORT = 2, INT = 3, LONG = 4, FLOAT = 5, DOUBLE = 6, OTHER = 7;$/;"	f	class:BoxesRunTime	file:
BadGatewayResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class BadGatewayResponse() extends LiftResponse with HeaderStuff {$/;"	c
BadGatewayResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class BadGatewayResponse() extends LiftResponse with HeaderStuff {$/;"	m
BadResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class BadResponse() extends LiftResponse with HeaderStuff {$/;"	c
BadResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class BadResponse() extends LiftResponse with HeaderStuff {$/;"	m
BalanceHeight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^    val BalanceHeight = totalSize * totalSize$/;"	V
Base	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^abstract class Base {$/;"	a
Base	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^abstract class Base {$/;"	c
BaseBerrySethi	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^abstract class BaseBerrySethi {$/;"	a
BaseBerrySethi	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^abstract class BaseBerrySethi {$/;"	c
BaseField	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^trait BaseField extends FieldIdentifier with SettableValueHolder with FieldContainer {$/;"	t
BaseFlotOptions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^trait BaseFlotOptions {$/;"	t
BaseForeignKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^trait BaseForeignKey extends BaseMappedField {$/;"	t
BaseIndex	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^sealed abstract class BaseIndex[A <: Mapper[A]](val columns : IndexItem[A]*)$/;"	a
BaseIndex	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^sealed abstract class BaseIndex[A <: Mapper[A]](val columns : IndexItem[A]*)$/;"	c
BaseIndexedField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^trait BaseIndexedField extends BaseMappedField {$/;"	t
BaseKeyedMapper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^trait BaseKeyedMapper extends BaseMapper {$/;"	t
BaseLongKeyedMapper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^trait BaseLongKeyedMapper extends BaseKeyedMapper {$/;"	t
BaseMappedField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^trait BaseMappedField extends SelectableField with Bindable with MixableMappedField {$/;"	t
BaseMapper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^trait BaseMapper extends FieldContainer {$/;"	t
BaseMetaMapper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^trait BaseMetaMapper {$/;"	t
BaseOwnedMappedField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^trait BaseOwnedMappedField[OwnerType <: Mapper[OwnerType]] extends BaseMappedField$/;"	t
BasePaypalTrait	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^trait BasePaypalTrait extends LiftRules.DispatchPF {$/;"	t
BasePostgreSQLDriver	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^abstract class BasePostgreSQLDriver extends DriverType("PostgreSQL") {$/;"	a
BasePostgreSQLDriver	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^abstract class BasePostgreSQLDriver extends DriverType("PostgreSQL") {$/;"	c
BaseSource	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^class BaseSource {}$/;"	c
BaseSourceTrait	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^trait BaseSourceTrait[ T <:BaseSourceTrait[T] ] extends LongKeyedMapper[T] { $/;"	t
BasicResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^sealed trait BasicResponse extends LiftResponse {$/;"	t
BasicScheme	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^case object BasicScheme extends AuthenticationScheme {$/;"	o
BasicTransformer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^abstract class BasicTransformer extends Function1[Node,Node] {$/;"	a
BasicTransformer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^abstract class BasicTransformer extends Function1[Node,Node] {$/;"	c
BasicTypesHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^object BasicTypesHelpers extends BasicTypesHelpers with StringHelpers with ControlHelpers$/;"	o
BasicTypesHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^trait BasicTypesHelpers { self: StringHelpers with ControlHelpers =>$/;"	t
BasicTypesHelpersSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BasicTypesHelpersSpec.scala	/^object BasicTypesHelpersSpec extends Specification with DataTables {$/;"	o
BasicTypesHelpersTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BasicTypesHelpersSpec.scala	/^class BasicTypesHelpersTest extends JUnit4(BasicTypesHelpersSpec)$/;"	c
BeanDescription	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/BeanDescription.scala	/^class BeanDescription(val description: String) extends Annotation$/;"	c
BeanDisplayName	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/BeanDisplayName.scala	/^class BeanDisplayName(val name: String) extends Annotation$/;"	c
BeanInfo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/BeanInfo.scala	/^class BeanInfo extends Annotation$/;"	c
BeanInfoSkip	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/BeanInfoSkip.scala	/^class BeanInfoSkip extends Annotation$/;"	c
BeanProperty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/BeanProperty.scala	/^class BeanProperty extends StaticAnnotation$/;"	c
BeginContinuation	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  private object BeginContinuation$/;"	o
Bench	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^  class Bench(implicit formats: Formats) {$/;"	c
Benchmark	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Benchmark.scala	/^trait Benchmark {$/;"	t
Benchmark	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/Benchmark.scala	/^trait Benchmark {$/;"	t
BigDecimal	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^class BigDecimal(val bigDecimal: BigDec) extends java.lang.Number {$/;"	c
BigDecimal	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^object BigDecimal {$/;"	o
BigInt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^class BigInt(val bigInteger: BigInteger) extends java.lang.Number {$/;"	c
BigInt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^object BigInt {$/;"	o
BigPic	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object BigPic extends FacebookField("pic_big")$/;"	o
Bin	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  private[immutable] case class Bin[+T](prefix : Int, mask : Int, left : IntMap[T], right : IntMap[T]) extends IntMap[T]{$/;"	c
Bin	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  private[immutable] case class Bin[+T](prefix : Int, mask : Int, left : IntMap[T], right : IntMap[T]) extends IntMap[T]{$/;"	m
Bin	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  private[immutable] case class Bin[+T](prefix : Long, mask : Long, left : LongMap[T], right : LongMap[T]) extends LongMap[T]{$/;"	c
Bin	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  private[immutable] case class Bin[+T](prefix : Long, mask : Long, left : LongMap[T], right : LongMap[T]) extends LongMap[T]{$/;"	m
BinFuncHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  object BinFuncHolder {$/;"	o
BinFuncHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private final class BinFuncHolder(val func: FileParamHolder => Any, val owner: Box[String]) extends AFuncHolder {$/;"	c
BinaryField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BinaryField.scala	/^class BinaryField[OwnerType <: Record[OwnerType]](rec: OwnerType) extends Field[Array[Byte], OwnerType] {$/;"	c
BindHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^object BindHelpers extends BindHelpers {$/;"	o
BindHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^trait BindHelpers {$/;"	t
BindHelpersSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BindHelpersSpec.scala	/^object BindHelpersSpec extends Specification with BindHelpers {$/;"	o
BindHelpersTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BindHelpersSpec.scala	/^class BindHelpersTest extends JUnit4(BindHelpersSpec)$/;"	c
BindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  sealed trait BindParam {$/;"	t
BindParamAssoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  class BindParamAssoc(val name: String) {$/;"	c
BindParamAssoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  object BindParamAssoc {$/;"	o
BindPlus	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindPlus.scala	/^object BindPlus {$/;"	o
BindWithAttr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  trait BindWithAttr {$/;"	t
Bindable	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^trait Bindable {$/;"	t
BindableNodeSeq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindPlus.scala	/^  class BindableNodeSeq(ns: NodeSeq) {$/;"	c
Binder	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/Binder.scala	/^abstract class Binder(val preserveWS: Boolean) extends ValidatingMarkupHandler {$/;"	a
Binder	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/Binder.scala	/^abstract class Binder(val preserveWS: Boolean) extends ValidatingMarkupHandler {$/;"	c
BinderEnv	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  abstract class BinderEnv {$/;"	a
BinderEnv	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  abstract class BinderEnv {$/;"	c
Binders	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^trait Binders extends AbstractSyntax with Mappable {$/;"	t
BindingParsers	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/BindingParsers.scala	/^trait BindingParsers extends Parsers with Binders {$/;"	t
BindingSensitive	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  trait BindingSensitive {$/;"	t
Birthday	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object Birthday extends FacebookField("birthday")$/;"	o
BitSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^abstract class BitSet extends Set[Int] {$/;"	a
BitSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^abstract class BitSet extends Set[Int] {$/;"	c
BitSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/BitSet.scala	/^class BitSet(val size: Int, val capacity: Int, ba: Array[Int], copy: Boolean)$/;"	c
BitSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BitSet.scala	/^class BitSet(initSize: Int) extends collection.BitSet with Set[Int] {$/;"	c
BlackTree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^  case class BlackTree[+B](override val key: A,$/;"	c
BlackTree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^  case class BlackTree[+B](override val key: A,$/;"	m
BlankLine	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case object BlankLine extends Textile {$/;"	o
Block	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Block(stats: List[Tree], expr: Tree) extends Tree$/;"	c
Block	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Block(stats: List[Tree], expr: Tree) extends Tree$/;"	m
BlockMode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    sealed abstract class BlockMode$/;"	a
BlockMode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    sealed abstract class BlockMode$/;"	c
BlockQuote	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class BlockQuote(elems : List[Textile], attrs : List[Attribute]) extends ATextile(elems, attrs) {$/;"	c
BlockQuote	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class BlockQuote(elems : List[Textile], attrs : List[Attribute]) extends ATextile(elems, attrs) {$/;"	m
Body	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class Body(markup: NodeSeq) extends FacebookParam("body", markup) with PublishStoryParam with PublishActionParam$/;"	c
Body	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class Body(markup: NodeSeq) extends FacebookParam("body", markup) with PublishStoryParam with PublishActionParam$/;"	m
Books	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object Books extends FacebookField("books")$/;"	o
BoolVal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case class BoolVal(value: Boolean) extends Token$/;"	c
BoolVal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case class BoolVal(value: Boolean) extends Token$/;"	m
Boolean2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^  class Boolean2(b: => Boolean) {$/;"	c
BooleanBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class BooleanBindParam(name: String, value: Boolean) extends Tuple2[String, Boolean](name, value) with BindParam {$/;"	c
BooleanBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class BooleanBindParam(name: String, value: Boolean) extends Tuple2[String, Boolean](name, value) with BindParam {$/;"	m
BooleanField	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^trait BooleanField extends FieldIdentifier {$/;"	t
BooleanField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BooleanField.scala	/^class BooleanField[OwnerType <: Record[OwnerType]](rec: OwnerType) extends Field[Boolean, OwnerType] {$/;"	c
BooleanNone	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^    case object BooleanNone extends BooleanOption[Nothing] {$/;"	o
BooleanOption	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^    sealed abstract class BooleanOption[+A] {$/;"	a
BooleanOption	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^    sealed abstract class BooleanOption[+A] {$/;"	c
BooleanRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BooleanRef.java	/^    public BooleanRef(boolean elem) { this.elem = elem; }$/;"	m	class:BooleanRef
BooleanRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BooleanRef.java	/^public class BooleanRef implements java.io.Serializable {$/;"	c
BooleanSome	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^    case class BooleanSome[+A](x: A) extends BooleanOption[A] {$/;"	c
BooleanSome	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^    case class BooleanSome[+A](x: A) extends BooleanOption[A] {$/;"	m
BooleanTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  val BooleanTag = ".Boolean"$/;"	V
Boot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/bootstrap/liftweb/Boot.scala	/^class Boot {$/;"	c
Boot	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/test/scala/bootstrap/liftweb/Boot.scala	/^class Boot {$/;"	c
Boot	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/bootstrap/liftweb/Boot.scala	/^class Boot {$/;"	c
Boot	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/bootstrap/liftweb/Boot.scala	/^class Boot {$/;"	c
Boot	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/bootstrap/liftweb/Boot.scala	/^class Boot {$/;"	c
Bootable	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^abstract class Bootable {$/;"	a
Bootable	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^abstract class Bootable {$/;"	c
BoundElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  case class BoundElement[boundElement <: NameElement](el: boundElement, scope: Scope[boundElement]) extends NameElement with Proxy with BindingSensitive { $/;"	c
BoundElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  case class BoundElement[boundElement <: NameElement](el: boundElement, scope: Scope[boundElement]) extends NameElement with Proxy with BindingSensitive { $/;"	m
BoundedIndexField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^case class BoundedIndexField[A <: Mapper[A]](field: MappedField[String, A], len: Int) extends IndexItem[A] {$/;"	c
BoundedIndexField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^case class BoundedIndexField[A <: Mapper[A]](field: MappedField[String, A], len: Int) extends IndexItem[A] {$/;"	m
Box	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^object Box {$/;"	o
Box	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^sealed abstract class Box[+A] extends Product {$/;"	a
Box	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^sealed abstract class Box[+A] extends Product {$/;"	c
Box	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  case class Box(col: Int, s: String) extends Item$/;"	c
Box	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  case class Box(col: Int, s: String) extends Item$/;"	m
BoxBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class BoxBindParam(name: String, value: Box[NodeSeq]) extends Tuple2(name, value) with BindParam {$/;"	c
BoxBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class BoxBindParam(name: String, value: Box[NodeSeq]) extends Tuple2(name, value) with BindParam {$/;"	m
BoxGen	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxUnit.scala	/^trait BoxGen {$/;"	t
BoxSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxSpec.scala	/^object BoxSpec extends Specification {$/;"	o
BoxSpecTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxSpec.scala	/^class BoxSpecTest extends Runner(BoxSpec) with JUnit with Console$/;"	c
BoxUnit	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxUnit.scala	/^object BoxUnit extends Specification with BoxGen with ScalaCheck {$/;"	o
BoxUnitTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxUnit.scala	/^class BoxUnitTest extends Runner(BoxUnit) with JUnit$/;"	c
BoxedAnyArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^final class BoxedAnyArray(val length: Int) extends BoxedArray {$/;"	c
BoxedArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^abstract class BoxedArray extends Array.Array0[Any] {$/;"	a
BoxedArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^abstract class BoxedArray extends Array.Array0[Any] {$/;"	c
BoxedBooleanArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedBooleanArray.scala	/^final class BoxedBooleanArray(val value: Array[Boolean]) extends BoxedArray {$/;"	c
BoxedByteArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedByteArray.scala	/^final class BoxedByteArray(val value: Array[Byte]) extends BoxedArray {$/;"	c
BoxedCharArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedCharArray.scala	/^final class BoxedCharArray(val value: Array[Char]) extends BoxedArray {$/;"	c
BoxedDoubleArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedDoubleArray.scala	/^final class BoxedDoubleArray(val value: Array[Double]) extends BoxedArray {$/;"	c
BoxedFloatArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedFloatArray.scala	/^final class BoxedFloatArray(val value: Array[Float]) extends BoxedArray {$/;"	c
BoxedIntArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedIntArray.scala	/^final class BoxedIntArray(val value: Array[Int]) extends BoxedArray {$/;"	c
BoxedLongArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedLongArray.scala	/^final class BoxedLongArray(val value: Array[Long]) extends BoxedArray {$/;"	c
BoxedObjectArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedObjectArray.scala	/^final class BoxedObjectArray(val value: Array[AnyRef]) extends BoxedArray {$/;"	c
BoxedShortArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedShortArray.scala	/^final class BoxedShortArray(val value: Array[Short]) extends BoxedArray {$/;"	c
BoxedUnit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedUnit.java	/^    private BoxedUnit() { }$/;"	m	class:BoxedUnit	file:
BoxedUnit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedUnit.java	/^public final class BoxedUnit implements java.io.Serializable {$/;"	c
BoxesRunTime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^public class BoxesRunTime {$/;"	c
Break	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  case object Break extends Item {$/;"	o
BreakOut	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^case object BreakOut$/;"	o
BrokenException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  class BrokenException() extends java.lang.Exception$/;"	c
Buffer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  private[json] class Buffer(in: Reader) {$/;"	c
Buffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^object Buffer {$/;"	o
Buffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^trait Buffer[A] extends RandomAccessSeq.Mutable[A] with Ranged[Int,A] with MutableSeq[A] with Collection[A] {$/;"	t
Buffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Buffer.scala	/^trait Buffer[A] extends AnyRef$/;"	t
BufferIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferIterator.scala	/^trait BufferIterator[K,A] extends SeqIterator[K,A] {$/;"	t
BufferProxy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BufferProxy.scala	/^trait BufferProxy[A] extends Buffer[A] with Proxy {$/;"	t
BufferWrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^trait BufferWrapper[A] extends Buffer[A] with CollectionWrapper[A] {$/;"	t
BufferedIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^object BufferedIterator {$/;"	o
BufferedIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^trait BufferedIterator[+A] extends Iterator[A] {$/;"	t
BufferedSource	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BufferedSource.scala	/^abstract class BufferedSource(byteChannel: ReadableByteChannel, decoder: CharsetDecoder) extends Source {$/;"	a
BufferedSource	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BufferedSource.scala	/^abstract class BufferedSource(byteChannel: ReadableByteChannel, decoder: CharsetDecoder) extends Source {$/;"	c
BufferedSource	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BufferedSource.scala	/^object BufferedSource {$/;"	o
BulkMsg	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class BulkMsg(chat: Chat, msg: List[Message])$/;"	c
BulkMsg	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class BulkMsg(chat: Chat, msg: List[Message])$/;"	m
Bullet	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Bullet(elems : List[Textile], numbered : Boolean) extends ATextile(elems, Nil) {$/;"	c
Bullet	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Bullet(elems : List[Textile], numbered : Boolean) extends ATextile(elems, Nil) {$/;"	m
BulletLine	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class BulletLine(elems : List[Textile], attrs : List[Attribute]) extends ATextile(elems, attrs) {$/;"	c
BulletLine	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class BulletLine(elems : List[Textile], attrs : List[Attribute]) extends ATextile(elems, attrs) {$/;"	m
By	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^object By {$/;"	o
ByList	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class ByList[O<:Mapper[O], T](field: MappedField[T,O], vals: Seq[T]) extends QueryParam[O]$/;"	c
ByList	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class ByList[O<:Mapper[O], T](field: MappedField[T,O], vals: Seq[T]) extends QueryParam[O]$/;"	m
ByNameFunction	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ByNameFunction.scala	/^trait ByNameFunction[-A, +B] extends AnyRef {$/;"	t
ByRef	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^object ByRef {$/;"	o
BySql	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class BySql[O<:Mapper[O]](query: String,$/;"	c
BySql	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class BySql[O<:Mapper[O]](query: String,$/;"	m
By_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^object By_< {$/;"	o
By_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^object By_> {$/;"	o
BytePickle	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^object BytePickle {$/;"	o
ByteRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ByteRef.java	/^    public ByteRef(byte elem) { this.elem = elem; }$/;"	m	class:ByteRef
ByteRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ByteRef.java	/^public class ByteRef implements java.io.Serializable {$/;"	c
ByteTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  val ByteTag = ".Byte"$/;"	V
C	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/jolib.scala	/^    type C <: SyncVar[A]$/;"	T
CACHE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/LoggedNodeFactory.scala	/^  final val CACHE = 1$/;"	V
CC	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class CC(address: String) extends AddressType(address)$/;"	c
CC	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class CC(address: String) extends AddressType(address)$/;"	m
CHAR	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static final int CHAR = 0, BYTE = 1, SHORT = 2, INT = 3, LONG = 4, FLOAT = 5, DOUBLE = 6, OTHER = 7;$/;"	f	class:BoxesRunTime	file:
CHOICE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Tokens.scala	/^  final val CHOICE       = 9$/;"	V
COLUMN_BITS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Position.scala	/^  final val COLUMN_BITS = 31 - LINE_BITS \/\/ no negatives => 31$/;"	V
COLUMN_MASK	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Position.scala	/^  final val COLUMN_MASK = (1 << COLUMN_BITS) - 1$/;"	V
COMMA	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Tokens.scala	/^  final val COMMA        = 5$/;"	V
CR	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  private final val CR: Char = 0x0D$/;"	V
CR	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/CharArrayReader.scala	/^  @deprecated final val CR = '\\015'$/;"	V
CRK	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  type CRK = JavaList[String]$/;"	T
CRUDify	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^trait CRUDify[KeyType, CrudType <: KeyedMapper[KeyType, CrudType]] {$/;"	t
CSS	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/CSS.scala	/^object CSS extends DispatchSnippet {$/;"	o
CSSHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^object CSSHelpers extends ControlHelpers {$/;"	o
CSSParser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^case class CSSParser(prefix: String) extends Parsers  {$/;"	c
CSSParser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^case class CSSParser(prefix: String) extends Parsers  {$/;"	m
CSSResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class CSSResponse(text: String, headers: List[(String, String)], code: Int) extends LiftResponse {$/;"	c
CSSResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class CSSResponse(text: String, headers: List[(String, String)], code: Int) extends LiftResponse {$/;"	m
CSSResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^object CSSResponse {$/;"	o
CVP	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^case class CVP(guid: String, version: Long) extends CometVersionPair$/;"	c
CVP	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^case class CVP(guid: String, version: Long) extends CometVersionPair$/;"	m
CYAN	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  final val CYAN       = "\\033[36m"$/;"	V
CYAN_B	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  final val CYAN_B     = "\\033[46m"$/;"	V
CachedFileStorage	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/CachedFileStorage.scala	/^abstract class CachedFileStorage(private val file1: File)$/;"	a
CachedFileStorage	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/CachedFileStorage.scala	/^abstract class CachedFileStorage(private val file1: File)$/;"	c
CalendarDayView	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarDayView.scala	/^class CalendarDayView(val when: Calendar, val meta: DayViewMeta) {$/;"	c
CalendarDayView	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarDayView.scala	/^object CalendarDayView {$/;"	o
CalendarDayViewDemo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarDayViewDemo.scala	/^class CalendarDayViewDemo {$/;"	c
CalendarExtension	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  class CalendarExtension(c: Calendar) {$/;"	c
CalendarItem	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarItem.scala	/^case class CalendarItem(id: String,$/;"	c
CalendarItem	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarItem.scala	/^case class CalendarItem(id: String,$/;"	m
CalendarItem	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarItem.scala	/^object CalendarItem {$/;"	o
CalendarMonthView	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarMonthView.scala	/^class CalendarMonthView(val when: Calendar, val meta: MonthViewMeta) {$/;"	c
CalendarMonthView	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarMonthView.scala	/^object CalendarMonthView {$/;"	o
CalendarMonthViewDemo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarMonthViewDemo.scala	/^class CalendarMonthViewDemo {$/;"	c
CalendarType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarItem.scala	/^object CalendarType extends Enumeration {$/;"	o
CalendarUtils	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarUtils.scala	/^object CalendarUtils {$/;"	o
CalendarWeekView	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarWeekView.scala	/^class CalendarWeekView(val when: Calendar, val meta: WeekViewMeta) {$/;"	c
CalendarWeekView	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarWeekView.scala	/^object CalendarWeekView {$/;"	o
CalendarWeekViewDemo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarWeekViewDemo.scala	/^class CalendarWeekViewDemo {$/;"	c
Call	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class Call(function: String, params: JsExp*) extends JsExp {$/;"	c
Call	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class Call(function: String, params: JsExp*) extends JsExp {$/;"	m
Callback	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class Callback(functionName: String) extends FacebookParam("callback", functionName) with UniversalParam$/;"	c
Callback	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class Callback(functionName: String) extends FacebookParam("callback", functionName) with UniversalParam$/;"	m
Canada	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^  val Canada = C32$/;"	V
Canada	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/CountryField.scala	/^  val Canada = C32$/;"	V
CancelledReversalPayment	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val CancelledReversalPayment = Value(1, "Cancelled_Reversal")$/;"	V
Caption	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class Caption(caption: String) extends FacebookParam("caption", caption) with UploadPhotoParam$/;"	c
Caption	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class Caption(caption: String) extends FacebookParam("caption", caption) with UploadPhotoParam$/;"	m
Cascade	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^  trait Cascade[O<:Mapper[_]] extends MappedOneToManyBase[O] {$/;"	t
Catch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^    def Catch[b >: a](handler: PartialFunction[Throwable, b]): b =$/;"	f
Catch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^    def Catch[b >: a](handler: PartialFunction[Throwable, b]): b$/;"	f
Cell	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Cell.scala	/^case class Cell[+T](elem: T)$/;"	c
Cell	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Cell.scala	/^case class Cell[+T](elem: T)$/;"	m
Chan	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^  class Chan[A] extends UChan with Function1[A, Product[A]] {$/;"	c
Channel	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/Channel.scala	/^class Channel[a] {$/;"	c
CharArrayPosition	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/CharArrayPosition.scala	/^class CharArrayPosition(val source: Array[Char], val line: Int, val column: Int) extends Position {$/;"	c
CharArrayReader	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/CharArrayReader.scala	/^class CharArrayReader(chars: Array[Char], index: Int) $/;"	c
CharArrayReader	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/CharArrayReader.scala	/^object CharArrayReader {$/;"	o
CharBlock	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class CharBlock(s: String) extends Textile {$/;"	c
CharBlock	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class CharBlock(s: String) extends Textile {$/;"	m
CharInputStreamIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/CharInputStreamIterator.scala	/^class CharInputStreamIterator(in: InputStream) extends Iterator[Char] {$/;"	c
CharRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/CharRef.java	/^    public CharRef(char elem) { this.elem = elem; }$/;"	m	class:CharRef
CharRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/CharRef.java	/^public class CharRef implements java.io.Serializable {$/;"	c
CharSequenceReader	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/CharSequenceReader.scala	/^class CharSequenceReader(override val source: java.lang.CharSequence, $/;"	c
CharSequenceReader	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/CharSequenceReader.scala	/^object CharSequenceReader {$/;"	o
CharTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  val CharTag = ".Char"$/;"	V
Character	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  @deprecated type Character = java.lang.Character$/;"	T
CheckAndPurge	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private object CheckAndPurge$/;"	o
CheckAndPurge	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  private object CheckAndPurge$/;"	o
CheckNodeSeq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^object CheckNodeSeq {$/;"	o
CheckedById	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class CheckedById(id: String) extends JsExp {$/;"	c
CheckedById	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class CheckedById(id: String) extends JsExp {$/;"	m
Child	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class Child(name: String, age: Int, birthdate: Option[java.util.Date])$/;"	c
Child	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class Child(name: String, age: Int, birthdate: Option[java.util.Date])$/;"	m
Child	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  case class Child(test: Test, e: Expr) extends Expr;$/;"	c
Child	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  case class Child(test: Test, e: Expr) extends Expr;$/;"	m
Children	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Children.scala	/^object Children extends DispatchSnippet {$/;"	o
ChoiceHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  case class ChoiceHolder[T](items: Seq[ChoiceItem[T]]) {$/;"	c
ChoiceHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  case class ChoiceHolder[T](items: Seq[ChoiceItem[T]]) {$/;"	m
ChoiceHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  object ChoiceHolder {$/;"	o
ChoiceItem	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  case class ChoiceItem[T](key: T, xhtml: NodeSeq)$/;"	c
ChoiceItem	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  case class ChoiceItem[T](key: T, xhtml: NodeSeq)$/;"	m
CircularIncludeException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/CircularIncludeException.scala	/^class CircularIncludeException(message: String) extends XIncludeException {$/;"	c
Cite	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Cite(first: List[Textile], elems : List[Textile],$/;"	c
Cite	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Cite(first: List[Textile], elems : List[Textile],$/;"	m
Class	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  type Class[T]      = java.lang.Class[T]$/;"	T
Class	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^case class Class(override val fullname: String) extends GlobalSymbol(fullname) {$/;"	c
Class	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^case class Class(override val fullname: String) extends GlobalSymbol(fullname) {$/;"	m
ClassAndId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class ClassAndId(className : String, idName : String) extends Attribute {$/;"	m
ClassCastException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  type ClassCastException              = java.lang.ClassCastException$/;"	T
ClassDef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class ClassDef(sym: Symbol, tpe: Type, impl: Template) extends Tree$/;"	c
ClassDef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class ClassDef(sym: Symbol, tpe: Type, impl: Template) extends Tree$/;"	m
ClassHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^object ClassHelpers extends ClassHelpers with ControlHelpers$/;"	o
ClassHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^trait ClassHelpers { self: ControlHelpers =>$/;"	t
ClassHelpersSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^object ClassHelpersSpec extends Specification with ClassHelpers with ControlHelpers with StringGenerators with ScalaCheck {$/;"	o
ClassHelpersSpecTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^class ClassHelpersSpecTest extends Runner(ClassHelpersSpec) with JUnit$/;"	c
ClassNotFound	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val ClassNotFound = Value(2, "Class Not Found")$/;"	V
ClassfileAnnotation	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ClassfileAnnotation.scala	/^trait ClassfileAnnotation extends Annotation$/;"	t
ClassfileAttribute	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ClassfileAttribute.scala	/^trait ClassfileAttribute extends Attribute {}$/;"	t
CleanRequestVarOnSessionTransition	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^trait CleanRequestVarOnSessionTransition {$/;"	t
CleanUpParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  type CleanUpParam = Unit$/;"	T
CleanUpParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  type CleanUpParam = Box[LiftSession]$/;"	T
CleanUpParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  type CleanUpParam = LiftSession$/;"	T
ClearNotices	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case object ClearNotices extends CometMessage$/;"	o
ClearedPayment	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val ClearedPayment = Value(2, "Cleared")$/;"	V
CloneableCollection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/CloneableCollection.scala	/^trait CloneableCollection {$/;"	t
CloseArr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case object CloseArr extends Token$/;"	o
CloseChat	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class CloseChat(to: String)$/;"	c
CloseChat	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class CloseChat(to: String)$/;"	m
CloseObj	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case object CloseObj extends Token$/;"	o
CmdPair	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class CmdPair(left: JsCmd, right: JsCmd) extends JsCmd {$/;"	c
CmdPair	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class CmdPair(left: JsCmd, right: JsCmd) extends JsCmd {$/;"	m
Cmp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class Cmp[O<:Mapper[O], T](field: MappedField[T,O], opr: OprEnum.Value, value: Box[T],$/;"	c
Cmp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class Cmp[O<:Mapper[O], T](field: MappedField[T,O], opr: OprEnum.Value, value: Box[T],$/;"	m
Code	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^class Code(clazz: java.lang.Class[_]) {$/;"	c
Code	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Code.scala	/^class Code[Type](val tree: Tree)$/;"	c
Code	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Code.scala	/^object Code {$/;"	o
Collection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Collection.scala	/^trait Collection[+A] extends Iterable[A] {$/;"	t
Collection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Collection.scala	/^object Collection {$/;"	o
Collection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Collection.scala	/^trait Collection[A] extends MutableIterable[A] {$/;"	t
CollectionProxy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^trait CollectionProxy[+A] extends Collection[A] with IterableProxy[A] {$/;"	t
CollectionWrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/CollectionWrapper.scala	/^trait CollectionWrapper[A] extends Collection[A] with IterableWrapper[A] {$/;"	t
Collector	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^  case class Collector(funcs: List[() => Any], cmds: List[String]) {$/;"	c
Collector	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^  case class Collector(funcs: List[() => Any], cmds: List[String]) {$/;"	m
CombParserHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^trait CombParserHelpers {$/;"	t
CombParserHelpersSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^object CombParserHelpersSpec extends Specification with ScalaCheck {$/;"	o
CombParserHelpersSpecTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^class CombParserHelpersSpecTest extends Runner(CombParserHelpersSpec) with JUnit with Console$/;"	c
Comet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Comet.scala	/^object Comet extends DispatchSnippet {$/;"	o
CometActor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^trait CometActor extends LiftActor with LiftCometActor with BindHelpers {$/;"	t
CometListenee	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^trait CometListenee extends CometActor {$/;"	t
CometListener	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^trait CometListener extends CometListenee$/;"	t
CometMessage	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^sealed abstract class CometMessage$/;"	a
CometMessage	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^sealed abstract class CometMessage$/;"	c
CometState	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^trait CometState[DeltaType <: DeltaTrait,$/;"	t
CometStateWithUpdate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^trait CometStateWithUpdate[UpdateType, DeltaType <: DeltaTrait,$/;"	t
CometVersionPair	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^trait CometVersionPair {$/;"	t
Comment	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Comment.scala	/^case class Comment(commentText: String) extends SpecialNode {  $/;"	c
Comment	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Comment.scala	/^case class Comment(commentText: String) extends SpecialNode {  $/;"	m
Company	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^class Company extends LongKeyedMapper[Company] with IdPK {$/;"	c
Company	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^object Company extends Company with LongKeyedMetaMapper[Company]$/;"	o
Comparator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Ranged.scala	/^  protected class Comparator[K <% Ordered[K]] extends java.util.Comparator[Any] {$/;"	c
CompleteFailure	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^class CompleteFailure(val serverName: String, val exception: Box[Throwable]) extends Response {$/;"	c
CompleteMenu	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^case class CompleteMenu(lines: Seq[MenuItem]) {$/;"	c
CompleteMenu	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^case class CompleteMenu(lines: Seq[MenuItem]) {$/;"	m
CompletedPayment	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val CompletedPayment = Value(3, "Completed")$/;"	V
ComputeSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    protected abstract class ComputeSize[B] extends Projection[B] {$/;"	a
ComputeSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    protected abstract class ComputeSize[B] extends Projection[B] {$/;"	c
ConcurrentLock	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ConcurrentLock.scala	/^class ConcurrentLock extends ReentrantReadWriteLock {$/;"	c
ConcurrentModificationException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/compat/Platform.scala	/^  type ConcurrentModificationException = java.util.ConcurrentModificationException$/;"	T
Cond	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  abstract class Cond; $/;"	a
Cond	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  abstract class Cond; $/;"	c
Confirm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class Confirm(text: String, yes: JsCmd) extends JsCmd {$/;"	c
Confirm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class Confirm(text: String, yes: JsCmd) extends JsCmd {$/;"	m
ConnectionHolder	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  case class ConnectionHolder(conn: SuperConnection, cnt: Int, postCommit: List[() => Unit])$/;"	c
ConnectionHolder	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  case class ConnectionHolder(conn: SuperConnection, cnt: Int, postCommit: List[() => Unit])$/;"	m
ConnectionIdentifier	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^trait ConnectionIdentifier {$/;"	t
ConnectionManager	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ConnectionManager.scala	/^trait ConnectionManager {$/;"	t
Cons	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  private[collection] case class Cons[S, +T](key : S, value : T, tail : AssocMap[S, T]) extends AssocMap[S, T]$/;"	c
Cons	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  private[collection] case class Cons[S, +T](key : S, value : T, tail : AssocMap[S, T]) extends AssocMap[S, T]$/;"	m
ConsRHS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/grammar/HedgeRHS.scala	/^case class ConsRHS(tnt: Int, hnt: Int) extends HedgeRHS$/;"	c
ConsRHS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/grammar/HedgeRHS.scala	/^case class ConsRHS(tnt: Int, hnt: Int) extends HedgeRHS$/;"	m
Console	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^object Console {$/;"	o
ConsoleChatActor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^class ConsoleChatActor(val username: String, val password: String) extends LiftActor {$/;"	c
ConsoleChatHelper	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^object ConsoleChatHelper {$/;"	o
ConsoleLogger	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/logging/ConsoleLogger.scala	/^trait ConsoleLogger extends Logged {$/;"	t
ConstructingHandler	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingHandler.scala	/^abstract class ConstructingHandler extends MarkupHandler {$/;"	a
ConstructingHandler	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingHandler.scala	/^abstract class ConstructingHandler extends MarkupHandler {$/;"	c
ConstructingParser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingParser.scala	/^class ConstructingParser(val input: Source, val preserveWS: Boolean)$/;"	c
ConstructingParser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingParser.scala	/^object ConstructingParser {$/;"	o
Constructor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  case class Constructor(targetType: Class[_], args: List[Arg]) extends Mapping$/;"	c
Constructor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  case class Constructor(targetType: Class[_], args: List[Arg]) extends Mapping$/;"	m
ConsumerType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  type ConsumerType <: OpenIdConsumer[UserType]$/;"	T
ConsumerType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  type ConsumerType = OpenIdConsumer[UserType]$/;"	T
ContentModel	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^object ContentModel extends WordExp {$/;"	o
ContentModel	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^sealed abstract class ContentModel {$/;"	a
ContentModel	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^sealed abstract class ContentModel {$/;"	c
ContentModelParser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModelParser.scala	/^object ContentModelParser extends Scanner { \/\/ a bit too permissive concerning #PCDATA$/;"	o
ContinuationActor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  class ContinuationActor(request: Req, session: LiftSession,$/;"	c
ControlHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ControlHelpers.scala	/^object ControlHelpers extends ControlHelpers with ClassHelpers$/;"	o
ControlHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ControlHelpers.scala	/^trait ControlHelpers extends ClassHelpers {$/;"	t
ControlHelpersSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ControlHelpersSpec.scala	/^object ControlHelpersSpec extends Specification with ControlHelpers with ClassHelpers {$/;"	o
ControlHelpersSpecTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ControlHelpersSpec.scala	/^class ControlHelpersSpecTest extends Runner(ControlHelpersSpec) with JUnit$/;"	c
Conversions	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Conversions.scala	/^object Conversions {$/;"	o
CookieHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  case class CookieHolder(inCookies: List[HTTPCookie], outCookies: List[HTTPCookie]) {$/;"	c
CookieHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  case class CookieHolder(inCookies: List[HTTPCookie], outCookies: List[HTTPCookie]) {$/;"	m
CookieName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^  def CookieName = "ext_id"$/;"	f
Copyright	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case object Copyright extends Textile {$/;"	o
CoreRequestVarHandler	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^private[http] trait CoreRequestVarHandler {$/;"	t
CountedIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CountedIterator.scala	/^trait CountedIterator[+A] extends Iterator[A] {$/;"	t
Countries	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^object Countries extends Enumeration(1) {$/;"	o
Countries	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/CountryField.scala	/^object Countries extends Enumeration(1) {$/;"	o
CountryField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/CountryField.scala	/^class CountryField[OwnerType <: Record[OwnerType]](rec: OwnerType) extends EnumField(rec, Countries) {$/;"	c
CrLf	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  val CrLf = "\\r\\n"$/;"	V
CreateChat	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class CreateChat(to: String)$/;"	c
CreateChat	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class CreateChat(to: String)$/;"	m
CreateItem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  lazy val CreateItem = calcCreateItem$/;"	V
CreatePhotoAlbum	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class CreatePhotoAlbum(albumName: String, otherParams: CreatePhotoAlbumParam*) extends FacebookMethod("facebook.photos.createAlbum", (NameParam(albumName) :: otherParams.toList): _*)$/;"	c
CreatePhotoAlbum	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class CreatePhotoAlbum(albumName: String, otherParams: CreatePhotoAlbumParam*) extends FacebookMethod("facebook.photos.createAlbum", (NameParam(albumName) :: otherParams.toList): _*)$/;"	m
CreatePhotoAlbumParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^trait CreatePhotoAlbumParam extends FacebookParam$/;"	t
CreatedResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class CreatedResponse(xml: Node, mime: String) extends NodeResponse {$/;"	c
CreatedResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class CreatedResponse(xml: Node, mime: String) extends NodeResponse {$/;"	m
Currency	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Currency.scala	/^class Currency(val amount: Long, val symbol: String, val decimals: Int) {$/;"	c
Currency	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Currency.scala	/^object Currency {$/;"	o
Currency	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    type Currency <: AbstractCurrency$/;"	T
Currency	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    type Currency = AUD$/;"	T
Currency	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    type Currency = EUR$/;"	T
Currency	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    type Currency = GBP$/;"	T
Currency	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    type Currency = USD$/;"	T
CurrencyMismatchException	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Currency.scala	/^class CurrencyMismatchException extends Exception$/;"	c
CurrencyZone	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^abstract class CurrencyZone {$/;"	a
CurrencyZone	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^abstract class CurrencyZone {$/;"	c
CurrencyZoneSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CurrencyZoneSpec.scala	/^object CurrencyZoneSpec extends Specification {$/;"	o
CurrencyZoneSpecTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CurrencyZoneSpec.scala	/^class CurrencyZoneSpecTest extends JUnit4(CurrencyZoneSpec)$/;"	c
CurrentCometActor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^object CurrentCometActor extends ThreadGlobal[Box[LiftCometActor]] {$/;"	o
CurrentConnectionSet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private object CurrentConnectionSet extends DynoVar[ThreadBasedConnectionManager]$/;"	o
CurrentLocation	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private[http] object CurrentLocation extends RequestVar[Box[sitemap.Loc[_]]](request.flatMap(_.location))$/;"	o
CurrentLocation	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object CurrentLocation extends FacebookField("current_location")$/;"	o
CurrentScreen	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  protected object CurrentScreen extends RequestVar[Box[Screen]](calcFirstScreen)$/;"	o
CurrentSession	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  private object CurrentSession extends WizardVar[String](WizardRules.registerWizardSession())$/;"	o
CustomClassExamples	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^object CustomClassExamples extends Specification {$/;"	o
Cycle	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  case class Cycle(targetType: Class[_]) extends Mapping$/;"	c
Cycle	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  case class Cycle(targetType: Class[_]) extends Mapping$/;"	m
DB	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^object DB {$/;"	o
DBBinaryField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BinaryField.scala	/^abstract class DBBinaryField[OwnerType <: DBRecord[OwnerType]](rec: OwnerType) extends BinaryField[OwnerType](rec)$/;"	a
DBBinaryField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BinaryField.scala	/^abstract class DBBinaryField[OwnerType <: DBRecord[OwnerType]](rec: OwnerType) extends BinaryField[OwnerType](rec)$/;"	c
DBBooleanField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BooleanField.scala	/^class DBBooleanField[OwnerType <: DBRecord[OwnerType]](rec: OwnerType) extends BooleanField[OwnerType](rec) with JDBCFieldFlavor[Boolean] {$/;"	c
DBCountryField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/CountryField.scala	/^abstract class DBCountryField[OwnerType <: DBRecord[OwnerType]](rec: OwnerType) extends DBEnumField(rec, Countries) {$/;"	a
DBCountryField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/CountryField.scala	/^abstract class DBCountryField[OwnerType <: DBRecord[OwnerType]](rec: OwnerType) extends DBEnumField(rec, Countries) {$/;"	c
DBDateTimeField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DateTimeField.scala	/^abstract class DBDateTimeField[OwnerType <: DBRecord[OwnerType]](rec: OwnerType) extends DateTimeField[OwnerType](rec)$/;"	a
DBDateTimeField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DateTimeField.scala	/^abstract class DBDateTimeField[OwnerType <: DBRecord[OwnerType]](rec: OwnerType) extends DateTimeField[OwnerType](rec)$/;"	c
DBDecimalField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DecimalField.scala	/^abstract class DBDecimalField[OwnerType <: DBRecord[OwnerType]](rec: OwnerType, context : MathContext, scale : Int) extends DecimalField[OwnerType](rec, context, scale)$/;"	a
DBDecimalField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DecimalField.scala	/^abstract class DBDecimalField[OwnerType <: DBRecord[OwnerType]](rec: OwnerType, context : MathContext, scale : Int) extends DecimalField[OwnerType](rec, context, scale)$/;"	c
DBDoubleField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DoubleField.scala	/^abstract class DBDoubleField[OwnerType <: DBRecord[OwnerType]](rec: OwnerType) extends DoubleField[OwnerType](rec)$/;"	a
DBDoubleField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DoubleField.scala	/^abstract class DBDoubleField[OwnerType <: DBRecord[OwnerType]](rec: OwnerType) extends DoubleField[OwnerType](rec)$/;"	c
DBEmailField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EmailField.scala	/^class DBEmailField[OwnerType <: DBRecord[OwnerType]](rec: OwnerType, maxLength: Int) extends$/;"	c
DBEnumField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EnumField.scala	/^abstract class DBEnumField[OwnerType <: DBRecord[OwnerType], ENUM <: Enumeration](rec: OwnerType, enum: ENUM) extends$/;"	a
DBEnumField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EnumField.scala	/^abstract class DBEnumField[OwnerType <: DBRecord[OwnerType], ENUM <: Enumeration](rec: OwnerType, enum: ENUM) extends$/;"	c
DBFuncWrapper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    class DBFuncWrapper(dbFunc: Box[String]) {$/;"	c
DBIndexed	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^trait DBIndexed extends BaseMappedField {$/;"	t
DBIntField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/IntField.scala	/^abstract class DBIntField[OwnerType <: DBRecord[OwnerType]](rec: OwnerType) extends IntField[OwnerType](rec)$/;"	a
DBIntField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/IntField.scala	/^abstract class DBIntField[OwnerType <: DBRecord[OwnerType]](rec: OwnerType) extends IntField[OwnerType](rec)$/;"	c
DBLocaleField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/LocaleField.scala	/^class DBLocaleField[OwnerType <: Record[OwnerType]](rec: OwnerType) extends LocaleField(rec)$/;"	c
DBLog	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^object DBLog {$/;"	o
DBLog	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^trait DBLog {$/;"	t
DBLogEntry	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^object DBLogEntry {$/;"	o
DBLogEntry	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^trait DBLogEntry {$/;"	t
DBLongField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/LongField.scala	/^abstract class DBLongField[OwnerType <: DBRecord[OwnerType]](rec: OwnerType) extends LongField[OwnerType](rec)$/;"	a
DBLongField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/LongField.scala	/^abstract class DBLongField[OwnerType <: DBRecord[OwnerType]](rec: OwnerType) extends LongField[OwnerType](rec)$/;"	c
DBMetaEntry	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^case class DBMetaEntry(statement : String, duration : Long) extends DBLogEntry$/;"	c
DBMetaEntry	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^case class DBMetaEntry(statement : String, duration : Long) extends DBLogEntry$/;"	m
DBMetaRecord	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/DBMetaRecord.scala	/^trait DBMetaRecord[BaseRecord <: DBRecord[BaseRecord]] extends MetaRecord[BaseRecord] {$/;"	t
DBPasswordField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^abstract class DBPasswordField[OwnerType <: DBRecord[OwnerType]](rec: OwnerType, maxLength: Int) extends$/;"	a
DBPasswordField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^abstract class DBPasswordField[OwnerType <: DBRecord[OwnerType]](rec: OwnerType, maxLength: Int) extends$/;"	c
DBPostalCodeField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PostalCodeField.scala	/^class DBPostalCodeField[OwnerType <: DBRecord[OwnerType]](rec: OwnerType, country: CountryField[OwnerType]) extends$/;"	c
DBProviders	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^object DBProviders {$/;"	o
DBRecord	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/DBRecord.scala	/^trait DBRecord[MyType <: DBRecord[MyType]] extends Record[MyType] {$/;"	t
DBStatementEntry	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^case class DBStatementEntry(statement : String, duration : Long) extends DBLogEntry$/;"	c
DBStatementEntry	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^case class DBStatementEntry(statement : String, duration : Long) extends DBLogEntry$/;"	m
DBStringField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^class DBStringField[OwnerType <: DBRecord[OwnerType]](rec: OwnerType, maxLength: Int) extends$/;"	c
DBTextareaField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TextareaField.scala	/^abstract class DBTextareaField[OwnerType <: DBRecord[OwnerType]](rec: OwnerType, maxLength: Int) extends$/;"	a
DBTextareaField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TextareaField.scala	/^abstract class DBTextareaField[OwnerType <: DBRecord[OwnerType]](rec: OwnerType, maxLength: Int) extends$/;"	c
DBTimeZoneField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TimeZoneField.scala	/^class DBTimeZoneField[OwnerType <: Record[OwnerType]](rec: OwnerType) extends TimeZoneField(rec)$/;"	c
DBVendor	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/bootstrap/liftweb/Boot.scala	/^object DBVendor extends ConnectionManager {$/;"	o
DEF	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  val DEF = 1$/;"	V
DEFAULT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class DEFAULT(fixed: Boolean, attValue: String) extends DefaultDecl {$/;"	c
DEFAULT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class DEFAULT(fixed: Boolean, attValue: String) extends DefaultDecl {$/;"	m
DEFAULT_FILTER	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Collection.scala	/^  val DEFAULT_FILTER : Any => Boolean = x => true;$/;"	V
DFAContentModel	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^sealed abstract class DFAContentModel extends ContentModel {$/;"	a
DFAContentModel	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^sealed abstract class DFAContentModel extends ContentModel {$/;"	c
DOUBLE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static final int CHAR = 0, BYTE = 1, SHORT = 2, INT = 3, LONG = 4, FLOAT = 5, DOUBLE = 6, OTHER = 7;$/;"	f	class:BoxesRunTime	file:
DTD	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/DTD.scala	/^abstract class DTD {$/;"	a
DTD	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/DTD.scala	/^abstract class DTD {$/;"	c
DataLoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class DataLoc[T]($/;"	c
DataLoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class DataLoc[T]($/;"	m
DateExtension	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  class DateExtension(date: Date) {$/;"	c
DateFormat	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^trait DateFormat {$/;"	t
DateTime	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^class DateTime(val time: Long)$/;"	c
DateTimeField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DateTimeField.scala	/^class DateTimeField[OwnerType <: Record[OwnerType]](rec: OwnerType) extends Field[Calendar, OwnerType] {$/;"	c
DayViewMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/ViewMeta.scala	/^case class DayViewMeta(locale: Locale) extends ViewMeta(locale)$/;"	c
DayViewMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/ViewMeta.scala	/^case class DayViewMeta(locale: Locale) extends ViewMeta(locale)$/;"	m
DbSetup	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^  trait DbSetup {$/;"	t
Debug	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  val Debug = Value(5, "Debug")$/;"	V
DecimalField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DecimalField.scala	/^class DecimalField[OwnerType <: Record[OwnerType]](rec: OwnerType, val context : MathContext, val scale : Int) extends NumericField[BigDecimal, OwnerType] {$/;"	c
Decl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^abstract class Decl$/;"	a
Decl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^abstract class Decl$/;"	c
Def	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  case class Def() extends RefDef$/;"	c
Def	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  case class Def() extends RefDef$/;"	m
DefDef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class DefDef(sym: Symbol, vparamss: List[List[Tree]], ret: Type, rhs: Tree) extends Tree$/;"	c
DefDef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class DefDef(sym: Symbol, vparamss: List[List[Tree]], ret: Type, rhs: Tree) extends Tree$/;"	m
Default	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^  abstract class Default[+A] extends PutBack[A] {$/;"	a
Default	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^  abstract class Default[+A] extends PutBack[A] {$/;"	c
DefaultBootstrap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^private[http] case object DefaultBootstrap extends Bootable {$/;"	o
DefaultBufSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  val DefaultBufSize = 2048$/;"	V
DefaultBufferIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  protected class DefaultBufferIterator extends DefaultSeqIterator with BufferIterator[Int,A] {$/;"	c
DefaultConnectionIdentifier	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^case object DefaultConnectionIdentifier extends ConnectionIdentifier {$/;"	o
DefaultDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^abstract class DefaultDecl {$/;"	a
DefaultDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^abstract class DefaultDecl {$/;"	c
DefaultEntry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/DefaultEntry.scala	/^final class DefaultEntry[A, B](val key: A, var value: B) $/;"	c
DefaultFormats	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^object DefaultFormats extends DefaultFormats {$/;"	o
DefaultFormats	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^trait DefaultFormats extends Formats {$/;"	t
DefaultKeySet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedMap.scala	/^  protected class DefaultKeySet extends SortedSet[K] {$/;"	c
DefaultMapModel	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/DefaultMapModel.scala	/^trait DefaultMapModel[A, B] extends Map[A, B] {$/;"	t
DefaultMarkupHandler	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/DefaultMarkupHandler.scala	/^abstract class DefaultMarkupHandler extends MarkupHandler {$/;"	a
DefaultMarkupHandler	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/DefaultMarkupHandler.scala	/^abstract class DefaultMarkupHandler extends MarkupHandler {$/;"	c
DefaultMillis	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^trait DefaultMillis extends TypedField[Long] {$/;"	t
DefaultNotFound	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^case object DefaultNotFound extends NotFound$/;"	o
DefaultRewriter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class DefaultRewriter(base: String) extends RewriteFunc {$/;"	c
DefaultRewriter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class DefaultRewriter(base: String) extends RewriteFunc {$/;"	m
DefaultRewriter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^case class DefaultRewriter(base: String) extends TextileParser.RewriteFunc {$/;"	c
DefaultRewriter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^case class DefaultRewriter(base: String) extends TextileParser.RewriteFunc {$/;"	m
DefaultSeqIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^  protected class DefaultSeqIterator extends SeqIterator[Int,A] {$/;"	c
DeferredProcessor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private class DeferredProcessor extends SpecializedLiftActor[ProcessSnippet] {$/;"	c
DeferredSnippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/snippet/DeferredSnippet.scala	/^class DeferredSnippet {$/;"	c
Definite	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  trait Definite[+A] extends Stream[A] with Function0[Stream[A]] {$/;"	t
DeleteItem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  lazy val DeleteItem = calcDeleteItem$/;"	V
DeleteRequest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^case object DeleteRequest extends RequestType {$/;"	o
Delta	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  type Delta <: DeltaTrait$/;"	T
Delta	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^abstract class Delta(val when: Long) {$/;"	a
Delta	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^abstract class Delta(val when: Long) {$/;"	c
DeltaTrait	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^trait DeltaTrait {$/;"	t
DeniedPayment	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val DeniedPayment = Value(4, "Denied")$/;"	V
DepthCnt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^      private object DepthCnt extends DynoVar[Boolean]$/;"	o
DerbyDriver	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^object DerbyDriver extends DriverType("Apache Derby") {$/;"	o
DerbyProvider	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^  object DerbyProvider extends Provider with FileDbSetup {$/;"	o
DescOrSelf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  case class DescOrSelf(test: Test, e: Expr) extends Expr;$/;"	c
DescOrSelf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  case class DescOrSelf(test: Test, e: Expr) extends Expr;$/;"	m
Descending	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^case object Descending extends AscOrDesc {$/;"	o
Description	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class Description(description: String) extends FacebookParam("description", description) with CreatePhotoAlbumParam$/;"	c
Description	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class Description(description: String) extends FacebookParam("description", description) with CreatePhotoAlbumParam$/;"	m
DetWordAutom	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/DetWordAutom.scala	/^abstract class DetWordAutom[T <: AnyRef] {$/;"	a
DetWordAutom	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/DetWordAutom.scala	/^abstract class DetWordAutom[T <: AnyRef] {$/;"	c
Development	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^    val Development = Value(1, "Development")$/;"	V
Dict	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  case class Dict(mapping: Mapping) extends Mapping$/;"	c
Dict	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  case class Dict(mapping: Mapping) extends Mapping$/;"	m
Diff	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Diff.scala	/^case class Diff(changed: JValue, added: JValue, deleted: JValue) {$/;"	c
Diff	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Diff.scala	/^case class Diff(changed: JValue, added: JValue, deleted: JValue) {$/;"	m
Diff	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Diff.scala	/^object Diff {$/;"	o
DiffExamples	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/DiffExamples.scala	/^object DiffExamples extends Specification {$/;"	o
DiffExamplesTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/DiffExamples.scala	/^class DiffExamplesTest extends Runner(DiffExamples) with JUnit$/;"	c
Diffable	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Diff.scala	/^  private[json] trait Diffable { this: JValue =>$/;"	t
DigestAuthentication	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^case class DigestAuthentication(method: String,$/;"	c
DigestAuthentication	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^case class DigestAuthentication(method: String,$/;"	m
DigestScheme	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^case object DigestScheme extends AuthenticationScheme {$/;"	o
Dimension	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case object Dimension extends Textile   {$/;"	o
Discovery	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Discovery.scala	/^class Discovery extends LongKeyedMapper[Discovery] with IdPK {$/;"	c
Discovery	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Discovery.scala	/^object Discovery extends Discovery with LongKeyedMetaMapper[Discovery] with SafeSave[Discovery] {$/;"	o
DiscoveryDependency	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/DiscoveryDependency.scala	/^class DiscoveryDependency extends LongKeyedMapper[DiscoveryDependency] with IdPK {$/;"	c
DiscoveryDependency	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/DiscoveryDependency.scala	/^object DiscoveryDependency extends DiscoveryDependency with LongKeyedMetaMapper[DiscoveryDependency] {$/;"	o
DiscoverySnippet	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DependencySnippet.scala	/^class DiscoverySnippet {$/;"	c
DiscoverySnippet	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DiscoverySnippet.scala	/^class DiscoverySnippet {$/;"	c
DiscoverySource	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/DiscoverySource.scala	/^class DiscoverySource extends LongKeyedMapper[DiscoverySource] with IdPK {$/;"	c
DiscoverySource	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/DiscoverySource.scala	/^object DiscoverySource extends DiscoverySource with LongKeyedMetaMapper[DiscoverySource] {$/;"	o
DispatchHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  case class DispatchHolder(name: String, dispatch: LiftRules.DispatchPF)$/;"	c
DispatchHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  case class DispatchHolder(name: String, dispatch: LiftRules.DispatchPF)$/;"	m
DispatchIt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/StatefulSnippet.scala	/^  type DispatchIt = PartialFunction[String, NodeSeq => NodeSeq]$/;"	T
DispatchLocSnippets	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  trait DispatchLocSnippets extends LocSnippets {$/;"	t
DispatchPF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  type DispatchPF = PartialFunction[Req, () => Box[LiftResponse]];$/;"	T
DispatchRosterListener	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^abstract class DispatchRosterListener(val dispatch: LiftActor) extends RosterListener$/;"	a
DispatchRosterListener	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^abstract class DispatchRosterListener(val dispatch: LiftActor) extends RosterListener$/;"	c
DispatchSnippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/StatefulSnippet.scala	/^trait DispatchSnippet {$/;"	t
DispatchSnippetNotMatched	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val DispatchSnippetNotMatched = Value(7, "Dispatch Snippet: Dispatch Not Matched")$/;"	V
DisplayMessage	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class DisplayMessage(where: String, msg: NodeSeq, duration: TimeSpan, fadeTime: TimeSpan) extends JsCmd {$/;"	c
DisplayMessage	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class DisplayMessage(where: String, msg: NodeSeq, duration: TimeSpan, fadeTime: TimeSpan) extends JsCmd {$/;"	m
DisposableSegment	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case class DisposableSegment(seg: Array[Char]) extends Segment$/;"	c
DisposableSegment	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case class DisposableSegment(seg: Array[Char]) extends Segment$/;"	m
Distinct	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class Distinct[O <: Mapper[O]]() extends QueryParam[O]$/;"	c
Distinct	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class Distinct[O <: Mapper[O]]() extends QueryParam[O]$/;"	m
DoNothingFilterChain	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^class DoNothingFilterChain extends FilterChain {$/;"	c
DoRedirectResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^object DoRedirectResponse {$/;"	o
DocBreak	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^case object DocBreak extends Document$/;"	o
DocCons	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^case class DocCons(hd: Document, tl: Document) extends Document$/;"	c
DocCons	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^case class DocCons(hd: Document, tl: Document) extends Document$/;"	m
DocGroup	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^case class DocGroup(doc: Document) extends Document$/;"	c
DocGroup	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^case class DocGroup(doc: Document) extends Document$/;"	m
DocNest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^case class DocNest(indent: Int, doc: Document) extends Document$/;"	c
DocNest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^case class DocNest(indent: Int, doc: Document) extends Document$/;"	m
DocNil	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^case object DocNil extends Document$/;"	o
DocText	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^case class DocText(txt: String) extends Document$/;"	c
DocText	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^case class DocText(txt: String) extends Document$/;"	m
DocType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^object DocType {$/;"	o
DocType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/DocType.scala	/^case class DocType(name: String, extID: ExternalID, intSubset: Seq[dtd.Decl]) {  $/;"	c
DocType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/DocType.scala	/^case class DocType(name: String, extID: ExternalID, intSubset: Seq[dtd.Decl]) {  $/;"	m
Document	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^abstract class Document {$/;"	a
Document	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^abstract class Document {$/;"	c
Document	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^object Document {$/;"	o
Document	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Document.scala	/^class Document extends NodeSeq with pull.XMLEvent {$/;"	c
Dog	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^case class Dog(name: String) extends Animal$/;"	c
Dog	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^case class Dog(name: String) extends Animal$/;"	m
Dog	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^class Dog extends LongKeyedMapper[Dog] with IdPK {$/;"	c
Dog	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^object Dog extends Dog with LongKeyedMetaMapper[Dog] {$/;"	o
Dog2	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^class Dog2 extends LongKeyedMapper[Dog2] {$/;"	c
Dog2	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^object Dog2 extends Dog2 with LongKeyedMetaMapper[Dog2] {$/;"	o
DollarCurrency	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^trait DollarCurrency extends TwoFractionDigits {$/;"	t
Done	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^case object Done$/;"	o
DoubleField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DoubleField.scala	/^class DoubleField[OwnerType <: Record[OwnerType]](rec: OwnerType) extends NumericField[Double, OwnerType] {$/;"	c
DoubleLinkedList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/DoubleLinkedList.scala	/^abstract class DoubleLinkedList[A, This >: Null <: DoubleLinkedList[A, This]]$/;"	a
DoubleLinkedList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/DoubleLinkedList.scala	/^abstract class DoubleLinkedList[A, This >: Null <: DoubleLinkedList[A, This]]$/;"	c
DoubleRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/DoubleRef.java	/^    public DoubleRef(double elem) { this.elem = elem; }$/;"	m	class:DoubleRef
DoubleRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/DoubleRef.java	/^public class DoubleRef implements java.io.Serializable {$/;"	c
DoubleTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  val DoubleTag = ".Double"$/;"	V
DoubleVal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case class DoubleVal(value: Double) extends Token$/;"	c
DoubleVal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case class DoubleVal(value: Double) extends Token$/;"	m
DriverType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^abstract class DriverType(val name : String) {$/;"	a
DriverType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^abstract class DriverType(val name : String) {$/;"	c
DriverType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^object DriverType {$/;"	o
DtdTypeSymbol	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/DtdTypeSymbol.scala	/^trait DtdTypeSymbol$/;"	t
DuplicateStateException	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  class DuplicateStateException(msg: String) extends Exception(msg)$/;"	c
DynamicVariable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/DynamicVariable.scala	/^class DynamicVariable[T](init: T) {$/;"	c
DynoVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ThreadGlobal.scala	/^trait DynoVar[T] {$/;"	t
E	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val E = java.lang.Math.E$/;"	V
EFCons	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  case class EFCons(hd: Elem => ElemFun, tl: ElemFun) extends ElemFun$/;"	c
EFCons	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  case class EFCons(hd: Elem => ElemFun, tl: ElemFun) extends ElemFun$/;"	m
EFCons	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  case class EFCons(hd: Elem => ElemFun, tl: ElemFun) extends ElemFun$/;"	c
EFCons	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  case class EFCons(hd: Elem => ElemFun, tl: ElemFun) extends ElemFun$/;"	m
EFNil	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  case class EFNil(res: Boolean) extends ElemFun*\/$/;"	c
EFNil	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  case class EFNil(res: Boolean) extends ElemFun*\/$/;"	m
EFNil	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  case class EFNil(res: Boolean) extends ElemFun*\/$/;"	c
EFNil	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  case class EFNil(res: Boolean) extends ElemFun*\/$/;"	m
ELEMENTS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^case class  ELEMENTS(r:ContentModel.RegExp) extends DFAContentModel {$/;"	c
ELEMENTS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^case class  ELEMENTS(r:ContentModel.RegExp) extends DFAContentModel {$/;"	m
EMPTY	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^case object EMPTY extends ContentModel {$/;"	o
ENCODING	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  val ENCODING = "UTF-8"$/;"	V
ENCODING	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^  private val ENCODING = OAuthUtil.ENCODING$/;"	V
END	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Tokens.scala	/^  final val END          = 10$/;"	V
ENDCH	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Scanner.scala	/^  final val ENDCH = '\\u0000'$/;"	V
EOF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  private val EOF = (-1).asInstanceOf[Char]$/;"	V
EOF	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/Tokens.scala	/^  case object EOF extends Token {$/;"	o
EOI	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/SimpleTokenizer.scala	/^  private val EOI = -1$/;"	V
EOL	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def EOL: Parser[Unit] = (accept("\\n\\r") | accept("\\r\\n") | '\\r' |$/;"	f
EOL	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case object EOL extends Textile  {$/;"	o
EOL	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/compat/Platform.scala	/^  val EOL = System.getProperty("line.separator", "\\n")$/;"	V
EPS_DOUBLE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val EPS_DOUBLE = java.lang.Double.MIN_VALUE$/;"	V
EPS_FLOAT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val EPS_FLOAT  = java.lang.Float.MIN_VALUE$/;"	V
EU	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^object EU extends CurrencyZone {$/;"	o
EUR	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    abstract class EUR extends AbstractCurrency("EUR") with TwoFractionDigits {val currencySymbol = "€"}$/;"	a
EUR	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    abstract class EUR extends AbstractCurrency("EUR") with TwoFractionDigits {val currencySymbol = "€"}$/;"	c
EarlyResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class EarlyResponse(func: () => Box[LiftResponse]) extends AnyLocParam$/;"	c
EarlyResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class EarlyResponse(func: () => Box[LiftResponse]) extends AnyLocParam$/;"	m
EditItem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  lazy val EditItem = calcEditItem$/;"	V
EducationHistory	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object EducationHistory extends FacebookField("education_history")$/;"	o
Either	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^object Either {$/;"	o
Either	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^sealed abstract class Either[+A, +B] {$/;"	a
Either	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^sealed abstract class Either[+A, +B] {$/;"	c
Elem	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^  type Elem = Char$/;"	T
Elem	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  type Elem = Char$/;"	T
Elem	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  type Elem = Char$/;"	T
Elem	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/VCardParser.scala	/^  type Elem = Char$/;"	T
Elem	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    type Elem = Char$/;"	T
Elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/RegexParsers.scala	/^  type Elem = Char$/;"	T
Elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/Scanners.scala	/^  type Elem = Char$/;"	T
Elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/syntactical/TokenParsers.scala	/^  type Elem = lexical.Token$/;"	T
Elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/Scanners.scala	/^  type Elem = Char$/;"	T
Elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/TokenParsers.scala	/^  type Elem = lexical.Token$/;"	T
Elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Elem.scala	/^@serializable class Elem(override val prefix: String,$/;"	c
Elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Elem.scala	/^object Elem {$/;"	o
ElemById	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class ElemById(id: String, then: String*) extends JsExp {$/;"	c
ElemById	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class ElemById(id: String, then: String*) extends JsExp {$/;"	m
ElemDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class ElemDecl(name: String, contentModel: ContentModel)$/;"	c
ElemDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class ElemDecl(name: String, contentModel: ContentModel)$/;"	m
ElemName	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  case class ElemName(name: String) extends Label {$/;"	c
ElemName	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  case class ElemName(name: String) extends Label {$/;"	m
Element	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/AbstractSyntax.scala	/^  trait Element extends Positional$/;"	t
ElementValidator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^class ElementValidator() extends Function1[Node,Boolean] {$/;"	c
Elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^  private class Elements extends Iterator[A] {$/;"	c
Elipsis	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case object Elipsis extends Textile  {$/;"	o
Em	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Em(cnt : Int) extends Attribute {$/;"	c
Em	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Em(cnt : Int) extends Attribute {$/;"	m
EmDash	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case object EmDash extends Textile  {$/;"	o
EmailField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EmailField.scala	/^class EmailField[OwnerType <: Record[OwnerType]](rec: OwnerType, maxLength: Int) extends StringField[OwnerType](rec, maxLength) {$/;"	c
EmailField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EmailField.scala	/^object EmailField {$/;"	o
Embed	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Embed.scala	/^object Embed extends DispatchSnippet {$/;"	o
Emph	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Emph(first: List[Textile], elems : List[Textile],$/;"	c
Emph	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Emph(first: List[Textile], elems : List[Textile],$/;"	m
Employee	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^  case class Employee(name: String, experience: Int)$/;"	c
Employee	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^  case class Employee(name: String, experience: Int)$/;"	m
Employee	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  case class Employee(name: String, experience: Int)$/;"	c
Employee	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  case class Employee(name: String, experience: Int)$/;"	m
Empty	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^case object Empty extends EmptyBox[Nothing]$/;"	o
Empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^  case object Empty extends ImmutableIterator[Nothing] {$/;"	o
Empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^  def Empty[A, B] = new ListMap[A, B]$/;"	f
Empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^  def Empty[A] = new ListSet[A]$/;"	f
Empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^  val Empty: Queue[Nothing] = new Queue()$/;"	V
Empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^  case object Empty extends Tree[Nothing] {$/;"	o
Empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^  val Empty = new Stack[Nothing]$/;"	V
Empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^  def Empty[A <% Ordered[A], B] = empty[A, B]$/;"	f
Empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^  final val Empty = new NodeSeq { def theSeq = Nil }$/;"	V
EmptyAfter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  object EmptyAfter {$/;"	o
EmptyBinderEnv	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  object EmptyBinderEnv extends BinderEnv {$/;"	o
EmptyBox	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^sealed abstract class EmptyBox[+A] extends Box[A] {$/;"	a
EmptyBox	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^sealed abstract class EmptyBox[+A] extends Box[A] {$/;"	c
EmptyHedgeRHS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/grammar/HedgeRHS.scala	/^case object EmptyHedgeRHS extends HedgeRHS$/;"	o
EmptyMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/EmptyMap.scala	/^class EmptyMap[A, +B] extends Map[A, B] {$/;"	c
EmptyNamespace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  val EmptyNamespace = ""$/;"	V
EmptyResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^private[http] case object EmptyResponse extends BasicResponse {$/;"	o
EmptySet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/EmptySet.scala	/^class EmptySet[A] extends Set[A] {$/;"	c
EnDash	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case object EnDash extends Textile  {$/;"	o
EncodingHeuristics	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/EncodingHeuristics.scala	/^object EncodingHeuristics {$/;"	o
End	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case object End extends Token$/;"	o
End	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Location.scala	/^case object End extends Location$/;"	o
EndTime	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class EndTime(endTime: Date) extends FacebookParam("end_time", endTime.getTime()) with GetEventsParam$/;"	c
EndTime	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class EndTime(endTime: Date) extends FacebookParam("end_time", endTime.getTime()) with GetEventsParam$/;"	m
Ensuring	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  class Ensuring[A](x: A) {$/;"	c
EntityDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^abstract class EntityDecl extends MarkupDecl $/;"	a
EntityDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^abstract class EntityDecl extends MarkupDecl $/;"	c
EntityDef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^abstract class EntityDef {$/;"	a
EntityDef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^abstract class EntityDef {$/;"	c
EntityManagerService	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^trait EntityManagerService {$/;"	t
EntityManagerSynchronization	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/EntityManagerSynchronization.scala	/^class EntityManagerSynchronization($/;"	c
EntityRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/EntityRef.scala	/^case class EntityRef(entityName: String) extends SpecialNode {$/;"	c
EntityRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/EntityRef.scala	/^case class EntityRef(entityName: String) extends SpecialNode {$/;"	m
Entry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^  type Entry = mutable.DefaultEntry[A, Any]$/;"	T
Entry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/DefaultMapModel.scala	/^  type Entry = DefaultEntry[A, B]$/;"	T
Entry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^  protected type Entry >: Null <: HashEntry[A, Entry]$/;"	T
Entry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  private[mutable] class Entry[Key, Value](val key : Key, $/;"	c
EnumField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EnumField.scala	/^class EnumField[OwnerType <: Record[OwnerType], ENUM <: Enumeration](rec: OwnerType, enum: ENUM) extends Field[ENUM#Value, OwnerType] {$/;"	c
EnumWithDescription	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/EnumWithDescription.scala	/^abstract class EnumWithDescription  {$/;"	a
EnumWithDescription	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/EnumWithDescription.scala	/^abstract class EnumWithDescription  {$/;"	c
EnumWithDescriptionSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/EnumWithDescriptionSpec.scala	/^object EnumWithDescriptionSpec extends Specification {$/;"	o
EnumWithDescriptionSpecTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/EnumWithDescriptionSpec.scala	/^class EnumWithDescriptionSpecTest extends JUnit4(EnumWithDescriptionSpec)$/;"	c
Enumeration	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^abstract class Enumeration(initial: Int, names: String*) {$/;"	a
Enumeration	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^abstract class Enumeration(initial: Int, names: String*) {$/;"	c
EofCh	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/CharArrayReader.scala	/^  final val EofCh = '\\032'$/;"	V
EofCh	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/CharSequenceReader.scala	/^  final val EofCh = '\\032'$/;"	V
EofCh	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/PagedSeqReader.scala	/^  final val EofCh = '\\032'$/;"	V
EofCh	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/StreamReader.scala	/^  final val EofCh = '\\032'$/;"	V
Eps	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^  case object Eps extends RegExp {$/;"	o
Eql	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  val Eql = Value(1, "=")$/;"	V
Equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  case class Equals(p: Expr, c:String) extends Cond ; \/\/   "p [ @p == bla ]"$/;"	c
Equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  case class Equals(p: Expr, c:String) extends Cond ; \/\/   "p [ @p == bla ]"$/;"	m
Equiv	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Equiv.scala	/^trait Equiv[T] {$/;"	t
Error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  val Error = Value(9, "Error")$/;"	V
Error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class Error(id: Box[String], msg: NodeSeq) extends CometMessage$/;"	c
Error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class Error(id: Box[String], msg: NodeSeq) extends CometMessage$/;"	m
Error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^object Error {$/;"	o
Error	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  type Error     = java.lang.Error$/;"	T
Error	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  case class Error(override val msg: String, override val next: Input) extends NoSuccess(msg, next) {$/;"	c
Error	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  case class Error(override val msg: String, override val next: Input) extends NoSuccess(msg, next) {$/;"	m
Error	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  case class Error(override val msg: String, override val next: Input) extends NoSuccess(msg, next) {$/;"	c
Error	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  case class Error(override val msg: String, override val next: Input) extends NoSuccess(msg, next) {$/;"	m
ErrorToken	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/Tokens.scala	/^  case class ErrorToken(msg: String) extends Token {$/;"	c
ErrorToken	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/Tokens.scala	/^  case class ErrorToken(msg: String) extends Token {$/;"	m
EvComment	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEvent.scala	/^case class EvComment(text: String) extends XMLEvent$/;"	c
EvComment	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEvent.scala	/^case class EvComment(text: String) extends XMLEvent$/;"	m
EvElemEnd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEvent.scala	/^case class EvElemEnd(pre: String, label: String) extends XMLEvent $/;"	c
EvElemEnd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEvent.scala	/^case class EvElemEnd(pre: String, label: String) extends XMLEvent $/;"	m
EvElemStart	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEvent.scala	/^case class EvElemStart(pre: String, label: String, attrs: MetaData, scope: NamespaceBinding) extends XMLEvent $/;"	c
EvElemStart	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEvent.scala	/^case class EvElemStart(pre: String, label: String, attrs: MetaData, scope: NamespaceBinding) extends XMLEvent $/;"	m
EvEntityRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEvent.scala	/^case class EvEntityRef(entity: String) extends XMLEvent$/;"	c
EvEntityRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEvent.scala	/^case class EvEntityRef(entity: String) extends XMLEvent$/;"	m
EvProcInstr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEvent.scala	/^case class EvProcInstr(target: String, text: String) extends XMLEvent$/;"	c
EvProcInstr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEvent.scala	/^case class EvProcInstr(target: String, text: String) extends XMLEvent$/;"	m
EvText	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEvent.scala	/^case class EvText(text: String) extends XMLEvent$/;"	c
EvText	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEvent.scala	/^case class EvText(text: String) extends XMLEvent$/;"	m
Event	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class Event(name: String, timestamp: Date)$/;"	c
Event	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class Event(name: String, timestamp: Date)$/;"	m
Event	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  abstract class Event {$/;"	a
Event	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  abstract class Event {$/;"	c
Event	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  object Event {$/;"	o
EventId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class EventId(eventId: Long) extends FacebookParam("eid", eventId)$/;"	c
EventId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class EventId(eventId: Long) extends FacebookParam("eid", eventId)$/;"	m
EventIds	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class EventIds(eventIds: Long*) extends FacebookParam("eids", eventIds.mkString(",")) with GetEventsParam$/;"	c
EventIds	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class EventIds(eventIds: Long*) extends FacebookParam("eids", eventIds.mkString(",")) with GetEventsParam$/;"	m
ExampleDirectAMQPSender	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^object ExampleDirectAMQPSender {$/;"	o
ExampleSerializedAMQPDispatcher	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^class ExampleSerializedAMQPDispatcher[T](factory: ConnectionFactory, host: String, port: Int)$/;"	c
ExampleStringAMQPListener	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^class ExampleStringAMQPListener {$/;"	c
ExampleStringAMQPSender	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^class ExampleStringAMQPSender {$/;"	c
ExampleTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/Examples.scala	/^class ExampleTest extends Runner(Examples) with JUnit$/;"	c
Examples	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/Examples.scala	/^object Examples extends Specification {$/;"	o
Exception	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  type Exception = java.lang.Exception$/;"	T
ExceptionHandlerPF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  type ExceptionHandlerPF = PartialFunction[(Props.RunModes.Value, Req, Throwable), LiftResponse]$/;"	T
ExceptionHandling	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ExceptionHandling.java	/^public abstract class ExceptionHandling {$/;"	c
Exists	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  case class Exists(p: GenExp) extends Cond ;  \/\/          "p [ p ]"$/;"	c
Exists	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  case class Exists(p: GenExp) extends Cond ;  \/\/          "p [ p ]"$/;"	m
ExpandoRecord	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Record.scala	/^trait ExpandoRecord[MyType <: Record[MyType] with ExpandoRecord[MyType]] {$/;"	t
ExpiredPayment	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val ExpiredPayment = Value(5, "Expired")$/;"	V
Expr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  abstract class Expr extends GenExp {$/;"	a
Expr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  abstract class Expr extends GenExp {$/;"	c
Expression	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^object Expression {$/;"	o
ExtDef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class ExtDef(extID:ExternalID) extends EntityDef {$/;"	c
ExtDef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class ExtDef(extID:ExternalID) extends EntityDef {$/;"	m
ExtLink	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  object ExtLink {$/;"	o
ExternalID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ExternalID.scala	/^abstract class ExternalID  {$/;"	a
ExternalID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ExternalID.scala	/^abstract class ExternalID  {$/;"	c
ExternalSources	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ExternalSources.scala	/^trait ExternalSources { self: ExternalSources with MarkupParser with MarkupHandler =>$/;"	t
Extraction	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^object Extraction {$/;"	o
ExtractionExampleTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^class ExtractionExampleTest extends Runner(ExtractionExamples) with JUnit$/;"	c
ExtractionExamples	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^object ExtractionExamples extends Specification {$/;"	o
FBML	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class FBML(markup: NodeSeq) extends FacebookParam("fbml", markup) with SetRefHandleParam$/;"	c
FBML	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class FBML(markup: NodeSeq) extends FacebookParam("fbml", markup) with SetRefHandleParam$/;"	m
FB_SERVER	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  val FB_SERVER = "api.facebook.com\/restserver.php"$/;"	V
FExp	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  case class FExp(e:Expr, c:Cond) {$/;"	c
FExp	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  case class FExp(e:Expr, c:Cond) {$/;"	m
FF	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  private final val FF: Char = 0x0C$/;"	V
FIRSTPOS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Position.scala	/^  final val FIRSTPOS    = encode(1, 1)$/;"	V
FLOAT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static final int CHAR = 0, BYTE = 1, SHORT = 2, INT = 3, LONG = 4, FLOAT = 5, DOUBLE = 6, OTHER = 7;$/;"	f	class:BoxesRunTime	file:
FT	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      type FT = j.field.FieldType$/;"	T
FULL	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/LoggedNodeFactory.scala	/^  final val FULL  = 2$/;"	V
Facebook	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/Facebook.scala	/^object Facebook {$/;"	o
FacebookClient	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^class FacebookClient(val apiKey: String, val secret: String, val session: FacebookSession) {$/;"	c
FacebookClient	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^object FacebookClient {$/;"	o
FacebookField	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^class FacebookField(val name: String)$/;"	c
FacebookFields	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class FacebookFields(fields: FacebookField*) extends FacebookParam("fields", fields.map(_.name).mkString(","))$/;"	c
FacebookFields	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class FacebookFields(fields: FacebookField*) extends FacebookParam("fields", fields.map(_.name).mkString(","))$/;"	m
FacebookMethod	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^class FacebookMethod(val name: String, attachment: Boolean, val params: FacebookParam*) {$/;"	c
FacebookParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^class FacebookParam(val key: String, val value: Any){$/;"	c
FacebookParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^object FacebookParam {$/;"	o
FacebookRestApi	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^object FacebookRestApi {$/;"	o
FacebookSession	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^class FacebookSession(val key: String, val expiration: Long, val uid: String)$/;"	c
FacebookSession	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^object FacebookSession {$/;"	o
Factory	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Factory.scala	/^trait Factory extends SimpleInjector {$/;"	t
FactoryAdapter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^abstract class FactoryAdapter extends DefaultHandler() {$/;"	a
FactoryAdapter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^abstract class FactoryAdapter extends DefaultHandler() {$/;"	c
FactoryMaker	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Factory.scala	/^  abstract class FactoryMaker[T](_default: () => T)$/;"	a
FactoryMaker	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Factory.scala	/^  abstract class FactoryMaker[T](_default: () => T)$/;"	c
FadeIn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class FadeIn(id: String, duration: TimeSpan, fadeTime: TimeSpan) extends JsCmd {$/;"	c
FadeIn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class FadeIn(id: String, duration: TimeSpan, fadeTime: TimeSpan) extends JsCmd {$/;"	m
FadeOut	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class FadeOut(id: String, duration: TimeSpan, fadeTime: TimeSpan) extends JsCmd {$/;"	c
FadeOut	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class FadeOut(id: String, duration: TimeSpan, fadeTime: TimeSpan) extends JsCmd {$/;"	m
FailMsg	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  type FailMsg = () => LiftResponse$/;"	T
FailedPayment	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val FailedPayment = Value(6, "Failed")$/;"	V
Failure	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^object Failure {$/;"	o
Failure	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^sealed case class Failure(msg: String, exception: Box[Throwable], chain: Box[Failure]) extends EmptyBox[Nothing] {$/;"	c
Failure	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^sealed case class Failure(msg: String, exception: Box[Throwable], chain: Box[Failure]) extends EmptyBox[Nothing] {$/;"	m
Failure	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  case class Failure(override val msg: String, override val next: Input) extends NoSuccess(msg, next) {$/;"	c
Failure	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  case class Failure(override val msg: String, override val next: Input) extends NoSuccess(msg, next) {$/;"	m
Failure	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  case class Failure(override val msg: String, override val next: Input) extends NoSuccess(msg, next) {$/;"	c
Failure	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  case class Failure(override val msg: String, override val next: Input) extends NoSuccess(msg, next) {$/;"	m
FakeConsumer	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/test/scala/net/liftweb/oauth/OAuthSignatureMethodSpec.scala	/^  case class FakeConsumer(consumerKey:String, consumerSecret:String) extends OAuthConsumer {$/;"	c
FakeConsumer	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/test/scala/net/liftweb/oauth/OAuthSignatureMethodSpec.scala	/^  case class FakeConsumer(consumerKey:String, consumerSecret:String) extends OAuthConsumer {$/;"	m
False	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/MonadicConversions.scala	/^case class False(msgs: List[String]) extends MonadicCondition {$/;"	c
False	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/MonadicConversions.scala	/^case class False(msgs: List[String]) extends MonadicCondition {$/;"	m
FatLazy	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^class FatLazy[T](f: => T) {$/;"	c
FatLazy	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^object FatLazy {$/;"	o
Fatal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  val Fatal = Value(11, "Fatal")$/;"	V
FatalError	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FatalError.scala	/^case class FatalError(msg:String) extends java.lang.RuntimeException(msg);$/;"	c
FatalError	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FatalError.scala	/^case class FatalError(msg:String) extends java.lang.RuntimeException(msg);$/;"	m
Female	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  val Female = new I18NGender(2, "female")$/;"	V
Field	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  trait Field extends BaseField {$/;"	t
Field	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    trait Field extends super.Field {$/;"	t
Field	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^trait Field[ThisType, OwnerType <: Record[OwnerType]] extends OwnedField[OwnerType] {$/;"	t
Field	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Field.scala	/^class Field extends LongKeyedMapper[Field] with IdPK {$/;"	c
Field	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Field.scala	/^object Field extends Field with LongKeyedMetaMapper[Field] with SafeSave[Field] {$/;"	o
Field	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^case class Field(override val fullname: String, tpe: Type) extends GlobalSymbol(fullname)$/;"	c
Field	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^case class Field(override val fullname: String, tpe: Type) extends GlobalSymbol(fullname)$/;"	m
FieldContainer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^trait FieldContainer {$/;"	t
FieldError	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^case class FieldError(field: FieldIdentifier, msg: NodeSeq) {$/;"	c
FieldError	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^case class FieldError(field: FieldIdentifier, msg: NodeSeq) {$/;"	m
FieldError	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^object FieldError {$/;"	o
FieldHolder	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^   case class FieldHolder(name: String, method: Method, field: MappedField[_, A])$/;"	c
FieldHolder	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^   case class FieldHolder(name: String, method: Method, field: MappedField[_, A])$/;"	m
FieldHolder	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  case class FieldHolder(name: String, method: Method, field: OwnedField[BaseRecord])$/;"	c
FieldHolder	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  case class FieldHolder(name: String, method: Method, field: OwnedField[BaseRecord])$/;"	m
FieldId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    val FieldId = Helpers.nextFuncName$/;"	V
FieldIdentifier	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^trait FieldIdentifier {$/;"	t
FieldPF	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  type FieldPF = PartialFunction[String, NodeSeq => NodeSeq]$/;"	T
FieldSnippet	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/FieldSnippet.scala	/^class FieldSnippet {$/;"	c
FieldStart	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case class FieldStart(name: String) extends Token$/;"	c
FieldStart	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case class FieldStart(name: String) extends Token$/;"	m
FieldType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  type FieldType <: KeyType$/;"	T
FileDbSetup	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^  trait FileDbSetup {$/;"	t
FileParamHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^abstract class FileParamHolder(val name: String, val mimeType: String,$/;"	a
FileParamHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^abstract class FileParamHolder(val name: String, val mimeType: String,$/;"	c
FileParamHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^object FileParamHolder {$/;"	o
Filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^  protected class Filter(p : K => Boolean) extends Map.Projection[K,E] {$/;"	c
Filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^  trait Filter extends MutableIterable.Projection[A] {$/;"	t
Filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^  protected trait Filter extends MutableSeq.Projection[A] {$/;"	t
Filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^  class Filter(pp : A => Boolean) extends super.Filter with Set.Projection[A] {$/;"	c
Filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    protected class Filter(p : K => Boolean) extends super.Filter(p) with SortedMap.Projection[K,E] {$/;"	c
Filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^  protected class Filter(p : K => Boolean) extends super.Filter(p) with SortedMap.Projection[K,E] {$/;"	c
Filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^  protected class Filter(pp : A => Boolean) extends super.Filter(pp) with SortedSet.Projection[A] {$/;"	c
FilterIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^    class FilterIterator(underlying : SeqIterator[Int,A]) extends SeqIterator[Int,A] {$/;"	c
Finally	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^    def Finally(handler: Unit): a =$/;"	f
Finally	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^    def Finally(handler: Unit): a$/;"	f
FindElem	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  private object FindElem {$/;"	o
FirstBox	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^trait FirstBox[F, T] {$/;"	t
FirstImage	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class FirstImage(imageUrl: String) extends FacebookParam("image_1", imageUrl) with PublishStoryParam with PublishActionParam$/;"	c
FirstImage	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class FirstImage(imageUrl: String) extends FacebookParam("image_1", imageUrl) with PublishStoryParam with PublishActionParam$/;"	m
FirstImageLink	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class FirstImageLink(imageUrl: String) extends FacebookParam("image_1_link", imageUrl) with PublishStoryParam with PublishActionParam$/;"	c
FirstImageLink	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class FirstImageLink(imageUrl: String) extends FacebookParam("image_1_link", imageUrl) with PublishStoryParam with PublishActionParam$/;"	m
FirstName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object FirstName extends FacebookField("first_name")$/;"	o
FirstTime	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  private object FirstTime extends ScreenVar[Boolean](true)$/;"	o
FirstTime	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  private object FirstTime extends WizardVar[Boolean](true)$/;"	o
Fish	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^case class Fish(weight: Double) extends Animal$/;"	c
Fish	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^case class Fish(weight: Double) extends Animal$/;"	m
FlatHashTable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^trait FlatHashTable[A] {$/;"	t
FloatRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/FloatRef.java	/^    public FloatRef(float elem) { this.elem = elem; }$/;"	m	class:FloatRef
FloatRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/FloatRef.java	/^public class FloatRef implements java.io.Serializable {$/;"	c
FloatTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  val FloatTag = ".Float"$/;"	V
Flot	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^object Flot$/;"	o
FlotAxisOptions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^trait FlotAxisOptions extends BaseFlotOptions {$/;"	t
FlotBarsOptions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^trait FlotBarsOptions extends FlotLinesOptions with BaseFlotOptions {$/;"	t
FlotCapability	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotCapability.scala	/^trait FlotCapability {$/;"	t
FlotGridOptions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^trait FlotGridOptions extends BaseFlotOptions {$/;"	t
FlotInfo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotUtils.scala	/^case class FlotInfo (idPlaceholder: String, series: List[FlotSerie], options: FlotOptions)$/;"	c
FlotInfo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotUtils.scala	/^case class FlotInfo (idPlaceholder: String, series: List[FlotSerie], options: FlotOptions)$/;"	m
FlotLegendOptions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^trait FlotLegendOptions extends BaseFlotOptions {$/;"	t
FlotLinesOptions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^trait FlotLinesOptions extends BaseFlotOptions {$/;"	t
FlotNewData	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotUtils.scala	/^case class FlotNewData (series: List [FlotSerie], datas: List[(Double, Double)])$/;"	c
FlotNewData	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotUtils.scala	/^case class FlotNewData (series: List [FlotSerie], datas: List[(Double, Double)])$/;"	m
FlotOptions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^trait FlotOptions extends BaseFlotOptions {$/;"	t
FlotOverview	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOverview.scala	/^class FlotOverview (idOverview: String, optionsOverview: FlotOptions)$/;"	c
FlotPointsOptions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^trait FlotPointsOptions extends FlotLinesOptions with BaseFlotOptions {$/;"	t
FlotSerie	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotSerie.scala	/^trait FlotSerie$/;"	t
FmtState	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^    type FmtState = (Int, Boolean, Document)$/;"	T
FocusOnLoad	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  object FocusOnLoad {$/;"	o
Foo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^object Foo with Application {$/;"	o
Footnote	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Footnote(elems : List[Textile], attrs : List[Attribute], num : String) extends ATextile(elems, attrs) {$/;"	c
Footnote	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Footnote(elems : List[Textile], attrs : List[Attribute], num : String) extends ATextile(elems, attrs) {$/;"	m
FootnoteDef	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class FootnoteDef(num : String) extends ATextile(null, Nil) {$/;"	c
FootnoteDef	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class FootnoteDef(num : String) extends ATextile(null, Nil) {$/;"	m
For	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^          val concreteClass = formats.typeHints.classFor(typeHint) getOrElse fail("Do not know how to deserialize '" + typeHint + "'")$/;"	c
For	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  def classFor(hint: String) = None$/;"	c
For	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  def classFor(hint: String) = Some(Thread.currentThread.getContextClassLoader.loadClass(hint))$/;"	c
For	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  def classFor(hint: String) = hints find (hintFor(_) == hint)$/;"	c
For	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  def classFor(hint: String): Option[Class[_]]$/;"	c
ForbiddenResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class ForbiddenResponse(message: String) extends LiftResponse with HeaderStuff {$/;"	c
ForbiddenResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class ForbiddenResponse(message: String) extends LiftResponse with HeaderStuff {$/;"	m
ForbiddenResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^object ForbiddenResponse {$/;"	o
Form	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Form.scala	/^object Form extends DispatchSnippet {$/;"	o
FormBuilderLocator	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^case class FormBuilderLocator[T](func: (T, T => Unit) => NodeSeq)(implicit val manifest: Manifest[T])$/;"	c
FormBuilderLocator	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^case class FormBuilderLocator[T](func: (T, T => Unit) => NodeSeq)(implicit val manifest: Manifest[T])$/;"	m
FormProcessor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/FormProcessor.scala	/^abstract class FormProcessor(prefix: String) {$/;"	a
FormProcessor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/FormProcessor.scala	/^abstract class FormProcessor(prefix: String) {$/;"	c
FormToJSON	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  object FormToJSON {$/;"	o
FormVendor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^trait FormVendor {$/;"	t
Formats	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^trait Formats {$/;"	t
ForwardableActor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/SimpleActor.scala	/^trait ForwardableActor[From, To] {$/;"	t
FourthImage	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class FourthImage(imageUrl: String) extends FacebookParam("image_4", imageUrl) with PublishStoryParam with PublishActionParam$/;"	c
FourthImage	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class FourthImage(imageUrl: String) extends FacebookParam("image_4", imageUrl) with PublishStoryParam with PublishActionParam$/;"	m
FourthImageLink	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class FourthImageLink(imageUrl: String) extends FacebookParam("image_4_link", imageUrl) with PublishStoryParam with PublishActionParam$/;"	c
FourthImageLink	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class FourthImageLink(imageUrl: String) extends FacebookParam("image_4_link", imageUrl) with PublishStoryParam with PublishActionParam$/;"	m
FqlQuery	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class FqlQuery(query: String) extends FacebookMethod("facebook.fql.query", Query(query))$/;"	c
FqlQuery	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class FqlQuery(query: String) extends FacebookMethod("facebook.fql.query", Query(query))$/;"	m
FriendListId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class FriendListId(friendListId: Long) extends FacebookParam("flid", friendListId) with GetFriendsParam$/;"	c
FriendListId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class FriendListId(friendListId: Long) extends FacebookParam("flid", friendListId) with GetFriendsParam$/;"	m
From	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class From(address: String) extends AddressType(address)$/;"	c
From	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class From(address: String) extends AddressType(address)$/;"	m
Full	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^final case class Full[+A](value: A) extends Box[A] {$/;"	c
Full	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^final case class Full[+A](value: A) extends Box[A] {$/;"	m
FullTypeHintExamples	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^object FullTypeHintExamples extends TypeHintExamples {$/;"	o
FullTypeHints	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^case class FullTypeHints(hints: List[Class[_]]) extends TypeHints {$/;"	c
FullTypeHints	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^case class FullTypeHints(hints: List[Class[_]]) extends TypeHints {$/;"	m
FuncAttrBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class FuncAttrBindParam(name: String, value: NodeSeq => NodeSeq, newAttr: String) extends BindParam with BindWithAttr {$/;"	c
FuncAttrBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class FuncAttrBindParam(name: String, value: NodeSeq => NodeSeq, newAttr: String) extends BindParam with BindWithAttr {$/;"	m
FuncAttrBoxBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class FuncAttrBoxBindParam(name: String, func: NodeSeq => Box[NodeSeq], newAttr: String) extends BindParam with BindWithAttr {$/;"	c
FuncAttrBoxBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class FuncAttrBoxBindParam(name: String, func: NodeSeq => Box[NodeSeq], newAttr: String) extends BindParam with BindWithAttr {$/;"	m
FuncAttrOptionBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class FuncAttrOptionBindParam(name: String, func: NodeSeq => Option[NodeSeq], newAttr: String) extends BindParam with BindWithAttr {$/;"	c
FuncAttrOptionBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class FuncAttrOptionBindParam(name: String, func: NodeSeq => Option[NodeSeq], newAttr: String) extends BindParam with BindWithAttr {$/;"	m
FuncBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class FuncBindParam(name: String, value: NodeSeq => NodeSeq) extends Tuple2(name, value) with BindParam {$/;"	c
FuncBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class FuncBindParam(name: String, value: NodeSeq => NodeSeq) extends Tuple2(name, value) with BindParam {$/;"	m
Function	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  object Function {$/;"	o
Function	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function.scala	/^object Function {$/;"	o
Function	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  type Function[-A, +B] = Function1[A, B]$/;"	T
Function	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Function(params: List[Symbol], body: Tree) extends Tree$/;"	c
Function	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Function(params: List[Symbol], body: Tree) extends Tree$/;"	m
Function0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function0.scala	/^trait Function0[+R] extends AnyRef { self =>$/;"	t
Function1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function1.scala	/^trait Function1[-T1, +R] extends AnyRef { self =>$/;"	t
Function10	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function10.scala	/^trait Function10[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, +R] extends AnyRef { self =>$/;"	t
Function11	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function11.scala	/^trait Function11[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, +R] extends AnyRef { self =>$/;"	t
Function12	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function12.scala	/^trait Function12[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, +R] extends AnyRef { self =>$/;"	t
Function13	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function13.scala	/^trait Function13[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, +R] extends AnyRef { self =>$/;"	t
Function14	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function14.scala	/^trait Function14[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, +R] extends AnyRef { self =>$/;"	t
Function15	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function15.scala	/^trait Function15[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, +R] extends AnyRef { self =>$/;"	t
Function16	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function16.scala	/^trait Function16[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, +R] extends AnyRef { self =>$/;"	t
Function17	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function17.scala	/^trait Function17[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, +R] extends AnyRef { self =>$/;"	t
Function18	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function18.scala	/^trait Function18[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, +R] extends AnyRef { self =>$/;"	t
Function19	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function19.scala	/^trait Function19[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, -T19, +R] extends AnyRef { self =>$/;"	t
Function2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function2.scala	/^trait Function2[-T1, -T2, +R] extends AnyRef { self =>$/;"	t
Function20	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function20.scala	/^trait Function20[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, -T19, -T20, +R] extends AnyRef { self =>$/;"	t
Function21	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function21.scala	/^trait Function21[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, -T19, -T20, -T21, +R] extends AnyRef { self =>$/;"	t
Function22	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function22.scala	/^trait Function22[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, -T19, -T20, -T21, -T22, +R] extends AnyRef { self =>$/;"	t
Function3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function3.scala	/^trait Function3[-T1, -T2, -T3, +R] extends AnyRef { self =>$/;"	t
Function4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function4.scala	/^trait Function4[-T1, -T2, -T3, -T4, +R] extends AnyRef { self =>$/;"	t
Function5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function5.scala	/^trait Function5[-T1, -T2, -T3, -T4, -T5, +R] extends AnyRef { self =>$/;"	t
Function6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function6.scala	/^trait Function6[-T1, -T2, -T3, -T4, -T5, -T6, +R] extends AnyRef { self =>$/;"	t
Function7	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function7.scala	/^trait Function7[-T1, -T2, -T3, -T4, -T5, -T6, -T7, +R] extends AnyRef { self =>$/;"	t
Function8	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function8.scala	/^trait Function8[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, +R] extends AnyRef { self =>$/;"	t
Function9	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function9.scala	/^trait Function9[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, +R] extends AnyRef { self =>$/;"	t
GB	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^object GB extends CurrencyZone {$/;"	o
GBLeaf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^private case class GBLeaf[A <% Ordered[A],B]() extends GBTree[A,B] {$/;"	c
GBLeaf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^private case class GBLeaf[A <% Ordered[A],B]() extends GBTree[A,B] {$/;"	m
GBNode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^private case class GBNode[A <% Ordered[A],B](key: A,$/;"	c
GBNode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^private case class GBNode[A <% Ordered[A],B](key: A,$/;"	m
GBP	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    abstract class GBP extends AbstractCurrency("GBP") with TwoFractionDigits {val currencySymbol = "£"}$/;"	a
GBP	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    abstract class GBP extends AbstractCurrency("GBP") with TwoFractionDigits {val currencySymbol = "£"}$/;"	c
GBTree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^protected abstract class GBTree[A <% Ordered[A],B] extends AnyRef {$/;"	a
GBTree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^protected abstract class GBTree[A <% Ordered[A],B] extends AnyRef {$/;"	c
GP	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^  class GP[a](n: UChan, polarity: Boolean, v: Any, c: Any => a) {$/;"	c
GREEN	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  final val GREEN      = "\\033[32m"$/;"	V
GREEN_B	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  final val GREEN_B    = "\\033[42m"$/;"	V
GenExp	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  abstract class GenExp ;$/;"	a
GenExp	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  abstract class GenExp ;$/;"	c
Genders	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^object Genders extends Enumeration {$/;"	o
GenericActor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/SimpleActor.scala	/^trait GenericActor[+R] extends TypedActor[Any, R]$/;"	t
GenericIndex	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^case class GenericIndex[A <: Mapper[A]](createFunc : (String,List[String]) => String, validated : IHaveValidatedThisSQL, indexColumns : IndexItem[A]*) extends BaseIndex[A](indexColumns : _*)$/;"	c
GenericIndex	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^case class GenericIndex[A <: Mapper[A]](createFunc : (String,List[String]) => String, validated : IHaveValidatedThisSQL, indexColumns : IndexItem[A]*) extends BaseIndex[A](indexColumns : _*)$/;"	m
GenericValidtor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^abstract class GenericValidtor extends XHtmlValidator {$/;"	a
GenericValidtor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^abstract class GenericValidtor extends XHtmlValidator {$/;"	c
Germany	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^  val Germany = C65$/;"	V
GetAlbums	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GetAlbums(primaryFilter: GetAlbumsParam, otherFilters: GetAlbumsParam*) extends FacebookMethod("facebook.photos.getAlbums", (primaryFilter :: otherFilters.toList): _*)$/;"	c
GetAlbums	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GetAlbums(primaryFilter: GetAlbumsParam, otherFilters: GetAlbumsParam*) extends FacebookMethod("facebook.photos.getAlbums", (primaryFilter :: otherFilters.toList): _*)$/;"	m
GetAlbumsParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^trait GetAlbumsParam extends FacebookParam$/;"	t
GetAppUsers	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object GetAppUsers extends FacebookMethod("facebook.friends.getAppUsers")$/;"	o
GetEvents	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GetEvents(filters: GetEventsParam*) extends FacebookMethod("facebook.events.get", filters: _*)$/;"	c
GetEvents	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GetEvents(filters: GetEventsParam*) extends FacebookMethod("facebook.events.get", filters: _*)$/;"	m
GetEventsMembers	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GetEventsMembers(eventId: Long) extends FacebookMethod("facebook.events.getMembers", EventId(eventId))$/;"	c
GetEventsMembers	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GetEventsMembers(eventId: Long) extends FacebookMethod("facebook.events.getMembers", EventId(eventId))$/;"	m
GetEventsParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^trait GetEventsParam extends FacebookParam$/;"	t
GetFBML	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GetFBML(optionalParams: GetFbmlParam*) extends FacebookMethod("facebook.profile.getFBML", optionalParams: _*)$/;"	c
GetFBML	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GetFBML(optionalParams: GetFbmlParam*) extends FacebookMethod("facebook.profile.getFBML", optionalParams: _*)$/;"	m
GetFbmlParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^trait GetFbmlParam extends FacebookParam$/;"	t
GetFriendLists	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object GetFriendLists extends FacebookMethod("facebook.friends.getLists")$/;"	o
GetFriends	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GetFriends(optionalParams: GetFriendsParam*) extends FacebookMethod("facebook.friends.get", optionalParams: _*)$/;"	c
GetFriends	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GetFriends(optionalParams: GetFriendsParam*) extends FacebookMethod("facebook.friends.get", optionalParams: _*)$/;"	m
GetFriendsParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^trait GetFriendsParam extends FacebookParam$/;"	t
GetGroupMembers	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GetGroupMembers(groupId: Long) extends FacebookMethod("facebook.groups.getMembers", GroupId(groupId))$/;"	c
GetGroupMembers	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GetGroupMembers(groupId: Long) extends FacebookMethod("facebook.groups.getMembers", GroupId(groupId))$/;"	m
GetGroupMembersParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^trait GetGroupMembersParam extends FacebookParam$/;"	t
GetGroups	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GetGroups(filters: GetGroupsParam*) extends FacebookMethod("facebook.groups.get", filters: _*)$/;"	c
GetGroups	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GetGroups(filters: GetGroupsParam*) extends FacebookMethod("facebook.groups.get", filters: _*)$/;"	m
GetGroupsParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^trait GetGroupsParam extends FacebookParam$/;"	t
GetInfo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GetInfo(users: Collection[Long], fields: FacebookField*) extends FacebookMethod("facebook.users.getInfo", UserIds(users.toList: _*), FacebookFields(fields: _*))$/;"	c
GetInfo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GetInfo(users: Collection[Long], fields: FacebookField*) extends FacebookMethod("facebook.users.getInfo", UserIds(users.toList: _*), FacebookFields(fields: _*))$/;"	m
GetNotifications	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object GetNotifications extends FacebookMethod("facebook.notifications.get")$/;"	o
GetPendingMsg	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class GetPendingMsg(to: String)$/;"	c
GetPendingMsg	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class GetPendingMsg(to: String)$/;"	m
GetPhotoTags	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GetPhotoTags(photoIds: Long*) extends FacebookMethod(" facebook.photos.getTags", PhotoIds(photoIds: _*))$/;"	c
GetPhotoTags	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GetPhotoTags(photoIds: Long*) extends FacebookMethod(" facebook.photos.getTags", PhotoIds(photoIds: _*))$/;"	m
GetPhotoTagsParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^trait GetPhotoTagsParam extends FacebookParam$/;"	t
GetPhotos	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GetPhotos(primaryFilter: GetPhotosParam, otherFilters: GetPhotosParam*) extends FacebookMethod("facebook.photos.get", (primaryFilter :: otherFilters.toList): _*)$/;"	c
GetPhotos	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GetPhotos(primaryFilter: GetPhotosParam, otherFilters: GetPhotosParam*) extends FacebookMethod("facebook.photos.get", (primaryFilter :: otherFilters.toList): _*)$/;"	m
GetPhotosParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^trait GetPhotosParam extends FacebookParam$/;"	t
GetPoster	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^trait GetPoster {$/;"	t
GetPosterHelper	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^trait GetPosterHelper {$/;"	t
GetRequest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^case object GetRequest extends RequestType {$/;"	o
GetUser	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object GetUser extends FacebookMethod("facebook.users.getLoggedInUser")$/;"	o
GlobalSymbol	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^abstract class GlobalSymbol(val fullname: String) extends Symbol {$/;"	a
GlobalSymbol	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^abstract class GlobalSymbol(val fullname: String) extends Symbol {$/;"	c
GoneResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class GoneResponse() extends LiftResponse with HeaderStuff {$/;"	c
GoneResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class GoneResponse() extends LiftResponse with HeaderStuff {$/;"	m
Goto	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Goto(target: LabelSymbol) extends Tree$/;"	c
Goto	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Goto(target: LabelSymbol) extends Tree$/;"	m
Gravatar	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/gravatar/Gravatar.scala	/^object Gravatar {$/;"	o
GravatarDemo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/GravatarDemo.scala	/^class GravatarDemo {$/;"	c
Group	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Group.scala	/^      "class Group does not support method toString(StringBuilder)")$/;"	c
Group	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Group.scala	/^    throw new UnsupportedOperationException("class Group does not support method 'attributes'")$/;"	c
Group	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Group.scala	/^    throw new UnsupportedOperationException("class Group does not support method 'child'")$/;"	c
Group	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Group.scala	/^    throw new UnsupportedOperationException("class Group does not support method 'label'")$/;"	c
Group	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Group.scala	/^    throw new UnsupportedOperationException("class Group does not support method 'namespace'")$/;"	c
Group	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Group.scala	/^case class Group(val nodes: Seq[Node]) extends Node {$/;"	c
Group	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Group.scala	/^case class Group(val nodes: Seq[Node]) extends Node {$/;"	m
GroupId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GroupId(groupId: Long) extends FacebookParam("gid", groupId) with GetGroupMembersParam$/;"	c
GroupId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GroupId(groupId: Long) extends FacebookParam("gid", groupId) with GetGroupMembersParam$/;"	m
GroupIds	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GroupIds(groupIds: Long*) extends FacebookParam("gids", groupIds.mkString(",")) with GetGroupsParam$/;"	c
GroupIds	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class GroupIds(groupIds: Long*) extends FacebookParam("gids", groupIds.mkString(",")) with GetGroupsParam$/;"	m
H2Driver	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^object H2Driver extends DriverType("H2") {$/;"	o
H2MemoryProvider	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^  object H2MemoryProvider extends Provider with DbSetup {$/;"	o
H2Provider	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^  object H2Provider extends Provider with FileDbSetup {$/;"	o
HMAC_SHA1	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  val HMAC_SHA1 = "HMAC-SHA1"$/;"	V
HMAC_SHA1	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^class HMAC_SHA1(accessor: OAuthAccessor) extends OAuthSignatureMethod(accessor) {$/;"	c
HMAC_SHA1	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^object HMAC_SHA1 extends OAuthSignatureMethodBuilder {$/;"	o
HTML	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class HTML(tag : String, elems : List[Textile], attrs : List[Attribute]) extends ATextile(elems, attrs) {$/;"	c
HTML	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class HTML(tag : String, elems : List[Textile], attrs : List[Attribute]) extends ATextile(elems, attrs) {$/;"	m
HTML5	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/HTML5.scala	/^object HTML5 extends DispatchSnippet {$/;"	o
HTTPContext	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPContext.scala	/^trait HTTPContext {$/;"	t
HTTPCookie	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPCookie.scala	/^case class HTTPCookie(name: String,$/;"	c
HTTPCookie	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPCookie.scala	/^case class HTTPCookie(name: String,$/;"	m
HTTPCookie	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPCookie.scala	/^object HTTPCookie {$/;"	o
HTTPParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPParam.scala	/^case class HTTPParam(name: String, values: List[String])$/;"	c
HTTPParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPParam.scala	/^case class HTTPParam(name: String, values: List[String])$/;"	m
HTTPParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPParam.scala	/^object HTTPParam {$/;"	o
HTTPProvider	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPProvider.scala	/^trait HTTPProvider {$/;"	t
HTTPRequest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^trait HTTPRequest {$/;"	t
HTTPRequestServlet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^class HTTPRequestServlet(val req: HttpServletRequest) extends HTTPRequest {$/;"	c
HTTPResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPResponse.scala	/^trait HTTPResponse {$/;"	t
HTTPResponseServlet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPResponseServlet.scala	/^class HTTPResponseServlet(resp: HttpServletResponse) extends HTTPResponse {$/;"	c
HTTPS_SERVER_ADDR	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  val HTTPS_SERVER_ADDR = "https:\/\/" + FB_SERVER$/;"	V
HTTPS_SERVER_URL	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  val HTTPS_SERVER_URL = new URL(HTTPS_SERVER_ADDR)$/;"	V
HTTPServletContext	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletContext.scala	/^class HTTPServletContext(val ctx: ServletContext) extends HTTPContext {$/;"	c
HTTPServletSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletSession.scala	/^class HTTPServletSession(session: HttpSession) extends HTTPSession {$/;"	c
HTTPSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPSession.scala	/^trait HTTPSession {$/;"	t
HasCalcDefaultValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^trait HasCalcDefaultValue[T] {$/;"	t
HasControllerMethod	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def classHasControllerMethod(clz: Class[_], name: String): Boolean = {$/;"	c
HasControllerMethod	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      classHasControllerMethod(null, "readObject") must beFalse$/;"	c
HasControllerMethod	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^  "The classHasControllerMethod function" should {$/;"	c
HasKeyValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/HasKeyValue.scala	/^class HasKeyValue(key: String) {$/;"	c
HasKids	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^trait HasKids {$/;"	t
HasLogUnreadVal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^private[http] trait HasLogUnreadVal {$/;"	t
HasManyThrough	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/HasManyThrough.scala	/^class HasManyThrough[From <: KeyedMapper[ThroughType, From],$/;"	c
HasParams	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^trait HasParams {$/;"	t
HasTime	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  trait HasTime {$/;"	t
HashEntry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^trait HashEntry[A, E] {$/;"	t
HashMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^class HashMap[A, B] extends Map[A,B] with mutable.HashTable[A] {$/;"	c
HashMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^object HashMap {$/;"	o
HashMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/HashMap.scala	/^class HashMap[K, E](override val underlying: java.util.HashMap[K, E]) extends MapWrapper[K, E] {$/;"	c
HashMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashMap.scala	/^class HashMap[A, B] extends Map[A,B] with HashTable[A] with DefaultMapModel[A,B] {$/;"	c
HashMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashMap.scala	/^object HashMap {$/;"	o
HashSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashSet.scala	/^class HashSet[A] extends Set[A] with mutable.FlatHashTable[A] {$/;"	c
HashSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashSet.scala	/^object HashSet {$/;"	o
HashSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/HashSet.scala	/^class HashSet[A](override val underlying: java.util.HashSet[A]) extends SetWrapper[A] {$/;"	c
HashSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashSet.scala	/^class HashSet[A] extends Set[A] with FlatHashTable[A] {$/;"	c
HashSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashSet.scala	/^object HashSet {$/;"	o
HashTable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^trait HashTable[A] extends AnyRef {$/;"	t
Hashtable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Hashtable.scala	/^class Hashtable[K,E](override val underlying: java.util.Hashtable[K,E]) extends MapWrapper[K,E] {$/;"	c
HeadHelper	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HeadHelper.scala	/^object HeadHelper {$/;"	o
HeadRequest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^case object HeadRequest extends RequestType {$/;"	o
HeadTestSnippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/snippet/HeadTestSnippet.scala	/^class HeadTestSnippet {$/;"	c
Header	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Header(what : Int, elems : List[Textile], attrs : List[Attribute]) extends ATextile(elems, attrs) {$/;"	c
Header	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Header(what : Int, elems : List[Textile], attrs : List[Attribute]) extends ATextile(elems, attrs) {$/;"	m
HeaderStuff	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^trait HeaderStuff {$/;"	t
HedgeRHS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/grammar/HedgeRHS.scala	/^abstract class HedgeRHS$/;"	a
HedgeRHS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/grammar/HedgeRHS.scala	/^abstract class HedgeRHS$/;"	c
HelloWorld	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/snippet/HelloWorld.scala	/^class HelloWorld {$/;"	c
Helpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Helpers.scala	/^object Helpers extends TimeHelpers with StringHelpers with ListHelpers$/;"	o
HelpersSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/HelpersSpec.scala	/^object HelpersSpec extends Specification {$/;"	o
HelpersTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/HelpersSpec.scala	/^class HelpersTest extends Runner(HelpersSpec) with JUnit$/;"	c
Hidden	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case object Hidden extends AnyLocParam$/;"	o
Hide	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  class Hide(val uid: String, val time: Box[TimeSpan]) extends JsCmd with HasTime {$/;"	c
Hide	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  object Hide {$/;"	o
HideIfNoKids	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case object HideIfNoKids extends AnyLocParam$/;"	o
Hierarchy	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def classHierarchy(in: Class[_]): List[Class[_]] = {$/;"	c
Highschool	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object Highschool extends FacebookField("hs_info")$/;"	o
Hints	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^    override val typeHints = hints$/;"	T
Hints	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Serialization.scala	/^    override val typeHints = hints$/;"	T
History	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/History.scala	/^class History[A, B] extends AnyRef with Subscriber[A, B] with Collection[(B, A)] {$/;"	c
Hometown	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object Hometown extends FacebookField("hometown_location")$/;"	o
HtmlEntities	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^object HtmlEntities {$/;"	o
HtmlFixer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^trait HtmlFixer {$/;"	t
HtmlRenderer	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/HtmlRenderer.scala	/^object HtmlRenderer {$/;"	o
HttpAuthProtected	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class HttpAuthProtected(role: (Req) => Box[Role]) extends AnyLocParam {$/;"	c
HttpAuthProtected	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class HttpAuthProtected(role: (Req) => Box[Role]) extends AnyLocParam {$/;"	m
HttpAuthProtectedResourcePF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  type HttpAuthProtectedResourcePF = PartialFunction[Req, Box[Role]]$/;"	T
HttpAuthentication	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^trait HttpAuthentication {$/;"	t
HttpBasicAuthentication	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^case class HttpBasicAuthentication(realmName: String)(func: PartialFunction[(String, String, Req), Boolean]) extends HttpAuthentication {$/;"	c
HttpBasicAuthentication	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^case class HttpBasicAuthentication(realmName: String)(func: PartialFunction[(String, String, Req), Boolean]) extends HttpAuthentication {$/;"	m
HttpClientFactory	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^private object HttpClientFactory {$/;"	o
HttpDigestAuthentication	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^case class HttpDigestAuthentication(realmName: String)(func: PartialFunction[(String, Req, (String) => Boolean), Boolean]) extends HttpAuthentication {$/;"	c
HttpDigestAuthentication	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^case class HttpDigestAuthentication(realmName: String)(func: PartialFunction[(String, Req, (String) => Boolean), Boolean]) extends HttpAuthentication {$/;"	m
HttpHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^object HttpHelpers extends ListHelpers with StringHelpers$/;"	o
HttpHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^trait HttpHelpers { self: ListHelpers with StringHelpers  =>$/;"	t
HttpHelpersSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/HttpHelpersSpec.scala	/^object HttpHelpersSpec extends Specification with HttpHelpers with ListHelpers with StringHelpers {$/;"	o
HttpHelpersSpecTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/HttpHelpersSpec.scala	/^class HttpHelpersSpecTest extends _root_.org.specs.runner.JUnit4(HttpHelpersSpec)$/;"	c
HttpRequestMessage	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthMessage.scala	/^class HttpRequestMessage(req: Req) extends OAuthMessage(req.requestType,$/;"	c
HttpRequestMessage	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthMessage.scala	/^object HttpRequestMessage {$/;"	o
HttpResponse	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^class HttpResponse(override val baseUrl: String,$/;"	c
I18NCountry	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^  class I18NCountry extends Val {$/;"	c
I18NCountry	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^  def I18NCountry = new I18NCountry$/;"	f
I18NCountry	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/CountryField.scala	/^  class I18NCountry extends Val {$/;"	c
I18NCountry	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/CountryField.scala	/^  def I18NCountry = new I18NCountry$/;"	f
I18NGender	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  class I18NGender(id : Int, name: String) extends Val(id, name) {$/;"	c
IEEEremainder	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def IEEEremainder(x: Double, y: Double): Double = java.lang.Math.IEEEremainder(x, y)$/;"	f
IHaveValidatedThisSQL	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^case class IHaveValidatedThisSQL(who: String, date: String)$/;"	c
IHaveValidatedThisSQL	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^case class IHaveValidatedThisSQL(who: String, date: String)$/;"	m
ILAExecute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^trait ILAExecute {$/;"	t
IMPLIED	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case object IMPLIED extends DefaultDecl {$/;"	o
INT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static final int CHAR = 0, BYTE = 1, SHORT = 2, INT = 3, LONG = 4, FLOAT = 5, DOUBLE = 6, OTHER = 7;$/;"	f	class:BoxesRunTime	file:
INTO	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^         "SELECT " + tableName + "_sequence.nextval INTO :new." + columnName + " FROM DUAL; " +$/;"	V
INVISIBLE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  final val INVISIBLE  = "\\033[8m"$/;"	V
INode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^private case class INode[A <% Ordered[A],B](t1: GBTree[A,B],$/;"	c
INode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^private case class INode[A <% Ordered[A],B](t1: GBTree[A,B],$/;"	m
IPNPath	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  lazy val IPNPath = ipnPath$/;"	V
IPNRequest	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  protected case class IPNRequest(r: Req, cnt: Int, when: Long)$/;"	c
IPNRequest	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  protected case class IPNRequest(r: Req, cnt: Int, when: Long)$/;"	m
ITree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^private case class ITree[A <% Ordered[A],B](t: GBTree[A,B])$/;"	c
ITree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^private case class ITree[A <% Ordered[A],B](t: GBTree[A,B])$/;"	m
Id	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case object Id extends JsMethod {$/;"	o
IdPK	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^trait IdPK \/* extends BaseLongKeyedMapper *\/ {$/;"	t
Ident	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Ident(sym: Symbol) extends Tree$/;"	c
Ident	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Ident(sym: Symbol) extends Tree$/;"	m
Ident	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/testing/RegexTest.scala	/^case class Ident(s: String)$/;"	c
Ident	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/testing/RegexTest.scala	/^case class Ident(s: String)$/;"	m
Identifier	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/StdTokens.scala	/^  case class Identifier(chars: String) extends Token {$/;"	c
Identifier	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/StdTokens.scala	/^  case class Identifier(chars: String) extends Token {$/;"	m
IdentityHashMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/IdentityHashMap.scala	/^class IdentityHashMap[K, E](override val underlying : java.util.IdentityHashMap[K, E]) extends MapWrapper[K, E] {$/;"	c
IdentityTransformer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^class IdentityTransformer extends BasicTransformer {$/;"	c
If	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class If(test: () => Boolean, failMsg: FailMsg) extends AnyLocParam$/;"	c
If	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class If(test: () => Boolean, failMsg: FailMsg) extends AnyLocParam$/;"	m
If	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class If(condition: Tree, trueCase: Tree, falseCase: Tree) extends Tree$/;"	c
If	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class If(condition: Tree, trueCase: Tree, falseCase: Tree) extends Tree$/;"	m
IfValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class IfValue[T](test: Box[T] => Boolean, failMsg: FailMsg) extends LocParam[T]$/;"	c
IfValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class IfValue[T](test: Box[T] => Boolean, failMsg: FailMsg) extends LocParam[T]$/;"	m
Ignore	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Ignore.scala	/^object Ignore extends DispatchSnippet {$/;"	o
Ignore	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class Ignore[O <: Mapper[O]]() extends QueryParam[O]$/;"	c
Ignore	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class Ignore[O <: Mapper[O]]() extends QueryParam[O]$/;"	m
IllegalArgumentException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  type IllegalArgumentException        = java.lang.IllegalArgumentException$/;"	T
Image	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Image(url : String, alt : String, link : String, attrs : List[Attribute] ) extends ATextile(Nil, attrs) {$/;"	c
Image	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Image(url : String, alt : String, link : String, attrs : List[Attribute] ) extends ATextile(Nil, attrs) {$/;"	m
ImageHelpers	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-imaging/src/main/scala/net/liftweb/imaging/ImageHelpers.scala	/^object ImageHelpers { $/;"	o
ImmutableIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^object ImmutableIterator {$/;"	o
ImmutableIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^sealed abstract class ImmutableIterator[+A] {$/;"	a
ImmutableIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^sealed abstract class ImmutableIterator[+A] {$/;"	c
ImmutableMapAdaptor	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableMapAdaptor.scala	/^class ImmutableMapAdaptor[A, B](protected var imap: immutable.Map[A, B])$/;"	c
ImmutableSetAdaptor	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableSetAdaptor.scala	/^class ImmutableSetAdaptor[A](protected var set: immutable.Set[A]) extends Set[A] {$/;"	c
ImplicitConversions	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/ImplicitConversions.scala	/^trait ImplicitConversions { self: Parsers => $/;"	t
ImplicitConversions	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/ImplicitConversions.scala	/^trait ImplicitConversions { self: Parsers => $/;"	t
ImplicitMethodType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Type.scala	/^class ImplicitMethodType(formals: List[Type], restpe: Type)$/;"	c
Implicits	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^object Implicits extends Implicits$/;"	o
Implicits	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^trait Implicits {$/;"	t
In	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^object In {$/;"	o
InMemFileParamHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^class InMemFileParamHolder(override val name: String, override val mimeType: String,$/;"	c
InMemoryCache	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TemplateCache.scala	/^class InMemoryCache(templatesCount: Int) extends$/;"	c
InMemoryCache	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TemplateCache.scala	/^object InMemoryCache {$/;"	o
InMemoryResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^final case class InMemoryResponse(data: Array[Byte], headers: List[(String, String)], cookies: List[HTTPCookie], code: Int) extends BasicResponse {$/;"	c
InMemoryResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^final case class InMemoryResponse(data: Array[Byte], headers: List[(String, String)], cookies: List[HTTPCookie], code: Int) extends BasicResponse {$/;"	m
InProgressPayment	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val InProgressPayment = Value(14, "In-Progress")$/;"	V
InRaw	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class InRaw[TheType <:$/;"	c
InRaw	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class InRaw[TheType <:$/;"	m
InThing	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^sealed abstract class InThing[OuterType <: Mapper[OuterType]] extends QueryParam[OuterType] {$/;"	a
InThing	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^sealed abstract class InThing[OuterType <: Mapper[OuterType]] extends QueryParam[OuterType] {$/;"	c
Include	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Message.scala	/^case class Include[+I](elem: I) extends Message[I]$/;"	c
Include	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Message.scala	/^case class Include[+I](elem: I) extends Message[I]$/;"	m
Inclusion	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/Inclusion.scala	/^trait Inclusion[A <: AnyRef] {$/;"	t
Inclusive	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Range.scala	/^  class Inclusive(start: Int, end: Int, step: Int) extends Range(start, end, step) {$/;"	c
Index	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^case class Index[A <: Mapper[A]](indexColumns : IndexItem[A]*) extends BaseIndex[A](indexColumns : _*)$/;"	c
Index	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^case class Index[A <: Mapper[A]](indexColumns : IndexItem[A]*) extends BaseIndex[A](indexColumns : _*)$/;"	m
Index	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Location.scala	/^case class Index(n: Int) extends Location$/;"	c
Index	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Location.scala	/^case class Index(n: Int) extends Location$/;"	m
Index	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/Index.scala	/^abstract class Index[A] extends Function1[Node,A] {}$/;"	a
Index	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/Index.scala	/^abstract class Index[A] extends Function1[Node,A] {}$/;"	c
IndexField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^case class IndexField[A <: Mapper[A], T](field: MappedField[T, A]) extends IndexItem[A] {$/;"	c
IndexField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^case class IndexField[A <: Mapper[A], T](field: MappedField[T, A]) extends IndexItem[A] {$/;"	m
IndexItem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^abstract class IndexItem[A <: Mapper[A]] {$/;"	a
IndexItem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^abstract class IndexItem[A <: Mapper[A]] {$/;"	c
IndexOutOfBoundsException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  type IndexOutOfBoundsException       = java.lang.IndexOutOfBoundsException$/;"	T
IndexedField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^trait IndexedField[O] extends BaseIndexedField {$/;"	t
IndexedStorage	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/IndexedStorage.scala	/^class IndexedStorage[A](file:  File, index: Index[A]) \/\/@todo$/;"	c
Info	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    type Info = NodeSeq$/;"	T
Info	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  val Info = Value(13, "Info")$/;"	V
Info	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    type Info = String$/;"	T
Injector	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^trait Injector {$/;"	t
InnerType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^            type InnerType = A$/;"	T
InnerType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      type InnerType = InnerMapper$/;"	T
InnerType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  type InnerType <: Mapper[InnerType]$/;"	T
Input	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  type Input = Reader[Elem]$/;"	T
Input	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  type Input = Reader[Elem]$/;"	T
InsecureLiftView	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^trait InsecureLiftView$/;"	t
InsertTree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^protected abstract class InsertTree[A <% Ordered[A],B]() extends AnyRef {$/;"	a
InsertTree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^protected abstract class InsertTree[A <% Ordered[A],B]() extends AnyRef {$/;"	c
InstantiationException	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val InstantiationException = Value(6, "Exception During Snippet Instantiation")$/;"	V
Institution	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Institution.scala	/^class Institution extends LongKeyedMapper[Institution] with IdPK {$/;"	c
Institution	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Institution.scala	/^object Institution extends Institution with LongKeyedMetaMapper[Institution] with SafeSave[Institution]{$/;"	o
InstitutionSnippet	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/InstitutionSnippet.scala	/^class InstitutionSnippet {$/;"	c
IntBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class IntBindParam(name: String, value: Int) extends Tuple2[String, Int](name, value) with BindParam {$/;"	c
IntBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class IntBindParam(name: String, value: Int) extends Tuple2[String, Int](name, value) with BindParam {$/;"	m
IntDef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class IntDef(value:String) extends EntityDef {$/;"	c
IntDef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class IntDef(value:String) extends EntityDef {$/;"	m
IntField	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^trait IntField extends FieldIdentifier {$/;"	t
IntField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/IntField.scala	/^class IntField[OwnerType <: Record[OwnerType]](rec: OwnerType) extends NumericField[Int, OwnerType] {$/;"	c
IntMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^object IntMap{$/;"	o
IntMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^sealed abstract class IntMap[+T] extends scala.collection.immutable.Map[Int, T]{$/;"	a
IntMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^sealed abstract class IntMap[+T] extends scala.collection.immutable.Map[Int, T]{$/;"	c
IntMapEntryIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^private[immutable] class IntMapEntryIterator[V](it : IntMap[V]) extends IntMapIterator[V, (Int, V)](it){$/;"	c
IntMapIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^private[immutable] abstract class IntMapIterator[V, T](it : IntMap[V]) extends Iterator[T]{$/;"	a
IntMapIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^private[immutable] abstract class IntMapIterator[V, T](it : IntMap[V]) extends Iterator[T]{$/;"	c
IntMapKeyIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^private[immutable] class IntMapKeyIterator[V](it : IntMap[V]) extends IntMapIterator[V, Int](it){$/;"	c
IntMapUtils	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^private[immutable] object IntMapUtils{$/;"	o
IntMapValueIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^private[immutable] class IntMapValueIterator[V](it : IntMap[V]) extends IntMapIterator[V, V](it){$/;"	c
IntRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/IntRef.java	/^    public IntRef(int elem) { this.elem = elem; }$/;"	m	class:IntRef
IntRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/IntRef.java	/^public class IntRef implements java.io.Serializable {$/;"	c
IntTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  val IntTag = ".Int"$/;"	V
IntVal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case class IntVal(value: BigInt) extends Token$/;"	c
IntVal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case class IntVal(value: BigInt) extends Token$/;"	m
Integer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  @deprecated type Integer = java.lang.Integer$/;"	T
InterestedIn	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object InterestedIn extends FacebookField("meeting_sex")$/;"	o
Interests	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object Interests extends FacebookField("interests")$/;"	o
InternalServerErrorResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class InternalServerErrorResponse() extends LiftResponse with HeaderStuff {$/;"	c
InternalServerErrorResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class InternalServerErrorResponse() extends LiftResponse with HeaderStuff {$/;"	m
Ints	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  case class Ints(x: List[List[Int]])$/;"	c
Ints	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  case class Ints(x: List[List[Int]])$/;"	m
Inx	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^    if (classInx > 0 && methInx < 0)$/;"	c
IoHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/IoHelpers.scala	/^object IoHelpers extends IoHelpers$/;"	o
IoHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/IoHelpers.scala	/^trait IoHelpers {$/;"	t
IsElem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^private[mapper] object IsElem {$/;"	o
IsNotNull	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  val IsNotNull = Value(8, "IS NOT NULL")$/;"	V
IsNull	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  val IsNull = Value(7, "IS NULL")$/;"	V
Item	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^class Item(val name: String, val resetDB: Boolean, val func: Box[() => Any], val forkCnt: Int, forkFunc: Box[Int => Any]) {$/;"	c
Item	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^object Item {$/;"	o
Item	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  class Item$/;"	c
ItemList	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  lazy val ItemList: List[MenuItem] =$/;"	V
ItemsList	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^trait ItemsList[T <: Mapper[T]] {$/;"	t
ItemsListEditor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^trait ItemsListEditor[T<:Mapper[T]] {$/;"	t
Iterable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^object Iterable {$/;"	o
Iterable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^trait Iterable[+A] {$/;"	t
IterableProxy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^trait IterableProxy[+A] extends Iterable[A] with Proxy {$/;"	t
IterableWrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/IterableWrapper.scala	/^trait IterableWrapper[A] extends MutableIterable[A] {$/;"	t
Iterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^object Iterator {$/;"	o
Iterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^trait Iterator[+A] {$/;"	t
IteratorWrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^  class IteratorWrapper(underlying : java.util.ListIterator[A]) extends MutableIterator.Wrapper[A](underlying) with BufferIterator[Int,A] {$/;"	c
IteratorWrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^  class IteratorWrapper extends MutableIterator[Tuple2[K,E]] {$/;"	c
JArray	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  case class JArray(arr: List[JValue]) extends JValue {$/;"	c
JArray	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  case class JArray(arr: List[JValue]) extends JValue {$/;"	m
JBool	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  case class JBool(value: Boolean) extends JValue {$/;"	c
JBool	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  case class JBool(value: Boolean) extends JValue {$/;"	m
JDBCFieldFlavor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^trait JDBCFieldFlavor[MyType] {$/;"	t
JDouble	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  case class JDouble(num: Double) extends JValue {$/;"	c
JDouble	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  case class JDouble(num: Double) extends JValue {$/;"	m
JE	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^object JE {$/;"	o
JField	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  case class JField(name: String, value: JValue) extends JValue {$/;"	c
JField	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  case class JField(name: String, value: JValue) extends JValue {$/;"	m
JInt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  case class JInt(num: BigInt) extends JValue {$/;"	c
JInt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  case class JInt(num: BigInt) extends JValue {$/;"	m
JNothing	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  case object JNothing extends JValue {$/;"	o
JNull	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  case object JNull extends JValue {$/;"	o
JObject	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  case class JObject(obj: List[JField]) extends JValue {$/;"	c
JObject	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  case class JObject(obj: List[JField]) extends JValue {$/;"	m
JObject	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^  private type JObject = java.lang.Object$/;"	T
JPA_PERSISTENT_UNIT	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^  val JPA_PERSISTENT_UNIT = "LiftPersistenceUnit"$/;"	V
JQueryArtifacts	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JQueryArtifacts.scala	/^object JQueryArtifacts extends JSArtifacts {$/;"	o
JQueryLeft	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^trait JQueryLeft {$/;"	t
JQueryRight	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^trait JQueryRight {$/;"	t
JQueryVersion	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  object JQueryVersion extends Enumeration("1.3.2", "1.4.1") {$/;"	o
JSArtifacts	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JSArtifacts.scala	/^trait JSArtifacts {$/;"	t
JSON	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/JSON.scala	/^object JSON extends Parser {$/;"	o
JSONFormat	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object JSONFormat extends FacebookParam("format", "JSON") with UniversalParam$/;"	o
JSONParser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^object JSONParser extends SafeSeqParser with ImplicitConversions {$/;"	o
JSONSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/JSONSpec.scala	/^object JSONSpec extends Specification {$/;"	o
JSONSpecTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/JSONSpec.scala	/^class JSONSpecTest extends Runner(JSONSpec) with Console with JUnit$/;"	c
JString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  case class JString(s: String) extends JValue {$/;"	c
JString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  case class JString(s: String) extends JValue {$/;"	m
JTA_TRANSACTION_TIMEOUT	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/atomikos/AtomikosTransactionService.scala	/^  val JTA_TRANSACTION_TIMEOUT = 60$/;"	V
JValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  sealed abstract class JValue extends Merge.Mergeable with Diff.Diffable {$/;"	a
JValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  sealed abstract class JValue extends Merge.Mergeable with Diff.Diffable {$/;"	c
JValueGen	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JValueGen.scala	/^trait JValueGen {$/;"	t
JavaMapAdaptor	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^@deprecated class JavaMapAdaptor[A, B](jmap: java.util.Map[A, B]) extends Map[A, B] {$/;"	c
JavaScriptResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class JavaScriptResponse(js: JsCmd, headers: List[(String, String)], cookies: List[HTTPCookie], code: Int) extends LiftResponse {$/;"	c
JavaScriptResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class JavaScriptResponse(js: JsCmd, headers: List[(String, String)], cookies: List[HTTPCookie], code: Int) extends LiftResponse {$/;"	m
JavaScriptResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^object JavaScriptResponse {$/;"	o
JavaSetAdaptor	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaSetAdaptor.scala	/^@deprecated class JavaSetAdaptor[A](jset: java.util.Set[A]) extends Set[A] {$/;"	c
JavaTokenParsers	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/JavaTokenParsers.scala	/^trait JavaTokenParsers extends RegexParsers {$/;"	t
Jetty6AsyncProvider	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty6AsyncProvider.scala	/^class Jetty6AsyncProvider(req: HTTPRequest) extends ServletAsyncProvider {$/;"	c
Jetty7AsyncProvider	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty7AsyncProvider.scala	/^class Jetty7AsyncProvider(req: HTTPRequest) extends ServletAsyncProvider {$/;"	c
JettyTestServer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/JettyTestServer.scala	/^object JettyTestServer {$/;"	o
Join	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/jolib.scala	/^  class Join {$/;"	c
JoinType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^            type JoinType = FT$/;"	T
JoinType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      type JoinType = JoinTypeA$/;"	T
Jq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class Jq(query: JsExp) extends JsExp with JQueryLeft {$/;"	c
Jq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class Jq(query: JsExp) extends JsExp with JQueryLeft {$/;"	m
JqAppend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqAppend(content: NodeSeq) extends JsExp with JQueryRight with JQueryLeft {$/;"	c
JqAppend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqAppend(content: NodeSeq) extends JsExp with JQueryRight with JQueryLeft {$/;"	m
JqAppendTo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqAppendTo(content: NodeSeq) extends JsExp with JQueryRight with JQueryLeft {$/;"	c
JqAppendTo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqAppendTo(content: NodeSeq) extends JsExp with JQueryRight with JQueryLeft {$/;"	m
JqAttr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqAttr(key: String, value: JsExp) extends JsExp with JQueryRight with JQueryLeft {$/;"	c
JqAttr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqAttr(key: String, value: JsExp) extends JsExp with JQueryRight with JQueryLeft {$/;"	m
JqClick	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqClick(exp: JsExp) extends JsExp with JQueryLeft with JQueryRight {$/;"	c
JqClick	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqClick(exp: JsExp) extends JsExp with JQueryLeft with JQueryRight {$/;"	m
JqCss	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  object JqCss {$/;"	o
JqDoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case object JqDoc extends JsExp with JQueryLeft {$/;"	o
JqEmptyAfter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqEmptyAfter(content: NodeSeq) extends JsExp with JQueryRight with JQueryLeft {$/;"	c
JqEmptyAfter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqEmptyAfter(content: NodeSeq) extends JsExp with JQueryRight with JQueryLeft {$/;"	m
JqGetAttr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqGetAttr(key: String) extends JsExp with JQueryRight with JQueryLeft {$/;"	c
JqGetAttr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqGetAttr(key: String) extends JsExp with JQueryRight with JQueryLeft {$/;"	m
JqHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  object JqHtml {$/;"	o
JqId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqId(id: JsExp) extends JsExp with JQueryLeft {$/;"	c
JqId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqId(id: JsExp) extends JsExp with JQueryLeft {$/;"	m
JqJE	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^object JqJE {$/;"	o
JqJsCmds	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^object JqJsCmds {$/;"	o
JqKeypress	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqKeypress(what: (Char, JsCmd)*) extends JsExp with JQueryRight {$/;"	c
JqKeypress	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqKeypress(what: (Char, JsCmd)*) extends JsExp with JQueryRight {$/;"	m
JqOnLoad	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqOnLoad(cmd: JsCmd) extends JsCmd {$/;"	c
JqOnLoad	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqOnLoad(cmd: JsCmd) extends JsCmd {$/;"	m
JqPrepend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqPrepend(content: NodeSeq) extends JsExp with JQueryRight with JQueryLeft {$/;"	c
JqPrepend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqPrepend(content: NodeSeq) extends JsExp with JQueryRight with JQueryLeft {$/;"	m
JqPrependTo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqPrependTo(content: NodeSeq) extends JsExp with JQueryRight with JQueryLeft {$/;"	c
JqPrependTo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqPrependTo(content: NodeSeq) extends JsExp with JQueryRight with JQueryLeft {$/;"	m
JqRemove	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqRemove() extends JsExp with JQueryRight with JQueryLeft {$/;"	c
JqRemove	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqRemove() extends JsExp with JQueryRight with JQueryLeft {$/;"	m
JqSHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/jquery/JqSHtml.scala	/^object JqSHtml {$/;"	o
JqScrollToBottom	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case object JqScrollToBottom extends JsExp with JQueryRight with JQueryLeft {$/;"	o
JqSerialize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case object JqSerialize extends JsExp with JQueryRight {$/;"	o
JqSetHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqSetHtml(uid: String, content: NodeSeq) extends JsCmd {$/;"	c
JqSetHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqSetHtml(uid: String, content: NodeSeq) extends JsCmd {$/;"	m
JqTabs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  object JqTabs {$/;"	o
JqTabsClick	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  object JqTabsClick {$/;"	o
JqTabsSelected	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case object JqTabsSelected extends JsExp with JQueryRight {$/;"	o
JqText	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  object JqText {$/;"	o
JsArray	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsArray(in: JsExp*) extends JsExp {$/;"	c
JsArray	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsArray(in: JsExp*) extends JsExp {$/;"	m
JsBreak	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case object JsBreak extends JsCmd {$/;"	o
JsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^trait JsCmd extends HtmlFixer with ToJsCmd {$/;"	t
JsCmds	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^object JsCmds {$/;"	o
JsCommands	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^class JsCommands(val reverseList: List[JsCmd]) {$/;"	c
JsCommands	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^object JsCommands {$/;"	o
JsContext	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^case class JsContext(override val success: Box[String], override val failure: Box[String]) extends AjaxContext(success, failure, AjaxType.JavaScript)$/;"	c
JsContext	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^case class JsContext(override val success: Box[String], override val failure: Box[String]) extends AjaxContext(success, failure, AjaxType.JavaScript)$/;"	m
JsContinue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case object JsContinue extends JsCmd {$/;"	o
JsCrVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsCrVar(name: String, right: JsExp) extends JsCmd {$/;"	c
JsCrVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsCrVar(name: String, right: JsExp) extends JsCmd {$/;"	m
JsDelta	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class JsDelta(override val when: Long, js: JsCmd) extends Delta(when)$/;"	c
JsDelta	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class JsDelta(override val when: Long, js: JsCmd) extends Delta(when)$/;"	m
JsDoWhile	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsDoWhile(body: JsExp, condition: JsExp) extends JsCmd {$/;"	c
JsDoWhile	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsDoWhile(body: JsExp, condition: JsExp) extends JsCmd {$/;"	m
JsEq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsEq(left: JsExp, right: JsExp) extends JsExp {$/;"	c
JsEq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsEq(left: JsExp, right: JsExp) extends JsExp {$/;"	m
JsExp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^trait JsExp extends SpecialNode with HtmlFixer with JxBase with ToJsCmd {$/;"	t
JsFalse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case object JsFalse extends JsExp {$/;"	o
JsFlot	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotAjax.scala	/^case class JsFlot(idPlaceholder: String,datas: List[FlotSerie], options: FlotOptions) extends JsCmd$/;"	c
JsFlot	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotAjax.scala	/^case class JsFlot(idPlaceholder: String,datas: List[FlotSerie], options: FlotOptions) extends JsCmd$/;"	m
JsFlotAppendData	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotAjax.scala	/^case class JsFlotAppendData(idPlaceholder: String,$/;"	c
JsFlotAppendData	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotAjax.scala	/^case class JsFlotAppendData(idPlaceholder: String,$/;"	m
JsFlotWithOverview	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotAjax.scala	/^case class JsFlotWithOverview(idPlaceholder: String,$/;"	c
JsFlotWithOverview	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotAjax.scala	/^case class JsFlotWithOverview(idPlaceholder: String,$/;"	m
JsFor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsFor(initialExp: JsExp, condition: JsExp, incrementExp: JsExp, body: JsExp) extends JsCmd {$/;"	c
JsFor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsFor(initialExp: JsExp, condition: JsExp, incrementExp: JsExp, body: JsExp) extends JsCmd {$/;"	m
JsForIn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsForIn(initialExp: JsExp, reference: String, body: JsCmd) extends JsCmd {$/;"	c
JsForIn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsForIn(initialExp: JsExp, reference: String, body: JsCmd) extends JsCmd {$/;"	m
JsFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsFunc(method: String, params: JsExp*) extends JsMethod {$/;"	c
JsFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsFunc(method: String, params: JsExp*) extends JsMethod {$/;"	m
JsGt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsGt(left: JsExp, right: JsExp) extends JsExp {$/;"	c
JsGt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsGt(left: JsExp, right: JsExp) extends JsExp {$/;"	m
JsGtEq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsGtEq(left: JsExp, right: JsExp) extends JsExp {$/;"	c
JsGtEq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsGtEq(left: JsExp, right: JsExp) extends JsExp {$/;"	m
JsHideId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  def JsHideId(what: String): JsCmd = LiftRules.jsArtifacts.hide(what).cmd$/;"	f
JsIf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case object JsIf {$/;"	o
JsLt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsLt(left: JsExp, right: JsExp) extends JsExp {$/;"	c
JsLt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsLt(left: JsExp, right: JsExp) extends JsExp {$/;"	m
JsLtEq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsLtEq(left: JsExp, right: JsExp) extends JsExp {$/;"	c
JsLtEq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsLtEq(left: JsExp, right: JsExp) extends JsExp {$/;"	m
JsMethod	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^trait JsMethod {$/;"	t
JsNotEQ	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsNotEQ(left: JsExp, right: JsExp) extends JsExp {$/;"	c
JsNotEQ	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsNotEQ(left: JsExp, right: JsExp) extends JsExp {$/;"	m
JsNull	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case object JsNull extends JsExp {$/;"	o
JsObj	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  object JsObj {$/;"	o
JsObj	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^trait JsObj extends JsExp {$/;"	t
JsRaw	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsRaw(rawJsCmd: String) extends JsExp {$/;"	c
JsRaw	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsRaw(rawJsCmd: String) extends JsExp {$/;"	m
JsReturn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  object JsReturn {$/;"	o
JsShowId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  def JsShowId(what: String): JsCmd = LiftRules.jsArtifacts.show(what).cmd$/;"	f
JsTrue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case object JsTrue extends JsExp {$/;"	o
JsTry	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsTry(what: JsCmd, alert: Boolean) extends JsCmd {$/;"	c
JsTry	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsTry(what: JsCmd, alert: Boolean) extends JsCmd {$/;"	m
JsVal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsVal(valueName: String) extends JsMethod {$/;"	c
JsVal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsVal(valueName: String) extends JsMethod {$/;"	m
JsVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsVar(varName: String, andThen: String*) extends JsExp {$/;"	c
JsVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsVar(varName: String, andThen: String*) extends JsExp {$/;"	m
JsWhile	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsWhile(condition: JsExp, body: JsExp) extends JsCmd {$/;"	c
JsWhile	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsWhile(condition: JsExp, body: JsExp) extends JsCmd {$/;"	m
JsWith	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsWith(reference: String, body: JsExp) extends JsCmd {$/;"	c
JsWith	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsWith(reference: String, body: JsExp) extends JsCmd {$/;"	m
JsonAST	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^object JsonAST {$/;"	o
JsonASTSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JsonASTTest.scala	/^object JsonASTSpec extends Specification with JValueGen with ScalaCheck {$/;"	o
JsonASTTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JsonASTTest.scala	/^class JsonASTTest extends Runner(JsonASTSpec) with JUnit$/;"	c
JsonAssoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  class JsonAssoc[A <% JValue](left: (String, A)) {$/;"	c
JsonBridge	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^  trait JsonBridge[KeyType, FieldType, KMType <: KeyedMapper[KeyType, KMType]] {$/;"	t
JsonCall	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^case class JsonCall(funcId: String) {$/;"	c
JsonCall	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^case class JsonCall(funcId: String) {$/;"	m
JsonCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^case class JsonCmd(command: String, target: String, params: Any,$/;"	c
JsonCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^case class JsonCmd(command: String, target: String, params: Any,$/;"	m
JsonComet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^trait JsonComet {$/;"	t
JsonContext	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^case class JsonContext(override val success: Box[String], override val failure: Box[String]) extends AjaxContext(success, failure, AjaxType.JSON)$/;"	c
JsonContext	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^case class JsonContext(override val success: Box[String], override val failure: Box[String]) extends AjaxContext(success, failure, AjaxType.JSON)$/;"	m
JsonDSL	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^object JsonDSL extends Implicits with Printer {$/;"	o
JsonHandler	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^abstract class JsonHandler {$/;"	a
JsonHandler	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^abstract class JsonHandler {$/;"	c
JsonListAssoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  class JsonListAssoc(left: List[JField]) {$/;"	c
JsonParser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^object JsonParser {$/;"	o
JsonResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class JsonResponse(json: JsExp, headers: List[(String, String)], cookies: List[HTTPCookie], code: Int) extends LiftResponse {$/;"	c
JsonResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class JsonResponse(json: JsExp, headers: List[(String, String)], cookies: List[HTTPCookie], code: Int) extends LiftResponse {$/;"	m
JsonResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^object JsonResponse extends HeaderStuff {$/;"	o
JsonSerialize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case object JsonSerialize extends JsExp with JQueryRight {$/;"	o
Jsonbench	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Jsonbench.scala	/^object Jsonbench extends Benchmark {$/;"	o
Jx	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^case class Jx(child: NodeSeq) extends Node with JxBase with JxYieldFunc {$/;"	c
Jx	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^case class Jx(child: NodeSeq) extends Node with JxBase with JxYieldFunc {$/;"	m
JxAttr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^case class JxAttr(in: JsCmd) extends Node with JxBase {$/;"	c
JxAttr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^case class JxAttr(in: JsCmd) extends Node with JxBase {$/;"	m
JxBase	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^trait JxBase {$/;"	t
JxBuiltSelect	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^  abstract class JxBuiltSelect[KeyType, FieldType, KMType <: KeyedMapper[KeyType, KMType]](val meta: KeyedMetaMapper[KeyType, KMType],$/;"	a
JxBuiltSelect	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^  abstract class JxBuiltSelect[KeyType, FieldType, KMType <: KeyedMapper[KeyType, KMType]](val meta: KeyedMetaMapper[KeyType, KMType],$/;"	c
JxCase	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^case class JxCase(toMatch: JsExp, toDo: NodeSeq)$/;"	c
JxCase	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^case class JxCase(toMatch: JsExp, toDo: NodeSeq)$/;"	m
JxCheckbox	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^  class JxCheckbox[KeyType, KMType <: KeyedMapper[KeyType, KMType]](val meta: KeyedMetaMapper[KeyType, KMType],$/;"	c
JxCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^case class JxCmd(in: JsCmd) extends Node with JxBase {$/;"	c
JxCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^case class JxCmd(in: JsCmd) extends Node with JxBase {$/;"	m
JxEnumSelect	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^  class JxEnumSelect[KeyType, Enum <: Enumeration, KMType <: KeyedMapper[KeyType, KMType]](val meta: KeyedMetaMapper[KeyType, KMType],$/;"	c
JxFuncAttr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^case class JxFuncAttr(in: JsCmd) extends Node with JxBase {$/;"	c
JxFuncAttr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^case class JxFuncAttr(in: JsCmd) extends Node with JxBase {$/;"	m
JxIf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^case class JxIf(toTest: JsExp, ifTrue: NodeSeq) extends Node with JxBase {$/;"	c
JxIf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^case class JxIf(toTest: JsExp, ifTrue: NodeSeq) extends Node with JxBase {$/;"	m
JxIfElse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^case class JxIfElse(toTest: JsExp, ifTrue: NodeSeq, ifFalse: NodeSeq) extends Node with JxBase {$/;"	c
JxIfElse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^case class JxIfElse(toTest: JsExp, ifTrue: NodeSeq, ifFalse: NodeSeq) extends Node with JxBase {$/;"	m
JxMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^case class JxMap(in: JsExp, what: JxYieldFunc) extends Node with JxBase {$/;"	c
JxMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^case class JxMap(in: JsExp, what: JxYieldFunc) extends Node with JxBase {$/;"	m
JxMatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^case class JxMatch(exp: JsExp, cases: JxCase*) extends Node with JxBase {$/;"	c
JxMatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^case class JxMatch(exp: JsExp, cases: JxCase*) extends Node with JxBase {$/;"	m
JxNodeBase	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^abstract class JxNodeBase extends Node with JxBase {$/;"	a
JxNodeBase	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^abstract class JxNodeBase extends Node with JxBase {$/;"	c
JxSelect	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^  abstract class JxSelect[KeyType, FieldType, KMType <: KeyedMapper[KeyType, KMType]](val meta: KeyedMetaMapper[KeyType, KMType],$/;"	a
JxSelect	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^  abstract class JxSelect[KeyType, FieldType, KMType <: KeyedMapper[KeyType, KMType]](val meta: KeyedMetaMapper[KeyType, KMType],$/;"	c
JxTextfield	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^  class JxTextfield[KeyType, KMType <: KeyedMapper[KeyType, KMType]](val meta: KeyedMetaMapper[KeyType, KMType],$/;"	c
JxYieldFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^trait JxYieldFunc {$/;"	t
K	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^  type K = TheKeyType$/;"	T
KeyDude	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  type KeyDude = T forSome {type T}$/;"	T
KeyField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^trait KeyField[MyType, OwnerType <: Record[OwnerType] with KeyedRecord[OwnerType, MyType]] extends Field[MyType, OwnerType] {$/;"	t
KeyObfuscator	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^class KeyObfuscator {$/;"	c
KeySet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^  protected class KeySet extends Set[K] {$/;"	c
KeySet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^  class KeySet extends super.KeySet with SetWrapper[K] with Set.Projection[K] {$/;"	c
KeySet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^  protected class KeySet extends super.KeySet with SortedSet.Projection[K] {$/;"	c
KeySet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMapWrapper.scala	/^  protected class KeySet extends super[SortedMap].KeySet with SetWrapper[K] with SortedSet.Projection[K] {$/;"	c
KeyType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  type KeyType = Long$/;"	T
KeyType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  type KeyType = String$/;"	T
KeyedCache	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/KeyedCache.scala	/^class KeyedCache[K, T](size: Int, loadFactor: Box[Float], cons: K => Box[T]) {$/;"	c
KeyedForeignType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  type KeyedForeignType <: KeyedMapper[KeyType, KeyedForeignType]$/;"	T
KeyedForeignType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  type KeyedForeignType = O$/;"	T
KeyedForeignType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  type KeyedForeignType = O$/;"	T
KeyedMapper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^trait KeyedMapper[KeyType, OwnerType<:KeyedMapper[KeyType, OwnerType]] extends Mapper[OwnerType] with BaseKeyedMapper {$/;"	t
KeyedMapperType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  type KeyedMapperType <: KeyedMapper[TheKeyType, MapperType]$/;"	T
KeyedMapperType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  type KeyedMapperType = OwnerType$/;"	T
KeyedMetaMapper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^trait KeyedMetaMapper[Type, A<:KeyedMapper[Type, A]] extends MetaMapper[A] with KeyedMapper[Type, A] {$/;"	t
KeyedRecord	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Record.scala	/^trait KeyedRecord[MyType <: KeyedRecord[MyType, KeyType], KeyType] extends Record[MyType] {$/;"	t
Keyword	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/StdTokens.scala	/^  case class Keyword(chars: String) extends Token {$/;"	c
Keyword	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/StdTokens.scala	/^  case class Keyword(chars: String) extends Token {$/;"	m
Kind	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^    sealed abstract class Kind$/;"	a
Kind	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^    sealed abstract class Kind$/;"	c
LAFuture	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LAFuture.scala	/^class LAFuture[T] \/*extends Future[T]*\/ {$/;"	c
LAPinger	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LAPinger.scala	/^object LAPinger {$/;"	o
LAScheduler	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^object LAScheduler {$/;"	o
LD	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LD.scala	/^object LD {$/;"	o
LF	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  private final val LF: Char = 0x0A$/;"	V
LFuncHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  object LFuncHolder {$/;"	o
LFuncHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private final class LFuncHolder(val func: List[String] => Any, val owner: Box[String]) extends AFuncHolder {$/;"	c
LINE_BITS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Position.scala	/^  final val LINE_BITS   = 20$/;"	V
LINE_MASK	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Position.scala	/^  final val LINE_MASK   = (1 << LINE_BITS) - 1$/;"	V
LONG	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static final int CHAR = 0, BYTE = 1, SHORT = 2, INT = 3, LONG = 4, FLOAT = 5, DOUBLE = 6, OTHER = 7;$/;"	f	class:BoxesRunTime	file:
LPAREN	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Tokens.scala	/^  final val LPAREN       = 3$/;"	V
LRU	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LRU.scala	/^class LRU[KeyType, ValueType](size: Int, loadFactor: Box[Float]) extends net.liftweb.common.LRUMap[KeyType, ValueType](size, loadFactor) {$/;"	c
LRUMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^class LRUMap[K, V](val maxSize: Int, loadFactor: Box[Float], expiredFunc: ((K, V) => Unit)*) extends LinkedListElem[K, V] {$/;"	c
LRUTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/LRUSpec.scala	/^class LRUTest extends Runner(LRUUnit) with JUnit$/;"	c
LRUUnit	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/LRUSpec.scala	/^object LRUUnit extends Specification {$/;"	o
LZ	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^class LZ[T](f: => T) {$/;"	c
LZ	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^object LZ {$/;"	o
Lab	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^	val Lab = Value("Lab") $/;"	V
Lab	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^class Lab extends BaseSource with BaseSourceTrait[Lab]{$/;"	c
Lab	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^object Lab extends Lab with MetaBaseSourceTrait[Lab] {$/;"	o
Label	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/WordExp.scala	/^  abstract class Label$/;"	a
Label	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/WordExp.scala	/^  abstract class Label$/;"	c
LabelSymbol	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^case class LabelSymbol(val name: String) extends Symbol {$/;"	c
LabelSymbol	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^case class LabelSymbol(val name: String) extends Symbol {$/;"	m
LabelledRHS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/grammar/TreeRHS.scala	/^case class LabelledRHS[A](label: A, hnt: Int) extends TreeRHS$/;"	c
LabelledRHS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/grammar/TreeRHS.scala	/^case class LabelledRHS[A](label: A, hnt: Int) extends TreeRHS$/;"	m
Lang	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Lang(lang : String) extends Attribute {$/;"	c
Lang	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Lang(lang : String) extends Attribute {$/;"	m
Language	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^  case class Language(name: String, version: Double)$/;"	c
Language	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^  case class Language(name: String, version: Double)$/;"	m
Language	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  case class Language(name: String, version: Double)$/;"	c
Language	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  case class Language(name: String, version: Double)$/;"	m
LastName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object LastName extends FacebookField("last_name")$/;"	o
LazyLoad	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^object LazyLoad extends DispatchSnippet {$/;"	o
Left	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^final case class Left[+A, +B](a: A) extends Either[A, B] { override def isLeft = true }$/;"	c
Left	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^final case class Left[+A, +B](a: A) extends Either[A, B] { override def isLeft = true }$/;"	m
LeftProjection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^  final case class LeftProjection[+A, +B](e: Either[A, B]) {$/;"	c
LeftProjection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^  final case class LeftProjection[+A, +B](e: Either[A, B]) {$/;"	m
Lense	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^  protected class Lense[F](f : E => F, g : F => E) extends jcl.Map.Projection[K,F] {$/;"	c
Lense	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^  protected class Lense[F](f : E => F, g : F => E) extends super.Lense[F](f,g) with SortedMap.Projection[K,F] {$/;"	c
Letter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/WordExp.scala	/^  case class Letter(a: _labelT) extends RegExp {$/;"	c
Letter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/WordExp.scala	/^  case class Letter(a: _labelT) extends RegExp {$/;"	m
Lexer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Lexer.scala	/^class Lexer extends StdLexical with ImplicitConversions {$/;"	c
Lexical	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/Lexical.scala	/^abstract class Lexical extends Scanners with Tokens {$/;"	a
Lexical	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/Lexical.scala	/^abstract class Lexical extends Scanners with Tokens {$/;"	c
Lexical	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/Lexical.scala	/^abstract class Lexical extends Scanners with Tokens {$/;"	a
Lexical	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/Lexical.scala	/^abstract class Lexical extends Scanners with Tokens {$/;"	c
LifecycleCallbacks	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^trait LifecycleCallbacks {$/;"	t
LifecycleCallbacks	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^trait LifecycleCallbacks {$/;"	t
LiftActor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^trait LiftActor extends SpecializedLiftActor[Any]$/;"	t
LiftBundleConfig	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^private case class LiftBundleConfig(manifestEntry: ManifestEntry) {$/;"	c
LiftBundleConfig	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^private case class LiftBundleConfig(manifestEntry: ManifestEntry) {$/;"	m
LiftBundleObserver	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^private object LiftBundleObserver extends BundleObserver[ManifestEntry] {$/;"	o
LiftBundles	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^  type LiftBundles = Map[Bundle, LiftBundleConfig]$/;"	T
LiftCometActor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^trait LiftCometActor extends TypedActor[Any, Any] with ForwardableActor[Any, Any] {$/;"	t
LiftConsole	/Users/Mads/Dev/logicOfScientificDiscovery/src/test/scala/LiftConsole.scala	/^object LiftConsole {$/;"	o
LiftException	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxSpec.scala	/^      case class LiftException(m: String) extends Exception$/;"	c
LiftException	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxSpec.scala	/^      case class LiftException(m: String) extends Exception$/;"	m
LiftFilter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^class LiftFilter extends ServletFilterProvider$/;"	c
LiftHttpContext	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^private case class LiftHttpContext(context: HttpContext) extends HttpContext {$/;"	c
LiftHttpContext	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^private case class LiftHttpContext(context: HttpContext) extends HttpContext {$/;"	m
LiftJson	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/project/build/src/LiftJson.scala	/^class LiftJson(info: ProjectInfo) extends DefaultProject(info) {$/;"	c
LiftLogLevels	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^object LiftLogLevels extends Enumeration {$/;"	o
LiftLogger	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^trait LiftLogger {$/;"	t
LiftMagicID	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletSession.scala	/^  private val LiftMagicID = "$lift_magic_session_thingy$"$/;"	V
LiftMerge	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^private[http] trait LiftMerge {$/;"	t
LiftRequestPF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  type LiftRequestPF = PartialFunction[Req, Boolean]$/;"	T
LiftResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^trait LiftResponse {$/;"	t
LiftRules	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^object LiftRules extends Factory with FormVendor {$/;"	o
LiftScreen	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^trait LiftScreen extends AbstractScreen with DispatchSnippet {$/;"	t
LiftScreenRules	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^object LiftScreenRules extends Factory with FormVendor {$/;"	o
LiftServlet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^class LiftServlet {$/;"	c
LiftSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^class LiftSession(private[http] val _contextPath: String, val uniqueId: String,$/;"	c
LiftSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^object LiftSession {$/;"	o
LiftTagPF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  type LiftTagPF = PartialFunction[(String, Elem, MetaData, NodeSeq, String), NodeSeq]$/;"	T
LiftTransactionManagerLookup	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/hibernate/LiftTransactionManagerLookup.scala	/^class LiftTransactionManagerLookup extends org.hibernate.transaction.TransactionManagerLookup {$/;"	c
LiftView	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^trait LiftView {$/;"	t
Like	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  val Like = Value(9, "LIKE")$/;"	V
Like	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^object Like {$/;"	o
Line	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Line(elems : List[Textile], attrs : List[Attribute]) extends ATextile(elems, attrs) {$/;"	c
Line	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Line(elems : List[Textile], attrs : List[Attribute]) extends ATextile(elems, attrs) {$/;"	m
Link	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  class Link[-T](val uriList: List[String], val matchHead_? : Boolean) extends PartialFunction[Req, Box[Boolean]] {$/;"	c
Link	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  object Link {$/;"	o
LinkText	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class LinkText[-T](text: T => NodeSeq)$/;"	c
LinkText	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class LinkText[-T](text: T => NodeSeq)$/;"	m
LinkedHashMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/LinkedHashMap.scala	/^class LinkedHashMap[K, E](override val underlying: java.util.LinkedHashMap[K, E]) extends MapWrapper[K, E] {$/;"	c
LinkedHashMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashMap.scala	/^class LinkedHashMap[A, B] extends Map[A,B] with HashTable[A] with DefaultMapModel[A,B] {$/;"	c
LinkedHashMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashMap.scala	/^object LinkedHashMap {$/;"	o
LinkedHashSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/LinkedHashSet.scala	/^class LinkedHashSet[A](override val underlying: java.util.LinkedHashSet[A]) extends SetWrapper[A] {$/;"	c
LinkedHashSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashSet.scala	/^class LinkedHashSet[A] extends Set[A] with FlatHashTable[A] {$/;"	c
LinkedHashSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashSet.scala	/^object LinkedHashSet {$/;"	o
LinkedList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/LinkedList.scala	/^class LinkedList[A](override val underlying : java.util.LinkedList[A]) extends BufferWrapper[A]  {$/;"	c
LinkedList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedList.scala	/^class LinkedList[A](var elem: A, var next: LinkedList[A])$/;"	c
LinkedList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/Channel.scala	/^  class LinkedList[a] {$/;"	c
LinkedListElem	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^private[common] trait LinkedListElem[T1, T2] {$/;"	t
LinkedListQueueCreator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^trait LinkedListQueueCreator {$/;"	t
List	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^object List {$/;"	o
List	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^sealed abstract class List[+A] extends Seq[A] with Product {$/;"	a
List	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^sealed abstract class List[+A] extends Seq[A] with Product {$/;"	c
ListBuffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^final class ListBuffer[A] extends Buffer[A] {$/;"	c
ListHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^object ListHelpers extends ListHelpers$/;"	o
ListHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^trait ListHelpers {$/;"	t
ListHelpersSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ListHelpersSpec.scala	/^object ListHelpersSpec extends Specification with ListHelpers {$/;"	o
ListHelpersSpecTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ListHelpersSpec.scala	/^class ListHelpersSpecTest extends JUnit4(ListHelpersSpec)$/;"	c
ListIsMappable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  implicit def ListIsMappable[t <% Mappable[t]](xs: List[t]): Mappable[List[t]] =$/;"	f
ListItems	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  lazy val ListItems = calcListItems$/;"	V
ListMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^class ListMap[A, +B] extends Map[A, B] {$/;"	c
ListMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^object ListMap {$/;"	o
ListMapish	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^  class ListMapish(val theList: Seq[(String, String)]) {$/;"	c
ListQueueCreator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^trait ListQueueCreator {$/;"	t
ListSerializeEnd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^private[scala] case object ListSerializeEnd$/;"	o
ListSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^class ListSet[A] extends AnyRef with Set[A] {$/;"	c
ListSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^object ListSet {$/;"	o
Listen	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class Listen(when: Long, uniqueId: ListenerId, action: AnswerRender => Unit) extends CometMessage$/;"	c
Listen	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class Listen(when: Long, uniqueId: ListenerId, action: AnswerRender => Unit) extends CometMessage$/;"	m
ListenerId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class ListenerId(id: Long)$/;"	c
ListenerId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class ListenerId(id: Long)$/;"	m
ListenerManager	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^trait ListenerManager {$/;"	t
Literal	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Literal(value: Any) extends Tree$/;"	c
Literal	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Literal(value: Any) extends Tree$/;"	m
LjAlt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  object LjAlt {$/;"	o
LjBuildIndex	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  object LjBuildIndex {$/;"	o
LjFilter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  object LjFilter extends MostLjFuncs {$/;"	o
LjFlatMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  object LjFlatMap extends MostLjFuncs {$/;"	o
LjFold	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  object LjFold {$/;"	o
LjForeach	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  object LjForeach extends MostLjFuncs {$/;"	o
LjMagicUpdate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  object LjMagicUpdate {$/;"	o
LjMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  object LjMap extends MostLjFuncs {$/;"	o
LjSort	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  object LjSort extends MostLjFuncs {$/;"	o
LjSwappable	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  object LjSwappable {$/;"	o
LoanWrapper	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LoanWrapper.scala	/^trait LoanWrapper {$/;"	t
Loc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Loc.scala	/^object Loc extends DispatchSnippet {$/;"	o
Loc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^object Loc {$/;"	o
Loc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^trait Loc[T] {$/;"	t
LocGroup	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class LocGroup(group: String*) extends AnyLocParam$/;"	c
LocGroup	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class LocGroup(group: String*) extends AnyLocParam$/;"	m
LocInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  trait LocInfo[X] extends AnyLocParam {$/;"	t
LocParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  sealed trait LocParam[-T] {$/;"	t
LocRewrite	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  type LocRewrite =  Box[PartialFunction[RewriteRequest, (RewriteResponse, T)]]$/;"	T
LocSnippets	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  trait LocSnippets extends PartialFunction[String, NodeSeq => NodeSeq] with AnyLocParam$/;"	t
LocalMethod	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^case class LocalMethod(owner: Symbol, name: String, tpe: Type) extends LocalSymbol$/;"	c
LocalMethod	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^case class LocalMethod(owner: Symbol, name: String, tpe: Type) extends LocalSymbol$/;"	m
LocalSymbol	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^abstract class LocalSymbol extends Symbol$/;"	a
LocalSymbol	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^abstract class LocalSymbol extends Symbol$/;"	c
LocaleField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/LocaleField.scala	/^class LocaleField[OwnerType <: Record[OwnerType]](rec: OwnerType) extends StringField(rec, 16) {$/;"	c
Location	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class Location(location: String) extends FacebookParam("location", location) with CreatePhotoAlbumParam$/;"	c
Location	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class Location(location: String) extends FacebookParam("location", location) with CreatePhotoAlbumParam$/;"	m
Location	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Location.scala	/^abstract class Location$/;"	a
Location	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Location.scala	/^abstract class Location$/;"	c
Location	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Location.scala	/^class Location(url: URL) {$/;"	c
Location	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Location.scala	/^object Location extends Location(null)$/;"	o
Lock	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/Lock.scala	/^class Lock {$/;"	c
Log	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^object Log extends LiftLogger {$/;"	o
Log4JLogger	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^class Log4JLogger(val logger: Logger) extends LiftLogger {$/;"	c
LogBoot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^object LogBoot {$/;"	o
LogFunc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  type LogFunc = (DBLog, Long) => Any$/;"	T
LogOutPath	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  lazy val LogOutPath = "logout"$/;"	V
Logged	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/logging/Logged.scala	/^trait Logged {$/;"	t
LoggedNodeFactory	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/LoggedNodeFactory.scala	/^abstract class LoggedNodeFactory[A <: Node] $/;"	a
LoggedNodeFactory	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/LoggedNodeFactory.scala	/^abstract class LoggedNodeFactory[A <: Node] $/;"	c
LoggedPreparedStatementHandler	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^  sealed private[DBLog] class LoggedPreparedStatementHandler (stmt : String, underlying : PreparedStatement) extends LoggedStatementHandler(underlying) {$/;"	c
LoggedStatementHandler	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^  sealed private[DBLog] class LoggedStatementHandler(underlying : Statement) extends InvocationHandler with DBLog {$/;"	c
LoggerDelegate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^  case class LoggerDelegate(var logger: LiftLogger) extends LiftLogger {$/;"	c
LoggerDelegate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^  case class LoggerDelegate(var logger: LiftLogger) extends LiftLogger {$/;"	m
LoggerDelegation	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^trait LoggerDelegation {$/;"	t
LogicOfScientificDiscovery	/Users/Mads/Dev/logicOfScientificDiscovery/project/build/LogicOfScientificDiscovery.scala	/^class LogicOfScientificDiscovery(info: ProjectInfo) extends DefaultWebProject(info)$/;"	c
LoginPath	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  lazy val LoginPath = "login"$/;"	V
LongBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class LongBindParam(name: String, value: Long) extends Tuple2[String, Long](name, value) with BindParam {$/;"	c
LongBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class LongBindParam(name: String, value: Long) extends Tuple2[String, Long](name, value) with BindParam {$/;"	m
LongCRUDify	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^trait LongCRUDify[CrudType <: KeyedMapper[Long, CrudType]] extends CRUDify[Long, CrudType] {$/;"	t
LongField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/LongField.scala	/^class LongField[OwnerType <: Record[OwnerType]](rec: OwnerType) extends NumericField[Long, OwnerType] {$/;"	c
LongKeyedMapper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^trait LongKeyedMapper[OwnerType <: LongKeyedMapper[OwnerType]] extends KeyedMapper[Long, OwnerType] with BaseLongKeyedMapper {$/;"	t
LongKeyedMetaMapper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^trait LongKeyedMetaMapper[A <: LongKeyedMapper[A]] extends KeyedMetaMapper[Long, A] { self: A => }$/;"	t
LongMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^object LongMap{$/;"	o
LongMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^sealed abstract class LongMap[+T] extends scala.collection.immutable.Map[Long, T]{$/;"	a
LongMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^sealed abstract class LongMap[+T] extends scala.collection.immutable.Map[Long, T]{$/;"	c
LongMapEntryIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^private[immutable] class LongMapEntryIterator[V](it : LongMap[V]) extends LongMapIterator[V, (Long, V)](it){$/;"	c
LongMapIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^private[immutable] abstract class LongMapIterator[V, T](it : LongMap[V]) extends Iterator[T]{$/;"	a
LongMapIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^private[immutable] abstract class LongMapIterator[V, T](it : LongMap[V]) extends Iterator[T]{$/;"	c
LongMapKeyIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^private[immutable] class LongMapKeyIterator[V](it : LongMap[V]) extends LongMapIterator[V, Long](it){$/;"	c
LongMapUtils	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^private[immutable] object LongMapUtils{$/;"	o
LongMapValueIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^private[immutable] class LongMapValueIterator[V](it : LongMap[V]) extends LongMapIterator[V, V](it){$/;"	c
LongMappedForeignMapper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^trait LongMappedForeignMapper[T<:Mapper[T],O<:KeyedMapper[Long,O]]$/;"	t
LongMappedMapper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^class LongMappedMapper[T<:Mapper[T], O<:KeyedMapper[Long,O]](theOwner: T, foreign: => KeyedMetaMapper[Long, O])$/;"	c
LongRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/LongRef.java	/^    public LongRef(long elem) { this.elem = elem; }$/;"	m	class:LongRef
LongRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/LongRef.java	/^public class LongRef implements java.io.Serializable {$/;"	c
LongTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  val LongTag = ".Long"$/;"	V
LookingFor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object LookingFor extends FacebookField("meeting_for")$/;"	o
Lotto	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/LottoExample.scala	/^  case class Lotto(id: Long, `winning-numbers`: List[Int], winners: List[Winner], $/;"	c
Lotto	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/LottoExample.scala	/^  case class Lotto(id: Long, `winning-numbers`: List[Int], winners: List[Winner], $/;"	m
LottoExample	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/LottoExample.scala	/^object LottoExample extends Specification {$/;"	o
LottoExampleTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/LottoExample.scala	/^class LottoExampleTest extends Runner(LottoExample) with JUnit$/;"	c
Lst	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  case class Lst(mapping: Mapping) extends Mapping$/;"	c
Lst	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  case class Lst(mapping: Mapping) extends Mapping$/;"	m
Lst	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Lst(elems : List[Textile]) extends ATextile(elems, Nil)$/;"	c
Lst	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Lst(elems : List[Textile]) extends ATextile(elems, Nil)$/;"	m
MAC_NAME	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^  private val MAC_NAME = "HmacSHA1"$/;"	V
MAGENTA	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  final val MAGENTA    = "\\033[35m"$/;"	V
MAGENTA_B	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  final val MAGENTA_B  = "\\033[45m"$/;"	V
MAX_BYTE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val MAX_BYTE   = java.lang.Byte.MAX_VALUE$/;"	V
MAX_CHAR	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val MAX_CHAR   = java.lang.Character.MAX_VALUE$/;"	V
MAX_DOUBLE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val MAX_DOUBLE = java.lang.Double.MAX_VALUE$/;"	V
MAX_FLOAT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val MAX_FLOAT  = java.lang.Float.MAX_VALUE$/;"	V
MAX_HIGH_SURROGATE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  private val MAX_HIGH_SURROGATE = '\\uDBFF'$/;"	V
MAX_INT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val MAX_INT    = java.lang.Integer.MAX_VALUE$/;"	V
MAX_LONG	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val MAX_LONG   = java.lang.Long.MAX_VALUE$/;"	V
MAX_LOW_SURROGATE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  private val MAX_LOW_SURROGATE = '\\uDFFF'$/;"	V
MAX_SHORT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val MAX_SHORT  = java.lang.Short.MAX_VALUE$/;"	V
MAX_SURROGATE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  private val MAX_SURROGATE = MAX_LOW_SURROGATE$/;"	V
MAX_TIMESTAMP_AGE_MSEC	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthValidator.scala	/^  val MAX_TIMESTAMP_AGE_MSEC = 5 * 60 * 1000$/;"	V
MAX_TTL	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  def MAX_TTL = new java.util.Date(3000000000000L)$/;"	f
MAX_VERSION	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthValidator.scala	/^  val MAX_VERSION = 1.0$/;"	V
MD5	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^case object MD5 extends AuthenticationAlgorithm {$/;"	o
MD5Session	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^case object MD5Session extends AuthenticationAlgorithm {$/;"	o
MIN_BYTE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val MIN_BYTE   = java.lang.Byte.MIN_VALUE$/;"	V
MIN_CHAR	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val MIN_CHAR   = java.lang.Character.MIN_VALUE$/;"	V
MIN_DOUBLE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val MIN_DOUBLE = -java.lang.Double.MAX_VALUE$/;"	V
MIN_FLOAT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val MIN_FLOAT  = -java.lang.Float.MAX_VALUE$/;"	V
MIN_HIGH_SURROGATE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  private val MIN_HIGH_SURROGATE = '\\uD800'$/;"	V
MIN_INT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val MIN_INT    = java.lang.Integer.MIN_VALUE$/;"	V
MIN_LONG	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val MIN_LONG   = java.lang.Long.MIN_VALUE$/;"	V
MIN_LOW_SURROGATE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  private val MIN_LOW_SURROGATE = '\\uDC00'$/;"	V
MIN_SHORT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val MIN_SHORT  = java.lang.Short.MIN_VALUE$/;"	V
MIN_SURROGATE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  private val MIN_SURROGATE = MIN_HIGH_SURROGATE$/;"	V
MIN_VERSION	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthValidator.scala	/^  val MIN_VERSION = 1.0$/;"	V
MIXED	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^case class MIXED(r: ContentModel.RegExp) extends DFAContentModel {$/;"	c
MIXED	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^case class MIXED(r: ContentModel.RegExp) extends DFAContentModel {$/;"	m
MOAuthConsumer	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^trait MOAuthConsumer[ModelType <: MOAuthConsumer[ModelType]] extends LongKeyedMapper[ModelType] with OAuthConsumer {$/;"	t
MOAuthConsumerMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^trait MOAuthConsumerMeta[ModelType <: MOAuthConsumer[ModelType]] extends MOAuthConsumer[ModelType] with$/;"	t
MOAuthConsumerType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^ type MOAuthConsumerType = TestMOAuthConsumer$/;"	T
MOAuthConsumerType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    type MOAuthConsumerType <: MOAuthConsumer[MOAuthConsumerType] with LongKeyedMapper[MOAuthConsumerType]$/;"	T
MOAuthNonce	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^  class MOAuthNonce extends LongKeyedMapper[MOAuthNonce] with OAuthNonce {$/;"	c
MOAuthNonce	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^  object MOAuthNonce extends MOAuthNonce with LongKeyedMetaMapper[MOAuthNonce] with OAuthNonceMeta {$/;"	o
MOAuthToken	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^  trait MOAuthToken[ModelType <: MOAuthToken[ModelType]] extends LongKeyedMapper[ModelType] with OAuthToken {$/;"	t
MOAuthTokenMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^  trait MOAuthTokenMeta[ModelType <: MOAuthToken[ModelType]] extends MOAuthToken[ModelType] with LongKeyedMetaMapper[ModelType] {$/;"	t
MOAuthTokenType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  type MOAuthTokenType <: MOAuthToken[MOAuthTokenType]$/;"	T
MOAuthTokenType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^ type MOAuthTokenType = TestMOAuthToken$/;"	T
MailBodyType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  sealed abstract class MailBodyType extends MailTypes$/;"	a
MailBodyType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  sealed abstract class MailBodyType extends MailTypes$/;"	c
MailBox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^class MailBox extends AnyRef with ListQueueCreator {$/;"	c
MailTypes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  sealed abstract class MailTypes$/;"	a
MailTypes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  sealed abstract class MailTypes$/;"	c
MailboxItem	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  private class MailboxItem(val item: T) {$/;"	c
Mailer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^object Mailer extends MailerImpl$/;"	o
MailerImpl	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^protected trait MailerImpl {$/;"	t
MailerSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/MailerSpec.scala	/^object MailerSpec extends Specification with MailerImpl {$/;"	o
MailerSpecTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/MailerSpec.scala	/^class MailerSpecTest extends Runner(MailerSpec) with JUnit$/;"	c
Main	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/Main.scala	/^object Main {$/;"	o
MakeValidationException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ValidationException.scala	/^object MakeValidationException {$/;"	o
Maker	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^object Maker {$/;"	o
Maker	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^trait Maker[T] {$/;"	t
MakerStack	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^class MakerStack[T](subMakers: PValueHolder[Maker[T]]*) extends StackableMaker[T] {$/;"	c
Male	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  val Male = new I18NGender(1, "male")$/;"	V
MalformedAttributeException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MalformedAttributeException.scala	/^case class MalformedAttributeException(msg: String) extends RuntimeException(msg)$/;"	c
MalformedAttributeException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MalformedAttributeException.scala	/^case class MalformedAttributeException(msg: String) extends RuntimeException(msg)$/;"	m
Mandatory	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  object Mandatory extends TransactionMonad {$/;"	o
Manifest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^object Manifest {$/;"	o
Manifest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^trait Manifest[T] {$/;"	t
ManyToMany	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^trait ManyToMany extends BaseKeyedMapper {$/;"	t
ManyToManySpecs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^object ManyToManySpecs extends Specification {$/;"	o
ManyToManySpecsAsTest	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^class ManyToManySpecsAsTest extends JUnit3(ManyToManySpecs)$/;"	c
ManyToManySpecsRunner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^object ManyToManySpecsRunner extends ConsoleRunner(ManyToManySpecs)$/;"	o
Map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  type Map[A, +B] = collection.immutable.Map[A, B]$/;"	T
Map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  val Map = collection.immutable.Map$/;"	V
Map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^object Map {$/;"	o
Map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^trait Map[A, +B] extends PartialFunction[A, B] with Collection[(A, B)] {$/;"	t
Map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^object Map {$/;"	o
Map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^trait Map[A, +B] extends collection.Map[A, B] {$/;"	t
Map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  protected class Map[B](f : A => B) extends super.Map[B](f) with Buffer.Projection[B] {$/;"	c
Map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^object Map {$/;"	o
Map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^trait Map[K,E] extends MutableIterable[Tuple2[K,E]] with scala.collection.mutable.Map[K,E] {$/;"	t
Map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^  protected class Map[B](f : A => B) extends MutableIterable.Projection[B] {$/;"	c
Map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterator.scala	/^  class Map[B](f : A => B) extends MutableIterator[B] {$/;"	c
Map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^  protected class Map[B](f : A => B) extends super.Map[B](f) with MutableSeq.Projection[B] {$/;"	c
Map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SeqIterator.scala	/^  class Map[B](f: A => B) extends super.Map[B](f) with SeqIterator[K,B] {$/;"	c
Map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^object Map {$/;"	o
Map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^trait Map[A, B] extends AnyRef$/;"	t
Map1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map1.scala	/^class Map1[A, +B](key1: A, value1: B) extends Map[A, B] {$/;"	c
Map2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map2.scala	/^class Map2[A, +B](key1: A, value1: B, key2: A, value2: B) extends Map[A, B] {$/;"	c
Map3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map3.scala	/^class Map3[A, +B](key1: A, value1: B, key2: A, value2: B, key3: A, value3: B) extends Map[A, B] {$/;"	c
Map4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map4.scala	/^class Map4[A, +B](key1: A, value1: B, key2: A, value2: B, key3: A, value3: B, key4: A, value4: B) extends Map[A, B] {$/;"	c
MapProjection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    protected class MapProjection[B](f : A => B) extends super.MapProjection(f) with Projection[B]$/;"	c
MapProjection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    protected class MapProjection[B](f : A => B) extends Projection[B] {$/;"	c
MapProjection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    protected class MapProjection[B](f : A => B) extends super.MapProjection[B](f) with Projection0[B] {$/;"	c
MapProxy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/MapProxy.scala	/^trait MapProxy[A, +B] extends Map[A, B] with CollectionProxy[(A, B)] {$/;"	t
MapProxy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MapProxy.scala	/^trait MapProxy[A, B] extends Map[A, B] with collection.MapProxy[A, B] {$/;"	t
MapTo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^  @deprecated class MapTo(key: A) {$/;"	c
MapTo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^  class MapTo(key: A) {$/;"	c
MapWrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^trait MapWrapper[K, E] extends jcl.Map[K, E] {$/;"	t
Mappable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  trait Mappable[T] {$/;"	t
Mappable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^trait Mappable {$/;"	t
MappedBinary	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^abstract class MappedBinary[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Array[Byte], T] {$/;"	a
MappedBinary	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^abstract class MappedBinary[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Array[Byte], T] {$/;"	c
MappedBirthYear	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^abstract class MappedBirthYear[T <: Mapper[T]](owner: T, minAge: Int) extends MappedInt[T](owner) {$/;"	a
MappedBirthYear	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^abstract class MappedBirthYear[T <: Mapper[T]](owner: T, minAge: Int) extends MappedInt[T](owner) {$/;"	c
MappedBoolean	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^abstract class MappedBoolean[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Boolean, T] {$/;"	a
MappedBoolean	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^abstract class MappedBoolean[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Boolean, T] {$/;"	c
MappedCountry	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^abstract class MappedCountry[T <: Mapper[T]](owner: T) extends MappedEnum[T, Countries.type](owner, Countries) {$/;"	a
MappedCountry	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^abstract class MappedCountry[T <: Mapper[T]](owner: T) extends MappedEnum[T, Countries.type](owner, Countries) {$/;"	c
MappedDate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^abstract class MappedDate[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Date, T] {$/;"	a
MappedDate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^abstract class MappedDate[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Date, T] {$/;"	c
MappedDateTime	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^abstract class MappedDateTime[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Date, T] {$/;"	a
MappedDateTime	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^abstract class MappedDateTime[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Date, T] {$/;"	c
MappedDecimal	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^abstract class MappedDecimal[T <: Mapper[T]] (val fieldOwner : T, val context : MathContext, val scale : Int) extends MappedField[BigDecimal,T] {$/;"	a
MappedDecimal	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^abstract class MappedDecimal[T <: Mapper[T]] (val fieldOwner : T, val context : MathContext, val scale : Int) extends MappedField[BigDecimal,T] {$/;"	c
MappedDouble	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^abstract class MappedDouble[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Double, T] {$/;"	a
MappedDouble	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^abstract class MappedDouble[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Double, T] {$/;"	c
MappedEmail	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedEmail.scala	/^abstract class MappedEmail[T<:Mapper[T]](owner: T, maxLen: Int) extends MappedString[T](owner, maxLen) {$/;"	a
MappedEmail	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedEmail.scala	/^abstract class MappedEmail[T<:Mapper[T]](owner: T, maxLen: Int) extends MappedString[T](owner, maxLen) {$/;"	c
MappedEmail	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedEmail.scala	/^object MappedEmail {$/;"	o
MappedEnum	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^abstract class MappedEnum[T<:Mapper[T], ENUM <: Enumeration](val fieldOwner: T, val enum: ENUM) extends MappedField[ENUM#Value, T] {$/;"	a
MappedEnum	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^abstract class MappedEnum[T<:Mapper[T], ENUM <: Enumeration](val fieldOwner: T, val enum: ENUM) extends MappedField[ENUM#Value, T] {$/;"	c
MappedEnumList	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^abstract class MappedEnumList[T<:Mapper[T], ENUM <: Enumeration](val fieldOwner: T, val enum: ENUM) extends MappedField[Seq[ENUM#Value], T] {$/;"	a
MappedEnumList	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^abstract class MappedEnumList[T<:Mapper[T], ENUM <: Enumeration](val fieldOwner: T, val enum: ENUM) extends MappedField[Seq[ENUM#Value], T] {$/;"	c
MappedFakeClob	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^abstract class MappedFakeClob[T<:Mapper[T]](val fieldOwner: T) extends MappedField[String, T] {$/;"	a
MappedFakeClob	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^abstract class MappedFakeClob[T<:Mapper[T]](val fieldOwner: T) extends MappedField[String, T] {$/;"	c
MappedField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^object MappedField {$/;"	o
MappedField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^trait MappedField[FieldType <: Any,OwnerType <: Mapper[OwnerType]] extends TypedField[FieldType] with BaseOwnedMappedField[OwnerType] with FieldIdentifier with PSettableValueHolder[FieldType] {$/;"	t
MappedForeignKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^trait MappedForeignKey[KeyType, MyOwner <: Mapper[MyOwner], Other <: KeyedMapper[KeyType, Other]] extends MappedField[KeyType, MyOwner] {$/;"	t
MappedGender	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^abstract class MappedGender[T <: Mapper[T]](owner: T) extends MappedEnum(owner, Genders) {$/;"	a
MappedGender	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^abstract class MappedGender[T <: Mapper[T]](owner: T) extends MappedEnum(owner, Genders) {$/;"	c
MappedInt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^abstract class MappedInt[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Int, T] {$/;"	a
MappedInt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^abstract class MappedInt[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Int, T] {$/;"	c
MappedIntIndex	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^abstract class MappedIntIndex[T<:Mapper[T]](owner : T) extends MappedInt[T](owner) with IndexedField[Int] {$/;"	a
MappedIntIndex	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^abstract class MappedIntIndex[T<:Mapper[T]](owner : T) extends MappedInt[T](owner) with IndexedField[Int] {$/;"	c
MappedLocale	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^abstract class MappedLocale[T <: Mapper[T]](owner: T) extends MappedString[T](owner, 16) {$/;"	a
MappedLocale	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^abstract class MappedLocale[T <: Mapper[T]](owner: T) extends MappedString[T](owner, 16) {$/;"	c
MappedLong	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^abstract class MappedLong[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Long, T] {$/;"	a
MappedLong	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^abstract class MappedLong[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Long, T] {$/;"	c
MappedLongForeignKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^abstract class MappedLongForeignKey[T<:Mapper[T],O<:KeyedMapper[Long, O]](theOwner: T, foreign: => KeyedMetaMapper[Long, O])$/;"	a
MappedLongForeignKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^abstract class MappedLongForeignKey[T<:Mapper[T],O<:KeyedMapper[Long, O]](theOwner: T, foreign: => KeyedMetaMapper[Long, O])$/;"	c
MappedLongIndex	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^abstract class MappedLongIndex[T<:Mapper[T]](theOwner: T) extends MappedLong[T](theOwner) with IndexedField[Long] {$/;"	a
MappedLongIndex	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^abstract class MappedLongIndex[T<:Mapper[T]](theOwner: T) extends MappedLong[T](theOwner) with IndexedField[Long] {$/;"	c
MappedManyToMany	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^  class MappedManyToMany[O<:Mapper[O], K2, T2 <: KeyedMapper[K2,T2]]($/;"	c
MappedNullableField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^trait MappedNullableField[NullableFieldType <: Any,OwnerType <: Mapper[OwnerType]] extends MappedField[Box[NullableFieldType], OwnerType] {$/;"	t
MappedNullableLong	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^abstract class MappedNullableLong[T<:Mapper[T]](val fieldOwner: T) extends MappedNullableField[Long, T] {$/;"	a
MappedNullableLong	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^abstract class MappedNullableLong[T<:Mapper[T]](val fieldOwner: T) extends MappedNullableField[Long, T] {$/;"	c
MappedOneToMany	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^  class MappedOneToMany[O <: Mapper[O]](meta: MetaMapper[O], foreign: MappedForeignKey[K,O,T], qp: QueryParam[O]*)$/;"	c
MappedOneToManyBase	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^  class MappedOneToManyBase[O <: Mapper[_]](val reloadFunc: ()=>Seq[O],$/;"	c
MappedPassword	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^abstract class MappedPassword[T<:Mapper[T]](val fieldOwner: T)$/;"	a
MappedPassword	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^abstract class MappedPassword[T<:Mapper[T]](val fieldOwner: T)$/;"	c
MappedPassword	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^object MappedPassword {$/;"	o
MappedPoliteString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^abstract class MappedPoliteString[T <: Mapper[T]](towner: T, theMaxLen: Int) extends MappedString[T](towner, theMaxLen) {$/;"	a
MappedPoliteString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^abstract class MappedPoliteString[T <: Mapper[T]](towner: T, theMaxLen: Int) extends MappedString[T](towner, theMaxLen) {$/;"	c
MappedPostalCode	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^abstract class MappedPostalCode[T <: Mapper[T]](owner: T, country: MappedCountry[T]) extends MappedString[T](owner, 32) {$/;"	a
MappedPostalCode	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^abstract class MappedPostalCode[T <: Mapper[T]](owner: T, country: MappedCountry[T]) extends MappedString[T](owner, 32) {$/;"	c
MappedString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^abstract class MappedString[T<:Mapper[T]](val fieldOwner: T,val maxLen: Int) extends MappedField[String, T] {$/;"	a
MappedString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^abstract class MappedString[T<:Mapper[T]](val fieldOwner: T,val maxLen: Int) extends MappedField[String, T] {$/;"	c
MappedStringForeignKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^abstract class MappedStringForeignKey[T<:Mapper[T],O<:KeyedMapper[String, O]](override val fieldOwner: T, foreign: => KeyedMetaMapper[String, O],override val maxLen: Int)$/;"	a
MappedStringForeignKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^abstract class MappedStringForeignKey[T<:Mapper[T],O<:KeyedMapper[String, O]](override val fieldOwner: T, foreign: => KeyedMetaMapper[String, O],override val maxLen: Int)$/;"	c
MappedStringIndex	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^abstract class MappedStringIndex[T<:Mapper[T]](override val fieldOwner: T, override val maxLen: Int) extends MappedUniqueId[T](fieldOwner, maxLen) with IndexedField[String] {$/;"	a
MappedStringIndex	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^abstract class MappedStringIndex[T<:Mapper[T]](override val fieldOwner: T, override val maxLen: Int) extends MappedUniqueId[T](fieldOwner, maxLen) with IndexedField[String] {$/;"	c
MappedText	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^abstract class MappedText[T<:Mapper[T]](val fieldOwner: T) extends MappedField[String, T] {$/;"	a
MappedText	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^abstract class MappedText[T<:Mapper[T]](val fieldOwner: T) extends MappedField[String, T] {$/;"	c
MappedTextarea	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTextarea.scala	/^abstract class MappedTextarea[T<:Mapper[T]](owner : T, maxLen: Int) extends MappedString[T](owner, maxLen) {$/;"	a
MappedTextarea	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTextarea.scala	/^abstract class MappedTextarea[T<:Mapper[T]](owner : T, maxLen: Int) extends MappedString[T](owner, maxLen) {$/;"	c
MappedTime	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^abstract class MappedTime[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Date, T] {$/;"	a
MappedTime	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^abstract class MappedTime[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Date, T] {$/;"	c
MappedTimeZone	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^abstract class MappedTimeZone[T <: Mapper[T]](owner: T) extends MappedString[T](owner, 32) {$/;"	a
MappedTimeZone	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^abstract class MappedTimeZone[T <: Mapper[T]](owner: T) extends MappedString[T](owner, 32) {$/;"	c
MappedTimeZone	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^object MappedTimeZone {$/;"	o
MappedUniqueId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^abstract class MappedUniqueId[T<:Mapper[T]](override val fieldOwner: T, override val maxLen: Int) extends MappedString[T](fieldOwner, maxLen) {$/;"	a
MappedUniqueId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^abstract class MappedUniqueId[T<:Mapper[T]](override val fieldOwner: T, override val maxLen: Int) extends MappedString[T](fieldOwner, maxLen) {$/;"	c
Mapper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^trait Mapper[A<:Mapper[A]] extends BaseMapper {$/;"	t
Mapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  trait Mapper { def apply[T <% Mappable[T]](x: T): T } \/* TODO: having type `Forall T. T => T' is too strict: $/;"	t
MapperException	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^class MapperException(msg: String) extends Exception(msg)$/;"	c
MapperRules	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^object MapperRules {$/;"	o
MapperSpecs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^object MapperSpecs extends Specification {$/;"	o
MapperSpecsAsTest	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^class MapperSpecsAsTest extends JUnit3(MapperSpecs)$/;"	c
MapperSpecsRunner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^object MapperSpecsRunner extends ConsoleRunner(MapperSpecs)$/;"	o
MapperType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  type MapperType <: Mapper[MapperType]$/;"	T
MapperType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  type MapperType = A$/;"	T
Mapping	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  sealed abstract class Mapping$/;"	a
Mapping	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  sealed abstract class Mapping$/;"	c
MappingException	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^class MappingException(msg: String, cause: Exception) extends Exception(msg, cause) {$/;"	c
MarkupDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^abstract class MarkupDecl extends Decl {$/;"	a
MarkupDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^abstract class MarkupDecl extends Decl {$/;"	c
MarkupHandler	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^abstract class MarkupHandler extends AnyRef with Logged {$/;"	a
MarkupHandler	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^abstract class MarkupHandler extends AnyRef with Logged {$/;"	c
MarkupParser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^trait MarkupParser extends AnyRef with TokenTests { self:  MarkupParser with MarkupHandler =>$/;"	t
Marshal	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Marshal.scala	/^object Marshal {$/;"	o
Match	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^  class Match(val source: java.lang.CharSequence, $/;"	c
Match	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^  object Match {$/;"	o
MatchData	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^  trait MatchData {$/;"	t
MatchError	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/MatchError.scala	/^final class MatchError(msg: String) extends RuntimeException(msg) {$/;"	c
MatchIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^  class MatchIterator(val source: java.lang.CharSequence, val regex: Regex, val groupNames: Seq[String]) $/;"	c
Math	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^object Math {$/;"	o
MaxDbDriver	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^object MaxDbDriver extends DriverType("MaxDB") {$/;"	o
MaxDbProvider	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^  object MaxDbProvider extends Provider with DbSetup {$/;"	o
MaxRetry	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val MaxRetry = 6$/;"	V
MaxRows	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class MaxRows[O<:Mapper[O]](max: Long) extends QueryParam[O]$/;"	c
MaxRows	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class MaxRows[O<:Mapper[O]](max: Long) extends QueryParam[O]$/;"	m
Meeting	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^case class Meeting(place: String, time: DateTime)$/;"	c
Meeting	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^case class Meeting(place: String, time: DateTime)$/;"	m
MeetingFor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object MeetingFor extends FacebookField("meeting_for")$/;"	o
MeetingSex	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object MeetingSex extends FacebookField("meeting_sex")$/;"	o
MegaProtoUser	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^trait MegaProtoUser[T <: MegaProtoUser[T]] extends ProtoUser[T] {$/;"	t
Memo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  private class Memo[A, R] {$/;"	c
MemoizeRunner	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/MemoizeTest.scala	/^object MemoizeRunner extends ConsoleRunner(MemoizeSpec)$/;"	o
MemoizeSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/MemoizeTest.scala	/^object MemoizeSpec extends Specification {$/;"	o
MemoizeTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/MemoizeTest.scala	/^class MemoizeTest extends JUnit3(MemoizeSpec)$/;"	c
MemoizeVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^trait MemoizeVar[K, V]  {$/;"	t
Menu	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^object Menu extends DispatchSnippet {$/;"	o
Menu	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Menu.scala	/^case class Menu(loc: Loc[_], kids: Menu*) extends HasKids {$/;"	c
Menu	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Menu.scala	/^case class Menu(loc: Loc[_], kids: Menu*) extends HasKids {$/;"	m
MenuItem	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^case class MenuItem(text: NodeSeq, uri: NodeSeq,  kids: Seq[MenuItem],$/;"	c
MenuItem	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^case class MenuItem(text: NodeSeq, uri: NodeSeq,  kids: Seq[MenuItem],$/;"	m
MenuItem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  case class MenuItem(name: String, path: List[String],$/;"	c
MenuItem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  case class MenuItem(name: String, path: List[String],$/;"	m
MenuSnippet	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/MenuSnippet.scala	/^class MenuSnippet {$/;"	c
MenuStyle	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/menu/MenuWidget.scala	/^object MenuStyle extends Enumeration("sf-menu", "sf-menu sf-vertical", "sf-menu sf-navbar") {$/;"	o
MenuWidget	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/menu/MenuWidget.scala	/^class MenuWidget(style: MenuStyle.Value, jsObj: JsObj, groups : List[String]) {$/;"	c
MenuWidget	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/menu/MenuWidget.scala	/^object MenuWidget {$/;"	o
Merge	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Merge.scala	/^object Merge {$/;"	o
MergeExamples	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/MergeExamples.scala	/^object MergeExamples extends Specification {$/;"	o
MergeExamplesTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/MergeExamples.scala	/^class MergeExamplesTest extends Runner(MergeExamples) with JUnit$/;"	c
Mergeable	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Merge.scala	/^  private[json] trait Mergeable { this: JValue =>$/;"	t
Message	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Message.scala	/^trait Message[+A]$/;"	t
Message	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^  type Message = AnyRef$/;"	T
MessageDispatcher	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^  class MessageDispatcher(dispatch: LiftActor) extends MessageListener {$/;"	c
MessageInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class MessageInfo(from: From, subject: Subject, info: List[MailTypes])$/;"	c
MessageInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class MessageInfo(from: From, subject: Subject, info: List[MailTypes])$/;"	m
MessageState	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class MessageState(override val msgs: (String, NoticeType.Value)*) extends RedirectState(Empty, msgs: _*)$/;"	c
MessageState	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class MessageState(override val msgs: (String, NoticeType.Value)*) extends RedirectState(Empty, msgs: _*)$/;"	m
MessageState	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^object MessageState {$/;"	o
Meta	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^private[json] object Meta {$/;"	o
Meta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  type Meta = MetaProtoStateMachine[MyType, StateType]$/;"	T
Meta	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^  class Meta(r1: _regexpT) extends RegExp {$/;"	c
MetaBaseSourceTrait	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^trait MetaBaseSourceTrait[T <: BaseSourceTrait[T]] extends LongKeyedMetaMapper[T] with SafeSave[T] {$/;"	t
MetaData	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^abstract class MetaData extends Collection[MetaData] {$/;"	a
MetaData	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^abstract class MetaData extends Collection[MetaData] {$/;"	c
MetaData	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^object MetaData {$/;"	o
MetaMapper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^trait MetaMapper[A<:Mapper[A]] extends BaseMetaMapper with Mapper[A] {$/;"	t
MetaMegaProtoUser	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^trait MetaMegaProtoUser[ModelType <: MegaProtoUser[ModelType]] extends KeyedMetaMapper[Long, ModelType] {$/;"	t
MetaOpenIDProtoUser	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^trait MetaOpenIDProtoUser[ModelType <: OpenIDProtoUser[ModelType]] extends MetaMegaProtoUser[ModelType] {$/;"	t
MetaProtoExtendedSession	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^trait MetaProtoExtendedSession[T <: ProtoExtendedSession[T]] extends$/;"	t
MetaProtoStateMachine	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^trait MetaProtoStateMachine [MyType <: ProtoStateMachine[MyType, StateType],$/;"	t
MetaProtoTag	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala	/^trait MetaProtoTag[ModelType <: ProtoTag[ModelType]] extends KeyedMetaMapper[Long, ModelType] {$/;"	t
MetaRecord	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^trait MetaRecord[BaseRecord <: Record[BaseRecord]] {$/;"	t
Method	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^case class Method(override val fullname: String, tpe: Type) extends GlobalSymbol(fullname)$/;"	c
Method	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^case class Method(override val fullname: String, tpe: Type) extends GlobalSymbol(fullname)$/;"	m
MethodNotAllowedResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class MethodNotAllowedResponse() extends LiftResponse with HeaderStuff {$/;"	c
MethodNotAllowedResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class MethodNotAllowedResponse() extends LiftResponse with HeaderStuff {$/;"	m
MethodNotFound	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val MethodNotFound = Value(4, "Method Not Found")$/;"	V
MethodType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Type.scala	/^case class MethodType(formals: List[Type], restpe: Type) extends Type$/;"	c
MethodType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Type.scala	/^case class MethodType(formals: List[Type], restpe: Type) extends Type$/;"	m
MixableMappedField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^trait MixableMappedField extends BaseField {$/;"	t
Mixer	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^class Mixer extends LongKeyedMapper[Mixer] with IdPK {$/;"	c
Mixer	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^object Mixer extends Mixer with LongKeyedMetaMapper[Mixer] {$/;"	o
MobileProfileMarkup	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class MobileProfileMarkup(markup: NodeSeq) extends FacebookParam("mobile_profile", markup) with SetFbmlParam$/;"	c
MobileProfileMarkup	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class MobileProfileMarkup(markup: NodeSeq) extends FacebookParam("mobile_profile", markup) with SetFbmlParam$/;"	m
MockFilterConfig	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^class MockFilterConfig(servletContext: ServletContext) extends FilterConfig {$/;"	c
MockHttpServletRequest	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^class MockHttpServletRequest extends HttpServletRequest {$/;"	c
MockHttpServletResponse	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^class MockHttpServletResponse(var writer: PrintWriter, var outputStream: ServletOutputStream)$/;"	c
MockHttpSession	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^class MockHttpSession extends HttpSession {$/;"	c
MockServletContext	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^class MockServletContext(var target: String) extends ServletContext {$/;"	c
MockServletInputStream	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^class MockServletInputStream(is: InputStream) extends ServletInputStream {$/;"	c
MockServletOutputStream	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^class MockServletOutputStream(os: ByteArrayOutputStream) extends ServletOutputStream {$/;"	c
ModalDialog	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  class ModalDialog(html: NodeSeq, css: Box[JsObj]) extends JsCmd {$/;"	c
ModalDialog	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  object ModalDialog {$/;"	o
ModelSnippet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/ModelView.scala	/^trait ModelSnippet[T <: Mapper[T]] extends StatefulSnippet {$/;"	t
ModelView	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/ModelView.scala	/^  class ModelView(e: T, snippet: ModelSnippet[T]) extends MV[T](e, snippet) {$/;"	c
ModelView	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/ModelView.scala	/^class ModelView[T <: Mapper[T]](var entity: T, val snippet: ModelSnippet[T]) {$/;"	c
MonadicCondition	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/MonadicConversions.scala	/^trait MonadicCondition {$/;"	t
MonadicConversions	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/MonadicConversions.scala	/^object MonadicConversions {$/;"	o
MonthViewMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/ViewMeta.scala	/^case class MonthViewMeta(firstDayOfWeek: Int, locale: Locale) extends ViewMeta(locale)$/;"	c
MonthViewMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/ViewMeta.scala	/^case class MonthViewMeta(firstDayOfWeek: Int, locale: Locale) extends ViewMeta(locale)$/;"	m
MostLjFuncs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  protected trait MostLjFuncs {$/;"	t
Movies	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object Movies extends FacebookField("movies")$/;"	o
Msg	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msg.scala	/^object Msg extends DispatchSnippet {$/;"	o
MsgErrorMeta	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msg.scala	/^object MsgErrorMeta extends SessionVar[HashMap[String, String]](new HashMap)$/;"	o
MsgNoticeMeta	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msg.scala	/^object MsgNoticeMeta extends SessionVar[HashMap[String, String]](new HashMap)$/;"	o
MsgSender	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  protected class MsgSender extends SpecializedLiftActor[MessageInfo] {$/;"	c
MsgWarningMeta	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msg.scala	/^object MsgWarningMeta extends SessionVar[HashMap[String, String]](new HashMap)$/;"	o
MsgWithResp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^private final case class MsgWithResp(msg: Any, future: LAFuture[Any])$/;"	c
MsgWithResp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^private final case class MsgWithResp(msg: Any, future: LAFuture[Any])$/;"	m
Msgs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msgs.scala	/^object Msgs extends DispatchSnippet {$/;"	o
MsgsErrorMeta	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msgs.scala	/^object MsgsErrorMeta extends SessionVar[Box[AjaxMessageMeta]](Empty)$/;"	o
MsgsNoticeMeta	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msgs.scala	/^object MsgsNoticeMeta extends SessionVar[Box[AjaxMessageMeta]](Empty)$/;"	o
MsgsWarningMeta	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msgs.scala	/^object MsgsWarningMeta extends SessionVar[Box[AjaxMessageMeta]](Empty)$/;"	o
MultiDim	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class MultiDim(ints: List[List[List[Int]]], names: List[List[Name]])$/;"	c
MultiDim	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class MultiDim(ints: List[List[List[Int]]], names: List[List[Name]])$/;"	m
MultiMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MultiMap.scala	/^trait MultiMap[A, B] extends Map[A, Set[B]] {$/;"	t
Music	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object Music extends FacebookField("music")$/;"	o
Mutable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^  trait Mutable[A] extends RandomAccessSeq[A] {$/;"	t
MutableIterable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^object MutableIterable {$/;"	o
MutableIterable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^trait MutableIterable[A] extends scala.Collection[A] {$/;"	t
MutableIterableProjection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^  trait MutableIterableProjection[A] extends MutableIterable.Projection[A];$/;"	t
MutableIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterator.scala	/^object MutableIterator {$/;"	o
MutableIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterator.scala	/^trait MutableIterator[A] extends Iterator[A] {$/;"	t
MutableList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MutableList.scala	/^trait MutableList[A] extends Seq[A] with PartialFunction[Int, A] {$/;"	t
MutableProjection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^  trait MutableProjection[A] extends Projection[A] with Mutable[A] {$/;"	t
MutableSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^object MutableSeq {$/;"	o
MutableSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^trait MutableSeq[A] extends Seq[A] with MutableIterable[A]  {$/;"	t
MutableSlice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^  private[scala] trait MutableSlice[A] extends MutableProjection[A] with Slice[A] {$/;"	t
MyClass	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ExternalSources.scala	/^    class MyClass extends Source {$/;"	c
MyElem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  type MyElem = ENUM#Value$/;"	T
MyNumber	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/snippet/DeferredSnippet.scala	/^  object MyNumber extends RequestVar(55)$/;"	o
MyOffsetPosition	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  private case class MyOffsetPosition(source: _root_.java.lang.CharSequence, offset: Int, index: Array[Int]) extends Position {$/;"	c
MyOffsetPosition	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  private case class MyOffsetPosition(source: _root_.java.lang.CharSequence, offset: Int, index: Array[Int]) extends Position {$/;"	m
MyReader	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  private class MyReader(source: Array[Char], offset: Int, index: Array[Int]) extends CharArrayReader(source, offset) {$/;"	c
MySqlDriver	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^object MySqlDriver extends DriverType("MySQL") {$/;"	o
MySqlProvider	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^  object MySqlProvider extends Provider with DbSetup {$/;"	o
MyType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  type MyType <: HasLogUnreadVal$/;"	T
MyType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  type MyType = RequestVar[_]$/;"	T
MyType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  type MyType = TransientRequestVar[_]$/;"	T
MyType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  type MyType = Seq[MyElem]$/;"	T
MyType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  type MyType = ThisType$/;"	T
MyUser	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^ class MyUser extends ProtoUser[MyUser] with OAuthUser {$/;"	c
MyUser	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^ object MyUser extends MyUser with KeyedMetaMapper[Long, MyUser]$/;"	o
MyWizard	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^  val MyWizard = new Wizard {$/;"	V
NA	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Location.scala	/^case object NA extends Location$/;"	o
NAME	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Tokens.scala	/^  final val NAME         = 1$/;"	V
NEG_INF_DOUBLE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val NEG_INF_DOUBLE = java.lang.Double.NEGATIVE_INFINITY$/;"	V
NEG_INF_FLOAT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val NEG_INF_FLOAT = java.lang.Float.NEGATIVE_INFINITY$/;"	V
NFuncHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  object NFuncHolder {$/;"	o
NFuncHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private final class NFuncHolder(val func: () => Any, val owner: Box[String]) extends AFuncHolder {$/;"	c
NONCE_USED	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^    val NONCE_USED = ("nonce_used", UNAUTHORIZED)$/;"	V
NONE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/LoggedNodeFactory.scala	/^  final val NONE  = 0$/;"	V
NOPOS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Position.scala	/^  final val NOPOS       = 0$/;"	V
NVP	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthMessage.scala	/^  val NVP = Pattern.compile("(\\\\S*)\\\\s*\\\\=\\\\s*\\"([^\\"]*)\\"")$/;"	V
NaN_DOUBLE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val NaN_DOUBLE = java.lang.Double.NaN$/;"	V
NaN_FLOAT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val NaN_FLOAT  = java.lang.Float.NaN$/;"	V
Name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class Name(name: String)$/;"	c
Name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class Name(name: String)$/;"	m
Name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsVar(varName: String, andThen: String*) extends JsExp {$/;"	v
Name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^                  JsRaw(varName + ".className = " + x.text.encJs).cmd &$/;"	c
Name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^              case cmd: JsCmd => val varName = "v" + Helpers.nextFuncName$/;"	v
Name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^      val varName = "v" + Helpers.nextFuncName$/;"	v
Name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^  def addAttrs(varName: String, attrs: List[MetaData]): JsCmd = attrs.map {$/;"	v
Name	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object Name extends FacebookField("name")$/;"	o
Name	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^        case 0 => if ((className ne null) && className.length > 0) "class" else null$/;"	c
Name	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^        case 0 => if ((className ne null) && className.length > 0) className else null$/;"	c
Name	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class ClassAndId(className : String, idName : String) extends Attribute {$/;"	c
Name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val Name = internal_dbTableName$/;"	V
Name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      className = className.substring(classInx + 1, className.length())$/;"	c
Name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^    methName.equals(className)$/;"	c
Name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^    val classInx = className.lastIndexOf(".")$/;"	c
Name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^    var className = clazz.getName()$/;"	c
Name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Location.scala	/^          loader.loadClass(className + "$")$/;"	c
Name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Location.scala	/^          loader.loadClass(className + "$class")$/;"	c
Name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Location.scala	/^        ccache(className) = clazz$/;"	c
Name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Location.scala	/^        val clazz = if (loader.loadClass(className).isInterface()) {$/;"	c
Name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Location.scala	/^    ccache.get(className) match {$/;"	c
Name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Location.scala	/^  def create(className: String) = new Code($/;"	c
NameElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/AbstractSyntax.scala	/^  trait NameElement extends Element {$/;"	t
NameElementIsMappable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  implicit def NameElementIsMappable(self: NameElement): Mappable[NameElement] = new Mappable[NameElement] {$/;"	f
NameParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class NameParam(name: String) extends FacebookParam("name", name) with CreatePhotoAlbumParam$/;"	c
NameParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class NameParam(name: String) extends FacebookParam("name", name) with CreatePhotoAlbumParam$/;"	m
NameTest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  case class  NameTest(label: String) extends Test; \/\/     "x \\ bar"$/;"	c
NameTest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  case class  NameTest(label: String) extends Test; \/\/     "x \\ bar"$/;"	m
NamedPF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/NamedPartialFunction.scala	/^class NamedPF[-A, +B](name: String, f: PartialFunction[A, B]) extends NamedPartialFunction[A, B] {$/;"	c
NamedPF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/NamedPartialFunction.scala	/^object NamedPF {$/;"	o
NamedPartialFunction	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/NamedPartialFunction.scala	/^trait NamedPartialFunction[-A, +B] extends PartialFunction[A, B] {$/;"	t
NamedType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Type.scala	/^case class NamedType(fullname: String) extends Type$/;"	c
NamedType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Type.scala	/^case class NamedType(fullname: String) extends Type$/;"	m
NamespaceBinding	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NamespaceBinding.scala	/^class NamespaceBinding(val prefix: String,$/;"	c
NeedsCopy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^  protected case class NeedsCopy(result: Seq[Node]) extends Throwable$/;"	c
NeedsCopy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^  protected case class NeedsCopy(result: Seq[Node]) extends Throwable$/;"	m
Never	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^private[http] object Never$/;"	o
Never	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  object Never extends TransactionMonad {$/;"	o
New	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  protected def New(sz: Int, t: aNode): This$/;"	f
New	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class New(sym: Tree) extends Tree$/;"	c
New	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class New(sym: Tree) extends Tree$/;"	m
NewChat	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class NewChat(chat: Chat)$/;"	c
NewChat	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class NewChat(chat: Chat)$/;"	m
NewRoster	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class NewRoster(r: Roster)$/;"	c
NewRoster	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class NewRoster(r: Roster)$/;"	m
Nil	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^case object Nil extends List[Nothing] {$/;"	o
Nil	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  private[immutable] case object Nil extends IntMap[Nothing]{$/;"	o
Nil	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  private[immutable] case object Nil extends LongMap[Nothing]{$/;"	o
Nil	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  private[collection] case class Nil[Key] extends AssocMap[Key, Nothing];$/;"	c
Nil	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  private[collection] case class Nil[Key] extends AssocMap[Key, Nothing];$/;"	m
NilPath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  object NilPath extends ParsePath(Nil, "", true, false)$/;"	o
NoAttributes	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  final def NoAttributes: MetaData = Null$/;"	f
NoAuthentication	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^object NoAuthentication extends HttpAuthentication {$/;"	o
NoBindingFactoryAdapter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/NoBindingFactoryAdapter.scala	/^class NoBindingFactoryAdapter extends FactoryAdapter with NodeFactory[Elem] {$/;"	c
NoCache	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TemplateCache.scala	/^object NoCache extends TemplateCache[(Locale, List[String]), NodeSeq] {$/;"	o
NoContentResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class NoContentResponse() extends LiftResponse with HeaderStuff {$/;"	c
NoContentResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class NoContentResponse() extends LiftResponse with HeaderStuff {$/;"	m
NoNameSpecified	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val NoNameSpecified = Value(5, "No Snippet Name Specified")$/;"	V
NoOpTransactionMonad	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  object NoOpTransactionMonad extends TransactionMonad {$/;"	o
NoPosition	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/NoPosition.scala	/^object NoPosition extends Position {$/;"	o
NoPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Type.scala	/^case object NoPrefix extends Type$/;"	o
NoReset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  val NoReset: () => Source = () => throw new UnsupportedOperationException()$/;"	V
NoSuccess	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  sealed abstract class NoSuccess(val msg: String, override val next: Input) extends ParseResult[Nothing] { \/\/ when we don't care about the difference between Failure and Error$/;"	a
NoSuccess	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  sealed abstract class NoSuccess(val msg: String, override val next: Input) extends ParseResult[Nothing] { \/\/ when we don't care about the difference between Failure and Error$/;"	c
NoSuccess	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  sealed abstract class NoSuccess(val msg: String, override val next: Input) extends ParseResult[Nothing] { \/\/ when we don't care about the difference between Failure and Error$/;"	a
NoSuccess	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  sealed abstract class NoSuccess(val msg: String, override val next: Input) extends ParseResult[Nothing] { \/\/ when we don't care about the difference between Failure and Error$/;"	c
NoSuchElementException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  type NoSuchElementException          = java.util.NoSuchElementException$/;"	T
NoSymbol	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^case object NoSymbol extends Symbol {$/;"	o
NoType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Type.scala	/^case object NoType extends Type$/;"	o
NoTypeDefined	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val NoTypeDefined = Value(1, "No Type Defined")$/;"	V
NoTypeHints	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^case object NoTypeHints extends TypeHints {$/;"	o
Node	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^  protected class Node[B1 >: B](override protected val key: A, $/;"	c
Node	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^  protected class Node(override protected val elem: A) extends ListSet[A] {$/;"	c
Node	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^  protected class Node[+B >: A](elem: B) extends Stack[B] {$/;"	c
Node	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^  protected class Node[+B](override protected val key: A,$/;"	c
Node	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/PointedHedgeExp.scala	/^  case class  Node(label: _labelT, r: _regexpT) extends RegExp {$/;"	c
Node	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/PointedHedgeExp.scala	/^  case class  Node(label: _labelT, r: _regexpT) extends RegExp {$/;"	m
Node	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^abstract class Node extends NodeSeq {$/;"	a
Node	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^abstract class Node extends NodeSeq {$/;"	c
Node	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^object Node {$/;"	o
NodeBuffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeBuffer.scala	/^class NodeBuffer extends scala.collection.mutable.ArrayBuffer[Node] {$/;"	c
NodeFactory	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/NodeFactory.scala	/^trait NodeFactory[A <: Node] {$/;"	t
NodeGen	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JValueGen.scala	/^trait NodeGen {$/;"	t
NodeResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^trait NodeResponse extends LiftResponse {$/;"	t
NodeSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^abstract class NodeSeq extends Seq[Node] {$/;"	a
NodeSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^abstract class NodeSeq extends Seq[Node] {$/;"	c
NodeSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^object NodeSeq {$/;"	o
NodeTraverser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeTraverser.scala	/^abstract class NodeTraverser extends parsing.MarkupHandler {$/;"	a
NodeTraverser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeTraverser.scala	/^abstract class NodeTraverser extends parsing.MarkupHandler {$/;"	c
NonCleanAnyVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^abstract class NonCleanAnyVar[T](dflt: => T) extends AnyVar[T, NonCleanAnyVar[T]](dflt) {$/;"	a
NonCleanAnyVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^abstract class NonCleanAnyVar[T](dflt: => T) extends AnyVar[T, NonCleanAnyVar[T]](dflt) {$/;"	c
NonEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^  private case class NonEmpty[+A](item: A, right: () => ImmutableIterator[A]) extends ImmutableIterator[A] {$/;"	c
NonEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^  private case class NonEmpty[+A](item: A, right: () => ImmutableIterator[A]) extends ImmutableIterator[A] {$/;"	m
NonEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^  abstract class NonEmpty[+B] extends Tree[B] {$/;"	a
NonEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^  abstract class NonEmpty[+B] extends Tree[B] {$/;"	c
NonLocalReturnException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/NonLocalReturnException.scala	/^class NonLocalReturnException[T](val key: AnyRef, val value: T) extends RuntimeException {$/;"	c
NonceWatcher	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  object NonceWatcher extends LiftActor {$/;"	o
NondetWordAutom	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^abstract class NondetWordAutom[T <: AnyRef] {$/;"	a
NondetWordAutom	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^abstract class NondetWordAutom[T <: AnyRef] {$/;"	c
None	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^case object None extends Option[Nothing] {$/;"	o
Noop	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  val Noop: JsCmd = _Noop$/;"	V
NormalParamHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^case class NormalParamHolder(name: String, value: String) extends ParamHolder$/;"	c
NormalParamHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^case class NormalParamHolder(name: String, value: String) extends ParamHolder$/;"	m
NotAcceptableResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class NotAcceptableResponse(msg: String) extends LiftResponse with HeaderStuff {$/;"	c
NotAcceptableResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class NotAcceptableResponse(msg: String) extends LiftResponse with HeaderStuff {$/;"	m
NotAcceptableResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^object NotAcceptableResponse {$/;"	o
NotBy	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^object NotBy {$/;"	o
NotByRef	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^object NotByRef {$/;"	o
NotDefinedError	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/NotDefinedError.scala	/^final class NotDefinedError(msg: String) extends Error("not defined: " + msg)$/;"	c
NotFound	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^trait NotFound$/;"	t
NotFoundAsNode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^case class NotFoundAsNode(node: NodeSeq) extends NotFound$/;"	c
NotFoundAsNode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^case class NotFoundAsNode(node: NodeSeq) extends NotFound$/;"	m
NotFoundAsResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^case class NotFoundAsResponse(response: LiftResponse) extends NotFound$/;"	c
NotFoundAsResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^case class NotFoundAsResponse(response: LiftResponse) extends NotFound$/;"	m
NotFoundAsTemplate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^case class NotFoundAsTemplate(path: ParsePath) extends NotFound$/;"	c
NotFoundAsTemplate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^case class NotFoundAsTemplate(path: ParsePath) extends NotFound$/;"	m
NotFoundResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class NotFoundResponse(message: String) extends LiftResponse with HeaderStuff {$/;"	c
NotFoundResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class NotFoundResponse(message: String) extends LiftResponse with HeaderStuff {$/;"	m
NotFoundResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^object NotFoundResponse {$/;"	o
NotImplementedResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class NotImplementedResponse() extends LiftResponse with HeaderStuff {$/;"	c
NotImplementedResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class NotImplementedResponse() extends LiftResponse with HeaderStuff {$/;"	m
NotNull	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/NotNull.scala	/^trait NotNull {}$/;"	t
NotNullRef	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^object NotNullRef {$/;"	o
NotationDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class NotationDecl( name:String, extID:ExternalID ) extends MarkupDecl {$/;"	c
NotationDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class NotationDecl( name:String, extID:ExternalID ) extends MarkupDecl {$/;"	m
NotesCount	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object NotesCount extends FacebookField("notes_count")$/;"	o
Nothing	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/Nothing$.scala	/^sealed abstract class Nothing$ extends Throwable$/;"	a
Nothing	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/Nothing$.scala	/^sealed abstract class Nothing$ extends Throwable$/;"	c
Notice	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class Notice(id: Box[String], msg: NodeSeq) extends CometMessage$/;"	c
Notice	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class Notice(id: Box[String], msg: NodeSeq) extends CometMessage$/;"	m
Notice	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^object Notice {$/;"	o
NoticeType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^object NoticeType extends Enumeration {$/;"	o
Notification	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class Notification(markup: NodeSeq) extends FacebookParam("notification", markup) with SendNotificationParam$/;"	c
Notification	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class Notification(markup: NodeSeq) extends FacebookParam("notification", markup) with SendNotificationParam$/;"	m
Null	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/Null$.scala	/^sealed abstract class Null\$$/;"	a
Null	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/Null$.scala	/^sealed abstract class Null\$$/;"	c
Null	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^case object Null extends MetaData {$/;"	o
NullLogger	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^object NullLogger extends LiftLogger {$/;"	o
NullPointerException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  type NullPointerException            = java.lang.NullPointerException$/;"	T
NullRef	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^object NullRef {$/;"	o
NullVal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case object NullVal extends Token$/;"	o
Nullable	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  case class Nullable(name: String)$/;"	c
Nullable	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  case class Nullable(name: String)$/;"	m
Num	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class Num(n: Number) extends JsExp {$/;"	c
Num	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class Num(n: Number) extends JsExp {$/;"	m
Number	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/testing/RegexTest.scala	/^case class Number(n: Int)$/;"	c
Number	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/testing/RegexTest.scala	/^case class Number(n: Int)$/;"	m
NumberFormatException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  type NumberFormatException           = java.lang.NumberFormatException$/;"	T
NumericField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/NumericField.scala	/^trait NumericField[MyType, OwnerType <: Record[OwnerType]] extends Field[MyType, OwnerType] {$/;"	t
NumericLit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/StdTokens.scala	/^  case class NumericLit(chars: String) extends Token {$/;"	c
NumericLit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/StdTokens.scala	/^  case class NumericLit(chars: String) extends Token {$/;"	m
NumericParser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Parser.scala	/^  type NumericParser = String => Any$/;"	T
OAUTH_ACCEPTABLE_SIGNATURE_METHODS	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^    val OAUTH_ACCEPTABLE_SIGNATURE_METHODS = "oauth_acceptable_signature_methods"$/;"	V
OAUTH_ACCEPTABLE_TIMESTAMPS	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^    val OAUTH_ACCEPTABLE_TIMESTAMPS = "oauth_acceptable_timestamps"$/;"	V
OAUTH_ACCEPTABLE_VERSIONS	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^    val OAUTH_ACCEPTABLE_VERSIONS = "oauth_acceptable_versions"$/;"	V
OAUTH_CALLBACK	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  val OAUTH_CALLBACK = "oauth_callback"$/;"	V
OAUTH_CALLBACK_CONFIRMED	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  val OAUTH_CALLBACK_CONFIRMED = "oauth_callback_confirmed"$/;"	V
OAUTH_CONSUMER_KEY	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  val OAUTH_CONSUMER_KEY = "oauth_consumer_key"$/;"	V
OAUTH_NONCE	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  val OAUTH_NONCE = "oauth_nonce"$/;"	V
OAUTH_PARAMETERS_ABSENT	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^    val OAUTH_PARAMETERS_ABSENT = "oauth_parameters_absent"$/;"	V
OAUTH_PARAMETERS_REJECTED	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^    val OAUTH_PARAMETERS_REJECTED = "oauth_parameters_rejected"$/;"	V
OAUTH_SIGNATURE	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  val OAUTH_SIGNATURE = "oauth_signature"$/;"	V
OAUTH_SIGNATURE_METHOD	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  val OAUTH_SIGNATURE_METHOD = "oauth_signature_method"$/;"	V
OAUTH_TIMESTAMP	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  val OAUTH_TIMESTAMP = "oauth_timestamp"$/;"	V
OAUTH_TOKEN	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  val OAUTH_TOKEN = "oauth_token"$/;"	V
OAUTH_TOKEN_SECRET	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  val OAUTH_TOKEN_SECRET = "oauth_token_secret"$/;"	V
OAUTH_VERIFIER	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  val OAUTH_VERIFIER = "oauth_verifier"$/;"	V
OAUTH_VERSION	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  val OAUTH_VERSION = "oauth_version"$/;"	V
OAuth	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^trait OAuth {$/;"	t
OAuthAccessor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthAccessor.scala	/^final case class OAuthAccessor(oauthConsumer: OAuthConsumer, tokenSecret: Box[String], user: Box[OAuthUser]) {$/;"	c
OAuthAccessor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthAccessor.scala	/^final case class OAuthAccessor(oauthConsumer: OAuthConsumer, tokenSecret: Box[String], user: Box[OAuthUser]) {$/;"	m
OAuthAccessorMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthAccessor.scala	/^trait OAuthAccessorMeta$/;"	t
OAuthConsumer	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^trait OAuthConsumer {$/;"	t
OAuthConsumerMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^trait OAuthConsumerMeta {$/;"	t
OAuthMessage	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthMessage.scala	/^class OAuthMessage(val method: RequestType, val uri: String, val parameters: List[OAuthUtil.Parameter]) {$/;"	c
OAuthMessage	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthMessage.scala	/^object OAuthMessage {$/;"	o
OAuthNonce	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^trait OAuthNonce {$/;"	t
OAuthNonceMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^trait OAuthNonceMeta {$/;"	t
OAuthProblem	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthProblemException.scala	/^final class OAuthProblem(val problem: (String, Int),val params: List[(String, String)]) {$/;"	c
OAuthProblem	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthProblemException.scala	/^object OAuthProblem {$/;"	o
OAuthSignatureMethod	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^abstract class OAuthSignatureMethod(accessor: OAuthAccessor) {$/;"	a
OAuthSignatureMethod	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^abstract class OAuthSignatureMethod(accessor: OAuthAccessor) {$/;"	c
OAuthSignatureMethod	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^object OAuthSignatureMethod {$/;"	o
OAuthSignatureMethodBuilder	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^trait OAuthSignatureMethodBuilder {$/;"	t
OAuthSignatureMethodSpec	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/test/scala/net/liftweb/oauth/OAuthSignatureMethodSpec.scala	/^object OAuthSignatureMethodSpec extends Specification {$/;"	o
OAuthSignatureMethodSpecTest	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/test/scala/net/liftweb/oauth/OAuthSignatureMethodSpec.scala	/^class OAuthSignatureMethodSpecTest extends Runner(OAuthSignatureMethodSpec) with JUnit with Console$/;"	c
OAuthToken	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^trait OAuthToken {$/;"	t
OAuthTokenMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^trait OAuthTokenMeta {$/;"	t
OAuthUser	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^trait OAuthUser {$/;"	t
OAuthUserMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^trait OAuthUserMeta {$/;"	t
OAuthUtil	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^object OAuthUtil {$/;"	o
OAuthValidator	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthValidator.scala	/^trait OAuthValidator {$/;"	t
OBJECT	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    case object OBJECT extends BlockMode$/;"	o
OChild	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class OChild(name: Option[String], age: Int, mother: Option[Parent], father: Option[Parent])$/;"	c
OChild	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class OChild(name: Option[String], age: Int, mother: Option[Parent], father: Option[Parent])$/;"	m
OO	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  {type OO <: KeyedMapper[AnyBound, OO]}$/;"	T
OPT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Tokens.scala	/^  final val OPT          = 8$/;"	V
OTHER	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static final int CHAR = 0, BYTE = 1, SHORT = 2, INT = 3, LONG = 4, FLOAT = 5, DOUBLE = 6, OTHER = 7;$/;"	f	class:BoxesRunTime	file:
Obj	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^case class Obj[A](a: A)$/;"	c
Obj	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^case class Obj[A](a: A)$/;"	m
ObjectRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ObjectRef.java	/^    public ObjectRef(Object elem) { this.elem = elem; }$/;"	m	class:ObjectRef
ObjectRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ObjectRef.java	/^public class ObjectRef implements java.io.Serializable {$/;"	c
Objs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^case class Objs(objects: List[Obj[_]])$/;"	c
Objs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^case class Objs(objects: List[Obj[_]])$/;"	m
ObservableBuffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ObservableBuffer.scala	/^trait ObservableBuffer[A, This <: ObservableBuffer[A, This]] $/;"	t
ObservableMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ObservableMap.scala	/^trait ObservableMap[A, B, This <: ObservableMap[A, B, This]] $/;"	t
ObservableSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ObservableSet.scala	/^trait ObservableSet[A, This <: ObservableSet[A, This]] $/;"	t
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxSpec.scala	/^      Empty.isA(classOf[Double]) must_== Empty$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxSpec.scala	/^      Full("s").isA(classOf[Double]) must_== Empty$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxSpec.scala	/^      Full("s").isA(classOf[String]) must_== Full("s")$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Jsonbench.scala	/^    benchmark("Jackson") { mapper.readValue(json, classOf[JsonNode]) }$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^  val classes = List(classOf[Project], classOf[Team], classOf[Employee], classOf[Language])$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^    case JDouble(x) if (targetType == classOf[Float]) => x.floatValue$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^    case JDouble(x) if (targetType == classOf[String]) => x.toString$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^    case JInt(x) if (targetType == classOf[Byte]) => x.byteValue$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^    case JInt(x) if (targetType == classOf[Double]) => x.doubleValue$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^    case JInt(x) if (targetType == classOf[Float]) => x.floatValue$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^    case JInt(x) if (targetType == classOf[Int]) => x.intValue$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^    case JInt(x) if (targetType == classOf[Long]) => x.longValue$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^    case JInt(x) if (targetType == classOf[Short]) => x.shortValue$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^    case JInt(x) if (targetType == classOf[String]) => x.toString$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^    case JString(s) if (targetType == classOf[Date]) => formats.dateFormat.parse(s).getOrElse(fail("Invalid date '" + s + "'"))$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^    case JString(s) if (targetType == classOf[Symbol]) => Symbol(s)$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^    if (mf.erasure == classOf[List[_]] || mf.erasure == classOf[Map[_, _]])$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^          val field = vals.pop(classOf[JField])$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^          val obj = vals.peek(classOf[JObject])$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^          vals.pop(classOf[JField])$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^        case CloseArr         => closeBlock(vals.pop(classOf[JArray]))$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^        case CloseObj         => closeBlock(vals.pop(classOf[JValue]))$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^      vals.peek(classOf[JValue]) match {$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^        else if (classOf[List[_]].isAssignableFrom(fType)) $/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^        else if (classOf[Map[_, _]].isAssignableFrom(fType)) $/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^        else if (classOf[Option[_]].isAssignableFrom(fType)) $/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^      classOf[Float], classOf[Byte], classOf[BigInt], classOf[Boolean], $/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^      classOf[Short], classOf[java.lang.Integer], classOf[java.lang.Long], $/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^      classOf[String], classOf[Int], classOf[Long], classOf[Double], $/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^      classOf[java.lang.Byte], classOf[java.lang.Boolean], $/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^      classOf[java.lang.Double], classOf[java.lang.Float], $/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^      classOf[java.lang.Short], classOf[Date], classOf[Symbol]).map((_, ())))$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/DiffExamples.scala	/^    parse(scala.io.Source.fromInputStream(classOf[DiffExamplesTest].getResourceAsStream(resource)).getLines.mkString)$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JValueGen.scala	/^    JNull.getClass.asInstanceOf[Class[JValue]], JNothing.getClass.asInstanceOf[Class[JValue]], classOf[JInt], $/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JValueGen.scala	/^    classOf[JDouble], classOf[JBool], classOf[JString], classOf[JField], classOf[JArray], classOf[JObject])$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  implicit val formats = Serialization.formats(FullTypeHints(classOf[Animal] :: Nil))$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  implicit val formats = Serialization.formats(ShortTypeHints(classOf[Fish] :: classOf[Dog] :: Nil))$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  val hints = new ShortTypeHints(classOf[DateTime] :: Nil) {$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^      val ignore = List(classOf[ClassNotFoundException], classOf[ClassCastException]);$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^                     ("ClassHelpersSpecTest", List("net.liftweb.util", "other.package")))) must_== Full(classOf[ClassHelpersSpecTest])$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      classHasControllerMethod(classOf[String], "isNotEmpty") must beFalse$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      classHasControllerMethod(classOf[String], "length") must beTrue$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      classHasControllerMethod(classOf[_root_.java.util.ArrayList[Object]], "readObject") must beFalse$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      containsClass(classOf[String], List(classOf[Float], classOf[Integer])) must beFalse$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      containsClass(classOf[String], Nil) must beFalse$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      containsClass(classOf[String], null) must beFalse$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      findClass("ArrayList", List("java.util"), classOf[_root_.java.util.List[Object]]) must_== Full(classOf[_root_.java.util.ArrayList[Object]])$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      findClass("ClassHelpersSpecTest", List("net.liftweb.util")) must_== Full(classOf[ClassHelpersSpecTest])$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      findClass("ClassHelpersSpecTest", List("net.liftweb.util"), classOf[String]) must_== Empty$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      findClass("ClassHelpersSpecTest", List("net.liftweb.util", "other.package")) must_== Full(classOf[ClassHelpersSpecTest])$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      findClass("classHelpersSpecTest", List("net.liftweb.util"), List((n: String) => n.capitalize)) must_== Full(classOf[ClassHelpersSpecTest])$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      findClass("class_helpers_spec_test", List("net.liftweb.util")) must_== Full(classOf[ClassHelpersSpecTest])$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      findType[_root_.java.util.List[Object]]("ArrayList", List("java.util")) must_== Full(classOf[_root_.java.util.ArrayList[Object]])$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      instantiate(classOf[String]) must_== Full("")$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      instantiate(classOf[_root_.java.util.Calendar]) must beLike { case Failure(_, _, _) => true }$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      invokeControllerMethod(classOf[String], "isNotEmpty") must throwA[NoSuchMethodException]$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      invokeControllerMethod(classOf[String], "length") must_== 0$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      invokeMethod(classOf[String], "", "isNotEmpty") must beLike { case Failure(_, _, _) => true }$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      invokeMethod(classOf[String], "", "length") must_== Full(0)$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      invokeMethod(classOf[String], "", "valueOf", Array("1")) must_== Full("1")$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      invokeMethod(classOf[String], "", "valueOf", Array("c"), Array(classOf[String])) must_== Full("c")$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      invokeMethod(classOf[String], "", null) must beLike { case Failure(_, _, _) => true }$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      invokeMethod(classOf[String], null, "length") must beLike { case Failure(_, _, _) => true }$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      invokeMethod(classOf[_root_.java.util.Calendar], null, "getInstance").isEmpty must_== false$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      val privateMethod = classOf[_root_.java.util.ArrayList[Object]].getDeclaredMethod("readObject", classOf[_root_.java.io.ObjectInputStream])$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      val publicParameterLess = classOf[String].getMethod("length")$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      val publicWithParameters = classOf[String].getMethod("indexOf", classOf[String])$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ControlHelpersSpec.scala	/^      tryo(List(classOf[RuntimeException]), Full(callback)) { "valid" }$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ControlHelpersSpec.scala	/^      tryo(List(classOf[RuntimeException]), Full(callback)) { failureBlock }$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ControlHelpersSpec.scala	/^      tryo(List(classOf[RuntimeException], classOf[NullPointerException])) { failureBlock } must_== Empty$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ControlHelpersSpec.scala	/^      tryo(classOf[RuntimeException]) { failureBlock } must_== Empty$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                tryo(List(classOf[ClassNotFoundException]), Empty)(Class.forName(clsName).asInstanceOf[Class[AnyRef]]).flatMap {$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                val constr = cls.getConstructor(this.getClass, classOf[Box[String]], classOf[NodeSeq], classOf[Map[String, String]])$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty6AsyncProvider.scala	/^      val meth = cc.getMethod("getContinuation", classOf[HTTPRequest], classOf[AnyRef])$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty6AsyncProvider.scala	/^      val setObj = cci.getMethod("setObject", classOf[AnyRef])$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty7AsyncProvider.scala	/^      val getAttribute = cci.getMethod("getAttribute", classOf[String])$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty7AsyncProvider.scala	/^      val meth = cc.getMethod("getContinuation", classOf[javax.servlet.ServletRequest])$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty7AsyncProvider.scala	/^      val setAttribute = cci.getMethod("setAttribute", classOf[String], classOf[AnyRef])$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/test/scala/TransactionMonadSpec.scala	/^@RunWith(classOf[JUnit4Runner])$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^    context track classOf[WebContainer] on {$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^    MyWizard.nameAndAge.age.manifest.erasure.getName must_== classOf[Int].getName$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^                             Array(classOf[java.sql.PreparedStatement], classOf[DBLog]),$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^                           Array(classOf[java.sql.Statement], classOf[DBLog]),$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^      case "execute" if args(1).getClass == classOf[Int]  => {$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^      case "executeUpdate" if args(1).getClass == classOf[Int] => {$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def dbFieldClass = classOf[Array[Byte]]$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def dbFieldClass = classOf[String]$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  def dbFieldClass = classOf[Boolean]$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  def dbFieldClass = classOf[Date]$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  def dbFieldClass = classOf[Date]$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  def dbFieldClass = classOf[BigDecimal]$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	def dbFieldClass = classOf[Double]$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def dbFieldClass = classOf[ENUM#Value]$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def dbFieldClass = classOf[Int]$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def dbFieldClass = classOf[Box[Long]]$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def dbFieldClass = classOf[Long]$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def dbFieldClass = classOf[Seq[ENUM#Value]]$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  def dbFieldClass = classOf[String]$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def dbFieldClass = classOf[String]$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  def dbFieldClass = classOf[Date]$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^                           filter(f => classOf[MappedField[_, _]].isAssignableFrom(f.getType)).$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^                  if (!classOf[MappedField[_, _]].isAssignableFrom(inst.getClass)) false$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    def isLifecycle(m: Method) = classOf[LifecycleCallbacks].isAssignableFrom(m.getReturnType)$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    def isMappedField(m: Method) = classOf[MappedField[Nothing, A]].isAssignableFrom(m.getReturnType)$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  private def isField(m: Method) = classOf[Field[_, _]].isAssignableFrom(m.getReturnType)$/;"	c
Of	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  private def isLifecycle(m: Method) = classOf[LifecycleCallbacks].isAssignableFrom(m.getReturnType)$/;"	c
Of	/Users/Mads/Dev/logicOfScientificDiscovery/src/test/scala/sidewayscoding/AppTest.scala	/^    val suite = new TestSuite(classOf[AppTest])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  @throws(classOf[NoSuchElementException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  @throws(classOf[UnsupportedOperationException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def classOf[T]: Class[T] = null$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product1.scala	/^  @throws(classOf[IndexOutOfBoundsException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product10.scala	/^  @throws(classOf[IndexOutOfBoundsException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product11.scala	/^  @throws(classOf[IndexOutOfBoundsException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product12.scala	/^  @throws(classOf[IndexOutOfBoundsException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product13.scala	/^  @throws(classOf[IndexOutOfBoundsException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product14.scala	/^  @throws(classOf[IndexOutOfBoundsException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product15.scala	/^  @throws(classOf[IndexOutOfBoundsException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product16.scala	/^  @throws(classOf[IndexOutOfBoundsException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^  @throws(classOf[IndexOutOfBoundsException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^  @throws(classOf[IndexOutOfBoundsException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  @throws(classOf[IndexOutOfBoundsException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product2.scala	/^  @throws(classOf[IndexOutOfBoundsException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  @throws(classOf[IndexOutOfBoundsException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  @throws(classOf[IndexOutOfBoundsException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  @throws(classOf[IndexOutOfBoundsException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product3.scala	/^  @throws(classOf[IndexOutOfBoundsException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product4.scala	/^  @throws(classOf[IndexOutOfBoundsException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product5.scala	/^  @throws(classOf[IndexOutOfBoundsException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product6.scala	/^  @throws(classOf[IndexOutOfBoundsException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product7.scala	/^  @throws(classOf[IndexOutOfBoundsException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product8.scala	/^  @throws(classOf[IndexOutOfBoundsException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product9.scala	/^  @throws(classOf[IndexOutOfBoundsException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  @throws(classOf[java.io.IOException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Symbol.scala	/^  @throws(classOf[java.io.ObjectStreamException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^      if (elemClass eq classOf[Int]) {$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^      } else if (elemClass == classOf[AnyRef]) {$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^      } else if (elemClass eq classOf[Boolean]) {$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^      } else if (elemClass eq classOf[Byte]) {$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^      } else if (elemClass eq classOf[Char]) {$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^      } else if (elemClass eq classOf[Double]) {$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^      } else if (elemClass eq classOf[Float]) {$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^      } else if (elemClass eq classOf[Long]) {$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^      } else if (elemClass eq classOf[Short]) {$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    else if (elemClass eq classOf[Boolean])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    else if (elemClass eq classOf[Byte])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    else if (elemClass eq classOf[Char])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    else if (elemClass eq classOf[Double])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    else if (elemClass eq classOf[Float])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    else if (elemClass eq classOf[Int])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    else if (elemClass eq classOf[Long])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    else if (elemClass eq classOf[Short])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    else if (elemTag eq ScalaRunTime.BooleanTag) unbox(classOf[Boolean])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    else if (elemTag eq ScalaRunTime.ByteTag) unbox(classOf[Byte])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    else if (elemTag eq ScalaRunTime.CharTag) unbox(classOf[Char])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    else if (elemTag eq ScalaRunTime.DoubleTag) unbox(classOf[Double])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    else if (elemTag eq ScalaRunTime.FloatTag) unbox(classOf[Float])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    else if (elemTag eq ScalaRunTime.LongTag) unbox(classOf[Long])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    else if (elemTag eq ScalaRunTime.ShortTag) unbox(classOf[Short])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    if (elemTag eq ScalaRunTime.IntTag) unbox(classOf[Int])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^    val m =  classOf[String].getDeclaredMethod("format", classOf[String], classOf[Array[Object]])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  @throws(classOf[java.util.regex.PatternSyntaxException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Marshal.scala	/^  @throws(classOf[ClassCastException])$/;"	c
Of	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Properties.scala	/^    val stream = classOf[Application].getResourceAsStream(propFilename)$/;"	c
Off	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  val Off = Value(15, "Off")$/;"	V
OfflineRequestSnapshot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^private class OfflineRequestSnapshot(req: HTTPRequest) extends HTTPRequest {$/;"	c
OffsetPosition	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/OffsetPosition.scala	/^case class OffsetPosition(source: java.lang.CharSequence, offset: Int) extends Position {$/;"	c
OffsetPosition	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/OffsetPosition.scala	/^case class OffsetPosition(source: java.lang.CharSequence, offset: Int) extends Position {$/;"	m
OkResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class OkResponse() extends LiftResponse with HeaderStuff {$/;"	c
OkResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class OkResponse() extends LiftResponse with HeaderStuff {$/;"	m
On	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  case class On(override val on: PartialFunction[Meta#Event, Any], override val to: StV) extends ATransition(to, on)$/;"	c
On	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  case class On(override val on: PartialFunction[Meta#Event, Any], override val to: StV) extends ATransition(to, on)$/;"	m
OnDiskFileParamHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^class OnDiskFileParamHolder(override val name: String, override val mimeType: String,$/;"	c
OnDiskFileParamHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^object OnDiskFileParamHolder {$/;"	o
OnFirstScreen	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  protected object OnFirstScreen extends RequestVar[Boolean](true)$/;"	o
OnLoad	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  object OnLoad {$/;"	o
OnceParser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def OnceParser[T](f: Input => ParseResult[T]): Parser[T] with OnceParser[T] $/;"	f
OnceParser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  trait OnceParser[+T] extends Parser[T] {$/;"	t
OnceParser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  trait OnceParser[+T] extends Parser[T] {$/;"	t
OneToMany	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^trait OneToMany[K,T<:KeyedMapper[K, T]] extends KeyedMapper[K,T] { this: T =>$/;"	t
OpenArr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case object OpenArr extends Token$/;"	o
OpenHashMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^class OpenHashMap[Key, Value](initialSize : Int) extends scala.collection.mutable.Map[Key, Value]{$/;"	c
OpenHashMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^object OpenHashMap{$/;"	o
OpenIDProtoUser	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^trait OpenIDProtoUser[T <: OpenIDProtoUser[T]] extends MegaProtoUser[T] {$/;"	t
OpenIdConsumer	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^trait OpenIdConsumer[UserType]$/;"	t
OpenIdObject	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  object OpenIdObject extends SessionVar[ConsumerType](createAConsumer)$/;"	o
OpenIdUser	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^object OpenIdUser extends SessionVar[Box[Identifier]](Empty)$/;"	o
OpenIdVendor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^trait OpenIdVendor {$/;"	t
OpenObj	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case object OpenObj extends Token$/;"	o
OpenSearchResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class OpenSearchResponse(xml: Node) extends NodeResponse {$/;"	c
OpenSearchResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class OpenSearchResponse(xml: Node) extends NodeResponse {$/;"	m
OprEnum	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^object OprEnum extends Enumeration {$/;"	o
Option	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^object Option {$/;"	o
Option	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^sealed abstract class Option[+A] extends Product {$/;"	a
Option	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^sealed abstract class Option[+A] extends Product {$/;"	c
OptionBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class OptionBindParam(name: String, value: Option[NodeSeq]) extends Tuple2(name, value) with BindParam {$/;"	c
OptionBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class OptionBindParam(name: String, value: Option[NodeSeq]) extends Tuple2(name, value) with BindParam {$/;"	m
OptionIsMappable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  implicit def OptionIsMappable[t <% Mappable[t]](xs: Option[t]): Mappable[Option[t]] =$/;"	f
Optional	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  case class Optional(mapping: Mapping) extends Mapping$/;"	c
Optional	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  case class Optional(mapping: Mapping) extends Mapping$/;"	m
OptionalCons	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^  class OptionalCons(expr: => Boolean) {$/;"	c
OracleDriver	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^object OracleDriver extends DriverType("Oracle") {$/;"	o
OracleProvider	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^  object OracleProvider extends Provider with DbSetup {$/;"	o
OrderBy	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class OrderBy[O<:Mapper[O], T](field: MappedField[T,O],$/;"	c
OrderBy	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class OrderBy[O<:Mapper[O], T](field: MappedField[T,O],$/;"	m
OrderBySql	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class OrderBySql[O <: Mapper[O]](sql: String,$/;"	c
OrderBySql	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class OrderBySql[O <: Mapper[O]](sql: String,$/;"	m
Ordered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Ordered.scala	/^trait Ordered[A] {$/;"	t
Ordering	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Ordering.scala	/^trait Ordering[T] extends PartialOrdering[T] { $/;"	t
OsgiLiftFilter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^private object OsgiLiftFilter extends LiftFilter {$/;"	o
Owned	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^  trait Owned[O<:Mapper[_]] extends MappedOneToManyBase[O] {$/;"	t
OwnedField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^trait OwnedField[OwnerType <: Record[OwnerType]] extends FieldIdentifier {$/;"	t
OwnerType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  type OwnerType <: Mapper[OwnerType]$/;"	T
OwnerType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  type OwnerType = T$/;"	T
OwnerType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  type OwnerType = T$/;"	T
P	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^      val P = rest.pop$/;"	V
PARAMETER_ABSENT	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^    val PARAMETER_ABSENT = ("parameter_absent", BAD_REQUEST)$/;"	V
PARAMETER_REJECTED	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^    val PARAMETER_REJECTED = ("parameter_rejected", BAD_REQUEST)$/;"	V
PCDATA	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^case object PCDATA extends ContentModel {$/;"	o
PCData	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^case class PCData(_data: String) extends Atom[String](_data) {$/;"	c
PCData	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^case class PCData(_data: String) extends Atom[String](_data) {$/;"	m
PCData	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PCData.scala	/^case class PCData(_data: String) extends Atom[String](_data) {$/;"	c
PCData	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PCData.scala	/^case class PCData(_data: String) extends Atom[String](_data) {$/;"	m
PCDataMarkupParser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^trait PCDataMarkupParser[PCM <: MarkupParser with MarkupHandler] extends MarkupParser { self: PCM =>$/;"	t
PCDataMarkupParser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/XhtmlParser.scala	/^trait PCDataMarkupParser[PCM <: MarkupParser with MarkupHandler] extends MarkupParser { self: PCM =>$/;"	t
PCDataXmlParser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^class PCDataXmlParser(val input: Source) extends ConstructingHandler with PCDataMarkupParser[PCDataXmlParser] with ExternalSources  {$/;"	c
PCDataXmlParser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^object PCDataXmlParser {$/;"	o
PDTPath	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  lazy val PDTPath = pdtPath$/;"	V
PERMISSION_DENIED	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^    val PERMISSION_DENIED = ("permission_denined", UNAUTHORIZED)$/;"	V
PEReference	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class PEReference(ent:String) extends MarkupDecl {$/;"	c
PEReference	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class PEReference(ent:String) extends MarkupDecl {$/;"	m
PLAINTEXT	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^class PLAINTEXT(accessor: OAuthAccessor) extends OAuthSignatureMethod(accessor) {$/;"	c
PLAINTEXT	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^object PLAINTEXT extends OAuthSignatureMethodBuilder {$/;"	o
PLUS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Tokens.scala	/^  final val PLUS         = 7$/;"	V
POS_INF_DOUBLE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val POS_INF_DOUBLE = java.lang.Double.POSITIVE_INFINITY$/;"	V
POS_INF_FLOAT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val POS_INF_FLOAT = java.lang.Float.POSITIVE_INFINITY$/;"	V
PSettableValueHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ValueHolder.scala	/^trait PSettableValueHolder[T] extends PValueHolder[T] with SettableValueHolder$/;"	t
PU	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  abstract class PU[T] {$/;"	a
PU	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  abstract class PU[T] {$/;"	c
PValueHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ValueHolder.scala	/^object PValueHolder {$/;"	o
PValueHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ValueHolder.scala	/^trait PValueHolder[T] extends ValueHolder {$/;"	t
Page	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^private class Page[T](val num: Int) {$/;"	c
PageName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^object PageName extends RequestVar[String]("")$/;"	o
PageSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  private final val PageSize = 4096$/;"	V
PagedSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^class PagedSeq[T] protected (more: (Array[T], Int, Int) => Int, $/;"	c
PagedSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^object PagedSeq {$/;"	o
PagedSeqReader	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/PagedSeqReader.scala	/^class PagedSeqReader(seq: PagedSeq[Char], $/;"	c
PagedSeqReader	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/PagedSeqReader.scala	/^object PagedSeqReader {$/;"	o
PaginatedSnippet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Paginator.scala	/^trait PaginatedSnippet[T <: Mapper[T]] extends ModelSnippet[T] {$/;"	t
Paginator	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Paginator.scala	/^class Paginator[T <: Mapper[T]](val meta: MetaMapper[T], val snippet: ModelSnippet[T],$/;"	c
Pair	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  object Pair {$/;"	o
Pair	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  type Pair[+A, +B] = Tuple2[A, B]$/;"	T
Para	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  case class Para(s: String) extends Item$/;"	c
Para	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  case class Para(s: String) extends Item$/;"	m
Paragraph	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Paragraph(elems : List[Textile], attrs: List[Attribute]) extends ATextile(elems, attrs) {$/;"	c
Paragraph	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Paragraph(elems : List[Textile], attrs: List[Attribute]) extends ATextile(elems, attrs) {$/;"	m
ParamCalcInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^case class ParamCalcInfo(paramNames: List[String],$/;"	c
ParamCalcInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^case class ParamCalcInfo(paramNames: List[String],$/;"	m
ParamFailure	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^final case class ParamFailure[T](override val msg: String,$/;"	c
ParamFailure	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^final case class ParamFailure[T](override val msg: String,$/;"	m
ParamHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^sealed trait ParamHolder {$/;"	t
Parameter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  final case class Parameter(name: String, value: String)$/;"	c
Parameter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  final case class Parameter(name: String, value: String)$/;"	m
ParameterEntityDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class ParameterEntityDecl(name: String, entdef: EntityDef) extends EntityDecl {$/;"	c
ParameterEntityDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class ParameterEntityDecl(name: String, entdef: EntityDef) extends EntityDecl {$/;"	m
Parent	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class Parent(name: String)$/;"	c
Parent	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class Parent(name: String)$/;"	m
Parent	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case object Parent extends JsMethod {$/;"	o
ParentOf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class ParentOf(id: String) extends JsExp {$/;"	c
ParentOf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class ParentOf(id: String) extends JsExp {$/;"	m
ParseException	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  class ParseException(message: String, cause: Exception) extends Exception(message, cause)$/;"	c
ParsePath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^case class ParsePath(partPath: List[String], suffix: String, absolute: Boolean, endSlash: Boolean) {$/;"	c
ParsePath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^case class ParsePath(partPath: List[String], suffix: String, absolute: Boolean, endSlash: Boolean) {$/;"	m
ParseResult	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  sealed abstract class ParseResult[+T] {$/;"	a
ParseResult	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  sealed abstract class ParseResult[+T] {$/;"	c
ParseResult	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  sealed abstract class ParseResult[+T] {$/;"	a
ParseResult	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  sealed abstract class ParseResult[+T] {$/;"	c
ParsedEntityDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class ParsedEntityDecl(name: String, entdef: EntityDef) extends EntityDecl {$/;"	c
ParsedEntityDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class ParsedEntityDecl(name: String, entdef: EntityDef) extends EntityDecl {$/;"	m
Parser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  class Parser(buf: Buffer) {$/;"	c
Parser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/Parsers.scala	/^  abstract class Parser[A] {$/;"	a
Parser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/Parsers.scala	/^  abstract class Parser[A] {$/;"	c
Parser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  abstract class Parser[+T] extends (Input => ParseResult[T]) {$/;"	a
Parser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  abstract class Parser[+T] extends (Input => ParseResult[T]) {$/;"	c
Parser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def Parser[T](f: Input => ParseResult[T]): Parser[T] $/;"	f
Parser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  abstract class Parser[+T] extends (Input => ParseResult[T]) {$/;"	a
Parser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  abstract class Parser[+T] extends (Input => ParseResult[T]) {$/;"	c
Parser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Parser.scala	/^class Parser extends StdTokenParsers with ImplicitConversions {$/;"	c
Parser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^  class Parser extends MarkupHandler with MarkupParser with ExternalSources with Runnable {$/;"	c
ParserHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^object ParserHelpers extends net.liftweb.util.CombParserHelpers with Parsers$/;"	o
ParserSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ParserTest.scala	/^object ParserSpec extends Specification with JValueGen with ScalaCheck {$/;"	o
ParserTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ParserTest.scala	/^class ParserTest extends Runner(ParserSpec) with JUnit$/;"	c
Parsers	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/Parsers.scala	/^abstract class Parsers {$/;"	a
Parsers	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/Parsers.scala	/^abstract class Parsers {$/;"	c
Parsers	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^trait Parsers {$/;"	t
Parsers	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^trait Parsers {$/;"	t
Parsing	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Parsing.scala	/^object Parsing {$/;"	o
PartialFunction	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/PartialFunction.scala	/^trait PartialFunction[-A, +B] extends AnyRef with (A => B) {$/;"	t
PartialOrdering	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/PartialOrdering.scala	/^trait PartialOrdering[T] extends Equiv[T] {$/;"	t
PartialUpdateMsg	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class PartialUpdateMsg(cmd: () => JsCmd) extends CometMessage$/;"	c
PartialUpdateMsg	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class PartialUpdateMsg(cmd: () => JsCmd) extends CometMessage$/;"	m
PartiallyOrdered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/PartiallyOrdered.scala	/^trait PartiallyOrdered[+A] {$/;"	t
PartiallyRefundedPayment	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val PartiallyRefundedPayment = Value(15, "Partially-Refunded")$/;"	V
Partner	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    class Partner extends Iterator[A] {$/;"	c
PasswordField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^class PasswordField[OwnerType <: Record[OwnerType]](rec: OwnerType) extends Field[String, OwnerType] {$/;"	c
PasswordField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^object PasswordField {$/;"	o
Patch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^  private[scala] trait Patch[+A] extends Projection[A] {$/;"	t
PathRoot	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  lazy val PathRoot = "openid"$/;"	V
Pattern	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/jolib.scala	/^  type Pattern = List[Signal]$/;"	T
PayPalInfo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^class PayPalInfo(params: HasParams) {$/;"	c
PaypalBase	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^trait PaypalBase {$/;"	t
PaypalConnection	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^sealed trait PaypalConnection {$/;"	t
PaypalDataTransfer	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^object PaypalDataTransfer extends PaypalBase {$/;"	o
PaypalDataTransferResponse	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^case class PaypalDataTransferResponse(response: List[String]) extends PaypalResponse {$/;"	c
PaypalDataTransferResponse	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^case class PaypalDataTransferResponse(response: List[String]) extends PaypalResponse {$/;"	m
PaypalHTTP	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^object PaypalHTTP extends PaypalConnection {$/;"	o
PaypalIPN	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^private object PaypalIPN extends PaypalUtilities {$/;"	o
PaypalIPN	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^trait PaypalIPN extends BasePaypalTrait {$/;"	t
PaypalIPNPostback	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^private[paypal] object PaypalIPNPostback extends PaypalBase {$/;"	o
PaypalIPNPostbackReponse	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^private[paypal] class PaypalIPNPostbackReponse(val response: List[String]) extends PaypalResponse {$/;"	c
PaypalLive	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^object PaypalLive extends PaypalMode {$/;"	o
PaypalMode	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^sealed trait PaypalMode {$/;"	t
PaypalPDT	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^trait PaypalPDT extends BasePaypalTrait {$/;"	t
PaypalRequest	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^private object PaypalRequest extends PaypalUtilities {$/;"	o
PaypalResponse	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^trait PaypalResponse extends PaypalUtilities with HasParams {$/;"	t
PaypalSSL	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^object PaypalSSL extends PaypalConnection {$/;"	o
PaypalSandbox	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^object PaypalSandbox extends PaypalMode {$/;"	o
PaypalTransactionStatus	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^object PaypalTransactionStatus extends Enumeration {$/;"	o
PaypalUtilities	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^trait PaypalUtilities {$/;"	t
Pdef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^      val Pdef = nfa.nextDefault(P)$/;"	V
Pdelta	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^      val Pdelta = new mutable.HashMap[T, BitSet]$/;"	V
PendingPayment	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val PendingPayment = Value(7, "Pending")$/;"	V
PerformSetupComet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case object PerformSetupComet extends CometMessage$/;"	o
PermRedirectResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class PermRedirectResponse(uri: String, request: Req, cookies: HTTPCookie*) extends LiftResponse {$/;"	c
PermRedirectResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class PermRedirectResponse(uri: String, request: Req, cookies: HTTPCookie*) extends LiftResponse {$/;"	m
Person	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class Person(name: String, address: Address, children: List[Child])$/;"	c
Person	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class Person(name: String, address: Address, children: List[Child])$/;"	m
Person	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^class Person extends LongKeyedMapper[Person] with IdPK with ManyToMany {$/;"	c
Person	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^object Person extends Person with LongKeyedMetaMapper[Person]$/;"	o
PersonCompany	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^class PersonCompany extends Mapper[PersonCompany] {$/;"	c
PersonCompany	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^object PersonCompany extends PersonCompany with MetaMapper[PersonCompany]$/;"	o
PersonWithAddresses	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class PersonWithAddresses(name: String, addresses: Map[String, Address])$/;"	c
PersonWithAddresses	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class PersonWithAddresses(name: String, addresses: Map[String, Address])$/;"	m
PersonWithMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class PersonWithMap(name: String, address: Map[String, String])$/;"	c
PersonWithMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class PersonWithMap(name: String, address: Map[String, String])$/;"	m
PhantomReference	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/PhantomReference.scala	/^class PhantomReference[+T <: AnyRef](value: T, queue: ReferenceQueue[T]) extends ReferenceWrapper[T] {$/;"	c
PhotoId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class PhotoId(photoId: Long) extends FacebookParam("pid", photoId) with AddPhotoTagsParam$/;"	c
PhotoId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class PhotoId(photoId: Long) extends FacebookParam("pid", photoId) with AddPhotoTagsParam$/;"	m
PhotoIds	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class PhotoIds(photoIds: Long*) extends FacebookParam("pids", photoIds.mkString(",")) with GetPhotosParam with GetPhotoTagsParam$/;"	c
PhotoIds	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class PhotoIds(photoIds: Long*) extends FacebookParam("pids", photoIds.mkString(",")) with GetPhotosParam with GetPhotoTagsParam$/;"	m
PhotoTag	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^sealed abstract class PhotoTag(x: Double, y: Double){ def toJSON: String }$/;"	a
PhotoTag	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^sealed abstract class PhotoTag(x: Double, y: Double){ def toJSON: String }$/;"	c
Pi	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  val Pi = java.lang.Math.PI$/;"	V
Pic	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object Pic extends FacebookField("pic")$/;"	o
PicklerEnv	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  class PicklerEnv extends HashMap[Any, Int] {$/;"	c
PicklerState	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  class PicklerState(val stream: Array[Byte], val dict: PicklerEnv)$/;"	c
Pilot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^    val Pilot = Value(5, "Pilot")$/;"	V
Ping	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^      case object Ping$/;"	o
Ping	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    case object Ping$/;"	o
PingMe	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  protected case object PingMe$/;"	o
PingedService	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ActorPingSpec.scala	/^trait PingedService {$/;"	t
PingerException	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LAPinger.scala	/^case class PingerException(msg: String, e: Throwable) extends RuntimeException(msg, e)$/;"	c
PingerException	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LAPinger.scala	/^case class PingerException(msg: String, e: Throwable) extends RuntimeException(msg, e)$/;"	m
PlaceHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case object PlaceHolder extends AnyLocParam$/;"	o
PlainMailBodyType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class PlainMailBodyType(text: String) extends MailBodyType$/;"	c
PlainMailBodyType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class PlainMailBodyType(text: String) extends MailBodyType$/;"	m
PlainPlusBodyType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class PlainPlusBodyType(text: String, charset: String) extends MailBodyType$/;"	c
PlainPlusBodyType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class PlainPlusBodyType(text: String, charset: String) extends MailBodyType$/;"	m
PlainTextResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class PlainTextResponse(text: String, headers: List[(String, String)], code: Int) extends LiftResponse {$/;"	c
PlainTextResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class PlainTextResponse(text: String, headers: List[(String, String)], code: Int) extends LiftResponse {$/;"	m
PlainTextResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^object PlainTextResponse {$/;"	o
Platform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/compat/Platform.scala	/^object Platform {$/;"	o
PlusImageHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class PlusImageHolder(name: String, mimeType: String, bytes: Array[Byte])$/;"	c
PlusImageHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class PlusImageHolder(name: String, mimeType: String, bytes: Array[Byte])$/;"	m
Point	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/PointedHedgeExp.scala	/^  case object Point extends RegExp {$/;"	o
PointedHedgeExp	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/PointedHedgeExp.scala	/^abstract class PointedHedgeExp extends Base {$/;"	a
PointedHedgeExp	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/PointedHedgeExp.scala	/^abstract class PointedHedgeExp extends Base {$/;"	c
PoliticalView	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object PoliticalView extends FacebookField("political")$/;"	o
PolyType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Type.scala	/^case class PolyType(typeParams: List[Symbol], typeBounds: List[(Type, Type)], resultType: Type) extends Type$/;"	c
PolyType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Type.scala	/^case class PolyType(typeParams: List[Symbol], typeBounds: List[(Type, Type)], resultType: Type) extends Type$/;"	m
Position	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Position.scala	/^object Position {$/;"	o
Position	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/Position.scala	/^trait Position {$/;"	t
Positional	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/Positional.scala	/^trait Positional {$/;"	t
PostMethodFactory	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^private object PostMethodFactory {$/;"	o
PostParamName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  def PostParamName = "openid_identifier" \/\/ "openIdUrl"$/;"	f
PostRequest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^case object PostRequest extends RequestType {$/;"	o
PostalCodeField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PostalCodeField.scala	/^class PostalCodeField[OwnerType <: Record[OwnerType]](rec: OwnerType, country: CountryField[OwnerType]) extends StringField(rec, 32) {$/;"	c
PostgreSqlDriver	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^object PostgreSqlDriver extends BasePostgreSQLDriver {$/;"	o
PostgreSqlOldDriver	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^object PostgreSqlOldDriver extends BasePostgreSQLDriver {$/;"	o
PostgreSqlProvider	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^  object PostgreSqlProvider extends Provider with DbSetup {$/;"	o
Pre	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Pre(elems : List[Textile], attrs : List[Attribute]) extends ATextile(elems, attrs) {$/;"	c
Pre	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Pre(elems : List[Textile], attrs : List[Attribute]) extends ATextile(elems, attrs) {$/;"	m
PreCache	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class PreCache[TheType <: Mapper[TheType]](field: MappedForeignKey[_, TheType, _], deterministic: Boolean)$/;"	c
PreCache	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class PreCache[TheType <: Mapper[TheType]](field: MappedForeignKey[_, TheType, _], deterministic: Boolean)$/;"	m
PreCache	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^object PreCache {$/;"	o
PreReceiver	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^  private abstract class PreReceiver {$/;"	a
PreReceiver	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^  private abstract class PreReceiver {$/;"	c
Predef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^object Predef {$/;"	o
Predicate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    private def typePredicate[A <: JValue](clazz: Class[A])(json: JValue) = json match {$/;"	T
PredicatedIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  protected class PredicatedIterator(p : A => Boolean) extends BufferedIterator.Default[A] {$/;"	c
Pref	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  val Pref = "--"$/;"	V
Prefix	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  val varPrefix = "_lift_sv_"$/;"	v
Prefix	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  lazy val Prefix = calcPrefix$/;"	V
PrefixedAttribute	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrefixedAttribute.scala	/^class PrefixedAttribute(val pre: String,$/;"	c
PrefixedType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Type.scala	/^case class PrefixedType(pre: Type, sym: Symbol) extends Type$/;"	c
PrefixedType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Type.scala	/^case class PrefixedType(pre: Type, sym: Symbol) extends Type$/;"	m
PrependHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  object PrependHtml {$/;"	o
PrependToHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  object PrependToHtml {$/;"	o
PrettyPrinter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^class PrettyPrinter( width:Int, step:Int ) {$/;"	c
PrevSnapshot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  private object PrevSnapshot extends RequestVar[Box[ScreenSnapshot]](Empty)$/;"	o
PrevSnapshot	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  private object PrevSnapshot extends RequestVar[Box[WizardSnapshot]](Empty)$/;"	o
Primitives	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class Primitives(i: Int, l: Long, d: Double, f: Float, s: String, sym: Symbol, sh: Short, b: Byte, bool: Boolean)$/;"	c
Primitives	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class Primitives(i: Int, l: Long, d: Double, f: Float, s: String, sym: Symbol, sh: Short, b: Byte, bool: Boolean)$/;"	m
Print	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Print.scala	/^object Print extends Function1[Any, String] {$/;"	o
Printer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^object Printer extends Printer$/;"	o
Printer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^trait Printer {$/;"	t
PrintingSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/PrintingTest.scala	/^object PrintingSpec extends Specification with JValueGen with ScalaCheck {$/;"	o
PrintingTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/PrintingTest.scala	/^class PrintingTest extends Runner(PrintingSpec) with JUnit$/;"	c
Priority	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class Priority(priority: String) extends FacebookParam("priority", priority) with PublishStoryParam$/;"	c
Priority	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class Priority(priority: String) extends FacebookParam("priority", priority) with PublishStoryParam$/;"	m
PriorityQueue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^class PriorityQueue[A <% Ordered[A]] extends ResizableArray[A] with CloneableCollection {$/;"	c
PriorityQueueProxy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueueProxy.scala	/^abstract class PriorityQueueProxy[A <% Ordered[A]] extends PriorityQueue[A]$/;"	a
PriorityQueueProxy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueueProxy.scala	/^abstract class PriorityQueueProxy[A <% Ordered[A]] extends PriorityQueue[A]$/;"	c
ProblemParams	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  object ProblemParams {$/;"	o
Problems	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  object Problems {$/;"	o
ProcInstr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/ProcInstr.scala	/^case class ProcInstr(target:String, proctext:String) extends SpecialNode {  $/;"	c
ProcInstr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/ProcInstr.scala	/^case class ProcInstr(target:String, proctext:String) extends SpecialNode {  $/;"	m
ProcessQueue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^case object ProcessQueue$/;"	o
ProcessSnippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private case class ProcessSnippet(f: () => Unit)$/;"	c
ProcessSnippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private case class ProcessSnippet(f: () => Unit)$/;"	m
ProcessedPayment	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val ProcessedPayment = Value(16, "Processed")$/;"	V
Product	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product.scala	/^trait Product extends AnyRef {$/;"	t
Product	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^  class Product[A](c: Chan[A], v: A) {$/;"	c
Product1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product1.scala	/^object Product1 {$/;"	o
Product1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product1.scala	/^trait Product1[+T1] extends Product {$/;"	t
Product10	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product10.scala	/^object Product10 {$/;"	o
Product10	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product10.scala	/^trait Product10[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10] extends Product {$/;"	t
Product11	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product11.scala	/^object Product11 {$/;"	o
Product11	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product11.scala	/^trait Product11[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11] extends Product {$/;"	t
Product12	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product12.scala	/^object Product12 {$/;"	o
Product12	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product12.scala	/^trait Product12[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12] extends Product {$/;"	t
Product13	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product13.scala	/^object Product13 {$/;"	o
Product13	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product13.scala	/^trait Product13[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13] extends Product {$/;"	t
Product14	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product14.scala	/^object Product14 {$/;"	o
Product14	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product14.scala	/^trait Product14[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14] extends Product {$/;"	t
Product15	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product15.scala	/^object Product15 {$/;"	o
Product15	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product15.scala	/^trait Product15[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15] extends Product {$/;"	t
Product16	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product16.scala	/^object Product16 {$/;"	o
Product16	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product16.scala	/^trait Product16[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16] extends Product {$/;"	t
Product17	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^object Product17 {$/;"	o
Product17	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^trait Product17[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17] extends Product {$/;"	t
Product18	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^object Product18 {$/;"	o
Product18	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^trait Product18[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18] extends Product {$/;"	t
Product19	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^object Product19 {$/;"	o
Product19	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^trait Product19[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19] extends Product {$/;"	t
Product2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product2.scala	/^object Product2 {$/;"	o
Product2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product2.scala	/^trait Product2[+T1, +T2] extends Product {$/;"	t
Product20	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^object Product20 {$/;"	o
Product20	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^trait Product20[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19, +T20] extends Product {$/;"	t
Product21	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^object Product21 {$/;"	o
Product21	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^trait Product21[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19, +T20, +T21] extends Product {$/;"	t
Product22	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^object Product22 {$/;"	o
Product22	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^trait Product22[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19, +T20, +T21, +T22] extends Product {$/;"	t
Product3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product3.scala	/^object Product3 {$/;"	o
Product3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product3.scala	/^trait Product3[+T1, +T2, +T3] extends Product {$/;"	t
Product4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product4.scala	/^object Product4 {$/;"	o
Product4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product4.scala	/^trait Product4[+T1, +T2, +T3, +T4] extends Product {$/;"	t
Product5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product5.scala	/^object Product5 {$/;"	o
Product5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product5.scala	/^trait Product5[+T1, +T2, +T3, +T4, +T5] extends Product {$/;"	t
Product6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product6.scala	/^object Product6 {$/;"	o
Product6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product6.scala	/^trait Product6[+T1, +T2, +T3, +T4, +T5, +T6] extends Product {$/;"	t
Product7	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product7.scala	/^object Product7 {$/;"	o
Product7	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product7.scala	/^trait Product7[+T1, +T2, +T3, +T4, +T5, +T6, +T7] extends Product {$/;"	t
Product8	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product8.scala	/^object Product8 {$/;"	o
Product8	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product8.scala	/^trait Product8[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8] extends Product {$/;"	t
Product9	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product9.scala	/^object Product9 {$/;"	o
Product9	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product9.scala	/^trait Product9[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9] extends Product {$/;"	t
Production	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^    val Production = Value(4, "Production")$/;"	V
Profile	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^    val Profile = Value(6, "Profile")$/;"	V
ProfileActionMarkup	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class ProfileActionMarkup(markup: NodeSeq) extends FacebookParam("profile_action", markup) with SetFbmlParam$/;"	c
ProfileActionMarkup	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class ProfileActionMarkup(markup: NodeSeq) extends FacebookParam("profile_action", markup) with SetFbmlParam$/;"	m
ProfileMarkup	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class ProfileMarkup(markup: NodeSeq) extends FacebookParam("profile", markup) with SetFbmlParam$/;"	c
ProfileMarkup	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class ProfileMarkup(markup: NodeSeq) extends FacebookParam("profile", markup) with SetFbmlParam$/;"	m
Project	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^  case class Project(name: String, startDate: Date, lang: Option[Language], teams: List[Team])$/;"	c
Project	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^  case class Project(name: String, startDate: Date, lang: Option[Language], teams: List[Team])$/;"	m
Project	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  case class Project(name: String, startDate: Date, lang: Option[Language], teams: List[Team])$/;"	c
Project	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  case class Project(name: String, startDate: Date, lang: Option[Language], teams: List[Team])$/;"	m
Projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^   trait Projection[A] extends RandomAccessSeq.MutableProjection[A] with ArrayLike[A] {$/;"	t
Projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  trait Projection[+A] extends Iterable[A] {$/;"	t
Projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^  trait Projection[+A] extends Seq.Projection[A] with RandomAccessSeq[A] {$/;"	t
Projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  trait Projection[+A] extends Seq[A] with Iterable.Projection[A]  {$/;"	t
Projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^  trait Projection[A, +B] extends Iterable.Projection[(A, B)] with Map[A, B]$/;"	t
Projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  class Projection[A] extends Collection.Projection[A] with RandomAccessSeq.MutableProjection[A] with Projection0[A] with Buffer[A] {$/;"	c
Projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Collection.scala	/^  trait Projection[A] extends Collection[A] with MutableIterable.Projection[A] {$/;"	t
Projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^  trait Projection[K,E] extends MutableIterableProjection[(K,E)] with scala.collection.Map.Projection[K,E] with Map[K,E] {$/;"	t
Projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^  trait Projection[A] extends MutableIterable[A] with Iterable.Projection[A] {$/;"	t
Projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^  trait Projection[A] extends MutableSeq[A] with MutableIterable.Projection[A] with Seq.Projection[A] {$/;"	t
Projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^  trait Projection[A] extends Collection.Projection[A] with Set[A] {$/;"	t
Projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^  trait Projection[K,E] extends Map.Projection[K,E] with SortedMap[K,E] {$/;"	t
Projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^  trait Projection[A] extends Set.Projection[A] with SortedSet[A] {$/;"	t
Projection0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  trait Projection0[A] extends MutableSeq.Projection[A] with RandomAccessSeq.Projection[A] {$/;"	t
PropBytes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^      val defPropBytes = defaultProps.toString.getBytes("UTF-8")$/;"	f
Properties	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Properties.scala	/^object Properties {$/;"	o
Props	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^object Props {$/;"	o
ProtoDBVendor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^trait ProtoDBVendor extends ConnectionManager {$/;"	t
ProtoExtendedSession	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^trait ProtoExtendedSession[T <: ProtoExtendedSession[T]] extends$/;"	t
ProtoStateMachine	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^trait ProtoStateMachine[MyType <: ProtoStateMachine[MyType, StateType],$/;"	t
ProtoTag	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala	/^abstract class ProtoTag[MyType <: ProtoTag[MyType]] extends KeyedMapper[Long, MyType] with Ordered[MyType] {$/;"	a
ProtoTag	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala	/^abstract class ProtoTag[MyType <: ProtoTag[MyType]] extends KeyedMapper[Long, MyType] with Ordered[MyType] {$/;"	c
ProtoUser	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^trait ProtoUser[T <: ProtoUser[T]] extends KeyedMapper[Long, T] with UserIdAsString {$/;"	t
Provider	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^  trait Provider {$/;"	t
Proxy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Proxy.scala	/^trait Proxy {$/;"	t
ProxyFuncHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private[http] class ProxyFuncHolder(proxyTo: AFuncHolder, _owner: Box[String]) extends AFuncHolder {$/;"	c
PublicID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ExternalID.scala	/^case class PublicID(publicId: String, systemId: String)$/;"	c
PublicID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ExternalID.scala	/^case class PublicID(publicId: String, systemId: String)$/;"	m
PublishAction	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class PublishAction(title: NodeSeq, publishParams: PublishActionParam*) extends FacebookMethod("facebook.feed.publishActionOfUser", (Title(title) :: publishParams.toList): _*)$/;"	c
PublishAction	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class PublishAction(title: NodeSeq, publishParams: PublishActionParam*) extends FacebookMethod("facebook.feed.publishActionOfUser", (Title(title) :: publishParams.toList): _*)$/;"	m
PublishActionParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^trait PublishActionParam extends FacebookParam$/;"	t
PublishStory	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class PublishStory(title: NodeSeq, publishParams: PublishStoryParam*) extends FacebookMethod("facebook.feed.publishStoryToUser", (Title(title) :: publishParams.toList): _*)$/;"	c
PublishStory	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class PublishStory(title: NodeSeq, publishParams: PublishStoryParam*) extends FacebookMethod("facebook.feed.publishStoryToUser", (Title(title) :: publishParams.toList): _*)$/;"	m
PublishStoryParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^trait PublishStoryParam extends FacebookParam$/;"	t
Publisher	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Publisher.scala	/^trait Publisher[A, This <: Publisher[A, This]] { self: This =>$/;"	t
PullParserExample	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/PullParserExample.scala	/^object PullParserExample extends Specification {$/;"	o
PullParserExampleTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/PullParserExample.scala	/^class PullParserExampleTest extends Runner(PullParserExample) with JUnit$/;"	c
PutBack	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^  trait PutBack[+A] extends Advanced[A] {$/;"	t
PutRequest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^case object PutRequest extends RequestType {$/;"	o
Q	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  type Q = MappedForeignKey[AnyBound, A, OO] with MappedField[AnyBound, A] forSome$/;"	T
Q	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^        val Q = nfa.next(P,label)$/;"	V
Q	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^      val Q = w$/;"	V
QNode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/QNode.scala	/^object QNode {$/;"	o
Qop	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^object Qop extends Enumeration(0, "auth", "auth-int", "auth,auth-int") {$/;"	o
Query	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class Query(query: String) extends FacebookParam("query", query)$/;"	c
Query	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class Query(query: String) extends FacebookParam("query", query)$/;"	m
QueryExamples	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/QueryExamples.scala	/^object QueryExamples extends Specification {$/;"	o
QueryExamplesTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/QueryExamples.scala	/^class QueryExamplesTest extends Runner(QueryExamples) with JUnit$/;"	c
QueryParam	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^sealed trait QueryParam[O<:Mapper[O]]$/;"	t
Queue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^class Queue[+A](elem: A*) extends Seq[A] {$/;"	c
Queue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^object Queue {$/;"	o
Queue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Queue.scala	/^class Queue[A] extends MutableList[A] with CloneableCollection {$/;"	c
QueueModule	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^trait QueueModule[A] {$/;"	t
QueueProxy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/QueueProxy.scala	/^trait QueueProxy[A] extends Queue[A] with SeqProxy[A] {$/;"	t
Quoted	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Quoted(first: List[Textile],$/;"	c
Quoted	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Quoted(first: List[Textile],$/;"	m
Quotes	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object Quotes extends FacebookField("quotes")$/;"	o
RE	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^object RE {$/;"	o
RED	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  final val RED        = "\\033[31m"$/;"	V
RED_B	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  final val RED_B      = "\\033[41m"$/;"	V
REDoer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^class REDoer[T](val pattern: String, val func: Box[PartialFunction[(T, List[String]), T]]) extends Function2[T, String, Box[T]] {$/;"	c
REF	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  val REF = 0$/;"	V
REMatcher	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^class REMatcher(val str: String, val compiled: Pattern) {$/;"	c
REMatcher	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^object REMatcher {$/;"	o
REQUIRED	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case object REQUIRED extends DefaultDecl {$/;"	o
RESET	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  final val RESET      = "\\033[0m"$/;"	V
REVERSED	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  final val REVERSED   = "\\033[7m"$/;"	V
RPAREN	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Tokens.scala	/^  final val RPAREN       = 4$/;"	V
RSA_SHA1	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  val RSA_SHA1 = "RSA-SHA1"$/;"	V
RSSFeed	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/rssfeed/RSSfeed.scala	/^class RSSFeed {$/;"	c
RSSFeed	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/rssfeed/RSSfeed.scala	/^object RSSFeed {$/;"	o
RSSFeedDemo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/RSSFeedDemo.scala	/^class RSSFeedDemo {$/;"	c
Random	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Random.scala	/^class Random(val self: java.util.Random) {$/;"	c
Random	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Random.scala	/^class Random(val self: java.util.Random) {$/;"	c
RandomAccessSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^object RandomAccessSeq {$/;"	o
RandomAccessSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^trait RandomAccessSeq[+A] extends Seq[A] {$/;"	t
RandomAccessSeqProxy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeqProxy.scala	/^trait RandomAccessSeqProxy[+A] extends RandomAccessSeq[A] with SeqProxy[A] {$/;"	t
Range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Range.scala	/^class Range(val start: Int, val end: Int, val step: Int) extends RandomAccessSeq.Projection[Int] {$/;"	c
Range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Range.scala	/^object Range {$/;"	o
Range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  protected class Range(var from : Option[Int], var until : Option[Int]) extends Buffer[A] {$/;"	c
Range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^  protected class Range(from : Option[Int], until : Option[Int]) extends super.Range(from,until) with BufferWrapper[A] {$/;"	c
Range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^  protected class Range(from : Option[K], until : Option[K]) extends super.Filter(key => {$/;"	c
Range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^  protected def Range(from : Option[K], until : Option[K]) : SortedMap.Projection[K,E] = new Range(from,until);$/;"	f
Range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMapWrapper.scala	/^  override protected def Range(from : Option[K], until : Option[K]) = new Range(from,until);$/;"	f
Range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMapWrapper.scala	/^  protected class Range(from : Option[K], until : Option[K]) extends super.Range(from,until) with SortedMapWrapper[K,E] {$/;"	c
Range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^  protected class Range(from : Option[A], until : Option[A]) extends Filter(key => {$/;"	c
Range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSetWrapper.scala	/^  protected class Range(from : Option[A], until : Option[A]) extends super.Range(from, until) with SortedSetWrapper[A] {$/;"	c
RangeIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    class RangeIterator extends BufferIterator[Int,A] {$/;"	c
RangeIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^    class RangeIterator(underlying : MutableIterator[A]#Buffered) extends MutableIterator[A] {$/;"	c
Ranged	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Ranged.scala	/^trait Ranged[K, +A] extends Iterable[A] {$/;"	t
Ranged	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Ranged.scala	/^trait Ranged[K,A] extends scala.collection.Ranged[K,A] with MutableIterable[A] {$/;"	t
ReRender	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class ReRender(doAll: Boolean) extends CometMessage$/;"	c
ReRender	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class ReRender(doAll: Boolean) extends CometMessage$/;"	m
ReadItAll	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/IoHelpers.scala	/^      class ReadItAll(in: InputStream, done: String => Unit) extends Runnable {$/;"	c
Reader	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/Reader.scala	/^abstract class Reader[+T] {$/;"	a
Reader	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/Reader.scala	/^abstract class Reader[+T] {$/;"	c
Ready	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^private case class Ready(js: JsCmd)$/;"	c
Ready	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^private case class Ready(js: JsCmd)$/;"	m
RealType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  type RealType <: Mapper[RealType]$/;"	T
RealType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  type RealType = A$/;"	T
Rec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  case class Rec(n: Int, xs: List[Rec])$/;"	c
Rec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  case class Rec(n: Int, xs: List[Rec])$/;"	m
Receiver	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^  private class Receiver[A](receiver: PartialFunction[Message, A]) extends PreReceiver {$/;"	c
RecipientIds	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class RecipientIds(recipientIds: Long*) extends FacebookParam("to_ids", recipientIds.mkString(",")) with SendNotificationParam$/;"	c
RecipientIds	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class RecipientIds(recipientIds: Long*) extends FacebookParam("to_ids", recipientIds.mkString(",")) with SendNotificationParam$/;"	m
Record	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Record.scala	/^trait Record[MyType <: Record[MyType]] {$/;"	t
RecvMsg	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class RecvMsg(chat: Chat, msg: Message)$/;"	c
RecvMsg	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class RecvMsg(chat: Chat, msg: Message)$/;"	m
RecycledSegment	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case class RecycledSegment(seg: Array[Char]) extends Segment$/;"	c
RecycledSegment	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case class RecycledSegment(seg: Array[Char]) extends Segment$/;"	m
RedBlack	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^abstract class RedBlack[A] {$/;"	a
RedBlack	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^abstract class RedBlack[A] {$/;"	c
RedTree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^  case class RedTree[+B](override val key: A,$/;"	c
RedTree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^  case class RedTree[+B](override val key: A,$/;"	m
RedirectBackTo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  private object RedirectBackTo extends SessionVar[Box[String]](Empty)$/;"	o
RedirectResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class RedirectResponse(uri: String, cookies: HTTPCookie*) extends LiftResponse {$/;"	c
RedirectResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class RedirectResponse(uri: String, cookies: HTTPCookie*) extends LiftResponse {$/;"	m
RedirectState	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class RedirectState(func: Box[() => Unit], msgs: (String, NoticeType.Value)*)$/;"	c
RedirectState	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class RedirectState(func: Box[() => Unit], msgs: (String, NoticeType.Value)*)$/;"	m
RedirectState	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^object RedirectState {$/;"	o
RedirectTo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class RedirectTo(where: String) extends JsCmd {$/;"	c
RedirectTo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class RedirectTo(where: String) extends JsCmd {$/;"	m
RedirectWithState	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class RedirectWithState(override val uri: String, state: RedirectState, override val cookies: HTTPCookie*) extends RedirectResponse(uri, cookies: _*)$/;"	c
RedirectWithState	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class RedirectWithState(override val uri: String, state: RedirectState, override val cookies: HTTPCookie*) extends RedirectResponse(uri, cookies: _*)$/;"	m
Ref	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  case class Ref() extends RefDef$/;"	c
Ref	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  case class Ref() extends RefDef$/;"	m
RefAnchor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class RefAnchor(elems : List[Textile], ref : String, alt : String, attrs : List[Attribute]) extends ATextile(elems, attrs) {$/;"	c
RefAnchor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class RefAnchor(elems : List[Textile], ref : String, alt : String, attrs : List[Attribute]) extends ATextile(elems, attrs) {$/;"	m
RefDef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  abstract class RefDef$/;"	a
RefDef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  abstract class RefDef$/;"	c
RefHandle	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class RefHandle(handle: String) extends FacebookParam("handle", handle) with SetRefHandleParam$/;"	c
RefHandle	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class RefHandle(handle: String) extends FacebookParam("handle", handle) with SetRefHandleParam$/;"	m
Reference	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/Reference.scala	/^trait Reference[+T <: AnyRef] extends Function0[T] {$/;"	t
ReferenceQueue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/ReferenceQueue.scala	/^class ReferenceQueue[+T <: AnyRef] {$/;"	c
ReferenceWrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/ReferenceWrapper.scala	/^trait ReferenceWrapper[+T <: AnyRef] extends Reference[T] with Proxy {$/;"	t
Referer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  private object Referer extends ScreenVar[String](S.referer openOr "\/")$/;"	o
Referer	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  private object Referer extends WizardVar[String](S.referer openOr "\/")$/;"	o
Reflection	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  object Reflection {$/;"	o
RefreshImage	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class RefreshImage(imageUrl: String) extends FacebookMethod("facebook.fbml.refreshImgSrc", Url(imageUrl))$/;"	c
RefreshImage	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class RefreshImage(imageUrl: String) extends FacebookMethod("facebook.fbml.refreshImgSrc", Url(imageUrl))$/;"	m
RefreshImageParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^trait RefreshImageParam extends FacebookParam$/;"	t
RefreshRefParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^trait RefreshRefParam extends FacebookParam$/;"	t
RefreshRefURL	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class RefreshRefURL(refUrl: String) extends FacebookMethod("facebook.fbml.refreshRefUrl", Url(refUrl))$/;"	c
RefreshRefURL	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class RefreshRefURL(refUrl: String) extends FacebookMethod("facebook.fbml.refreshRefUrl", Url(refUrl))$/;"	m
RefundedPayment	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val RefundedPayment = Value(8, "Refunded")$/;"	V
RegExp	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^  abstract class RegExp {$/;"	a
RegExp	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^  abstract class RegExp {$/;"	c
Regex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^class Regex(regex: String, groupNames: String*) {$/;"	c
Regex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^object Regex {$/;"	o
RegexParsers	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/RegexParsers.scala	/^trait RegexParsers extends Parsers {$/;"	t
RegexTest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/testing/RegexTest.scala	/^object RegexTest extends RegexParsers {$/;"	o
Register	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case object Register extends Textile {$/;"	o
Relationship	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object Relationship extends FacebookField("relationship_status")$/;"	o
RelationshipStatus	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object RelationshipStatus extends FacebookField("relationship_status")$/;"	o
Religion	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object Religion extends FacebookField("religion")$/;"	o
RelinkToActorWatcher	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case object RelinkToActorWatcher$/;"	o
Remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Message.scala	/^case class Remove[+A](elem: A) extends Message[A]$/;"	c
Remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Message.scala	/^case class Remove[+A](elem: A) extends Message[A]$/;"	m
RemoveAListener	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class RemoveAListener(who: SimpleActor[Any])$/;"	c
RemoveAListener	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class RemoveAListener(who: SimpleActor[Any])$/;"	m
RemoveListener	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class RemoveListener(actor: LiftActor)$/;"	c
RemoveListener	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class RemoveListener(actor: LiftActor)$/;"	m
RemoveSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^private[http] case class RemoveSession(sessionId: String)$/;"	c
RemoveSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^private[http] case class RemoveSession(sessionId: String)$/;"	m
RenderOut	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class RenderOut(xhtml: Box[NodeSeq], fixedXhtml: Box[NodeSeq], script: Box[JsCmd], destroyScript: Box[JsCmd], ignoreHtmlOnJs: Boolean) {$/;"	c
RenderOut	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class RenderOut(xhtml: Box[NodeSeq], fixedXhtml: Box[NodeSeq], script: Box[JsCmd], destroyScript: Box[JsCmd], ignoreHtmlOnJs: Boolean) {$/;"	m
RenderVersion	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^object RenderVersion {$/;"	o
Replace	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class Replace(id: String, content: NodeSeq) extends JsCmd with HtmlFixer {$/;"	c
Replace	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class Replace(id: String, content: NodeSeq) extends JsCmd with HtmlFixer {$/;"	m
ReplaceOptions	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class ReplaceOptions(select: String, opts: List[(String, String)], dflt: Box[String]) extends JsCmd {$/;"	c
ReplaceOptions	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class ReplaceOptions(select: String, opts: List[(String, String)], dflt: Box[String]) extends JsCmd {$/;"	m
ReplyTo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class ReplyTo(address: String) extends AddressType(address)$/;"	c
ReplyTo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class ReplyTo(address: String) extends AddressType(address)$/;"	m
ReportFailure	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^trait ReportFailure {$/;"	t
Req	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^class Req(val path: ParsePath,$/;"	c
Req	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^object Req {$/;"	o
RequestMemoize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^abstract class RequestMemoize[K, V] extends MemoizeVar[K, V] {$/;"	a
RequestMemoize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^abstract class RequestMemoize[K, V] extends MemoizeVar[K, V] {$/;"	c
RequestToken	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^    val RequestToken = oathPathPrefix ::: List("request_token")$/;"	V
RequestType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^abstract class RequestType {$/;"	a
RequestType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^abstract class RequestType {$/;"	c
RequestType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^object RequestType {$/;"	o
RequestVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^abstract class RequestVar[T](dflt: => T) extends AnyVar[T, RequestVar[T]](dflt) with HasLogUnreadVal {$/;"	a
RequestVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^abstract class RequestVar[T](dflt: => T) extends AnyVar[T, RequestVar[T]](dflt) with HasLogUnreadVal {$/;"	c
RequestVarEM	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-jpa/src/main/scala/net/liftweb/jpa/RequestVarEM.scala	/^trait RequestVarEM extends ScalaEntityManager with ScalaEMFactory {$/;"	t
RequestVarHandler	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^private[http] object RequestVarHandler extends CoreRequestVarHandler {$/;"	o
Required	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  object Required extends TransactionMonad {$/;"	o
RequiresNew	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  object RequiresNew extends TransactionMonad {$/;"	o
Reset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Message.scala	/^case class Reset[+A]() extends Message[A]$/;"	c
Reset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Message.scala	/^case class Reset[+A]() extends Message[A]$/;"	m
ResetContentResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class ResetContentResponse() extends LiftResponse with HeaderStuff {$/;"	c
ResetContentResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class ResetContentResponse() extends LiftResponse with HeaderStuff {$/;"	m
ResizableArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ResizableArray.scala	/^trait ResizableArray[A] extends RandomAccessSeq[A] {$/;"	t
ResourceBundleFactoryPF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  type ResourceBundleFactoryPF = PartialFunction[(String, Locale), ResourceBundle]$/;"	T
ResourceServer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResourceServer.scala	/^object ResourceServer {$/;"	o
ResourceServerSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/http/ResourceServerSpec.scala	/^object ResourceServerSpec extends Specification {$/;"	o
ResourceServerSpecTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/http/ResourceServerSpec.scala	/^class ResourceServerSpecTest extends Runner(ResourceServerSpec) with JUnit with Console$/;"	c
Responder	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Responder.scala	/^abstract class Responder[+A] {$/;"	a
Responder	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Responder.scala	/^abstract class Responder[+A] {$/;"	c
Responder	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Responder.scala	/^object Responder {$/;"	o
Response	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^trait Response {$/;"	t
ResponseInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^object ResponseInfo {$/;"	o
ResponseInfoHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^class ResponseInfoHolder {$/;"	c
ResponsePath	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  lazy val ResponsePath = "response"$/;"	V
ResponseShortcutException	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResponseShortcutException.scala	/^class ResponseShortcutException(_response: => LiftResponse, val doNotices: Boolean) extends Exception("Shortcut") {$/;"	c
ResponseShortcutException	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResponseShortcutException.scala	/^object ResponseShortcutException {$/;"	o
RestAPI	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/api/RestAPI.scala	/^object RestAPI  {$/;"	o
Result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/Parsers.scala	/^    type Result = Option[(A, inputType)]$/;"	T
ReturnAndDo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  trait ReturnAndDo[T]{$/;"	t
ReturnedPayment	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val ReturnedPayment = Value(9, "Returned")$/;"	V
ReversedPayment	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val ReversedPayment = Value(10, "Reversed")$/;"	V
RevertableHistory	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/RevertableHistory.scala	/^class RevertableHistory[A <: Undoable, B] extends History[A, B] with Undoable {$/;"	c
RewriteFunc	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  type RewriteFunc = WikiURLInfo => (String, NodeSeq, Option[String])$/;"	T
RewriteHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  case class RewriteHolder(name: String, rewrite: LiftRules.RewritePF)$/;"	c
RewriteHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  case class RewriteHolder(name: String, rewrite: LiftRules.RewritePF)$/;"	m
RewritePF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  type RewritePF = PartialFunction[RewriteRequest, RewriteResponse]$/;"	T
RewriteRequest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^case class RewriteRequest(path: ParsePath, requestType: RequestType, httpRequest: HTTPRequest)$/;"	c
RewriteRequest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^case class RewriteRequest(path: ParsePath, requestType: RequestType, httpRequest: HTTPRequest)$/;"	m
RewriteResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^case class RewriteResponse(path: ParsePath, params: Map[String, String], stopRewriting: Boolean)$/;"	c
RewriteResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^case class RewriteResponse(path: ParsePath, params: Map[String, String], stopRewriting: Boolean)$/;"	m
RewriteResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^object RewriteResponse {$/;"	o
RewriteRule	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/RewriteRule.scala	/^abstract class RewriteRule extends BasicTransformer {$/;"	a
RewriteRule	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/RewriteRule.scala	/^abstract class RewriteRule extends BasicTransformer {$/;"	c
RichBoolean	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichBoolean.scala	/^final class RichBoolean(x: Boolean) extends Proxy with Ordered[Boolean] {$/;"	c
RichByte	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichByte.scala	/^final class RichByte(x: Byte) extends Proxy with Ordered[Byte] {$/;"	c
RichChar	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichChar.scala	/^final class RichChar(x: Char) extends Proxy with Ordered[Char] {$/;"	c
RichDouble	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichDouble.scala	/^final class RichDouble(x: Double) extends Proxy with Ordered[Double] {$/;"	c
RichException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichException.scala	/^final class RichException(exc: Throwable) {$/;"	c
RichFloat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichFloat.scala	/^final class RichFloat(x: Float) extends Proxy with Ordered[Float] {$/;"	c
RichInt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichInt.scala	/^final class RichInt(start: Int) extends Proxy with Ordered[Int] {$/;"	c
RichLong	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichLong.scala	/^final class RichLong(x: Long) extends Proxy with Ordered[Long] {$/;"	c
RichShort	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichShort.scala	/^final class RichShort(start: Short) extends Proxy with Ordered[Short] {$/;"	c
RichSorting	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^class RichSorting[K <: Ordered[K]](s: Seq[K]) {$/;"	c
RichString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^final class RichString(val self: String) extends Proxy with RandomAccessSeq[Char] with Ordered[String] {$/;"	c
RichString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^object RichString {$/;"	o
RichStringBuilder	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichStringBuilder.scala	/^final class RichStringBuilder(val self : StringBuilder) extends RandomAccessSeq.Mutable[Char] with Proxy with Buffer[Char] {$/;"	c
Right	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^final case class Right[+A, +B](b: B) extends Either[A, B] { override def isRight = true }$/;"	c
Right	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^final case class Right[+A, +B](b: B) extends Either[A, B] { override def isRight = true }$/;"	m
RightProjection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^  final case class RightProjection[+A, +B](e: Either[A, B]) {$/;"	c
RightProjection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^  final case class RightProjection[+A, +B](e: Either[A, B]) {$/;"	m
Role	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/Role.scala	/^trait Role {$/;"	t
RollbackIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/RollbackIterator.scala	/^class RollbackIterator[+A](underlying: Iterator[A]) extends BufferedIterator.Default[A] {$/;"	c
Root	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  case object Root extends Expr;$/;"	o
RootPath	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  lazy val RootPath = rootPath$/;"	V
RootSymbol	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^case object RootSymbol extends Symbol {$/;"	o
RosterEntriesAdded	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class RosterEntriesAdded[T](entries: Collection[T])$/;"	c
RosterEntriesAdded	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class RosterEntriesAdded[T](entries: Collection[T])$/;"	m
RosterEntriesDeleted	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class RosterEntriesDeleted[T](entries: Collection[T])$/;"	c
RosterEntriesDeleted	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class RosterEntriesDeleted[T](entries: Collection[T])$/;"	m
RosterEntriesUpdated	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class RosterEntriesUpdated[T](entries: Collection[T])$/;"	c
RosterEntriesUpdated	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class RosterEntriesUpdated[T](entries: Collection[T])$/;"	m
RosterPresenceChanged	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class RosterPresenceChanged(p: Presence)$/;"	c
RosterPresenceChanged	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class RosterPresenceChanged(p: Presence)$/;"	m
RoundingMode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^    type RoundingMode = Value$/;"	T
RoundingMode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  object RoundingMode extends Enumeration {$/;"	o
RoutingType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  sealed abstract class RoutingType extends MailTypes$/;"	a
RoutingType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  sealed abstract class RoutingType extends MailTypes$/;"	c
RsvpAttending	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object RsvpAttending extends FacebookParam("rsvp_status", "attending") with GetEventsParam$/;"	o
RsvpDeclined	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object RsvpDeclined extends FacebookParam("rsvp_status", "declined") with GetEventsParam$/;"	o
RsvpNotReplied	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object RsvpNotReplied extends FacebookParam("rsvp_status", "not_replied") with GetEventsParam$/;"	o
RsvpUnsure	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object RsvpUnsure extends FacebookParam("rsvp_status", "unsure") with GetEventsParam$/;"	o
Rule	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/jolib.scala	/^  type Rule = PartialFunction[List[Any], Unit]$/;"	T
RuleTransformer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/RuleTransformer.scala	/^class RuleTransformer(rules: RewriteRule*) extends BasicTransformer {$/;"	c
RulesSeq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^object RulesSeq {$/;"	o
RulesSeq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^trait RulesSeq[T] {$/;"	t
Run	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class Run(text: String) extends JsCmd {$/;"	c
Run	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class Run(text: String) extends JsCmd {$/;"	m
RunModes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  object RunModes extends Enumeration {$/;"	o
RunWebApp	/Users/Mads/Dev/logicOfScientificDiscovery/src/test/scala/RunWebApp.scala	/^object RunWebApp extends Application {$/;"	o
Runnable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  type Runnable      = java.lang.Runnable$/;"	T
RunnerHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private case class RunnerHolder(name: String, func: S.AFuncHolder, owner: Box[String])$/;"	c
RunnerHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private case class RunnerHolder(name: String, func: S.AFuncHolder, owner: Box[String])$/;"	m
RuntimeException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  type RuntimeException                = java.lang.RuntimeException$/;"	T
S	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^object S extends HasParams {$/;"	o
S	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Tokens.scala	/^  final val S            = 13$/;"	V
SERVER_ADDR	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  val SERVER_ADDR = "http:\/\/" + FB_SERVER$/;"	V
SERVER_URL	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  val SERVER_URL = new URL(SERVER_ADDR)$/;"	V
SFuncHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  object SFuncHolder {$/;"	o
SFuncHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private final class SFuncHolder(val func: String => Any, val owner: Box[String]) extends AFuncHolder {$/;"	c
SHORT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static final int CHAR = 0, BYTE = 1, SHORT = 2, INT = 3, LONG = 4, FLOAT = 5, DOUBLE = 6, OTHER = 7;$/;"	f	class:BoxesRunTime	file:
SHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^object SHtml {$/;"	o
SIGNATURE_INVALID	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^    val SIGNATURE_INVALID = ("signature_invalid", UNAUTHORIZED)$/;"	V
SIGNATURE_METHODS	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^  val SIGNATURE_METHODS = Map("HMAC-SHA1" -> HMAC_SHA1,$/;"	V
SIGNATURE_METHOD_REJECTED	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^    val SIGNATURE_METHOD_REJECTED = ("signature_method_rejected", BAD_REQUEST)$/;"	V
SINGLE_PARAMETERS	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthValidator.scala	/^  val SINGLE_PARAMETERS = Set(OAuthUtil.OAUTH_CONSUMER_KEY, OAuthUtil.OAUTH_TOKEN, OAuthUtil.OAUTH_TOKEN_SECRET,$/;"	V
SPU	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  abstract class SPU[T] {$/;"	a
SPU	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  abstract class SPU[T] {$/;"	c
STAR	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Tokens.scala	/^  final val STAR         = 6$/;"	V
SU	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  private final val SU: Char = 0x1A$/;"	V
SUnit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^object SUnit {$/;"	o
Safe	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Safe.scala	/^object Safe {$/;"	o
SafeNodeSeq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Helpers.scala	/^object SafeNodeSeq {$/;"	o
SafeSave	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/lib/SafeSave.scala	/^trait SafeSave[T <: LongKeyedMapper[T]] { this: LongKeyedMetaMapper[T] => $/;"	t
SafeSeqParser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^trait SafeSeqParser extends Parsers {$/;"	t
SampleModel	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^class SampleModel extends KeyedMapper[Long, SampleModel] {$/;"	c
SampleModel	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^object SampleModel extends SampleModel with KeyedMetaMapper[Long, SampleModel] {$/;"	o
SampleTag	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^class SampleTag extends LongKeyedMapper[SampleTag] with IdPK {$/;"	c
SampleTag	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^object SampleTag extends SampleTag with LongKeyedMetaMapper[SampleTag] {$/;"	o
ScalaBeanInfo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/ScalaBeanInfo.scala	/^abstract class ScalaBeanInfo(clazz: java.lang.Class[_], $/;"	a
ScalaBeanInfo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/ScalaBeanInfo.scala	/^abstract class ScalaBeanInfo(clazz: java.lang.Class[_], $/;"	c
ScalaObject	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ScalaObject.scala	/^trait ScalaObject extends AnyRef {$/;"	t
ScalaRunTime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^object ScalaRunTime {$/;"	o
Scanner	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/Scanners.scala	/^  class Scanner(in: Reader[Char]) extends Reader[Token] {$/;"	c
Scanner	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/Scanners.scala	/^  class Scanner(in: Reader[Char]) extends Reader[Token] {$/;"	c
Scanner	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Scanner.scala	/^class Scanner extends Tokens with parsing.TokenTests {$/;"	c
Scanners	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/Scanners.scala	/^trait Scanners extends Parsers {$/;"	t
Scanners	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/Scanners.scala	/^trait Scanners extends Parsers {$/;"	t
Scheduled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ActorPing.scala	/^case object Scheduled$/;"	o
Schemifier	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^object Schemifier {$/;"	o
Scientist	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^	val Scientist = Value("Scientist") $/;"	V
Scientist	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^class Scientist extends BaseSource with BaseSourceTrait[Scientist] {$/;"	c
Scientist	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^object Scientist extends Scientist with MetaBaseSourceTrait[Scientist] {$/;"	o
Scope	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  class Scope[binderType <: NameElement] extends Iterable[binderType]{$/;"	c
ScopeIsMappable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  implicit def ScopeIsMappable[bt <: NameElement <% Mappable[bt]](scope: Scope[bt]): Mappable[Scope[bt]] = $/;"	f
Screen	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  trait Screen extends AbstractScreen {$/;"	t
ScreenFieldInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  protected case class ScreenFieldInfo(field: FieldIdentifier, text: NodeSeq, help: Box[NodeSeq], input: Box[NodeSeq])$/;"	c
ScreenFieldInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  protected case class ScreenFieldInfo(field: FieldIdentifier, text: NodeSeq, help: Box[NodeSeq], input: Box[NodeSeq])$/;"	m
ScreenSnapshot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  protected class ScreenSnapshot(private[http] val screenVars: Map[String, (NonCleanAnyVar[_], Any)],$/;"	c
ScreenVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  abstract class ScreenVar[T](dflt: => T) extends NonCleanAnyVar[T](dflt) {$/;"	a
ScreenVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  abstract class ScreenVar[T](dflt: => T) extends NonCleanAnyVar[T](dflt) {$/;"	c
ScreenVarHandler	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  private object ScreenVarHandler {$/;"	o
ScreenVars	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  private object ScreenVars extends RequestVar[Map[String, (NonCleanAnyVar[_], Any)]](Map())$/;"	o
ScreenVars	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  private object ScreenVars extends RequestVar[Map[String, (NonCleanAnyVar[_], Any)]](Map())$/;"	o
Script	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  object Script {$/;"	o
Script	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Message.scala	/^class Script[A] extends ArrayBuffer[Message[A]] with Message[A] {$/;"	c
ScriptRenderer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/ScriptRenderer.scala	/^object ScriptRenderer {$/;"	o
Scriptable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Scriptable.scala	/^trait Scriptable[A] {$/;"	t
SecondImage	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class SecondImage(imageUrl: String) extends FacebookParam("image_2", imageUrl) with PublishStoryParam with PublishActionParam$/;"	c
SecondImage	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class SecondImage(imageUrl: String) extends FacebookParam("image_2", imageUrl) with PublishStoryParam with PublishActionParam$/;"	m
SecondImageLink	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class SecondImageLink(imageUrl: String) extends FacebookParam("image_2_link", imageUrl) with PublishStoryParam with PublishActionParam$/;"	c
SecondImageLink	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class SecondImageLink(imageUrl: String) extends FacebookParam("image_2_link", imageUrl) with PublishStoryParam with PublishActionParam$/;"	m
SecurityHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^object SecurityHelpers extends StringHelpers with IoHelpers$/;"	o
SecurityHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^trait SecurityHelpers { self: StringHelpers with IoHelpers =>$/;"	t
SecurityHelpersSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/SecurityHelpersSpec.scala	/^object SecurityHelpersSpec extends Specification with SecurityHelpers with IoHelpers with StringHelpers {$/;"	o
SecurityHelpersSpecTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/SecurityHelpersSpec.scala	/^class SecurityHelpersSpecTest extends JUnit4(SecurityHelpersSpec)$/;"	c
Segment	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  sealed trait Segment {$/;"	t
Segments	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  private[json] object Segments {$/;"	o
Select	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Select(qual: Tree, sym: Symbol) extends Tree$/;"	c
Select	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Select(qual: Tree, sym: Symbol) extends Tree$/;"	m
SelectableField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^trait SelectableField {$/;"	t
SendMsg	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class SendMsg(to: String, msg: String)$/;"	c
SendMsg	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class SendMsg(to: String, msg: String)$/;"	m
SendNotificationParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^trait SendNotificationParam extends FacebookParam$/;"	t
SendNotifications	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class SendNotifications(notification: NodeSeq, recipients: Long*) extends FacebookMethod("facebook.notifications.send", RecipientIds(recipients: _*), Notification(notification))$/;"	c
SendNotifications	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class SendNotifications(notification: NodeSeq, recipients: Long*) extends FacebookMethod("facebook.notifications.send", RecipientIds(recipients: _*), Notification(notification))$/;"	m
Seq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^object Seq {$/;"	o
Seq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^trait Seq[+A] extends AnyRef with PartialFunction[Int, A] with Collection[A] {$/;"	t
Seq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  def Seq[a](xs: a*): Seq[a] = null \/\/ interpreted specially by new backend.$/;"	f
SeqIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SeqIterator.scala	/^trait SeqIterator[K,A] extends MutableIterator[A] {$/;"	t
SeqProxy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^trait SeqProxy[+A] extends Seq[A] with CollectionProxy[A] {$/;"	t
Sequ	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^  case class Sequ(rs: _regexpT*) extends RegExp {$/;"	c
Sequ	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^  case class Sequ(rs: _regexpT*) extends RegExp {$/;"	m
Serbench	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^object Serbench extends Benchmark {$/;"	o
SerialVersionUID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SerialVersionUID.scala	/^class SerialVersionUID(uid: Long) extends StaticAnnotation$/;"	c
Serialization	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Serialization.scala	/^object Serialization {$/;"	o
SerializationExamples	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^object SerializationExamples extends Specification {$/;"	o
SerializationExamplesTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^class SerializationExamplesTest extends Runner(SerializationExamples, ShortTypeHintExamples, FullTypeHintExamples, CustomClassExamples) with JUnit$/;"	c
SerializedConsumer	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^class SerializedConsumer[T](channel: Channel, a: LiftActor) extends DefaultConsumer(channel) {$/;"	c
Server	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/QueryExamples.scala	/^    case class Server(ip: String, uptime: Long)$/;"	c
Server	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/QueryExamples.scala	/^    case class Server(ip: String, uptime: Long)$/;"	m
Service	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ActorPingSpec.scala	/^  class Service extends LiftActor {$/;"	c
ServiceUnavailableResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class ServiceUnavailableResponse(retryAfter: Long) extends LiftResponse {$/;"	c
ServiceUnavailableResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class ServiceUnavailableResponse(retryAfter: Long) extends LiftResponse {$/;"	m
ServletAsyncProvider	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/ServletAsyncProvider.scala	/^trait ServletAsyncProvider {$/;"	t
ServletFilterProvider	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/ServletFilterProvider.scala	/^trait ServletFilterProvider extends Filter with HTTPProvider {$/;"	t
SessionInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/MemoizeTest.scala	/^object SessionInfo {$/;"	o
SessionKey	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/Facebook.scala	/^  object SessionKey extends SessionVar[Box[String]](sessionKey)$/;"	o
SessionMaster	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^object SessionMaster extends LiftActor {$/;"	o
SessionMemoize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^abstract class SessionMemoize[K, V] extends MemoizeVar[K, V] {$/;"	a
SessionMemoize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^abstract class SessionMemoize[K, V] extends MemoizeVar[K, V] {$/;"	c
SessionToServletBridge	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletSession.scala	/^case class SessionToServletBridge(uniqueId: String) extends HttpSessionBindingListener with HttpSessionActivationListener {$/;"	c
SessionToServletBridge	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletSession.scala	/^case class SessionToServletBridge(uniqueId: String) extends HttpSessionBindingListener with HttpSessionActivationListener {$/;"	m
SessionVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^abstract class SessionVar[T](dflt: => T) extends AnyVar[T, SessionVar[T]](dflt) {$/;"	a
SessionVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^abstract class SessionVar[T](dflt: => T) extends AnyVar[T, SessionVar[T]](dflt) {$/;"	c
SessionWatcherInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^case class SessionWatcherInfo(sessions: Map[String, LiftSession])$/;"	c
SessionWatcherInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^case class SessionWatcherInfo(sessions: Map[String, LiftSession])$/;"	m
SessionlessFacebookMethod	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^class SessionlessFacebookMethod(override val name: String, override val params: FacebookParam*) extends FacebookMethod(name, false, params: _*) {$/;"	c
Set	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  type Set[A] = collection.immutable.Set[A]$/;"	T
Set	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  val Set = collection.immutable.Set$/;"	V
Set	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Set.scala	/^trait Set[A] extends (A => Boolean) with Collection[A] {$/;"	t
Set	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set.scala	/^object Set {$/;"	o
Set	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set.scala	/^trait Set[A] extends AnyRef with collection.Set[A] {$/;"	t
Set	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^object Set {$/;"	o
Set	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^trait Set[A] extends scala.collection.mutable.Set[A] with Collection[A] {$/;"	t
Set	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Set.scala	/^object Set {$/;"	o
Set	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Set.scala	/^trait Set[A] extends collection.Set[A] with Scriptable[Message[A]] with CloneableCollection {$/;"	t
Set1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set1.scala	/^class Set1[A](elem1: A) extends Set[A] {$/;"	c
Set2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set2.scala	/^class Set2[A](elem1: A, elem2: A) extends Set[A] {$/;"	c
Set3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set3.scala	/^class Set3[A](elem1: A, elem2: A, elem3: A) extends Set[A] {$/;"	c
Set32	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  class Set32(val underlying: Int) extends SetXX {$/;"	c
Set32	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  def Set32 = new Set32$/;"	f
Set32	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  def Set32(underlying: Int) = new Set32(underlying)$/;"	f
Set4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set4.scala	/^class Set4[A](elem1: A, elem2: A, elem3: A, elem4: A) extends Set[A] {$/;"	c
Set64	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  class Set64(val underlying: Long) extends SetXX {$/;"	c
Set64	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  def Set64 = new Set64$/;"	f
Set64	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  def Set64(underlying: Long) = new Set64(underlying)$/;"	f
SetElemById	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class SetElemById(id: String, right: JsExp, then: String*) extends JsCmd {$/;"	c
SetElemById	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class SetElemById(id: String, right: JsExp, then: String*) extends JsCmd {$/;"	m
SetExp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class SetExp(left: JsExp, right: JsExp) extends JsCmd {$/;"	c
SetExp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class SetExp(left: JsExp, right: JsExp) extends JsCmd {$/;"	m
SetFBML	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class SetFBML(optionalParams: SetFbmlParam*) extends FacebookMethod("facebook.profile.setFBML", optionalParams: _*)$/;"	c
SetFBML	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class SetFBML(optionalParams: SetFbmlParam*) extends FacebookMethod("facebook.profile.setFBML", optionalParams: _*)$/;"	m
SetFbmlParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^trait SetFbmlParam extends FacebookParam$/;"	t
SetHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class SetHtml(uid: String, content: NodeSeq) extends JsCmd {$/;"	c
SetHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class SetHtml(uid: String, content: NodeSeq) extends JsCmd {$/;"	m
SetPresence	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class SetPresence(presence: Presence)$/;"	c
SetPresence	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case class SetPresence(presence: Presence)$/;"	m
SetProxy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SetProxy.scala	/^trait SetProxy[A] extends Set[A] with IterableProxy[A] {$/;"	t
SetProxy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SetProxy.scala	/^trait SetProxy[A] extends Set[A] with collection.SetProxy[A] {$/;"	t
SetRefHandle	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class SetRefHandle(handle: String, markup: NodeSeq) extends FacebookMethod("facebook.fbml.setRefHandle", RefHandle(handle), FBML(markup))$/;"	c
SetRefHandle	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class SetRefHandle(handle: String, markup: NodeSeq) extends FacebookMethod("facebook.fbml.setRefHandle", RefHandle(handle), FBML(markup))$/;"	m
SetRefHandleParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^trait SetRefHandleParam extends FacebookParam$/;"	t
SetStorage	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/SetStorage.scala	/^class SetStorage(file: File) extends CachedFileStorage(file) {$/;"	c
SetValById	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class SetValById(id: String, right: JsExp) extends JsCmd {$/;"	c
SetValById	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class SetValById(id: String, right: JsExp) extends JsCmd {$/;"	m
SetValueAndFocus	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class SetValueAndFocus(id: String, value: String) extends JsCmd {$/;"	c
SetValueAndFocus	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class SetValueAndFocus(id: String, value: String) extends JsCmd {$/;"	m
SetWrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SetWrapper.scala	/^trait SetWrapper[A] extends Set[A] with CollectionWrapper[A] {$/;"	t
SetXX	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  abstract class SetXX extends collection.immutable.Set[Value] {$/;"	a
SetXX	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  abstract class SetXX extends collection.immutable.Set[Value] {$/;"	c
SettableValueHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ValueHolder.scala	/^trait SettableValueHolder extends ValueHolder {$/;"	t
Sex	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object Sex extends FacebookField("sex")$/;"	o
ShortRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ShortRef.java	/^    public ShortRef(short elem) { this.elem = elem; }$/;"	m	class:ShortRef
ShortRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ShortRef.java	/^public class ShortRef implements java.io.Serializable {$/;"	c
ShortTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  val ShortTag = ".Short"$/;"	V
ShortTypeHintExamples	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^object ShortTypeHintExamples extends TypeHintExamples {$/;"	o
ShortTypeHints	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^case class ShortTypeHints(hints: List[Class[_]]) extends TypeHints {$/;"	c
ShortTypeHints	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^case class ShortTypeHints(hints: List[Class[_]]) extends TypeHints {$/;"	m
Show	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  class Show(val uid: String, val time: Box[TimeSpan]) extends JsCmd with HasTime {$/;"	c
Show	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  object Show {$/;"	o
Show	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/Show.scala	/^trait Show {$/;"	t
ShowAll	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msgs.scala	/^object ShowAll extends SessionVar[Boolean](false)$/;"	o
ShutDown	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^case object ShutDown$/;"	o
ShutDown	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  private object ShutDown$/;"	o
ShutdownIfPastLifespan	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case object ShutdownIfPastLifespan extends CometMessage$/;"	o
Signal	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/jolib.scala	/^  abstract class Signal(join: Join) {$/;"	a
Signal	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/jolib.scala	/^  abstract class Signal(join: Join) {$/;"	c
SignificantOther	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object SignificantOther extends FacebookField("significant_other_id")$/;"	o
SimpleActor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/SimpleActor.scala	/^trait SimpleActor[-T] {$/;"	t
SimpleController	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SimpleController.scala	/^trait SimpleController$/;"	t
SimpleInjector	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^trait SimpleInjector extends Injector {$/;"	t
SimpleOpenIdVendor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^object SimpleOpenIdVendor extends SimpleOpenIdVendor$/;"	o
SimpleOpenIdVendor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^trait SimpleOpenIdVendor extends OpenIdVendor {$/;"	t
SimplePaypal	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^object SimplePaypal extends PaypalIPN with PaypalPDT {$/;"	o
SimplePerson	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class SimplePerson(name: String, address: Address)$/;"	c
SimplePerson	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^case class SimplePerson(name: String, address: Address)$/;"	m
SimpleTokenizer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/SimpleTokenizer.scala	/^class SimpleTokenizer(in: Iterator[Char], delimiters: String) extends Iterator[String] {$/;"	c
SimplestActor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/SimpleActor.scala	/^trait SimplestActor extends SimpleActor[Any]$/;"	t
SimplestGenericActor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/SimpleActor.scala	/^trait SimplestGenericActor extends GenericActor[Any]$/;"	t
SingleLinkedList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SingleLinkedList.scala	/^abstract class SingleLinkedList[A, This >: Null <: SingleLinkedList[A, This]]$/;"	a
SingleLinkedList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SingleLinkedList.scala	/^abstract class SingleLinkedList[A, This >: Null <: SingleLinkedList[A, This]]$/;"	c
SingleQuote	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case object SingleQuote extends Textile  {$/;"	o
SingleType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Type.scala	/^case class SingleType(pre: Type, sym: Symbol) extends Type$/;"	c
SingleType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Type.scala	/^case class SingleType(pre: Type, sym: Symbol) extends Type$/;"	m
SiteMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^case class SiteMap(globalParamFuncs: List[PartialFunction[Box[Req], Loc.AnyLocParam]], kids: Menu*) extends HasKids  {$/;"	c
SiteMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^case class SiteMap(globalParamFuncs: List[PartialFunction[Box[Req], Loc.AnyLocParam]], kids: Menu*) extends HasKids  {$/;"	m
SiteMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^object SiteMap {$/;"	o
SiteMapException	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^class SiteMapException(msg: String) extends Exception(msg)$/;"	c
SkipDocType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/SkipDocType.scala	/^object SkipDocType extends DispatchSnippet {$/;"	o
Slf4jLogBoot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^object Slf4jLogBoot {$/;"	o
Slf4jLogger	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^class Slf4jLogger(val logger: Logger) extends LiftLogger {$/;"	c
Slice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^  private[scala] trait Slice[+A] extends Projection[A] {$/;"	t
SmallPic	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object SmallPic extends FacebookField("pic_small")$/;"	o
SnipMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  class SnipMap  {$/;"	c
Snippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class Snippet(name: String, func: NodeSeq => NodeSeq) extends AnyLocParam$/;"	c
Snippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class Snippet(name: String, func: NodeSeq => NodeSeq) extends AnyLocParam$/;"	m
SnippetDispatchPF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  type SnippetDispatchPF = PartialFunction[String, DispatchSnippet]$/;"	T
SnippetFailure	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  case class SnippetFailure(page: String, typeName: Box[String], failure: SnippetFailures.Value)$/;"	c
SnippetFailure	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  case class SnippetFailure(page: String, typeName: Box[String], failure: SnippetFailures.Value)$/;"	m
SnippetFailures	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  object SnippetFailures extends Enumeration {$/;"	o
SnippetPF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  type SnippetPF = PartialFunction[List[String], NodeSeq => NodeSeq]$/;"	T
SnippetPrefix	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  lazy val SnippetPrefix = "openId"$/;"	V
SnippetTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  type SnippetTest = PartialFunction[(String, Box[T]), NodeSeq => NodeSeq]$/;"	T
SoftReference	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/SoftReference.scala	/^class SoftReference[+T <: AnyRef](value : T, queue : ReferenceQueue[T]) extends ReferenceWrapper[T] {$/;"	c
SoftReferenceCache	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^class SoftReferenceCache[K, V](cacheSize: Int) {$/;"	c
SoftReferenceCache	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^object SoftReferenceCache {$/;"	o
SoftValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^class SoftValue[K, V](k: K,$/;"	c
Some	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^final case class Some[+A](x: A) extends Option[A] {$/;"	c
Some	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^final case class Some[+A](x: A) extends Option[A] {$/;"	m
Sorted	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Sorted.scala	/^trait Sorted[K,+A] extends Ranged[K,A] {$/;"	t
Sorted	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Sorted.scala	/^trait Sorted[K,A] extends scala.collection.Sorted[K,A] with Ranged[K,A] {$/;"	t
SortedMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedMap.scala	/^trait SortedMap[K,+E] extends Map[K,E] with Sorted[K,Tuple2[K,E]] {$/;"	t
SortedMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/SortedMap.scala	/^trait SortedMap[A,+B] extends Map[A,B] with collection.SortedMap[A,B] {$/;"	t
SortedMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^object SortedMap {$/;"	o
SortedMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^trait SortedMap[K,E] extends scala.collection.SortedMap[K,E] with Map[K,E] with Sorted[K,Tuple2[K,E]] {$/;"	t
SortedMapWrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMapWrapper.scala	/^trait SortedMapWrapper[K,E] extends SortedMap[K,E] with MapWrapper[K,E] {$/;"	t
SortedSelf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  final protected type SortedSelf = Buffer[A];$/;"	T
SortedSelf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Ranged.scala	/^  protected type SortedSelf <: Ranged[K,A];$/;"	T
SortedSelf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Sorted.scala	/^  override protected type SortedSelf <: Sorted[K,A];$/;"	T
SortedSelf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^  final protected type SortedSelf = SortedMap[K,E];$/;"	T
SortedSelf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^  final protected type SortedSelf = SortedSet[A];$/;"	T
SortedSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedSet.scala	/^trait SortedSet[A] extends Set[A] with Sorted[A, A] {$/;"	t
SortedSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/SortedSet.scala	/^trait SortedSet[A] extends scala.collection.SortedSet[A] with Set[A] {$/;"	t
SortedSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^object SortedSet {$/;"	o
SortedSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^trait SortedSet[A] extends scala.collection.SortedSet[A] with jcl.Set[A] with Sorted[A,A] {$/;"	t
SortedSetWrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSetWrapper.scala	/^trait SortedSetWrapper[A] extends SortedSet[A] with SetWrapper[A] {$/;"	t
Sorting	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^object Sorting {$/;"	o
Source	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^abstract class Source extends Iterator[Char] {$/;"	a
Source	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^abstract class Source extends Iterator[Char] {$/;"	c
Source	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^object Source {$/;"	o
SourceSnippet	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/SourceSnippet.scala	/^class SourceSnippet {$/;"	c
SourceTypes	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^object SourceTypes extends Enumeration { $/;"	o
SparklineStyle	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/sparklines/SparklineStyle.scala	/^object SparklineStyle extends Enumeration(0, "Sparkline",$/;"	o
Sparklines	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/sparklines/Sparklines.scala	/^object Sparklines {$/;"	o
SparklinesDemo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/SparklinesDemo.scala	/^class SparklinesDemo {$/;"	c
Spawn	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^  abstract class Spawn {$/;"	a
Spawn	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^  abstract class Spawn {$/;"	c
Special	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Special(tag: String, first: List[Textile], elems : List[Textile], attrs : List[Attribute], last:List[Textile]) extends ATextile(elems, attrs) {$/;"	c
Special	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Special(tag: String, first: List[Textile], elems : List[Textile], attrs : List[Attribute], last:List[Textile]) extends ATextile(elems, attrs) {$/;"	m
Special	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  object Special {$/;"	o
SpecialMailbox	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  private class SpecialMailbox extends MailboxItem(null.asInstanceOf[T]) {$/;"	c
SpecialNode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/SpecialNode.scala	/^abstract class SpecialNode extends Node with pull.XMLEvent {$/;"	a
SpecialNode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/SpecialNode.scala	/^abstract class SpecialNode extends Node with pull.XMLEvent {$/;"	c
SpecializedLiftActor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^trait SpecializedLiftActor[T] extends SimpleActor[T]  {$/;"	t
SpecificException	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      class SpecificException extends Exception$/;"	c
SplitSuffixPF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  type SplitSuffixPF = PartialFunction[List[String], (List[String], String)]$/;"	T
SqlServerBaseDriver	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^abstract class SqlServerBaseDriver extends DriverType("Microsoft SQL Server") {$/;"	a
SqlServerBaseDriver	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^abstract class SqlServerBaseDriver extends DriverType("Microsoft SQL Server") {$/;"	c
SqlServerDriver	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^object SqlServerDriver extends SqlServerBaseDriver {$/;"	o
SqlServerPre2005Driver	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^object SqlServerPre2005Driver extends SqlServerBaseDriver$/;"	o
SqlServerProvider	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^  object SqlServerProvider extends Provider with DbSetup {$/;"	o
SquarePic	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object SquarePic extends FacebookField("pic_square")$/;"	o
StV	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  type StV = StateType#Value$/;"	T
Stack	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^class Stack[+A] extends Seq[A] {$/;"	c
Stack	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^object Stack {$/;"	o
Stack	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Stack.scala	/^class Stack[A] extends Seq[A] with CloneableCollection {$/;"	c
StackOverflowError	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/compat/Platform.scala	/^  type StackOverflowError = java.lang.StackOverflowError$/;"	T
StackProxy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/StackProxy.scala	/^trait StackProxy[A] extends Stack[A] with SeqProxy[A] {$/;"	t
StackableMaker	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^trait StackableMaker[T] extends Maker[T] {$/;"	t
Staging	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^    val Staging = Value(3, "Staging")$/;"	V
StandardDBVendor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^class StandardDBVendor(driverName: String,$/;"	c
StandardTokenParsers	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/syntactical/StandardTokenParsers.scala	/^class StandardTokenParsers extends StdTokenParsers {$/;"	c
Star	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^  case class Star(r: _regexpT) extends RegExp {$/;"	c
Star	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^  case class Star(r: _regexpT) extends RegExp {$/;"	m
Start	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^private case class Start(snapshot: AFuncHolder)$/;"	c
Start	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^private case class Start(snapshot: AFuncHolder)$/;"	m
Start	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^case object Start$/;"	o
Start	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Location.scala	/^case object Start extends Location$/;"	o
StartAt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class StartAt[O<:Mapper[O]](start: Long) extends QueryParam[O]$/;"	c
StartAt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class StartAt[O<:Mapper[O]](start: Long) extends QueryParam[O]$/;"	m
StartTime	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class StartTime(startTime: Date) extends FacebookParam("start_time", startTime.getTime()) with GetEventsParam$/;"	c
StartTime	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class StartTime(startTime: Date) extends FacebookParam("start_time", startTime.getTime()) with GetEventsParam$/;"	m
State	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  type State <: CometState[Delta, State]$/;"	T
State	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  type State = {$/;"	T
State	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  class State(val name: StV,val trans: Seq[Meta#ATransition]) {$/;"	c
State	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  object State {$/;"	o
StatefulComet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^trait StatefulComet extends CometActor {$/;"	t
StatefulDispatchNotMatched	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val StatefulDispatchNotMatched = Value(3, "Stateful Snippet: Dispatch Not Matched")$/;"	V
StatefulSnippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/StatefulSnippet.scala	/^trait StatefulSnippet extends DispatchSnippet {$/;"	t
StatementConstantDescriptions	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^object StatementConstantDescriptions {$/;"	o
StaticAnnotation	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StaticAnnotation.scala	/^trait StaticAnnotation extends Annotation {}$/;"	t
StaticAttribute	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StaticAttribute.scala	/^trait StaticAttribute extends Attribute {}$/;"	t
Stats	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/Stats.scala	/^class Stats {$/;"	c
Status	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object Status extends FacebookField("status")$/;"	o
StatusHolder	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/uploadprogress/UploadProgress.scala	/^object StatusHolder extends SessionVar[Box[(Long, Long)]](Empty)$/;"	o
StdLexical	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/StdLexical.scala	/^class StdLexical extends Lexical with StdTokens {$/;"	c
StdLexical	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/StdLexical.scala	/^class StdLexical extends Lexical with StdTokens {$/;"	c
StdTokenParsers	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/syntactical/StdTokenParsers.scala	/^trait StdTokenParsers extends TokenParsers {$/;"	t
StdTokenParsers	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/StdTokenParsers.scala	/^trait StdTokenParsers extends TokenParsers {$/;"	t
StdTokens	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/StdTokens.scala	/^trait StdTokens extends Tokens {$/;"	t
StopClient	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^private case class StopClient()$/;"	c
StopClient	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^private case class StopClient()$/;"	m
StopValidationOnError	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^object StopValidationOnError {$/;"	o
StopValidationOnError	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^trait StopValidationOnError[T] extends Function1[T, List[FieldError]]$/;"	t
Str	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class Str(str: String) extends JsExp {$/;"	c
Str	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class Str(str: String) extends JsExp {$/;"	m
Str	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/testing/RegexTest.scala	/^case class Str(s: String)$/;"	c
Str	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/testing/RegexTest.scala	/^case class Str(s: String)$/;"	m
Stream	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^abstract class Stream[+A] extends Seq.Projection[A] {$/;"	a
Stream	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^abstract class Stream[+A] extends Seq.Projection[A] {$/;"	c
Stream	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^object Stream {$/;"	o
StreamCons	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/StreamCons.scala	/^final class StreamCons[T](xs: => Stream[T]) {$/;"	c
StreamReader	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/StreamReader.scala	/^object StreamReader {$/;"	o
StreamReader	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/StreamReader.scala	/^sealed class StreamReader(seq: PagedSeq[Char], off: Int, lnum: Int) extends PagedSeqReader(seq, off) {$/;"	c
StreamResponseProcessor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^private object StreamResponseProcessor {$/;"	o
StreamingResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^final case class StreamingResponse(data: {def read(buf: Array[Byte]): Int}, onEnd: () => Unit, size: Long, headers: List[(String, String)], cookies: List[HTTPCookie], code: Int) extends BasicResponse {$/;"	c
StreamingResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^final case class StreamingResponse(data: {def read(buf: Array[Byte]): Int}, onEnd: () => Unit, size: Long, headers: List[(String, String)], cookies: List[HTTPCookie], code: Int) extends BasicResponse {$/;"	m
StrictXHTML1_0Validator	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^object StrictXHTML1_0Validator extends GenericValidtor {$/;"	o
String	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  type String        = java.lang.String$/;"	T
StringAMQPSender	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^class StringAMQPSender(cf: ConnectionFactory, host: String, port: Int, exchange: String, routingKey: String) $/;"	c
StringAdd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/StringAdd.scala	/^final class StringAdd(self: Any) {$/;"	c
StringBuilder	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^final class StringBuilder(initCapacity: Int, private val initValue: String)$/;"	c
StringBuilder	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^object StringBuilder {$/;"	o
StringField	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^trait StringField extends FieldIdentifier {$/;"	t
StringField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^class StringField[OwnerType <: Record[OwnerType]](rec: OwnerType, maxLength: Int) extends Field[String, OwnerType] {$/;"	c
StringGenerators	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^trait StringGenerators {$/;"	t
StringHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^object StringHelpers extends StringHelpers$/;"	o
StringHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^trait StringHelpers {$/;"	t
StringHelpersSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/StringHelpersSpec.scala	/^object StringHelpersSpec extends Specification with StringHelpers {$/;"	o
StringHelpersSpecTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/StringHelpersSpec.scala	/^class StringHelpersSpecTest extends JUnit4(StringHelpersSpec)$/;"	c
StringIndexOutOfBoundsException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  type StringIndexOutOfBoundsException = java.lang.StringIndexOutOfBoundsException$/;"	T
StringIsMappable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  implicit def StringIsMappable(s: String): Mappable[String] =$/;"	f
StringLit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/StdTokens.scala	/^  case class StringLit(chars: String) extends Token {$/;"	c
StringLit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/StdTokens.scala	/^  case class StringLit(chars: String) extends Token {$/;"	m
StringVal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case class StringVal(value: String) extends Token$/;"	c
StringVal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case class StringVal(value: String) extends Token$/;"	m
Stringify	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class Stringify(in: JsExp) extends JsExp {$/;"	c
Stringify	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class Stringify(in: JsExp) extends JsExp {$/;"	m
Strong	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Strong(first: List[Textile], elems : List[Textile],$/;"	c
Strong	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Strong(first: List[Textile], elems : List[Textile],$/;"	m
Style	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case object Style extends JsMethod {$/;"	o
Style	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Style(elms : List[StyleElem]) extends Attribute {$/;"	c
Style	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Style(elms : List[StyleElem]) extends Attribute {$/;"	m
StyleElem	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class StyleElem(name : String, value : String) extends Textile {$/;"	c
StyleElem	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class StyleElem(name : String, value : String) extends Textile {$/;"	m
Subject	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class Subject(subject: String) extends RoutingType$/;"	c
Subject	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class Subject(subject: String) extends RoutingType$/;"	m
SubjectId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class SubjectId(subjectId: Long) extends FacebookParam("subj_id", subjectId) with GetPhotosParam$/;"	c
SubjectId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class SubjectId(subjectId: Long) extends FacebookParam("subj_id", subjectId) with GetPhotosParam$/;"	m
Subscriber	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Subscriber.scala	/^trait Subscriber[-A, -B] {$/;"	t
SubsetConstruction	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^class SubsetConstruction[T <: AnyRef](val nfa: NondetWordAutom[T]) {$/;"	c
Success	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  case class Success[+T](result: T, override val next: Input) extends ParseResult[T] {$/;"	c
Success	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  case class Success[+T](result: T, override val next: Input) extends ParseResult[T] {$/;"	m
Success	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  case class Success[+T](result: T, override val next: Input) extends ParseResult[T] {$/;"	c
Success	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  case class Success[+T](result: T, override val next: Input) extends ParseResult[T] {$/;"	m
Sum	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^  case class Sum(gs: List[UGP]) {$/;"	c
Sum	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^  case class Sum(gs: List[UGP]) {$/;"	m
Super	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Super(psym: Symbol) extends Tree$/;"	c
Super	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Super(psym: Symbol) extends Tree$/;"	m
SuperArrowAssoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  class SuperArrowAssoc(name: String) {$/;"	c
SuperConnection	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^class SuperConnection(val connection: Connection, val releaseFunc: () => Unit, val schemaName: Box[String]) {$/;"	c
SuperConnection	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^object SuperConnection {$/;"	o
SuperList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^  class SuperList[T](val what: List[T]) {$/;"	c
SuperString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^  class SuperString(val str: String) {$/;"	c
SuperString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^  class SuperString(val what: String) {$/;"	c
Supports	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  object Supports extends TransactionMonad {$/;"	o
Surround	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Surround.scala	/^object Surround extends DispatchSnippet {$/;"	o
Sweden	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^  val Sweden = C167$/;"	V
Sweden	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/CountryField.scala	/^  val Sweden = C167$/;"	V
SymApply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/Show.scala	/^  class SymApply(f: Symbol) {$/;"	c
Symbol	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Symbol.scala	/^final class Symbol private (val name: String) {$/;"	c
Symbol	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Symbol.scala	/^object Symbol {$/;"	o
Symbol	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^abstract class Symbol {$/;"	a
Symbol	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^abstract class Symbol {$/;"	c
SymbolBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class SymbolBindParam(name: String, value: Symbol) extends Tuple2(name, value) with BindParam {$/;"	c
SymbolBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class SymbolBindParam(name: String, value: Symbol) extends Tuple2(name, value) with BindParam {$/;"	m
SyncChannel	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/SyncChannel.scala	/^class SyncChannel[A] {$/;"	c
SyncVar	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/SyncVar.scala	/^class SyncVar[A] {$/;"	c
Synchr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/jolib.scala	/^  abstract class Synchr[A](join: Join) extends Signal(join) {$/;"	a
Synchr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/jolib.scala	/^  abstract class Synchr[A](join: Join) extends Signal(join) {$/;"	c
SynchronizedBuffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedBuffer.scala	/^trait SynchronizedBuffer[A] extends Buffer[A] {$/;"	t
SynchronizedMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^trait SynchronizedMap[A, B] extends Map[A, B] {$/;"	t
SynchronizedPriorityQueue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedPriorityQueue.scala	/^class SynchronizedPriorityQueue[A <% Ordered[A]] extends PriorityQueue[A] {$/;"	c
SynchronizedQueue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedQueue.scala	/^class SynchronizedQueue[A] extends Queue[A] {$/;"	c
SynchronizedSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedSet.scala	/^trait SynchronizedSet[A] extends Set[A] {$/;"	t
SynchronizedStack	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedStack.scala	/^class SynchronizedStack[A] extends Stack[A] {$/;"	c
SyntaxError	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/SyntaxError.scala	/^class SyntaxError(e: String) extends RuntimeException(e)$/;"	c
SystemID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ExternalID.scala	/^case class SystemID(systemId: String) extends ExternalID with parsing.TokenTests {  $/;"	c
SystemID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ExternalID.scala	/^case class SystemID(systemId: String) extends ExternalID with parsing.TokenTests {  $/;"	m
T	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TemplateCache.scala	/^  type T = K$/;"	T
T	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^  type T = KeyedMapperType$/;"	T
T	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      type MT = T forSome {type T <: KeyedMapper[FT, T]}$/;"	T
T	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  type OtherMapper = T forSome {type T <: KeyedMapper[KeyDude, T]}$/;"	T
T	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  type OtherMetaMapper = T forSome {type T <: KeyedMetaMapper[KeyDude, OtherMapper]}$/;"	T
T	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^    type T = (LinkedList[A], LinkedList[A]) \/\/ fst = the list, snd = last elem$/;"	T
T	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^    type T = List[A]$/;"	T
T2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/EnumWithDescriptionSpec.scala	/^object T2 extends EnumWithDescription {$/;"	o
TARGET_API_VERSION	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  val TARGET_API_VERSION = "1.0"$/;"	V
TF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LAPinger.scala	/^private object TF extends ThreadFactory {$/;"	o
TF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ActorPing.scala	/^private object TF extends ThreadFactory {$/;"	o
TIMEOUT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/TIMEOUT.scala	/^case object TIMEOUT$/;"	o
TIMESTAMP_REFUSED	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^    val TIMESTAMP_REFUSED = ("timestamp_refused", BAD_REQUEST)$/;"	V
TOKEN_EXPIRED	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^    val TOKEN_EXPIRED = ("token_expired", UNAUTHORIZED)$/;"	V
TOKEN_PCDATA	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Tokens.scala	/^  final val TOKEN_PCDATA = 0$/;"	V
TOKEN_REJECTED	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^    val TOKEN_REJECTED = ("token_rejected", UNAUTHORIZED)$/;"	V
TSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    type TSet <: SetXX $/;"	T
TSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    type TSet = Set32$/;"	T
TSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    type TSet = Set64$/;"	T
TV	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object TV extends FacebookField("tv")$/;"	o
Table	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Table(elems : List[Textile], attrs : List[Attribute]) extends ATextile(elems, attrs) {$/;"	c
Table	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class Table(elems : List[Textile], attrs : List[Attribute]) extends ATextile(elems, attrs) {$/;"	m
TableDef	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class TableDef(attrs : List[Attribute]) extends Textile {$/;"	c
TableDef	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class TableDef(attrs : List[Attribute]) extends Textile {$/;"	m
TableEditor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  class TableEditor extends DispatchSnippet {$/;"	c
TableEditor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^object TableEditor {$/;"	o
TableEditorImpl	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^protected class TableEditorImpl[T <: Mapper[T]](val title: String, meta: T with MetaMapper[T]) extends ItemsListEditor[T] {$/;"	c
TableElement	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class TableElement(elems : List[Textile], isHeader : Boolean, attrs : List[Attribute]) extends ATextile(elems, attrs) {$/;"	c
TableElement	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class TableElement(elems : List[Textile], isHeader : Boolean, attrs : List[Attribute]) extends ATextile(elems, attrs) {$/;"	m
TableRow	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class TableRow(elems : List[Textile], attrs : List[Attribute]) extends ATextile(elems, attrs) {$/;"	c
TableRow	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class TableRow(elems : List[Textile], attrs : List[Attribute]) extends ATextile(elems, attrs) {$/;"	m
TableSorter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tablesorter/TableSorter.scala	/^object TableSorter {$/;"	o
TableSorterDemo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/TableSorterDemo.scala	/^class TableSorterDemo {$/;"	c
TagById	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class TagById(userId: Long, x: Double, y: Double) extends PhotoTag(x, y){$/;"	c
TagById	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class TagById(userId: Long, x: Double, y: Double) extends PhotoTag(x, y){$/;"	m
TagByName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class TagByName(name: String, x: Double, y: Double) extends PhotoTag(x, y){$/;"	c
TagByName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class TagByName(name: String, x: Double, y: Double) extends PhotoTag(x, y){$/;"	m
TagText	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class TagText(text: String) extends FacebookParam("tag_text", text)$/;"	c
TagText	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class TagText(text: String) extends FacebookParam("tag_text", text)$/;"	m
TagUserId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class TagUserId(userId: Long) extends FacebookParam("tag_uid", userId)$/;"	c
TagUserId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class TagUserId(userId: Long) extends FacebookParam("tag_uid", userId)$/;"	m
Tags	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class Tags(tags: PhotoTag*) extends FacebookParam("tags", tags.map(_.toJSON).mkString("[", ",", "]"))$/;"	c
Tags	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class Tags(tags: PhotoTag*) extends FacebookParam("tags", tags.map(_.toJSON).mkString("[", ",", "]"))$/;"	m
Tail	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Tail.scala	/^object Tail extends DispatchSnippet {$/;"	o
TakeWhileIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  protected class TakeWhileIterator(p : A => Boolean) extends PredicatedIterator(p) {$/;"	c
Target	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Target(sym: LabelSymbol, body: Tree) extends Tree$/;"	c
Target	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Target(sym: LabelSymbol, body: Tree) extends Tree$/;"	m
Team	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^  case class Team(role: String, members: List[Employee])$/;"	c
Team	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^  case class Team(role: String, members: List[Employee])$/;"	m
Team	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  case class Team(role: String, members: List[Employee])$/;"	c
Team	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  case class Team(role: String, members: List[Employee])$/;"	m
Template	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class Template(template: () => NodeSeq) extends AnyLocParam$/;"	c
Template	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class Template(template: () => NodeSeq) extends AnyLocParam$/;"	m
Template	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Template(parents: List[Type], body: List[Tree]) extends Tree$/;"	c
Template	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Template(parents: List[Type], body: List[Tree]) extends Tree$/;"	m
TemplateCache	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TemplateCache.scala	/^trait TemplateCache[K, V] {$/;"	t
TemplateFinder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^object TemplateFinder {$/;"	o
TemporaryRedirectResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class TemporaryRedirectResponse(uri: String, request: Req, cookies: HTTPCookie*) extends LiftResponse {$/;"	c
TemporaryRedirectResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class TemporaryRedirectResponse(uri: String, request: Req, cookies: HTTPCookie*) extends LiftResponse {$/;"	m
Test	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^    val Test = Value(2, "Test")$/;"	V
Test	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class Test(test: Req => Boolean) extends AnyLocParam$/;"	c
Test	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class Test(test: Req => Boolean) extends AnyLocParam$/;"	m
Test	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^  trait Test {$/;"	t
Test	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  abstract class Test;$/;"	a
Test	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  abstract class Test;$/;"	c
TestAccess	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class TestAccess(func: () => Box[LiftResponse]) extends AnyLocParam$/;"	c
TestAccess	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class TestAccess(func: () => Box[LiftResponse]) extends AnyLocParam$/;"	m
TestCase	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^  abstract class TestCase(val name: String) extends Test with Assert {$/;"	a
TestCase	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^  abstract class TestCase(val name: String) extends Test with Assert {$/;"	c
TestCond	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/TestCond.scala	/^object TestCond extends DispatchSnippet {$/;"	o
TestConsoleMain	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^  trait TestConsoleMain {$/;"	t
TestFailure	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^  class TestFailure(val failedTest: Test, val thrownException: Throwable) {$/;"	c
TestFailureError	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^class TestFailureError(msg: String) extends _root_.java.lang.Error(msg)$/;"	c
TestFramework	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^trait TestFramework extends TestKit {$/;"	t
TestHandler	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  class TestHandler(res: Response) {$/;"	c
TestHelpers	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^object TestHelpers {$/;"	o
TestKit	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^trait TestKit extends GetPoster with GetPosterHelper {$/;"	t
TestMOAuthConsumer	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^ class TestMOAuthConsumer extends MOAuthConsumer[TestMOAuthConsumer] {$/;"	c
TestMOAuthConsumer	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^ object TestMOAuthConsumer extends TestMOAuthConsumer with MOAuthConsumerMeta[TestMOAuthConsumer]$/;"	o
TestMOAuthToken	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^ class TestMOAuthToken extends MOAuthToken[TestMOAuthToken] {$/;"	c
TestMOAuthToken	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^ object TestMOAuthToken extends TestMOAuthToken with MOAuthTokenMeta[TestMOAuthToken]$/;"	o
TestResult	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^  class TestResult {$/;"	c
TestResults	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^case class TestResults(res: List[Tracker]) {$/;"	c
TestResults	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^case class TestResults(res: List[Tracker]) {$/;"	m
TestRunner	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^class TestRunner(clearDB: Box[() => Any], setupDB: Box[() => Any],beforeAssertListeners: List[String => Any],  afterAssertListeners: List[(String, Boolean) => Any],$/;"	c
TestSnippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      class TestSnippet { def throwException = throw new SpecificException  }$/;"	c
TestSuite	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^  class TestSuite(tests: Test*) extends Test {$/;"	c
TestValueAccess	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class TestValueAccess[T](func: Box[T] => Box[LiftResponse]) extends LocParam[T]$/;"	c
TestValueAccess	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class TestValueAccess[T](func: Box[T] => Box[LiftResponse]) extends LocParam[T]$/;"	m
Tester	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/testing/Tester.scala	/^abstract class Tester {$/;"	a
Tester	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/testing/Tester.scala	/^abstract class Tester {$/;"	c
Tester	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/testing/Tester.scala	/^abstract class Tester {$/;"	a
Tester	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/testing/Tester.scala	/^abstract class Tester {$/;"	c
Tests	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Tests.scala	/^private[jcl] object Tests {$/;"	o
Text	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Text.scala	/^case class Text(_data: String) extends Atom[String](_data) {$/;"	c
Text	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Text.scala	/^case class Text(_data: String) extends Atom[String](_data) {$/;"	m
TextBuffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/TextBuffer.scala	/^class TextBuffer {$/;"	c
TextBuffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/TextBuffer.scala	/^object TextBuffer {$/;"	o
TextareaField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TextareaField.scala	/^class TextareaField[OwnerType <: Record[OwnerType]](rec: OwnerType, maxLength: Int) extends StringField(rec, maxLength) {$/;"	c
Textile	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  abstract class Textile {$/;"	a
Textile	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  abstract class Textile {$/;"	c
TextileParser	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^object TextileParser {$/;"	o
TextileParsers	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  class TextileParsers(wikiUrlFunc: Option[RewriteFunc], disableLinks: Boolean) extends Parsers with ImplicitConversions {$/;"	c
TextileSpec	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/test/scala/net/lift/textile/TextileSpec.scala	/^object TextileSpec extends Specification {$/;"	o
TextileSpecTest	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/test/scala/net/lift/textile/TextileSpec.scala	/^class TextileSpecTest extends Runner(TextileSpec) with JUnit with Console$/;"	c
TheBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class TheBindParam(name: String, value: NodeSeq) extends Tuple2(name, value) with BindParam {$/;"	c
TheBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class TheBindParam(name: String, value: NodeSeq) extends Tuple2(name, value) with BindParam {$/;"	m
TheBindableBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class TheBindableBindParam[T <: Bindable](name: String, value: T) extends Tuple2[String, T](name, value) with BindParam {$/;"	c
TheBindableBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class TheBindableBindParam[T <: Bindable](name: String, value: T) extends Tuple2[String, T](name, value) with BindParam {$/;"	m
TheKeyType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  override type TheKeyType = Long$/;"	T
TheKeyType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  type TheKeyType = KeyType$/;"	T
TheOwnerType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  type TheOwnerType <: Mapper[TheOwnerType]$/;"	T
TheOwnerType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  type TheOwnerType = OwnerType$/;"	T
TheStrBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class TheStrBindParam(name: String, value: String) extends Tuple2(name, value) with BindParam {$/;"	c
TheStrBindParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class TheStrBindParam(name: String, value: String) extends Tuple2(name, value) with BindParam {$/;"	m
ThirdImage	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class ThirdImage(imageUrl: String) extends FacebookParam("image_3", imageUrl) with PublishStoryParam with PublishActionParam$/;"	c
ThirdImage	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class ThirdImage(imageUrl: String) extends FacebookParam("image_3", imageUrl) with PublishStoryParam with PublishActionParam$/;"	m
ThirdImageLink	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class ThirdImageLink(imageUrl: String) extends FacebookParam("image_3_link", imageUrl) with PublishStoryParam with PublishActionParam$/;"	c
ThirdImageLink	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class ThirdImageLink(imageUrl: String) extends FacebookParam("image_3_link", imageUrl) with PublishStoryParam with PublishActionParam$/;"	m
This	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  protected type This <: Tree[A,B]$/;"	T
This	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class This(sym: Symbol) extends Tree$/;"	c
This	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class This(sym: Symbol) extends Tree$/;"	m
ThisType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Type.scala	/^case class ThisType(clazz: Symbol) extends Type$/;"	c
ThisType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Type.scala	/^case class ThisType(clazz: Symbol) extends Type$/;"	m
ThreadBasedConnectionManager	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private class ThreadBasedConnectionManager(connections: List[ConnectionIdentifier]) {$/;"	c
ThreadGlobal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ThreadGlobal.scala	/^class ThreadGlobal[T]$/;"	c
ThreadLazy	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^class ThreadLazy[TheType](theFunc: => TheType) extends LoanWrapper {$/;"	c
ThreadLazy	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^object ThreadLazy {$/;"	o
ThreadLocal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^private[json] class ThreadLocal[A](init: => A) extends java.lang.ThreadLocal[A] with (() => A) {$/;"	c
Throwable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  type Throwable = java.lang.Throwable$/;"	T
TimeAmounts	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^  type TimeAmounts = Tuple2[String, Tuple6[(Int, String), (Int, String), (Int, String), (Int, String), (Int, String), (Int, String)]]$/;"	T
TimeAmountsGen	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^trait TimeAmountsGen { self: TimeHelpers =>$/;"	t
TimeHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^object TimeHelpers extends TimeHelpers with ControlHelpers with ClassHelpers$/;"	o
TimeHelpers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^trait TimeHelpers { self: ControlHelpers =>$/;"	t
TimeHelpersSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^object TimeHelpersSpec extends Specification with TimeHelpers with TimeAmountsGen with ScalaCheck with Mocker with LoggerDelegation with ControlHelpers with ClassHelpers {$/;"	o
TimeHelpersTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^class TimeHelpersTest extends JUnit4(TimeHelpersSpec)$/;"	c
TimeSpan	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  class TimeSpan(val millis: Long) {$/;"	c
TimeSpan	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  object TimeSpan {$/;"	o
TimeSpanBuilder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  case class TimeSpanBuilder(val len: Long) {$/;"	c
TimeSpanBuilder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  case class TimeSpanBuilder(val len: Long) {$/;"	m
TimeZoneField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TimeZoneField.scala	/^class TimeZoneField[OwnerType <: Record[OwnerType]](rec: OwnerType) extends StringField(rec, 32) {$/;"	c
TimeZoneField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TimeZoneField.scala	/^object TimeZoneField {$/;"	o
TimedEventHandler	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    private class TimedEventHandler(val metaOwner: Meta) extends LiftActor {$/;"	c
TimedEventManager	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  private class TimedEventManager(val metaOwner: Meta) extends LiftActor {$/;"	c
TimerEvent	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  case class TimerEvent(len: TimeSpan) extends Event {$/;"	c
TimerEvent	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  case class TimerEvent(len: TimeSpan) extends Event {$/;"	m
Times	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^case class Times(times: List[DateTime])$/;"	c
Times	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^case class Times(times: List[DateTime])$/;"	m
Timezone	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object Timezone extends FacebookField("timezone")$/;"	o
Tip	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  private[immutable] case class Tip[+T](key : Int, value : T) extends IntMap[T]{$/;"	c
Tip	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  private[immutable] case class Tip[+T](key : Int, value : T) extends IntMap[T]{$/;"	m
Tip	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  private[immutable] case class Tip[+T](key : Long, value : T) extends LongMap[T]{$/;"	c
Tip	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  private[immutable] case class Tip[+T](key : Long, value : T) extends LongMap[T]{$/;"	m
Title	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class Title[T](title: T => NodeSeq) extends LocParam[T]$/;"	c
Title	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class Title[T](title: T => NodeSeq) extends LocParam[T]$/;"	m
Title	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class Title(markup: NodeSeq) extends FacebookParam("title", markup) with PublishStoryParam with PublishActionParam$/;"	c
Title	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class Title(markup: NodeSeq) extends FacebookParam("title", markup) with PublishStoryParam with PublishActionParam$/;"	m
Title2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/EnumWithDescriptionSpec.scala	/^object Title2 extends EnumWithDescription {$/;"	o
To	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class To(address: String) extends AddressType(address)$/;"	c
To	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class To(address: String) extends AddressType(address)$/;"	m
ToHeadSpecs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^object ToHeadSpecs extends Specification {$/;"	o
ToHeadTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^class ToHeadTest extends JUnit4(ToHeadSpecs)$/;"	c
ToHeadUsages	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/ToHeadUsages.scala	/^object ToHeadUsages extends Specification {$/;"	o
ToHeadUsagesRunner	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/ToHeadUsages.scala	/^object ToHeadUsagesRunner extends ConsoleRunner(ToHeadUsages)$/;"	o
ToHeadUsagesTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/ToHeadUsages.scala	/^class ToHeadUsagesTest extends JUnit3(ToHeadUsages)$/;"	c
ToJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^trait ToJsCmd {$/;"	t
ToVCardParseTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/VCardParseSpecs.scala	/^class ToVCardParseTest extends JUnit4(VCardParseSpecs)$/;"	c
ToXmlParseTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/XmlParseSpecs.scala	/^class ToXmlParseTest extends JUnit4(XmlParseSpecs)$/;"	c
Token	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  sealed abstract class Token$/;"	a
Token	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  sealed abstract class Token$/;"	c
Token	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/Tokens.scala	/^  abstract class Token {$/;"	a
Token	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/Tokens.scala	/^  abstract class Token {$/;"	c
TokenParsers	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/syntactical/TokenParsers.scala	/^trait TokenParsers extends Parsers {$/;"	t
TokenParsers	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/TokenParsers.scala	/^trait TokenParsers extends Parsers {$/;"	t
TokenTests	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/TokenTests.scala	/^trait TokenTests {$/;"	t
Tokens	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/syntactical/StandardTokenParsers.scala	/^  type Tokens = StdTokens$/;"	T
Tokens	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/syntactical/StdTokenParsers.scala	/^  type Tokens <: StdTokens$/;"	T
Tokens	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/syntactical/TokenParsers.scala	/^  type Tokens <: scala.util.parsing.syntax.Tokens$/;"	T
Tokens	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/StdTokenParsers.scala	/^  type Tokens <: StdTokens$/;"	T
Tokens	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/TokenParsers.scala	/^  type Tokens <: scala.util.parsing.syntax.Tokens$/;"	T
Tokens	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Parser.scala	/^  type Tokens = Lexer$/;"	T
Tokens	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/Tokens.scala	/^trait Tokens {$/;"	t
Tokens	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Tokens.scala	/^class Tokens {$/;"	c
TopIter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/PointedHedgeExp.scala	/^  case class  TopIter(r1: _regexpT, r2: _regexpT) extends RegExp {$/;"	c
TopIter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/PointedHedgeExp.scala	/^  case class  TopIter(r1: _regexpT, r2: _regexpT) extends RegExp {$/;"	m
TopScope	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/TopScope.scala	/^case object TopScope extends NamespaceBinding(null, null, null) {$/;"	o
Trace	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  val Trace = Value(3, "Trace")$/;"	V
Tracker	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^case class Tracker(name: String, isAssert: Boolean, isBegin: Boolean, success: Boolean,$/;"	c
Tracker	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^case class Tracker(name: String, isAssert: Boolean, isBegin: Boolean, success: Boolean,$/;"	m
Trademark	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case object Trademark extends Textile  {$/;"	o
TransactionContext	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^class TransactionContext(private implicit val transactionService: TransactionService)$/;"	c
TransactionContext	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^object TransactionContext extends TransactionProtocol {$/;"	o
TransactionMonad	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^trait TransactionMonad {$/;"	t
TransactionMonadSpec	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/test/scala/TransactionMonadSpec.scala	/^class TransactionMonadSpec extends Spec with ShouldMatchers {$/;"	c
TransactionProtocol	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^trait TransactionProtocol {$/;"	t
TransactionService	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^trait TransactionService {$/;"	t
TransientRequestVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^private[liftweb] abstract class TransientRequestVar[T](dflt: => T) extends AnyVar[T, TransientRequestVar[T]](dflt) with HasLogUnreadVal {$/;"	a
TransientRequestVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^private[liftweb] abstract class TransientRequestVar[T](dflt: => T) extends AnyVar[T, TransientRequestVar[T]](dflt) with HasLogUnreadVal {$/;"	c
TransientRequestVarHandler	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^private[http] object TransientRequestVarHandler extends CoreRequestVarHandler {$/;"	o
TransitionalXHTML1_0Validator	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^object TransitionalXHTML1_0Validator extends GenericValidtor {$/;"	o
Translator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  object Translator extends WordBerrySethi {$/;"	o
Tree	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^case class Tree(text:String,$/;"	c
Tree	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^case class Tree(text:String,$/;"	m
Tree	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^object Tree {$/;"	o
Tree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^  abstract class Tree[+B] {$/;"	a
Tree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^  abstract class Tree[+B] {$/;"	c
Tree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^abstract class Tree[A <% Ordered[A], B]() extends AnyRef {$/;"	a
Tree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^abstract class Tree[A <% Ordered[A], B]() extends AnyRef {$/;"	c
Tree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^abstract class Tree$/;"	a
Tree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^abstract class Tree$/;"	c
TreeHashMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^class TreeHashMap[Key, +Value] private (private val underlying : IntMap[AssocMap[Key, Value]]) extends scala.collection.immutable.Map[Key, Value]{$/;"	c
TreeHashMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^object TreeHashMap {$/;"	o
TreeMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^class TreeMap[A <% Ordered[A], +B](val size: Int, t: RedBlack[A]#Tree[B])$/;"	c
TreeMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^object TreeMap {$/;"	o
TreeMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/TreeMap.scala	/^class TreeMap[K <% Ordered[K], E] extends SortedMapWrapper[K, E] { tm =>$/;"	c
TreeRHS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/grammar/TreeRHS.scala	/^abstract class TreeRHS$/;"	a
TreeRHS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/grammar/TreeRHS.scala	/^abstract class TreeRHS$/;"	c
TreeSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^class TreeSet[A <% Ordered[A]](val size: Int, t: RedBlack[A]#Tree[Unit])$/;"	c
TreeSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^object TreeSet {$/;"	o
TreeSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/TreeSet.scala	/^class TreeSet[A <% Ordered[A]] extends SortedSetWrapper[A] { ts =>$/;"	c
TreeView	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^class TreeView {$/;"	c
TreeView	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^object TreeView {$/;"	o
TreeViewDemo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/TreeViewDemo.scala	/^class TreeViewDemo {$/;"	c
Triple	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  object Triple {$/;"	o
Triple	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  type Triple[+A, +B, +C] = Tuple3[A, B, C]$/;"	T
True	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/MonadicConversions.scala	/^case object True extends MonadicCondition {$/;"	o
Try	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  abstract class Try[a] {$/;"	a
Try	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  abstract class Try[a] {$/;"	c
Try	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  def Try[a](block: => a): Try[a] = new Try[a] with Runnable {$/;"	f
Tuple	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def Tuple[A1, A2, A3, A4, A5, A6, A7, A8, A9](x1: A1, x2: A2, x3: A3, x4: A4, x5: A5, x6: A6, x7: A7, x8: A8, x9: A9) = Tuple9(x1, x2, x3, x4, x5, x6, x7, x8, x9)$/;"	f
Tuple	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def Tuple[A1, A2, A3, A4, A5, A6, A7, A8](x1: A1, x2: A2, x3: A3, x4: A4, x5: A5, x6: A6, x7: A7, x8: A8) = Tuple8(x1, x2, x3, x4, x5, x6, x7, x8)$/;"	f
Tuple	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def Tuple[A1, A2, A3, A4, A5, A6, A7](x1: A1, x2: A2, x3: A3, x4: A4, x5: A5, x6: A6, x7: A7) = Tuple7(x1, x2, x3, x4, x5, x6, x7)$/;"	f
Tuple	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def Tuple[A1, A2, A3, A4, A5, A6](x1: A1, x2: A2, x3: A3, x4: A4, x5: A5, x6: A6) = Tuple6(x1, x2, x3, x4, x5, x6)$/;"	f
Tuple	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def Tuple[A1, A2, A3, A4, A5](x1: A1, x2: A2, x3: A3, x4: A4, x5: A5) = Tuple5(x1, x2, x3, x4, x5)$/;"	f
Tuple	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def Tuple[A1, A2, A3, A4](x1: A1, x2: A2, x3: A3, x4: A4) = Tuple4(x1, x2, x3, x4)$/;"	f
Tuple	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def Tuple[A1, A2, A3](x1: A1, x2: A2, x3: A3) = Tuple3(x1, x2, x3)$/;"	f
Tuple	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def Tuple[A1, A2](x1: A1, x2: A2) = Tuple2(x1, x2)$/;"	f
Tuple	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def Tuple[A1](x1: A1) = Tuple1(x1)$/;"	f
Tuple1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple1.scala	/^case class Tuple1[+T1](_1:T1) $/;"	c
Tuple1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple1.scala	/^case class Tuple1[+T1](_1:T1) $/;"	m
Tuple10	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple10.scala	/^case class Tuple10[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10) $/;"	c
Tuple10	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple10.scala	/^case class Tuple10[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10) $/;"	m
Tuple11	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple11.scala	/^case class Tuple11[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11) $/;"	c
Tuple11	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple11.scala	/^case class Tuple11[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11) $/;"	m
Tuple12	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple12.scala	/^case class Tuple12[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11, _12:T12) $/;"	c
Tuple12	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple12.scala	/^case class Tuple12[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11, _12:T12) $/;"	m
Tuple13	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple13.scala	/^case class Tuple13[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11, _12:T12, _13:T13) $/;"	c
Tuple13	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple13.scala	/^case class Tuple13[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11, _12:T12, _13:T13) $/;"	m
Tuple14	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple14.scala	/^case class Tuple14[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11, _12:T12, _13:T13, _14:T14) $/;"	c
Tuple14	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple14.scala	/^case class Tuple14[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11, _12:T12, _13:T13, _14:T14) $/;"	m
Tuple15	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple15.scala	/^case class Tuple15[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11, _12:T12, _13:T13, _14:T14, _15:T15) $/;"	c
Tuple15	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple15.scala	/^case class Tuple15[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11, _12:T12, _13:T13, _14:T14, _15:T15) $/;"	m
Tuple16	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple16.scala	/^case class Tuple16[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11, _12:T12, _13:T13, _14:T14, _15:T15, _16:T16) $/;"	c
Tuple16	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple16.scala	/^case class Tuple16[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11, _12:T12, _13:T13, _14:T14, _15:T15, _16:T16) $/;"	m
Tuple17	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple17.scala	/^case class Tuple17[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11, _12:T12, _13:T13, _14:T14, _15:T15, _16:T16, _17:T17) $/;"	c
Tuple17	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple17.scala	/^case class Tuple17[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11, _12:T12, _13:T13, _14:T14, _15:T15, _16:T16, _17:T17) $/;"	m
Tuple18	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple18.scala	/^case class Tuple18[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11, _12:T12, _13:T13, _14:T14, _15:T15, _16:T16, _17:T17, _18:T18) $/;"	c
Tuple18	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple18.scala	/^case class Tuple18[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11, _12:T12, _13:T13, _14:T14, _15:T15, _16:T16, _17:T17, _18:T18) $/;"	m
Tuple19	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple19.scala	/^case class Tuple19[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11, _12:T12, _13:T13, _14:T14, _15:T15, _16:T16, _17:T17, _18:T18, _19:T19) $/;"	c
Tuple19	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple19.scala	/^case class Tuple19[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11, _12:T12, _13:T13, _14:T14, _15:T15, _16:T16, _17:T17, _18:T18, _19:T19) $/;"	m
Tuple2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple2.scala	/^case class Tuple2[+T1, +T2](_1:T1, _2:T2) $/;"	c
Tuple2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple2.scala	/^case class Tuple2[+T1, +T2](_1:T1, _2:T2) $/;"	m
Tuple20	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple20.scala	/^case class Tuple20[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19, +T20](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11, _12:T12, _13:T13, _14:T14, _15:T15, _16:T16, _17:T17, _18:T18, _19:T19, _20:T20) $/;"	c
Tuple20	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple20.scala	/^case class Tuple20[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19, +T20](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11, _12:T12, _13:T13, _14:T14, _15:T15, _16:T16, _17:T17, _18:T18, _19:T19, _20:T20) $/;"	m
Tuple21	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple21.scala	/^case class Tuple21[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19, +T20, +T21](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11, _12:T12, _13:T13, _14:T14, _15:T15, _16:T16, _17:T17, _18:T18, _19:T19, _20:T20, _21:T21) $/;"	c
Tuple21	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple21.scala	/^case class Tuple21[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19, +T20, +T21](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11, _12:T12, _13:T13, _14:T14, _15:T15, _16:T16, _17:T17, _18:T18, _19:T19, _20:T20, _21:T21) $/;"	m
Tuple22	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple22.scala	/^case class Tuple22[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19, +T20, +T21, +T22](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11, _12:T12, _13:T13, _14:T14, _15:T15, _16:T16, _17:T17, _18:T18, _19:T19, _20:T20, _21:T21, _22:T22) $/;"	c
Tuple22	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple22.scala	/^case class Tuple22[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19, +T20, +T21, +T22](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9, _10:T10, _11:T11, _12:T12, _13:T13, _14:T14, _15:T15, _16:T16, _17:T17, _18:T18, _19:T19, _20:T20, _21:T21, _22:T22) $/;"	m
Tuple3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple3.scala	/^case class Tuple3[+T1, +T2, +T3](_1:T1, _2:T2, _3:T3) $/;"	c
Tuple3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple3.scala	/^case class Tuple3[+T1, +T2, +T3](_1:T1, _2:T2, _3:T3) $/;"	m
Tuple4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple4.scala	/^case class Tuple4[+T1, +T2, +T3, +T4](_1:T1, _2:T2, _3:T3, _4:T4) $/;"	c
Tuple4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple4.scala	/^case class Tuple4[+T1, +T2, +T3, +T4](_1:T1, _2:T2, _3:T3, _4:T4) $/;"	m
Tuple5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple5.scala	/^case class Tuple5[+T1, +T2, +T3, +T4, +T5](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5) $/;"	c
Tuple5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple5.scala	/^case class Tuple5[+T1, +T2, +T3, +T4, +T5](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5) $/;"	m
Tuple6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple6.scala	/^case class Tuple6[+T1, +T2, +T3, +T4, +T5, +T6](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6) $/;"	c
Tuple6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple6.scala	/^case class Tuple6[+T1, +T2, +T3, +T4, +T5, +T6](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6) $/;"	m
Tuple7	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple7.scala	/^case class Tuple7[+T1, +T2, +T3, +T4, +T5, +T6, +T7](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7) $/;"	c
Tuple7	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple7.scala	/^case class Tuple7[+T1, +T2, +T3, +T4, +T5, +T6, +T7](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7) $/;"	m
Tuple8	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple8.scala	/^case class Tuple8[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8) $/;"	c
Tuple8	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple8.scala	/^case class Tuple8[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8) $/;"	m
Tuple9	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple9.scala	/^case class Tuple9[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9) $/;"	c
Tuple9	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple9.scala	/^case class Tuple9[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9](_1:T1, _2:T2, _3:T3, _4:T4, _5:T5, _6:T6, _7:T7, _8:T8, _9:T9) $/;"	m
TwoFractionDigits	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^trait TwoFractionDigits {$/;"	t
Type	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^  def classType[T](clazz: Predef.Class[T]): Manifest[T] =$/;"	c
Type	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^  def classType[T](clazz: Predef.Class[_], args: Manifest[_]*): Manifest[T] =$/;"	c
Type	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^  def classType[T](prefix: Manifest[_], clazz: Predef.Class[_]): Manifest[T] =$/;"	c
Type	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^  def classType[T](prefix: Manifest[_], clazz: Predef.Class[_], args: Manifest[_]*): Manifest[T] =$/;"	c
Type	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Type.scala	/^abstract class Type$/;"	a
Type	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Type.scala	/^abstract class Type$/;"	c
TypeApply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class TypeApply(fun: Tree, args: List[Type]) extends Tree$/;"	c
TypeApply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class TypeApply(fun: Tree, args: List[Type]) extends Tree$/;"	m
TypeBounds	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Type.scala	/^case class TypeBounds(lo: Type, hi: Type) extends Type$/;"	c
TypeBounds	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Type.scala	/^case class TypeBounds(lo: Type, hi: Type) extends Type$/;"	m
TypeConstraint	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/TypeConstraint.scala	/^trait TypeConstraint extends Annotation$/;"	t
TypeField	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^case class TypeField(override val fullname: String, tpe: Type) extends GlobalSymbol(fullname)$/;"	c
TypeField	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^case class TypeField(override val fullname: String, tpe: Type) extends GlobalSymbol(fullname)$/;"	m
TypeHintExamples	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^trait TypeHintExamples extends Specification {$/;"	t
TypeHints	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^trait TypeHints {  $/;"	t
TypeMapFunc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  type TypeMapFunc = PartialFunction[Int,Int]$/;"	T
TypeSymbol	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/TypeSymbol.scala	/^abstract class TypeSymbol$/;"	a
TypeSymbol	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/TypeSymbol.scala	/^abstract class TypeSymbol$/;"	c
TypedActor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/SimpleActor.scala	/^trait TypedActor[-T, +R] extends SimpleActor[T] {$/;"	t
TypedField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^trait TypedField[FieldType] {$/;"	t
UChan	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^  class UChan {$/;"	c
UGP	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^  case class UGP(n: UChan, polarity: Boolean, v: Any, c: Any => Any)$/;"	c
UGP	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^  case class UGP(n: UChan, polarity: Boolean, v: Any, c: Any => Any)$/;"	m
UK	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^  val UK = C184$/;"	V
UNAUTHORIZED	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^    val UNAUTHORIZED = 401$/;"	V
UNDERLINED	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  final val UNDERLINED = "\\033[4m"$/;"	V
UNIT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedUnit.java	/^    public final static BoxedUnit UNIT = new BoxedUnit();$/;"	f	class:BoxedUnit
UNI_REPLACEMENT_CHAR	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^  final val UNI_REPLACEMENT_CHAR: Int = 0x0000FFFD$/;"	V
URINotFoundPF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  type URINotFoundPF = PartialFunction[(Req, Box[Failure]), NotFound]$/;"	T
URLDecoratorPF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  type URLDecoratorPF = PartialFunction[String, String]$/;"	T
URLRewriter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^object URLRewriter {$/;"	o
US	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^object US extends CurrencyZone {$/;"	o
USA	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^  val USA = C1$/;"	V
USA	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/CountryField.scala	/^  val USA = C1$/;"	V
USD	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    abstract class USD extends AbstractCurrency("USD") with DollarCurrency {}$/;"	a
USD	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    abstract class USD extends AbstractCurrency("USD") with DollarCurrency {}$/;"	c
UTC	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  val UTC = TimeZone.getTimeZone("UTC")$/;"	V
UTF8Codec	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^object UTF8Codec {$/;"	o
UnPicklerEnv	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  class UnPicklerEnv extends HashMap[Int, Any] {$/;"	c
UnPicklerState	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  class UnPicklerState(val stream: Array[Byte], val dict: UnPicklerEnv)$/;"	c
UnSchedule	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ActorPing.scala	/^case object UnSchedule$/;"	o
UnauthorizedDigestResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class UnauthorizedDigestResponse(override val realm: String, qop: Qop.Value, nonce: String, opaque: String) extends UnauthorizedResponse(realm) {$/;"	c
UnauthorizedDigestResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class UnauthorizedDigestResponse(override val realm: String, qop: Qop.Value, nonce: String, opaque: String) extends UnauthorizedResponse(realm) {$/;"	m
UnauthorizedResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class UnauthorizedResponse(realm: String) extends LiftResponse {$/;"	c
UnauthorizedResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class UnauthorizedResponse(realm: String) extends LiftResponse {$/;"	m
UnavailableResourceException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/UnavailableResourceException.scala	/^class UnavailableResourceException(message: String) $/;"	c
UnbalancedTreeMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^class UnbalancedTreeMap[A <% Ordered[A], +B] extends Map[A, B] {$/;"	c
UnbalancedTreeMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^object UnbalancedTreeMap {$/;"	o
Unblock	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case object Unblock extends JsCmd {$/;"	o
UnboundElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  class UnboundElement[N <: NameElement](private val el: N) extends NameElement {$/;"	c
UnclaimedPayment	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val UnclaimedPayment = Value(11, "Unclaimed")$/;"	V
UnclearedPayment	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val UnclearedPayment = Value(12, "Uncleared")$/;"	V
UnderBinder	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  class UnderBinder[binderType  <: NameElement, elementT <% Mappable[elementT]](val scope: Scope[binderType], private[Binders] val element: elementT) extends Element with BindingSensitive {$/;"	c
UnderBinder	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  object UnderBinder {$/;"	o
UnderBinderIsMappable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  implicit def UnderBinderIsMappable[bt <: NameElement <% Mappable[bt], st <% Mappable[st]](ub: UnderBinder[bt, st]): Mappable[UnderBinder[bt, st]] = $/;"	f
Underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    type Underlying <: AnyVal$/;"	T
Underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    type Underlying = Int$/;"	T
Underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    type Underlying = Long$/;"	T
UndeterminedEnd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  final val UndeterminedEnd = Math.MAX_INT$/;"	V
Undoable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Undoable.scala	/^trait Undoable {$/;"	t
UninitializedError	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/UninitializedError.scala	/^final class UninitializedError extends RuntimeException("uninitialized value")$/;"	c
UninitializedFieldError	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/UninitializedFieldError.scala	/^final case class UninitializedFieldError(msg: String) $/;"	c
UninitializedFieldError	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/UninitializedFieldError.scala	/^final case class UninitializedFieldError(msg: String) $/;"	m
UniqueIndex	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^case class UniqueIndex[A <: Mapper[A]](uniqueColumns : IndexItem[A]*) extends BaseIndex[A](uniqueColumns : _*)$/;"	c
UniqueIndex	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^case class UniqueIndex[A <: Mapper[A]](uniqueColumns : IndexItem[A]*) extends BaseIndex[A](uniqueColumns : _*)$/;"	m
UnitLoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  private case class UnitLoc($/;"	c
UnitLoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  private case class UnitLoc($/;"	m
UnitOnceParser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  trait UnitOnceParser extends UnitParser {$/;"	t
UnitParser	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    type UnitParser=Parser[Unit]$/;"	T
UnitParser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  abstract class UnitParser extends (Input => ParseResult[Unit]) {$/;"	a
UnitParser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  abstract class UnitParser extends (Input => ParseResult[Unit]) {$/;"	c
UnitedKingdom	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^  val UnitedKingdom = C184$/;"	V
UniversalParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^trait UniversalParam extends FacebookParam$/;"	t
UnknownRequest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^case class UnknownRequest(val method: String) extends RequestType$/;"	c
UnknownRequest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^case class UnknownRequest(val method: String) extends RequestType$/;"	m
UnknownScheme	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^case object UnknownScheme extends AuthenticationScheme {$/;"	o
Unless	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class Unless(test: () => Boolean, failMsg: FailMsg) extends AnyLocParam$/;"	c
Unless	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class Unless(test: () => Boolean, failMsg: FailMsg) extends AnyLocParam$/;"	m
UnlessValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class UnlessValue[T](test: Box[T] => Boolean, failMsg: FailMsg) extends LocParam[T]$/;"	c
UnlessValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class UnlessValue[T](test: Box[T] => Boolean, failMsg: FailMsg) extends LocParam[T]$/;"	m
Unlisten	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class Unlisten(uniqueId: ListenerId) extends CometMessage$/;"	c
Unlisten	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class Unlisten(uniqueId: ListenerId) extends CometMessage$/;"	m
UnmatchedEventException	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  class UnmatchedEventException(msg: String,val who: MyType,$/;"	c
Unparsed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Unparsed.scala	/^case class Unparsed(_data: String) extends Atom[String](_data) {$/;"	c
Unparsed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Unparsed.scala	/^case class Unparsed(_data: String) extends Atom[String](_data) {$/;"	m
UnparsedEntityDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class UnparsedEntityDecl( name:String, extID:ExternalID, notation:String ) extends EntityDecl {$/;"	c
UnparsedEntityDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class UnparsedEntityDecl( name:String, extID:ExternalID, notation:String ) extends EntityDecl {$/;"	m
UnprefixedAttribute	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/UnprefixedAttribute.scala	/^class UnprefixedAttribute(val key: String, val value: Seq[Node], next1: MetaData) extends MetaData {$/;"	c
UnsupportedMediaTypeResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class UnsupportedMediaTypeResponse() extends LiftResponse with HeaderStuff {$/;"	c
UnsupportedMediaTypeResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class UnsupportedMediaTypeResponse() extends LiftResponse with HeaderStuff {$/;"	m
UnsupportedOperationException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  type UnsupportedOperationException   = java.lang.UnsupportedOperationException$/;"	T
Update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Message.scala	/^case class Update[+A](elem: A) extends Message[A]$/;"	c
Update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Message.scala	/^case class Update[+A](elem: A) extends Message[A]$/;"	m
UpdateTime	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object UpdateTime extends FacebookField("profile_update_time")$/;"	o
UploadPhoto	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class UploadPhoto(fileName: String, mimeType: String, fileData: Array[Byte], otherParams: UploadPhotoParam*) extends FacebookMethod("facebook.photos.upload", true, otherParams: _*)$/;"	c
UploadPhoto	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class UploadPhoto(fileName: String, mimeType: String, fileData: Array[Byte], otherParams: UploadPhotoParam*) extends FacebookMethod("facebook.photos.upload", true, otherParams: _*)$/;"	m
UploadPhotoParam	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^trait UploadPhotoParam extends FacebookParam$/;"	t
UploadProgress	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/uploadprogress/UploadProgress.scala	/^object UploadProgress {$/;"	o
UploadProgressDemo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/UploadProgressDemo.scala	/^object UploadProgressDemo extends DispatchSnippet {$/;"	o
Url	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class Url(url: String) extends FacebookParam("url", url) with RefreshImageParam with RefreshRefParam$/;"	c
Url	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class Url(url: String) extends FacebookParam("url", url) with RefreshImageParam with RefreshRefParam$/;"	m
User	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^class User extends MegaProtoUser[User] {$/;"	c
User	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^object User extends User with MetaMegaProtoUser[User] {$/;"	o
UserException	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxUnit.scala	/^    case object UserException extends Throwable$/;"	o
UserId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class UserId(userId: Long) extends FacebookParam("uid", userId) with GetEventsParam with GetAlbumsParam with GetGroupsParam with SetFbmlParam with GetFbmlParam$/;"	c
UserId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class UserId(userId: Long) extends FacebookParam("uid", userId) with GetEventsParam with GetAlbumsParam with GetGroupsParam with SetFbmlParam with GetFbmlParam$/;"	m
UserIdAsString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^trait UserIdAsString {$/;"	t
UserIds	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class UserIds(userIds: Long*) extends FacebookParam("uids", userIds.mkString(","))$/;"	c
UserIds	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case class UserIds(userIds: Long*) extends FacebookParam("uids", userIds.mkString(","))$/;"	m
UserLocParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  trait UserLocParam[-T] extends LocParam[T]$/;"	t
UserNameElementIsMappable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  def UserNameElementIsMappable[t <: NameElement](self: t): Mappable[t]  $/;"	f
UserType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  type UserType <: KeyedMapper[Long, UserType] with OAuthUser$/;"	T
UserType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^ type UserType = MyUser$/;"	T
UserType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    type UserType <: KeyedMapper[Long, UserType] with OAuthUser$/;"	T
UserType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  type UserType = Identifier$/;"	T
UserType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^  type UserType <: UserIdAsString$/;"	T
Util	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Util.scala	/^object Util {$/;"	o
Utility	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^object Utility extends AnyRef with parsing.TokenTests {$/;"	o
Utils	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^private object Utils{$/;"	o
VCardEntry	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/VCardParser.scala	/^  case class VCardEntry(key: VCardKey, value: List[String])$/;"	c
VCardEntry	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/VCardParser.scala	/^  case class VCardEntry(key: VCardKey, value: List[String])$/;"	m
VCardKey	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/VCardParser.scala	/^  case class VCardKey(name: String, props: List[(String, String)])$/;"	c
VCardKey	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/VCardParser.scala	/^  case class VCardKey(name: String, props: List[(String, String)])$/;"	m
VCardParseSpecs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/VCardParseSpecs.scala	/^object VCardParseSpecs extends Specification {$/;"	o
VCardParser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/VCardParser.scala	/^object VCardParser extends Parsers {$/;"	o
VERSION_1_0	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  val VERSION_1_0 = "1.0"$/;"	V
VERSION_REJECTED	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^    val VERSION_REJECTED = ("version_rejected", BAD_REQUEST)$/;"	V
Val	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  def get(name: String, defVal: String) = props.get(name) getOrElse defVal$/;"	f
Val	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  def getBool(name: String, defVal: Boolean): Boolean = getBool(name) openOr defVal \/\/ props.get(name).map(toBoolean(_)) getOrElse defVal$/;"	f
Val	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  def getInt(name: String, defVal: Int): Int = getInt(name) openOr defVal \/\/ props.get(name).map(toInt(_)) getOrElse defVal$/;"	f
Val	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  def getLong(name: String, defVal: Long): Long = getLong(name) openOr defVal \/\/ props.get(name).map(toLong(_)) getOrElse defVal$/;"	f
Val	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  protected class Val(i: Int, name: String) extends Value {$/;"	c
ValById	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class ValById(id: String) extends JsExp {$/;"	c
ValById	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class ValById(id: String) extends JsExp {$/;"	m
ValDef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class ValDef(sym: Symbol, rhs: Tree) extends Tree$/;"	c
ValDef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class ValDef(sym: Symbol, rhs: Tree) extends Tree$/;"	m
ValStack	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  private class ValStack(parser: Parser) {$/;"	c
ValidNickName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^object ValidNickName {$/;"	o
ValidateLength	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^trait ValidateLength extends MixableMappedField {$/;"	t
ValidatingMarkupHandler	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^abstract class ValidatingMarkupHandler extends MarkupHandler with Logged {$/;"	a
ValidatingMarkupHandler	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^abstract class ValidatingMarkupHandler extends MarkupHandler with Logged {$/;"	c
ValidationException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ValidationException.scala	/^case class ValidationException(e: String) extends Exception(e)$/;"	c
ValidationException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ValidationException.scala	/^case class ValidationException(e: String) extends Exception(e)$/;"	m
ValidationFunction	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  type ValidationFunction = MyType => Box[Node]$/;"	T
Value	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  case class Value(targetType: Class[_]) extends Mapping$/;"	c
Value	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  case class Value(targetType: Class[_]) extends Mapping$/;"	m
Value	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/EnumWithDescription.scala	/^        def Value(inName: String, inDescription: String): Value with ValueWithDescription = {$/;"	f
Value	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/EnumWithDescription.scala	/^    def Value(name: String): Value = Value(name, name)$/;"	f
Value	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/EnumWithDescription.scala	/^    def Value(name: String, description: String): Value = {$/;"	f
Value	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/EnumWithDescription.scala	/^    type Value = enum.Value with ValueWithDescription$/;"	T
Value	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case object Value extends JsMethod {$/;"	o
Value	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  abstract class Value extends Ordered[Value] {$/;"	a
Value	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  abstract class Value extends Ordered[Value] {$/;"	c
Value	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  protected final def Value(i: Int): Value =$/;"	f
Value	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  protected final def Value(i: Int, name: String): Value = new Val(i, name)$/;"	f
Value	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  protected final def Value(name: String): Value = new Val(nextId, name)$/;"	f
Value	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  protected final def Value: Value =$/;"	f
Value	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^              val defValue = xAttributeValue() \/\/ default value$/;"	f
Value	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^          val defValue = xAttributeValue() \/\/ default value$/;"	f
ValueHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ValueHolder.scala	/^object ValueHolder {$/;"	o
ValueHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ValueHolder.scala	/^trait ValueHolder {$/;"	t
ValueSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^  class ValueSet extends IterableWrapper[E] with MutableIterable.Projection[E] {$/;"	c
ValueTemplate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class ValueTemplate[T](template: Box[T] => NodeSeq) extends LocParam[T]$/;"	c
ValueTemplate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  case class ValueTemplate[T](template: Box[T] => NodeSeq) extends LocParam[T]$/;"	m
ValueType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ValueHolder.scala	/^ type ValueType = T$/;"	T
ValueType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  type ValueType = Boolean$/;"	T
ValueType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  type ValueType = Int$/;"	T
ValueType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  type ValueType = String$/;"	T
ValueType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  private def intInfo(field: SettableValueHolder {type ValueType = Int}) = SHtml.text(field.is.toString, s => Helpers.asInt(s).foreach(field.set _))$/;"	T
ValueType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  private def textInfo(field: SettableValueHolder {type ValueType = String}) = SHtml.text(field.is, field.set _)$/;"	T
ValueType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  override type ValueType = FieldType$/;"	T
ValueWithDescription	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/EnumWithDescription.scala	/^trait ValueWithDescription  {$/;"	t
Values	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    type Values = (String, value.Values)$/;"	T
Values	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    type Values = BigInt$/;"	T
Values	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    type Values = Boolean$/;"	T
Values	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    type Values = Double$/;"	T
Values	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    type Values = List[Any]$/;"	T
Values	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    type Values = Map[String, Any]$/;"	T
Values	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    type Values = None.type$/;"	T
Values	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    type Values = Null$/;"	T
Values	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    type Values = String$/;"	T
VarConstants	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^private[liftweb] object VarConstants {$/;"	o
Vendor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^object Vendor {$/;"	o
Vendor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^trait Vendor[T] extends Maker[T] with Function0[T] {$/;"	t
Vendor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^  abstract class Vendor(driverClass : String) extends ConnectionManager {$/;"	a
Vendor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^  abstract class Vendor(driverClass : String) extends ConnectionManager {$/;"	c
VersionInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/VersionInfo.scala	/^object VersionInfo extends DispatchSnippet {$/;"	o
ViewDispatchPF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  type ViewDispatchPF = PartialFunction[List[String], Either[() => Box[NodeSeq], LiftView]]$/;"	T
ViewItem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  lazy val ViewItem = calcViewItem$/;"	V
ViewMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/ViewMeta.scala	/^abstract class ViewMeta(locale : Locale) {$/;"	a
ViewMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/ViewMeta.scala	/^abstract class ViewMeta(locale : Locale) {$/;"	c
VoidedPayment	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val VoidedPayment = Value(13, "Voided")$/;"	V
WHITE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  final val WHITE      = "\\033[37m"$/;"	V
WHITE_B	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  final val WHITE_B    = "\\033[47m"$/;"	V
WallCount	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object WallCount extends FacebookField("wall_count")$/;"	o
Warn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  val Warn = Value(7, "Warn")$/;"	V
Warning	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class Warning(id: Box[String], msg: NodeSeq) extends CometMessage$/;"	c
Warning	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class Warning(id: Box[String], msg: NodeSeq) extends CometMessage$/;"	m
Warning	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^object Warning {$/;"	o
WeakHashMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/WeakHashMap.scala	/^class WeakHashMap[K, E](override val underlying: java.util.WeakHashMap[K, E]) extends MapWrapper[K, E] {$/;"	c
WeakReference	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/WeakReference.scala	/^class WeakReference[+T <: AnyRef](value: T, queue: ReferenceQueue[T]) extends ReferenceWrapper[T] {$/;"	c
WeekViewMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/ViewMeta.scala	/^case class WeekViewMeta(firstDayOfWeek: Int, locale: Locale) extends ViewMeta(locale)$/;"	c
WeekViewMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/ViewMeta.scala	/^case class WeekViewMeta(firstDayOfWeek: Int, locale: Locale) extends ViewMeta(locale)$/;"	m
WikiAnchor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class WikiAnchor(word: String, category: Option[String], wikiFunc: Option[RewriteFunc]) extends ATextile(Nil, Nil) {$/;"	c
WikiAnchor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class WikiAnchor(word: String, category: Option[String], wikiFunc: Option[RewriteFunc]) extends ATextile(Nil, Nil) {$/;"	m
WikiURLInfo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class WikiURLInfo(word: String, category: Option[String]) {$/;"	c
WikiURLInfo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class WikiURLInfo(word: String, category: Option[String]) {$/;"	m
Wildcard	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/WordExp.scala	/^  case class Wildcard() extends RegExp {$/;"	c
Wildcard	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/WordExp.scala	/^  case class Wildcard() extends RegExp {$/;"	m
WildcardTest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  case object WildcardTest extends Test; \/\/                "x \\ *  "$/;"	o
Winner	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/LottoExample.scala	/^  case class Winner(`winner-id`: Long, numbers: List[Int])$/;"	c
Winner	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/LottoExample.scala	/^  case class Winner(`winner-id`: Long, numbers: List[Int])$/;"	m
WithParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/WithParam.scala	/^object WithParam extends DispatchSnippet {$/;"	o
WithParamVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/WithParam.scala	/^object WithParamVar extends RequestVar[Map[String, NodeSeq]](Map.empty)$/;"	o
Wizard	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^trait Wizard extends DispatchSnippet with Factory {$/;"	t
WizardFieldInfo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^case class WizardFieldInfo(field: FieldIdentifier, text: NodeSeq, help: Box[NodeSeq], input: Box[NodeSeq])$/;"	c
WizardFieldInfo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^case class WizardFieldInfo(field: FieldIdentifier, text: NodeSeq, help: Box[NodeSeq], input: Box[NodeSeq])$/;"	m
WizardRules	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^object WizardRules extends Factory with FormVendor {$/;"	o
WizardSnapshot	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  class WizardSnapshot(private[wizard] val screenVars: Map[String, (NonCleanAnyVar[_], Any)],$/;"	c
WizardSpec	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^object WizardSpec extends Specification {$/;"	o
WizardTest	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^class WizardTest extends Runner(WizardSpec) with JUnit$/;"	c
WizardVar	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  abstract class WizardVar[T](dflt: => T) extends NonCleanAnyVar[T](dflt) {$/;"	a
WizardVar	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  abstract class WizardVar[T](dflt: => T) extends NonCleanAnyVar[T](dflt) {$/;"	c
WizardVarHandler	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  private[wizard] object WizardVarHandler {$/;"	o
WordBerrySethi	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^abstract class WordBerrySethi extends BaseBerrySethi {$/;"	a
WordBerrySethi	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^abstract class WordBerrySethi extends BaseBerrySethi {$/;"	c
WordExp	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/WordExp.scala	/^abstract class WordExp extends Base {$/;"	a
WordExp	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/WordExp.scala	/^abstract class WordExp extends Base {$/;"	c
WorkHistory	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object WorkHistory extends FacebookField("work_history")$/;"	o
Wrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterator.scala	/^  class Wrapper[A](val underlying : java.util.Iterator[A]) extends MutableIterator[A] {$/;"	c
Wrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/ReferenceQueue.scala	/^  protected class Wrapper[U <: AnyRef](val underlying: java.lang.ref.Reference[U]) extends ReferenceWrapper[U]$/;"	c
Wrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/ReferenceQueue.scala	/^  protected def Wrapper[U <: AnyRef](ref: java.lang.ref.Reference[U]) = ref match {$/;"	f
XHTMLMailBodyType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class XHTMLMailBodyType(text: NodeSeq) extends MailBodyType$/;"	c
XHTMLMailBodyType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class XHTMLMailBodyType(text: NodeSeq) extends MailBodyType$/;"	m
XHTMLPlusImages	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class XHTMLPlusImages(text: NodeSeq, items: PlusImageHolder*) extends MailBodyType$/;"	c
XHTMLPlusImages	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  case class XHTMLPlusImages(text: NodeSeq, items: PlusImageHolder*) extends MailBodyType$/;"	m
XHTMLValidationError	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^case class XHTMLValidationError(msg: String, line: Int, col: Int)$/;"	c
XHTMLValidationError	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^case class XHTMLValidationError(msg: String, line: Int, col: Int)$/;"	m
XHtmlValidator	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^trait XHtmlValidator extends Function1[Node, List[XHTMLValidationError]]$/;"	t
XINCLUDE_NAMESPACE	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^  final val  XINCLUDE_NAMESPACE = "http:\/\/www.w3.org\/2001\/XInclude";$/;"	V
XIncludeException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/XIncludeException.scala	/^class XIncludeException(message: String) extends Exception(message) {$/;"	c
XIncludeFilter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^class XIncludeFilter extends XMLFilterImpl {$/;"	c
XIncluder	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^class XIncluder(outs:OutputStream, encoding:String) extends Object $/;"	c
XML	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^object XML {$/;"	o
XMLApiHelper	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/rest/XMLApiHelper.scala	/^trait XMLApiHelper {$/;"	t
XMLEvent	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEvent.scala	/^trait XMLEvent$/;"	t
XMLEventReader	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^class XMLEventReader extends Iterator[XMLEvent] {$/;"	c
XMLFormat	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^case object XMLFormat extends FacebookParam("format", "XML") with UniversalParam$/;"	o
XMPPDispatcher	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^class XMPPDispatcher(val connf: () => ConnectionConfiguration, val login: XMPPConnection => Unit) extends LiftActor {$/;"	c
Xhtml	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Xhtml.scala	/^object Xhtml {$/;"	o
XhtmlEntities	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/XhtmlEntities.scala	/^object XhtmlEntities {$/;"	o
XhtmlParser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/XhtmlParser.scala	/^class XhtmlParser(val input: Source) extends ConstructingHandler with PCDataMarkupParser[XhtmlParser] with ExternalSources  {$/;"	c
XhtmlParser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/XhtmlParser.scala	/^object XhtmlParser {$/;"	o
XhtmlResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class XhtmlResponse(out: Node, docType: Box[String],$/;"	c
XhtmlResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class XhtmlResponse(out: Node, docType: Box[String],$/;"	m
Xml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Xml.scala	/^object Xml {$/;"	o
XmlBugs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlBugs.scala	/^object XmlBugs extends Specification {$/;"	o
XmlBugsTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlBugs.scala	/^class XmlBugsTest extends Runner(XmlBugs) with JUnit$/;"	c
XmlElem	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Xml.scala	/^  private[json] class XmlElem(name: String, value: String) extends Elem(null, name, xml.Null, TopScope, Text(value))$/;"	c
XmlExamples	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^object XmlExamples extends Specification {$/;"	o
XmlExamplesTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^class XmlExamplesTest extends Runner(XmlExamples) with JUnit$/;"	c
XmlGroup	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/XmlGroup.scala	/^object XmlGroup extends DispatchSnippet {$/;"	o
XmlMenu	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/XmlMenu.scala	/^object XmlMenu {$/;"	o
XmlMimeResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class XmlMimeResponse(xml: Node, mime: String) extends NodeResponse {$/;"	c
XmlMimeResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class XmlMimeResponse(xml: Node, mime: String) extends NodeResponse {$/;"	m
XmlNode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Xml.scala	/^  private[json] class XmlNode(name: String, children: Seq[Node]) extends Elem(null, name, xml.Null, TopScope, children :_*)$/;"	c
XmlOrJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^private[http] class XmlOrJsCmd(val id: String,$/;"	c
XmlParseSpecs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/XmlParseSpecs.scala	/^object XmlParseSpecs extends Specification {$/;"	o
XmlResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^class XmlResponse(val xml: Node, val code: Int, val mime: String, val cookies: List[HTTPCookie]) extends NodeResponse {$/;"	c
XmlResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^object XmlResponse {$/;"	o
XmlSpec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlTest.scala	/^object XmlSpec extends Specification with NodeGen with JValueGen with ScalaCheck {$/;"	o
XmlTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlTest.scala	/^class XmlTest extends Runner(XmlSpec) with JUnit$/;"	c
YELLOW	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  final val YELLOW     = "\\033[33m"$/;"	V
YELLOW_B	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  final val YELLOW_B   = "\\033[43m"$/;"	V
YUIArtifacts	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^object YUIArtifacts extends JSArtifacts {$/;"	o
ZZ	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  type ZZ = Q forSome {type Q}$/;"	T
_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^      val _     = xEQ$/;"	V
_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^      val _ = while (p.ch != '<' && p.curInput.hasNext) p.nextch$/;"	V
_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^         val _ = println("Captured: " + it);$/;"	V
_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^         val _ = println("Does match: " + p2.matcher(it).find);$/;"	V
_	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^      val _     = xEQ$/;"	V
_1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product1.scala	/^  def _1: T1$/;"	f
_1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product10.scala	/^  def _1: T1$/;"	f
_1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product11.scala	/^  def _1: T1$/;"	f
_1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product12.scala	/^  def _1: T1$/;"	f
_1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product13.scala	/^  def _1: T1$/;"	f
_1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product14.scala	/^  def _1: T1$/;"	f
_1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product15.scala	/^  def _1: T1$/;"	f
_1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product16.scala	/^  def _1: T1$/;"	f
_1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^  def _1: T1$/;"	f
_1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^  def _1: T1$/;"	f
_1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  def _1: T1$/;"	f
_1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product2.scala	/^  def _1: T1$/;"	f
_1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  def _1: T1$/;"	f
_1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  def _1: T1$/;"	f
_1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def _1: T1$/;"	f
_1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product3.scala	/^  def _1: T1$/;"	f
_1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product4.scala	/^  def _1: T1$/;"	f
_1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product5.scala	/^  def _1: T1$/;"	f
_1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product6.scala	/^  def _1: T1$/;"	f
_1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product7.scala	/^  def _1: T1$/;"	f
_1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product8.scala	/^  def _1: T1$/;"	f
_1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product9.scala	/^  def _1: T1$/;"	f
_10	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product10.scala	/^  def _10: T10$/;"	f
_10	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product11.scala	/^  def _10: T10$/;"	f
_10	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product12.scala	/^  def _10: T10$/;"	f
_10	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product13.scala	/^  def _10: T10$/;"	f
_10	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product14.scala	/^  def _10: T10$/;"	f
_10	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product15.scala	/^  def _10: T10$/;"	f
_10	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product16.scala	/^  def _10: T10$/;"	f
_10	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^  def _10: T10$/;"	f
_10	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^  def _10: T10$/;"	f
_10	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  def _10: T10$/;"	f
_10	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  def _10: T10$/;"	f
_10	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  def _10: T10$/;"	f
_10	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def _10: T10$/;"	f
_11	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product11.scala	/^  def _11: T11$/;"	f
_11	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product12.scala	/^  def _11: T11$/;"	f
_11	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product13.scala	/^  def _11: T11$/;"	f
_11	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product14.scala	/^  def _11: T11$/;"	f
_11	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product15.scala	/^  def _11: T11$/;"	f
_11	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product16.scala	/^  def _11: T11$/;"	f
_11	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^  def _11: T11$/;"	f
_11	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^  def _11: T11$/;"	f
_11	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  def _11: T11$/;"	f
_11	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  def _11: T11$/;"	f
_11	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  def _11: T11$/;"	f
_11	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def _11: T11$/;"	f
_12	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product12.scala	/^  def _12: T12$/;"	f
_12	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product13.scala	/^  def _12: T12$/;"	f
_12	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product14.scala	/^  def _12: T12$/;"	f
_12	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product15.scala	/^  def _12: T12$/;"	f
_12	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product16.scala	/^  def _12: T12$/;"	f
_12	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^  def _12: T12$/;"	f
_12	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^  def _12: T12$/;"	f
_12	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  def _12: T12$/;"	f
_12	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  def _12: T12$/;"	f
_12	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  def _12: T12$/;"	f
_12	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def _12: T12$/;"	f
_13	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product13.scala	/^  def _13: T13$/;"	f
_13	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product14.scala	/^  def _13: T13$/;"	f
_13	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product15.scala	/^  def _13: T13$/;"	f
_13	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product16.scala	/^  def _13: T13$/;"	f
_13	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^  def _13: T13$/;"	f
_13	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^  def _13: T13$/;"	f
_13	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  def _13: T13$/;"	f
_13	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  def _13: T13$/;"	f
_13	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  def _13: T13$/;"	f
_13	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def _13: T13$/;"	f
_14	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product14.scala	/^  def _14: T14$/;"	f
_14	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product15.scala	/^  def _14: T14$/;"	f
_14	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product16.scala	/^  def _14: T14$/;"	f
_14	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^  def _14: T14$/;"	f
_14	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^  def _14: T14$/;"	f
_14	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  def _14: T14$/;"	f
_14	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  def _14: T14$/;"	f
_14	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  def _14: T14$/;"	f
_14	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def _14: T14$/;"	f
_15	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product15.scala	/^  def _15: T15$/;"	f
_15	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product16.scala	/^  def _15: T15$/;"	f
_15	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^  def _15: T15$/;"	f
_15	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^  def _15: T15$/;"	f
_15	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  def _15: T15$/;"	f
_15	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  def _15: T15$/;"	f
_15	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  def _15: T15$/;"	f
_15	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def _15: T15$/;"	f
_16	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product16.scala	/^  def _16: T16$/;"	f
_16	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^  def _16: T16$/;"	f
_16	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^  def _16: T16$/;"	f
_16	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  def _16: T16$/;"	f
_16	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  def _16: T16$/;"	f
_16	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  def _16: T16$/;"	f
_16	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def _16: T16$/;"	f
_17	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^  def _17: T17$/;"	f
_17	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^  def _17: T17$/;"	f
_17	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  def _17: T17$/;"	f
_17	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  def _17: T17$/;"	f
_17	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  def _17: T17$/;"	f
_17	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def _17: T17$/;"	f
_18	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^  def _18: T18$/;"	f
_18	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  def _18: T18$/;"	f
_18	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  def _18: T18$/;"	f
_18	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  def _18: T18$/;"	f
_18	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def _18: T18$/;"	f
_19	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  def _19: T19$/;"	f
_19	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  def _19: T19$/;"	f
_19	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  def _19: T19$/;"	f
_19	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def _19: T19$/;"	f
_2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product10.scala	/^  def _2: T2$/;"	f
_2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product11.scala	/^  def _2: T2$/;"	f
_2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product12.scala	/^  def _2: T2$/;"	f
_2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product13.scala	/^  def _2: T2$/;"	f
_2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product14.scala	/^  def _2: T2$/;"	f
_2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product15.scala	/^  def _2: T2$/;"	f
_2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product16.scala	/^  def _2: T2$/;"	f
_2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^  def _2: T2$/;"	f
_2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^  def _2: T2$/;"	f
_2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  def _2: T2$/;"	f
_2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product2.scala	/^  def _2: T2$/;"	f
_2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  def _2: T2$/;"	f
_2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  def _2: T2$/;"	f
_2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def _2: T2$/;"	f
_2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product3.scala	/^  def _2: T2$/;"	f
_2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product4.scala	/^  def _2: T2$/;"	f
_2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product5.scala	/^  def _2: T2$/;"	f
_2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product6.scala	/^  def _2: T2$/;"	f
_2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product7.scala	/^  def _2: T2$/;"	f
_2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product8.scala	/^  def _2: T2$/;"	f
_2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product9.scala	/^  def _2: T2$/;"	f
_20	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  def _20: T20$/;"	f
_20	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  def _20: T20$/;"	f
_20	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def _20: T20$/;"	f
_21	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  def _21: T21$/;"	f
_21	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def _21: T21$/;"	f
_22	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def _22: T22$/;"	f
_3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product10.scala	/^  def _3: T3$/;"	f
_3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product11.scala	/^  def _3: T3$/;"	f
_3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product12.scala	/^  def _3: T3$/;"	f
_3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product13.scala	/^  def _3: T3$/;"	f
_3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product14.scala	/^  def _3: T3$/;"	f
_3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product15.scala	/^  def _3: T3$/;"	f
_3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product16.scala	/^  def _3: T3$/;"	f
_3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^  def _3: T3$/;"	f
_3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^  def _3: T3$/;"	f
_3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  def _3: T3$/;"	f
_3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  def _3: T3$/;"	f
_3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  def _3: T3$/;"	f
_3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def _3: T3$/;"	f
_3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product3.scala	/^  def _3: T3$/;"	f
_3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product4.scala	/^  def _3: T3$/;"	f
_3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product5.scala	/^  def _3: T3$/;"	f
_3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product6.scala	/^  def _3: T3$/;"	f
_3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product7.scala	/^  def _3: T3$/;"	f
_3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product8.scala	/^  def _3: T3$/;"	f
_3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product9.scala	/^  def _3: T3$/;"	f
_4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product10.scala	/^  def _4: T4$/;"	f
_4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product11.scala	/^  def _4: T4$/;"	f
_4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product12.scala	/^  def _4: T4$/;"	f
_4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product13.scala	/^  def _4: T4$/;"	f
_4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product14.scala	/^  def _4: T4$/;"	f
_4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product15.scala	/^  def _4: T4$/;"	f
_4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product16.scala	/^  def _4: T4$/;"	f
_4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^  def _4: T4$/;"	f
_4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^  def _4: T4$/;"	f
_4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  def _4: T4$/;"	f
_4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  def _4: T4$/;"	f
_4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  def _4: T4$/;"	f
_4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def _4: T4$/;"	f
_4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product4.scala	/^  def _4: T4$/;"	f
_4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product5.scala	/^  def _4: T4$/;"	f
_4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product6.scala	/^  def _4: T4$/;"	f
_4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product7.scala	/^  def _4: T4$/;"	f
_4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product8.scala	/^  def _4: T4$/;"	f
_4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product9.scala	/^  def _4: T4$/;"	f
_5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product10.scala	/^  def _5: T5$/;"	f
_5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product11.scala	/^  def _5: T5$/;"	f
_5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product12.scala	/^  def _5: T5$/;"	f
_5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product13.scala	/^  def _5: T5$/;"	f
_5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product14.scala	/^  def _5: T5$/;"	f
_5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product15.scala	/^  def _5: T5$/;"	f
_5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product16.scala	/^  def _5: T5$/;"	f
_5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^  def _5: T5$/;"	f
_5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^  def _5: T5$/;"	f
_5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  def _5: T5$/;"	f
_5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  def _5: T5$/;"	f
_5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  def _5: T5$/;"	f
_5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def _5: T5$/;"	f
_5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product5.scala	/^  def _5: T5$/;"	f
_5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product6.scala	/^  def _5: T5$/;"	f
_5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product7.scala	/^  def _5: T5$/;"	f
_5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product8.scala	/^  def _5: T5$/;"	f
_5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product9.scala	/^  def _5: T5$/;"	f
_6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product10.scala	/^  def _6: T6$/;"	f
_6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product11.scala	/^  def _6: T6$/;"	f
_6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product12.scala	/^  def _6: T6$/;"	f
_6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product13.scala	/^  def _6: T6$/;"	f
_6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product14.scala	/^  def _6: T6$/;"	f
_6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product15.scala	/^  def _6: T6$/;"	f
_6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product16.scala	/^  def _6: T6$/;"	f
_6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^  def _6: T6$/;"	f
_6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^  def _6: T6$/;"	f
_6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  def _6: T6$/;"	f
_6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  def _6: T6$/;"	f
_6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  def _6: T6$/;"	f
_6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def _6: T6$/;"	f
_6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product6.scala	/^  def _6: T6$/;"	f
_6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product7.scala	/^  def _6: T6$/;"	f
_6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product8.scala	/^  def _6: T6$/;"	f
_6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product9.scala	/^  def _6: T6$/;"	f
_7	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product10.scala	/^  def _7: T7$/;"	f
_7	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product11.scala	/^  def _7: T7$/;"	f
_7	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product12.scala	/^  def _7: T7$/;"	f
_7	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product13.scala	/^  def _7: T7$/;"	f
_7	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product14.scala	/^  def _7: T7$/;"	f
_7	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product15.scala	/^  def _7: T7$/;"	f
_7	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product16.scala	/^  def _7: T7$/;"	f
_7	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^  def _7: T7$/;"	f
_7	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^  def _7: T7$/;"	f
_7	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  def _7: T7$/;"	f
_7	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  def _7: T7$/;"	f
_7	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  def _7: T7$/;"	f
_7	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def _7: T7$/;"	f
_7	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product7.scala	/^  def _7: T7$/;"	f
_7	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product8.scala	/^  def _7: T7$/;"	f
_7	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product9.scala	/^  def _7: T7$/;"	f
_8	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product10.scala	/^  def _8: T8$/;"	f
_8	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product11.scala	/^  def _8: T8$/;"	f
_8	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product12.scala	/^  def _8: T8$/;"	f
_8	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product13.scala	/^  def _8: T8$/;"	f
_8	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product14.scala	/^  def _8: T8$/;"	f
_8	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product15.scala	/^  def _8: T8$/;"	f
_8	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product16.scala	/^  def _8: T8$/;"	f
_8	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^  def _8: T8$/;"	f
_8	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^  def _8: T8$/;"	f
_8	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  def _8: T8$/;"	f
_8	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  def _8: T8$/;"	f
_8	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  def _8: T8$/;"	f
_8	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def _8: T8$/;"	f
_8	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product8.scala	/^  def _8: T8$/;"	f
_8	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product9.scala	/^  def _8: T8$/;"	f
_9	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product10.scala	/^  def _9: T9$/;"	f
_9	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product11.scala	/^  def _9: T9$/;"	f
_9	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product12.scala	/^  def _9: T9$/;"	f
_9	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product13.scala	/^  def _9: T9$/;"	f
_9	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product14.scala	/^  def _9: T9$/;"	f
_9	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product15.scala	/^  def _9: T9$/;"	f
_9	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product16.scala	/^  def _9: T9$/;"	f
_9	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^  def _9: T9$/;"	f
_9	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^  def _9: T9$/;"	f
_9	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  def _9: T9$/;"	f
_9	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  def _9: T9$/;"	f
_9	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  def _9: T9$/;"	f
_9	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def _9: T9$/;"	f
_9	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product9.scala	/^  def _9: T9$/;"	f
_Binder	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  private object _Binder {$/;"	o
_Noop	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case object _Noop extends JsCmd {$/;"	o
__nameSalt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  protected def __nameSalt = ""$/;"	f
__nameSalt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    override protected def __nameSalt = randomString(20)$/;"	f
__nameSalt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    override val __nameSalt = randomString(10)$/;"	V
__nameSalt	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    override protected def __nameSalt = randomString(20)$/;"	f
__nameSalt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-jpa/src/main/scala/net/liftweb/jpa/RequestVarEM.scala	/^    override def __nameSalt = net.liftweb.util.Helpers.randomString(10)$/;"	f
__nameSalt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    override val __nameSalt = randomString(10)$/;"	V
_action	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    private var _action: List[(MyType, StV, StV, Meta#Event) => Any] = Nil$/;"	v
_addOrdering	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def _addOrdering(in: String, params: List[QueryParam[A]]): String = {$/;"	f
_afterCreate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def _afterCreate(what: A) {eachField(what, afterCreate) {field => field.afterCreate}  }$/;"	f
_afterDelete	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def _afterDelete(what: A) {eachField(what, afterDelete) {field => field.afterDelete}  }$/;"	f
_afterSave	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def _afterSave(what: A) {eachField(what, afterSave) {field => field.afterSave}  }$/;"	f
_afterUpdate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def _afterUpdate(what: A) {eachField(what, afterUpdate) {field => field.afterUpdate}  }$/;"	f
_afterValidation	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def _afterValidation(what: A) { eachField(what, afterValidation) {field => field.afterValidation}  }$/;"	f
_afterValidationOnCreate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def _afterValidationOnCreate(what: A) {eachField(what, afterValidationOnCreate) {field => field.afterValidationOnCreate}  }$/;"	f
_afterValidationOnUpdate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def _afterValidationOnUpdate(what: A) {eachField(what, afterValidationOnUpdate) {field => field.afterValidationOnUpdate}  }$/;"	f
_attributes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private var _attributes: Map[String, String] = Map.empty$/;"	v
_attrs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private val _attrs = new ThreadGlobal[List[(Either[String, (String, String)], String)]]$/;"	V
_authorized	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    object _authorized extends MappedInt(this) {$/;"	o
_beforeCreate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def _beforeCreate(what: A) { eachField(what, beforeCreate) {field => field.beforeCreate}  }$/;"	f
_beforeDelete	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def _beforeDelete(what: A) {setupInstanceForPostCommit(what); eachField(what, beforeDelete) {field => field.beforeDelete}  }$/;"	f
_beforeSave	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def _beforeSave(what: A) {setupInstanceForPostCommit(what); eachField(what, beforeSave) {field => field.beforeSave}  }$/;"	f
_beforeUpdate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def _beforeUpdate(what: A) { eachField(what, beforeUpdate) {field => field.beforeUpdate}  }$/;"	f
_beforeValidation	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def _beforeValidation(what: A) {setupInstanceForPostCommit(what); eachField(what, beforeValidation) {field => field.beforeValidation}  }$/;"	f
_beforeValidationOnCreate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def _beforeValidationOnCreate(what: A) {eachField(what, beforeValidationOnCreate) {field => field.beforeValidationOnCreate}  }$/;"	f
_beforeValidationOnUpdate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def _beforeValidationOnUpdate(what: A) {eachField(what, beforeValidationOnUpdate) {field => field.beforeValidationOnUpdate}  }$/;"	f
_bindNodes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  private val _bindNodes = new ThreadGlobal[List[NodeSeq]]$/;"	V
_calcedObj	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  private var _calcedObj = false$/;"	v
_cnt	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^  private var _cnt = 0$/;"	v
_cometLogger	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  private val _cometLogger: FatLazy[LiftLogger] = FatLazy({$/;"	V
_consumer	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    object _consumer extends MappedLongForeignKey[ModelType, MOAuthConsumerType](this, getMOAuthConsumerMeta) {$/;"	o
_consumer_key	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^    object _consumer_key extends MappedString(this, 64) {$/;"	o
_context	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile private var _context: HTTPContext = _$/;"	v
_cookies	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  private val _cookies = List(req.cookies :_*)$/;"	V
_createTemplate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def _createTemplate =$/;"	f
_currentAttrs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private object _currentAttrs extends RequestVar[MetaData](Null)$/;"	o
_currentNode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  private val _currentNode = new ThreadGlobal[Elem]$/;"	V
_currentSnippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private object _currentSnippet extends RequestVar[Box[String]](Empty)$/;"	o
_currentValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    private val _currentValue: NonCleanAnyVar[ValueType] =$/;"	V
_dbColumnNameLC	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  final def _dbColumnNameLC =$/;"	f
_dbTableNameLC	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def _dbTableNameLC: String$/;"	f
_dbTableNameLC	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  final def _dbTableNameLC = {$/;"	f
_deepEquals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^    def _deepEquals(x1: Any, x2: Any) = (x1, x2) match {$/;"	f
_deepToString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^    def _deepToString(x: Any) = x match {$/;"	f
_defaultPrefix	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private lazy val _defaultPrefix: String = (defaultPrefix or _name) openOr "comet"$/;"	V
_defaultXml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private var _defaultXml: NodeSeq = _$/;"	v
_delegate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    private var _delegate: List[O] = _$/;"	v
_deleteTemplate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def _deleteTemplate =$/;"	f
_delim	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/StdLexical.scala	/^  private var _delim: Parser[Token] = null$/;"	v
_delim	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/StdLexical.scala	/^  private var _delim: Parser[Token] = null$/;"	v
_dfa	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  private var _dfa: DetWordAutom[ContentModel.ElemName] = null$/;"	v
_docType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  private var _docType: Box[String] = Empty$/;"	v
_editTemplate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def _editTemplate =$/;"	f
_empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  private[TreeHashMap] val _empty = new TreeHashMap[Any, Nothing](IntMap.empty[Nothing]);$/;"	V
_empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  val _empty = Nil[Any];$/;"	V
_emptyBitSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^  final val _emptyBitSet = new scala.collection.mutable.BitSet(1).toImmutable$/;"	V
_enabled	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  object _enabled extends MappedInt(this) {$/;"	o
_encoding	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^   private val _encoding: String =$/;"	V
_entry	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    private var _entry: List[(MyType, StV, StV, Meta#Event) => Any] = Nil$/;"	v
_equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  def _equals(x: Product, y: Any): Boolean = y match {$/;"	f
_equalsWithVarArgs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  def _equalsWithVarArgs(x: Product, y: Any): Boolean = y match {$/;"	f
_exit	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    private var _exit: List[(MyType, StV, StV, Meta#Event) => Any] = Nil$/;"	v
_fieldList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  @volatile private[this] var _fieldList: List[() => FieldContainer] = Nil$/;"	v
_fixHref	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  private def _fixHref(contextPath: String, v: Seq[Node], fixURL: Boolean, rewrite: Box[String => String]): Text = {$/;"	f
_fixHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^    def _fixHtml(in: NodeSeq, _inHtml: Boolean, _inHead: Boolean, _justHead: Boolean, _inBody: Boolean, _justBody: Boolean, _bodyHead: Boolean, _bodyTail: Boolean, doMergy: Boolean): NodeSeq = {$/;"	f
_fixHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    def _fixHtml(contextPath: String, in: NodeSeq): NodeSeq = {$/;"	f
_formGroup	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private[http] object _formGroup extends TransientRequestVar[Box[Int]](Empty)$/;"	o
_functionMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private val _functionMap = new ThreadGlobal[HashMap[String, AFuncHolder]]$/;"	V
_getLiftSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  private def _getLiftSession(req: Req): LiftSession = {$/;"	f
_guard	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    private var _guard: List[(MyType, StV, StV, Meta#Event) => Boolean] = Nil$/;"	v
_handleJson	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private def _handleJson(in: Any): JsCmd =$/;"	f
_hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  def _hashCode(x: Product): Int = {$/;"	f
_headers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  private val _headers = List(req.headers :_*)$/;"	V
_hidden	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  private lazy val _hidden = allParams.contains(Loc.Hidden)$/;"	V
_host	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  private def _host = properties.getProperty("mail.smtp.host") match {$/;"	f
_hostName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  private lazy val _hostName = dotLen(hostName)$/;"	V
_href	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    private var _href = ""$/;"	v
_id	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val attribute = style | class_id | the_class | the_id | the_lang$/;"	c
_id	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val class_id : Parser[Attribute] = ('(' ~> str1("class", validClassChar)) ~ ('#' ~> str1("class", validClassChar) <~ ')') ^^ flatten2(ClassAndId)$/;"	c
_id_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def _id_>(in: Box[Elem]) = FuncBindParam(name, _ => in.map(_ % new UnprefixedAttribute("id", name, Null)) openOr NodeSeq.Empty)$/;"	f
_id_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def _id_>(in: Elem) = FuncBindParam(name, _ => in % new UnprefixedAttribute("id", name, Null))$/;"	f
_id_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def _id_>(in: NodeSeq => Elem) = FuncBindParam(name, kids => in(kids) % new UnprefixedAttribute("id", name, Null))$/;"	f
_id_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def _id_>(in: Option[Elem]) = FuncBindParam(name, _ => in.map(_ % new UnprefixedAttribute("id", name, Null)) getOrElse NodeSeq.Empty)$/;"	f
_inPath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Menu.scala	/^  private def _inPath(in: List[Loc[_]]): Boolean = in match {$/;"	f
_includeXmlVersion	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  private[http] var _includeXmlVersion = true$/;"	v
_init	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private def _init[B](request: Req, session: LiftSession)(f: () => B): B =$/;"	f
_initialBitSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^  final val _initialBitSet = {$/;"	V
_innerInit	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private def _innerInit[B](request: Req, f: () => B): B = {$/;"	f
_invokeMethod	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  private def _invokeMethod[C](clz: Class[C], inst: AnyRef, meth: String, params: Array[AnyRef], ptypes: Box[Array[Class[_]]]): Box[Any] = {$/;"	f
_isProcessing	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  private var _isProcessing = false$/;"	v
_joins	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    protected var _joins: List[O] = _$/;"	v
_labelT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^          type _labelT = WordBerrySethi.this._labelT$/;"	T
_labelT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^  type _labelT = this.lang._labelT$/;"	T
_labelT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/WordExp.scala	/^  type _labelT <: Label$/;"	T
_labelT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  type _labelT = ElemName$/;"	T
_lastInPath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Menu.scala	/^  private def _lastInPath(path: List[Loc[_]]): Boolean = path match {$/;"	f
_lastSeen	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    @volatile private[this] var _lastSeen: Long = millis$/;"	v
_lifeTime	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private val _lifeTime = new ThreadGlobal[Boolean]$/;"	V
_liftCoreResBundle	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private object _liftCoreResBundle extends$/;"	o
_locale	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^        val _locale: Locale = locale$/;"	V
_locale	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    def make(x: BigDecimal) = new Currency{val amount = x; override val _locale = locale}$/;"	V
_log4JSetup	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def _log4JSetup() =$/;"	f
_logger	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  private def _logger(name: String): LiftLogger = if (checkConfig) new Log4JLogger(Logger.getLogger(name)) else NullLogger$/;"	f
_loggerByClass	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  private def _loggerByClass(clz: Class[AnyRef]): LiftLogger = new Slf4jLogger(LoggerFactory.getLogger(clz))$/;"	f
_loggerByName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  private def _loggerByName(name: String): LiftLogger = new Slf4jLogger(LoggerFactory.getLogger(name))$/;"	f
_loggerCls	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  private def _loggerCls(clz: Class[AnyRef]): LiftLogger = if (checkConfig) new Log4JLogger(Logger.getLogger(clz)) else NullLogger$/;"	f
_lowPriority	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private[http] def _lowPriority: PartialFunction[Any, Unit] = {$/;"	f
_lowPriority	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private[http] override val _lowPriority = {$/;"	V
_mappedFields	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private val _mappedFields  = new HashMap[String, Method];$/;"	V
_mediumPriority	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private lazy val _mediumPriority: PartialFunction[Any, Unit] = {$/;"	V
_menu	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  private var _menu: Menu = _$/;"	v
_modeName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  private lazy val _modeName = dotLen(modeName)$/;"	V
_name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private var _name: Box[String] = Empty$/;"	v
_name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  private var _name : String = null$/;"	v
_names	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/StatefulSnippet.scala	/^  private[this] var _names: Set[String] = Set()$/;"	v
_nest2InnerInit	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private def _nest2InnerInit[B](f: () => B): B = {$/;"	f
_next	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  private[common] var _next: LinkedListElem[T1, T2] = null$/;"	v
_nonce	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^    protected object _nonce extends MappedString(this, 80) {$/;"	o
_obj	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  private var _obj: Box[Other] = Empty$/;"	v
_onShutdown	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  private def _onShutdown(session: CleanUpParam): Unit = {$/;"	f
_params	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  private val _params = List(req.params :_*)$/;"	V
_parent	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Menu.scala	/^  private[sitemap] var _parent: Box[HasKids] = Empty$/;"	v
_placeholder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  private var _placeholder = false$/;"	v
_postCommitFuncs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private val _postCommitFuncs = new ThreadLocal[List[() => Unit]]$/;"	V
_prev	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  private[common] var _prev: LinkedListElem[T1, T2] = null$/;"	v
_queryAnalyzer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private var _queryAnalyzer: List[(Box[Req], Long,$/;"	v
_regexpT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^  type _regexpT <: RegExp$/;"	T
_regexpT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/PointedHedgeExp.scala	/^  type _regexpT <: RegExp$/;"	T
_regexpT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/WordExp.scala	/^  type _regexpT <: RegExp$/;"	T
_regexpT	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  type _regexpT = RegExp$/;"	T
_register	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  protected def _register(field: () => FieldContainer) {$/;"	f
_register	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  private def _register(screen: Screen) {$/;"	f
_request	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private val _request = new ThreadGlobal[Req]$/;"	V
_resBundle	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private val _resBundle = new ThreadGlobal[List[ResourceBundle]]$/;"	V
_responseCookies	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private val _responseCookies = new ThreadGlobal[CookieHolder]$/;"	V
_responseHeaders	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private val _responseHeaders = new ThreadGlobal[ResponseInfoHolder]$/;"	V
_sameElements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^    def _sameElements(a1: BoxedArray, a2: BoxedArray): Boolean = {$/;"	f
_screenList	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  @volatile private[this] var _screenList: List[Screen] = Nil$/;"	v
_secret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    object _secret extends MappedUniqueId(this, 48) {$/;"	o
_sessionInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private val _sessionInfo = new ThreadGlobal[LiftSession]$/;"	V
_sessionLife	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    private[this] val _sessionLife: Boolean = functionLifespan_?$/;"	V
_setDocType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  private var _setDocType = false$/;"	v
_setup	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    private var _setup: List[(MyType, StV) => Any] = Nil$/;"	v
_showAllTemplate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def _showAllTemplate =$/;"	f
_sinkBitSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^  final val _sinkBitSet = new mutable.BitSet(1).toImmutable$/;"	V
_sitemap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  private var _sitemap: Box[SiteMap] = Empty$/;"	v
_size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  private var _size = 0;$/;"	v
_skipDocType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private object _skipDocType extends TransientRequestVar(false)$/;"	o
_skipXmlHeader	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private object _skipXmlHeader extends TransientRequestVar(false)$/;"	o
_snippetMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private[http] object _snippetMap extends RequestVar[Map[String, NodeSeq => NodeSeq]](Map())$/;"	o
_stack	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  private val _stack: ThreadLocal[List[PValueHolder[Maker[T]]]] = new ThreadLocal$/;"	V
_statefulSnip	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private[http] object _statefulSnip extends RequestVar[Map[String, StatefulSnippet]](Map())$/;"	o
_stringToXml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  private def _stringToXml(s: String): NodeSeq = Text(s)$/;"	f
_sub	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  private val _sub: List[PValueHolder[Maker[T]]] = subMakers.toList$/;"	V
_sub	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Factory.scala	/^    private val _sub: List[PValueHolder[Maker[T]]] = List(request, session)$/;"	V
_testAccess	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  protected def _testAccess: Either[Boolean, Box[() => LiftResponse]] = {$/;"	f
_theSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private var _theSession: LiftSession = _$/;"	v
_theType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private var _theType: Box[String] = Empty$/;"	v
_timestamp	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^    protected object _timestamp extends MappedLong(this) {$/;"	o
_title	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  object _title extends MappedString(this, 80) {$/;"	o
_toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  override def _toForm: Box[NodeSeq] = Full(SHtml.checkbox(is,this.apply _))$/;"	f
_toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  override def _toForm: Box[NodeSeq] =$/;"	f
_toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  override def _toForm: Box[NodeSeq] =$/;"	f
_toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^    def _toForm: Box[NodeSeq]$/;"	f
_toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  override def _toForm: Box[Elem] = Full(validSelectValues.flatMap{$/;"	f
_toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  override def _toForm: Box[NodeSeq] =$/;"	f
_toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  override def _toForm: Box[NodeSeq] =$/;"	f
_toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def _toForm: Box[NodeSeq] =$/;"	f
_toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  override def _toForm: Box[NodeSeq] = {$/;"	f
_toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^  override def _toForm: Box[Elem] =$/;"	f
_toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  override def _toForm: Box[Elem] =$/;"	f
_toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTextarea.scala	/^  override def _toForm: Box[Elem] = {$/;"	f
_toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  override def _toForm: Box[NodeSeq] =$/;"	f
_toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  override def _toForm: Box[NodeSeq] = {$/;"	f
_toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  def _toString(x: Product): String =$/;"	f
_token	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^    protected object _token extends MappedString(this, 64) {$/;"	o
_token	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    object _token extends MappedUniqueId(this, 48) {$/;"	o
_ttl	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    object _ttl extends MappedDateTime(this) {$/;"	o
_userName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  private lazy val _userName = dotLen(userName)$/;"	V
_values	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/EnumWithDescription.scala	/^    private var _values: List[Value] = Nil$/;"	v
_viewTemplate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def _viewTemplate =$/;"	f
_xdatetime	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  object _xdatetime extends MappedDateTime(this) {$/;"	o
_xdatetime	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    object _xdatetime extends MappedDateTime(this) {$/;"	o
a	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^    val a = attrToObject("stats", "count", s => JInt(s.s.toInt)) _$/;"	V
a	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BasicTypesHelpersSpec.scala	/^      var a: Array[Byte] = Array(12, 14)$/;"	v
a	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^      val a = <a href={link}>{linkText}<\/a> % attrs$/;"	V
a	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def a(body: NodeSeq, attrs: (String, String)*)(func: => JsCmd): Elem =$/;"	f
a	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def a(body: NodeSeq, cmd: JsCmd, attrs: (String, String)*): Elem =$/;"	f
a	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def a(func: () => JsCmd, body: NodeSeq, attrs: (String, String)*): Elem = {$/;"	f
a	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def a(func: () => JsObj,$/;"	f
a	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def a(jsFunc: Call, body: NodeSeq, attrs: (String, String)*)(func: => JsCmd): Elem =$/;"	f
a	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def a(jsFunc: Call, func: () => JsCmd, body: NodeSeq, attrs: (String, String)*): Elem = {$/;"	f
a	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^    val a = new Array[A](n)$/;"	V
a	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def next() = { val a = n productElement c; c += 1; a }$/;"	V
a	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Set.scala	/^       val a = i.next$/;"	V
a	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^      val a = f(b)$/;"	V
a	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^      val a = resPa._1$/;"	V
a	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^        var a = off$/;"	v
a	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^      var a = _a$/;"	v
a	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModelParser.scala	/^    case NAME   => val a = Letter(ElemName(value)); nextToken; a$/;"	V
a	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModelParser.scala	/^    case NAME   => val a = Letter(ElemName(value)); nextToken; maybeSuffix(a)$/;"	V
a0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^      val a0 = i.next;$/;"	V
a1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^    val a1 = attrToObject("stats", "count", s => JInt(s.s.toInt)) _$/;"	V
a1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^      val a1 = f(a0);$/;"	V
a2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^    val a2 = attrToObject("messages", "href", identity) _$/;"	V
aMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^    var aMap: MetaData = Null$/;"	v
aMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    var aMap: MetaData = Null$/;"	v
aNode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  protected type aNode = GBTree[A,B]$/;"	T
aNode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  type aNode = GBTree[A,B]$/;"	T
aNumber	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def aNumber: Parser[Int] = rep1(elem("Number", isNum)) ^^ {case xs => xs.mkString("").toInt}$/;"	f
aSpace	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def aSpace = accept("whitespace", { case c if (c == ' ') || c == '\\t' => true })$/;"	f
a_ref	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val a_ref: Parser[Textile] = ('[' ~> urlStr <~ ']') ~ url ^^ {case  fr ~ (url: Anchor) => ARef(fr, url.href) }$/;"	V
ab	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^    val ab = new ListBuffer[T]$/;"	V
ab	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^      val ab = x(a) compare x(b)$/;"	V
abcdString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^  implicit def abcdString = for (len <- choose(4, 4);$/;"	f
abcdStringGen	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^object abcdStringGen {$/;"	o
aboutToSend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/ScriptRenderer.scala	/^             var aboutToSend = queue.shift();$/;"	v
abs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  def abs: BigDecimal = new BigDecimal(this.bigDecimal.abs())$/;"	f
abs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def abs: BigInt = new BigInt(this.bigInteger.abs())$/;"	f
abs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def abs(x: Double): Double = java.lang.Math.abs(x)$/;"	f
abs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def abs(x: Float): Float = java.lang.Math.abs(x)$/;"	f
abs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def abs(x: Int): Int = java.lang.Math.abs(x)$/;"	f
abs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def abs(x: Long): Long = java.lang.Math.abs(x)$/;"	f
abs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichDouble.scala	/^  def abs: Double = Math.abs(x)$/;"	f
abs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichFloat.scala	/^  def abs: Float = Math.abs(x)$/;"	f
abs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichInt.scala	/^  def abs: Int = if (start < 0) -start else start$/;"	f
abs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichLong.scala	/^  def abs: Long = if (x < 0) -x else x$/;"	f
abstractType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^  def abstractType[T](prefix: Manifest[_], name: String, upperBound: Manifest[_]): Manifest[T] =$/;"	f
abstractType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^  def abstractType[T](prefix: Manifest[_], name: String, upperBound: Manifest[_], args: Manifest[_]*): Manifest[T] =$/;"	f
ac	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^      val ac = x(a) compare x(c)$/;"	V
acc	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    var acc = z$/;"	v
acc	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      var acc : B = f(x0, x1)$/;"	v
acc	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var acc = z$/;"	v
acc	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Scanner.scala	/^  final def acc(d: Char) { $/;"	f
accS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Scanner.scala	/^  final def accS(ds: Seq[Char]) { $/;"	f
accept	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def accept[ES <% List[Elem]](es: ES): Parser[List[Elem]] = acceptSeq(es)$/;"	f
accept	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def accept[U](expected: String, f: PartialFunction[Elem, U]): Parser[U] = acceptMatch(expected, f)$/;"	f
accept	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  implicit def accept(e: Elem): Parser[Elem] = acceptIf(_ == e)("`"+e+"' expected but " + _ + " found")$/;"	f
accept	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def accept[ES <% List[Elem]](es: ES): UnitParser = new UnitParser {$/;"	f
accept	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def accept[U](expected: String, f: PartialFunction[Elem, U]): Parser[U] = new Parser[U] {$/;"	f
accept	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  implicit def accept(e: Elem): UnitParser = new UnitParser {$/;"	f
accept	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModelParser.scala	/^  def accept(tok: Int) = {$/;"	f
acceptCI	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def acceptCI[ES <% List[Elem]](es: ES): Parser[List[Elem]] =$/;"	f
acceptCIChar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  private def acceptCIChar(c: Elem) = acceptIf(a => xform(a) == xform(c))("`"+c+"' expected but " + _ + " found")$/;"	f
acceptHeader	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^      val acceptHeader = for (req <- in;$/;"	V
acceptIf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def acceptIf(p: Elem => Boolean)(err: Elem => String): Parser[Elem] = Parser { in =>$/;"	f
acceptMatch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def acceptMatch[U](expected: String, f: PartialFunction[Elem, U]): Parser[U] = Parser{ in => $/;"	f
acceptSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def acceptSeq[ES <% Iterable[Elem]](es: ES): Parser[List[Elem]] = es.foldRight[Parser[List[Elem]]](success(Nil)){(x, pxs) => accept(x) ~ pxs ^^ mkList}$/;"	f
accessTestRes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  protected object accessTestRes extends RequestVar[Either[Boolean, Box[() => LiftResponse]]](_testAccess) {$/;"	o
accessToken	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  def accessToken(req: Req): Box[LiftResponse] = {$/;"	f
accessor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val accessor = mappedColumns.get(name) orElse mappedColumns.get(name.toLowerCase)$/;"	V
achar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val achar = ('\\\\' ~> ('"' ^^ {case _ => '"'} |$/;"	V
acl	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val acl = synchronized {this.asyncComponents.values.toList}$/;"	V
acos	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def acos(x: Double): Double = java.lang.Math.acos(x)$/;"	f
acquire	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    private[this] def acquire: Segment = {$/;"	f
acquire	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/Lock.scala	/^  def acquire = synchronized {$/;"	f
acronym	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val acronym : Parser[Acronym] =$/;"	V
act	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def act = loop {$/;"	f
action	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    def action(act: (MyType, StV, StV, Meta#Event) => Any): this.type = {_action = act :: _action; this}$/;"	f
actions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def actions = {$/;"	f
actions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def actions: PartialFunction[(Box[PaypalTransactionStatus.Value], PayPalInfo, Req), Unit]$/;"	f
actionsAfterSignup	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  protected def actionsAfterSignup(theUser: ModelType) {$/;"	f
activateSubscription	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Publisher.scala	/^  def activateSubscription(sub: Subscriber[A, This]): Unit = suspended -= sub$/;"	f
actor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^      val actor = new DeferredProcessor$/;"	V
actors	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^    val actors: List[(LiftCometActor, Long)] =$/;"	V
actual	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val actual = (<link id="css1" rel="stylesheet" type="text\/css" href="style1.css"\/><link id="css1" rel="stylesheet" type="text\/css" href="style2.css"\/>)$/;"	V
actual	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val actual = (<link rel="stylesheet" type="text\/css" href="style1.css"\/><link rel="stylesheet" type="text\/css" href="style1.css"\/>)$/;"	V
actual	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val actual = (<script type="text\/javascript" id="sc1" src="foo1.js"><\/script><script type="text\/javascript" id="sc1" src="foo2.js"><\/script>)$/;"	V
actual	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val actual = (<script type="text\/javascript" id="sc1" src="foo1.js"><\/script><script type="text\/javascript" src="foo1.js"><\/script>)$/;"	V
actual	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val actual = (<script type="text\/javascript">alert("hello");<\/script><script type="text\/javascript">alert("hello");<\/script>)$/;"	V
actual	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val actual = (<style id="st1">.foo{{...}}<\/style><style id="st1">.bar{{...}}<\/style>)$/;"	V
actual	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val actual = (<style>.foo{{...}}<\/style><style>.foo{{...}}<\/style>)$/;"	V
actual	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val actual = (<title>hello<\/title><title>hello2<\/title><title>hello3<\/title>)$/;"	V
actual	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val actual = <html xmlns:lift="http:\/\/liftweb.net\/" xmlns="http:\/\/www.w3.org\/1999\/xhtml">$/;"	V
actual	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val actual = <html>$/;"	V
actual	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/XmlParseSpecs.scala	/^      val actual =$/;"	V
actual2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val actual2 = (<script type="text\/javascript" id="sc1" src="foo1.js"><\/script><script type="text\/javascript" id="sc2" src="foo1.js"><\/script>)$/;"	V
actualAge	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  object actualAge extends MappedInt(this) {$/;"	o
actualField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def actualField(actual: OwnerType): MappedField[FieldType, OwnerType] = actual.getSingleton.getActualField(actual, this)$/;"	f
actualInitialSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  private[this] val actualInitialSize = OpenHashMap.nextPowerOfTwo(initialSize);$/;"	V
actualServlet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPProvider.scala	/^  private var actualServlet: LiftServlet = _$/;"	v
actualTableNames	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^      val actualTableNames = new HashMap[String, String]$/;"	V
adListToAdArray	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  implicit def adListToAdArray(in: List[AddressType]): Array[Address] = in.map(a => new InternetAddress(a.adr)).toArray$/;"	f
adapt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  private def adapt(other: AnyRef): AnyRef =$/;"	f
add	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def add(in: HTTPCookie) = CookieHolder(inCookies, in :: outCookies.filter(_.name != in.name))$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  protected def add(key: A, entry: B): This = {$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^    override protected def add [B1 >: B](k: A, v: B1) =$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^  protected def add [B1 >: B](key: A, value: B1) = new Node(key, value, this, this)$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^      def add(a : A) = {$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    override def add(a : A) = {$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    override def add(a : A) =$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    override def add(idx : Int, a : A) = Buffer.this.add(translate(idx), a);$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  def add(a : A) : Boolean = {$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  def add(idx: Int, a: A): Unit = {$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferIterator.scala	/^  def add(a: A): Unit;$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^    def add(a : A) = underlying.add(a);$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^  override def add(a : A) = underlying.add(a);$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^  override def add(idx : Int, a : A) = underlying.add(idx,a);$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Collection.scala	/^    override def add(a: A): Boolean = Collection.this.add(a)$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Collection.scala	/^  def add(a: A): Boolean;$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/CollectionWrapper.scala	/^  override def add(a : A) = underlying.add(a);$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/LinkedList.scala	/^  override def add(idx : Int, a : A) =$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^    override def add(a : A) = {$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^    override def add(a: A): Boolean = Set.this.add(a)$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^  override def add(a: A): Boolean$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^    override def add(a: A): Boolean = SortedSet.this.add(a)$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashSet.scala	/^  def add(elem: A): Boolean = {$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MultiMap.scala	/^  def add(key: A, value: B): Unit = get(key) match {$/;"	f
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object add(Object arg1, Object arg2) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
add	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    def add(Q: BitSet) {$/;"	f
addAjaxForm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Form.scala	/^  private def addAjaxForm: MetaData = {$/;"	f
addAjaxHREF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/A.scala	/^  private def addAjaxHREF(): MetaData = {$/;"	f
addAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  def addAll(idx: Int, that: Iterable[A]): Unit = {$/;"	f
addAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^  override def addAll(idx : Int, that : Iterable[A]) = that match {$/;"	f
addAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Collection.scala	/^  def addAll(i: Iterable[A]): Boolean = {$/;"	f
addAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/CollectionWrapper.scala	/^  override def addAll(that : Iterable[A]) = that match {$/;"	f
addAnalyzer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def addAnalyzer(f: (Box[Req], Long,$/;"	f
addAndInitCometActor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[liftweb] def addAndInitCometActor(act: LiftCometActor,$/;"	f
addAround	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def addAround(lw: List[LoanWrapper]): Unit = aroundRequest = lw ::: aroundRequest$/;"	f
addAround	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def addAround(lw: LoanWrapper): Unit = aroundRequest = lw :: aroundRequest$/;"	f
addAtHead	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  private[common] def addAtHead(what: LinkedListElem[T1, T2]) {$/;"	f
addAtTail	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  private[common] def addAtTail(what: LinkedListElem[T1, T2]) {$/;"	f
addAttrs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^  def addAttrs(varName: String, attrs: List[MetaData]): JsCmd = attrs.map {$/;"	f
addBinder	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def addBinder(b: binderType) { substitution += Pair(b, b) }$/;"	f
addChar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^    def addChar(pos: Int, lastRand: Int, sb: GoodSB): GoodSB = {$/;"	f
addCleanupFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def addCleanupFunc(f: () => Unit): Unit = postFuncs.is += f$/;"	f
addCleanupFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  private[http] def addCleanupFunc(f: Box[LiftSession] => Unit): Unit =$/;"	f
addCometActor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] def addCometActor(act: LiftCometActor): Unit = synchronized {$/;"	f
addCookie	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def addCookie(cookie: HTTPCookie) {$/;"	f
addCookie	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def addCookie(cookie: Cookie) = {$/;"	f
addCookies	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPResponse.scala	/^  def addCookies(cookies: List[HTTPCookie])$/;"	f
addCookies	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPResponseServlet.scala	/^  def addCookies(cookies: List[HTTPCookie]) = cookies.foreach {$/;"	f
addDateHeader	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def addDateHeader(s: String, l: Long) {$/;"	f
addDefinedElems	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    protected def addDefinedElems(buf: StringBuilder, prefix: String): StringBuilder = if (!isEmpty) {$/;"	f
addDefinedElems	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    protected def addDefinedElems(buf: StringBuilder, prefix: String): StringBuilder = {$/;"	f
addDefinedElems	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^      protected def addDefinedElems(buf: StringBuilder, prefix: String): StringBuilder = {$/;"	f
addDefinedElems	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^    protected def addDefinedElems(buf: StringBuilder, prefix: String): StringBuilder = buf$/;"	f
addDefinedElems	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  protected def addDefinedElems(buf: StringBuilder, prefix: String): StringBuilder$/;"	f
addDigit	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^    def addDigit(in: Array[Byte], pos: Int, len: Int, sb: StringBuilder) {$/;"	f
addEndStuffs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def addEndStuffs(in: String, params: List[QueryParam[A]], conn: SuperConnection): (String, Box[Long], Box[Long]) = {$/;"	f
addEntry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/DefaultMapModel.scala	/^  protected def addEntry(e: Entry)$/;"	f
addEntry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^  def addEntry(elem: A) : Boolean = {$/;"	f
addEntry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^  protected def addEntry(e: Entry) {$/;"	f
addEntry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  private[this] def addEntry(entry : Entry[Key, Value]) = $/;"	f
addFailure	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def addFailure(test: Test, t: Throwable) {$/;"	f
addFields	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private[mapper] def addFields(what: String, whereAdded: Boolean,$/;"	f
addFunctionMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def addFunctionMap(name: String, value: AFuncHolder) = _functionMap.value += (name -> value)$/;"	f
addHeader	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def addHeader(s1: String, s2: String) {$/;"	f
addHeaders	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPResponse.scala	/^  def addHeaders(headers: List[HTTPParam])$/;"	f
addHeaders	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPResponseServlet.scala	/^  def addHeaders(headers: List[HTTPParam]) {$/;"	f
addHighLevelSessionDispatcher	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def addHighLevelSessionDispatcher(name: String, disp: LiftRules.DispatchPF) =$/;"	f
addIntHeader	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def addIntHeader(s: String, i: Int) {$/;"	f
addLoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^  private[sitemap] def addLoc(in: Loc[_]) {$/;"	f
addLogFunc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def addLogFunc(f: LogFunc): List[LogFunc] = {$/;"	f
addMore	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  final def addMore(more: (Array[T], Int, Int) => Int): Page[T] =$/;"	f
addMore	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  private def addMore() = latest.addMore(more)$/;"	f
addName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/StatefulSnippet.scala	/^  def addName(name: String) {$/;"	f
addRoles	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/Role.scala	/^  def addRoles(roles: Role*) = {$/;"	f
addSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def addSession(liftSession: LiftSession) {$/;"	f
addSessionCleanup	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def addSessionCleanup(f: LiftSession => Unit): Unit = synchronized {$/;"	f
addSessionRewriter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def addSessionRewriter(name: String, rw: LiftRules.RewritePF) =$/;"	f
addSnippet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def addSnippet(xhtml: NodeSeq): NodeSeq = {$/;"	f
addSnippetCallback	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def addSnippetCallback(obj: A) { obj.save }$/;"	f
addSnippetForClass	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def addSnippetForClass(cls: String, inst: StatefulSnippet): Unit = {$/;"	f
addSnippetSetup	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def addSnippetSetup: A = {$/;"	f
addString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def addString(buf: StringBuilder, start: String, sep: String, end: String): StringBuilder = self.addString(buf, start, sep, end)$/;"	f
addString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def addString(buf: StringBuilder): StringBuilder = addString(buf, "", "", "")$/;"	f
addString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def addString(buf: StringBuilder, sep: String): StringBuilder = addString(buf, "", sep, "")$/;"	f
addString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def addString(buf: StringBuilder, start: String, sep: String, end: String): StringBuilder = {$/;"	f
addString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def addString(buf: StringBuilder) =$/;"	f
addString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def addString(buf: StringBuilder, sep: String) =$/;"	f
addString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def addString(buf: StringBuilder, start: String, sep: String, end: String) =$/;"	f
addString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def addString(buf: StringBuilder, start: String, sep: String, end: String): StringBuilder = {$/;"	f
addTest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def addTest(t: Test) {$/;"	f
addToDocFrag	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^  def addToDocFrag(parent: String, elems: List[Node]): JsCmd = elems.map {$/;"	f
addToPackages	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def addToPackages(what: Package) {$/;"	f
addToPackages	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def addToPackages(what: String) {$/;"	f
addUrl	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/Facebook.scala	/^  def addUrl : String = "http:\/\/www.facebook.com\/add.php?api_key=" + FacebookRestApi.apiKey$/;"	f
added	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  var added: List[T] = Nil$/;"	v
addedApplication_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/Facebook.scala	/^  def addedApplication_? : Boolean = S.param("fb_sig_added") match {$/;"	f
addedPostCommit	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  private[mapper] var addedPostCommit = false$/;"	v
addingEntries	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^  override def addingEntries(bundle: Bundle, entries: JList[ManifestEntry]) {$/;"	f
additionalAttributes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  def additionalAttributes: MetaData =$/;"	f
addlHead	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^    val addlHead = new ListBuffer[Node]$/;"	V
addlParams	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^          private[http] val addlParams: Map[String, String]) extends HasParams$/;"	V
addlQueryParams	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  object addlQueryParams extends net.liftweb.http.RequestVar[List[QueryParam[A]]](Nil) {$/;"	o
addlTail	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^    val addlTail = new ListBuffer[Node]$/;"	V
addressCity	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val addressCity = r.param("address_city")$/;"	V
addressCountry	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val addressCountry = r.param("address_country")$/;"	V
addressState	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val addressState = r.param("address_state")$/;"	V
addressStatus	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val addressStatus = r.param("address_status")$/;"	V
addressStreet	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val addressStreet = r.param("address_street")$/;"	V
addressToAddress	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  implicit def addressToAddress(in: AddressType): Address = new InternetAddress(in.adr)$/;"	f
addressZip	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val addressZip = r.param("address_zip")$/;"	V
adecls	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^  protected var adecls:       List[AttrDecl]         = _$/;"	v
adr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  sealed abstract class AddressType(val adr: String) extends RoutingType$/;"	V
advanceDFA	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^    def advanceDFA(dm:DFAContentModel) = {$/;"	f
advanced	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    override def advanced : this.type = this$/;"	f
advanced	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^  def advanced : BufferedIterator.Advanced[A] = new BufferedIterator.Default[A] {$/;"	f
af	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^      val af: AFuncHolder = jsonCallback _$/;"	V
after	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^      val after = joins.drop(n2)$/;"	V
after	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def after(i: Int): java.lang.CharSequence = $/;"	f
after	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def after: java.lang.CharSequence = $/;"	f
afterAssert	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^    def afterAssert(name: String, success: Boolean): Unit = synchronized {$/;"	f
afterCommit	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def afterCommit: List[A => Unit] = clearPostCommit _ :: Nil$/;"	f
afterCommit	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/DBMetaRecord.scala	/^  def afterCommit: List[BaseRecord => Unit] = Nil$/;"	f
afterCompletion	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/EntityManagerSynchronization.scala	/^  def afterCompletion(status: Int) = {$/;"	f
afterCreate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def afterCreate: List[(A) => Unit] = Nil$/;"	f
afterDelete	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def afterDelete: List[(A) => Unit] = Nil$/;"	f
afterSave	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def afterSave: List[(A) => Unit] = Nil$/;"	f
afterSchemifier	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def afterSchemifier: Unit$/;"	f
afterSend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val afterSend = RulesSeq[(BasicResponse, HTTPResponse, List[(String, String)], Box[Req]) => Any]$/;"	V
afterTest	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^    def afterTest(name: String, success: Boolean, excp: Box[Throwable], trace: List[StackTraceElement]) {$/;"	f
afterUpdate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def afterUpdate: List[(A) => Unit] = Nil$/;"	f
afterValidation	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def afterValidation: List[A => Unit] = Nil$/;"	f
afterValidationOnCreate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def afterValidationOnCreate: List[A => Unit] = Nil$/;"	f
afterValidationOnUpdate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def afterValidationOnUpdate: List[A => Unit] = Nil$/;"	f
age	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^      val age = new Field with IntField {$/;"	V
ago	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    def ago = TimeSpan(outer.millis - millis).date$/;"	f
ahead	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    var ahead: Iterator[A] = null$/;"	v
ajax	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/A.scala	/^    val ajax: JsExp = SHtml.makeAjaxCall(JE.Str(S.attr.~("key").map(_.text + "=true").getOrElse("")))$/;"	V
ajax	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Form.scala	/^    val ajax: String = pre + SHtml.makeAjaxCall(LiftRules.jsArtifacts.serialize(id), AjaxContext.js(post)).toJsCmd + ";" + "return false;"$/;"	V
ajax	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JSArtifacts.scala	/^  def ajax(data: AjaxInfo): String$/;"	f
ajax	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JQueryArtifacts.scala	/^  def ajax(data: AjaxInfo): String = {$/;"	f
ajax	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^  def ajax(data: AjaxInfo): String = {$/;"	f
ajaxButton	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxButton(text: NodeSeq, func: () => JsCmd, attrs: (String, String)*): Elem = {$/;"	f
ajaxButton	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxButton(text: NodeSeq, jsExp: JsExp, func: String => JsCmd, attrs: (String, String)*): Elem = {$/;"	f
ajaxButton	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxButton(text: NodeSeq, jsFunc: Call, func: () => JsCmd, attrs: (String, String)*): Elem = {$/;"	f
ajaxButton	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxButton(text: String, func: () => JsCmd, attrs: (String, String)*): Elem =$/;"	f
ajaxButton	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxButton(text: String, jsFunc: Call, func: () => JsCmd, attrs: (String, String)*): Elem =$/;"	f
ajaxCall	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxCall(jsCalcValue: JsExp, func: String => JsCmd): (String, JsExp) = ajaxCall_*(jsCalcValue, SFuncHolder(func))$/;"	f
ajaxCall	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxCall(jsCalcValue: JsExp, jsContext: JsContext, func: String => JsCmd): (String, JsExp) =$/;"	f
ajaxCall_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  private def ajaxCall_*(jsCalcValue: JsExp, func: AFuncHolder): (String, JsExp) =$/;"	f
ajaxCall_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  private def ajaxCall_*(jsCalcValue: JsExp,$/;"	f
ajaxCheckbox	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxCheckbox(value: Boolean, func: Boolean => JsCmd, attrs: (String, String)*): Elem =$/;"	f
ajaxCheckbox	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxCheckbox(value: Boolean, jsFunc: Call, func: Boolean => JsCmd, attrs: (String, String)*): Elem =$/;"	f
ajaxCheckbox_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  private def ajaxCheckbox_*(value: Boolean, jsFunc: Box[Call], func: AFuncHolder, attrs: (String, String)*): Elem = {$/;"	f
ajaxDefaultFailure	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var ajaxDefaultFailure: Box[() => JsCmd] =$/;"	v
ajaxEditable	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxEditable (displayContents : => NodeSeq, editForm : => NodeSeq, onSubmit : () => Unit) : NodeSeq = {$/;"	f
ajaxEnd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var ajaxEnd: Box[() => JsCmd] = Empty$/;"	v
ajaxForm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxForm(body : NodeSeq, onSubmit : JsCmd, postSubmit : JsCmd) = (<lift:form onsubmit={onSubmit.toJsCmd} postsubmit={postSubmit.toJsCmd}>{body}<\/lift:form>)$/;"	f
ajaxForm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxForm(body: NodeSeq) = (<lift:form>{body}<\/lift:form>)$/;"	f
ajaxForm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxForm(body: NodeSeq, onSubmit: JsCmd) = (<lift:form onsubmit={onSubmit.toJsCmd}>{body}<\/lift:form>)$/;"	f
ajaxForm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxForm(onSubmit: JsCmd, body: NodeSeq) = (<lift:form onsubmit={onSubmit.toJsCmd}>{body}<\/lift:form>)$/;"	f
ajaxInvoke	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxInvoke(func: () => JsCmd): (String, JsExp) =$/;"	f
ajaxPath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var ajaxPath = "ajax_request"$/;"	v
ajaxPostTimeout	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var ajaxPostTimeout = 5000$/;"	v
ajaxRetryCount	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var ajaxRetryCount: Box[Int] = Empty$/;"	v
ajaxScript	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^        val ajaxScript = len >= 2 && kindaAjax &&$/;"	V
ajaxScript	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/ScriptRenderer.scala	/^  def ajaxScript = JsCmds.Run("""$/;"	f
ajaxScriptName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var ajaxScriptName: () => String = () => "liftAjax.js"$/;"	v
ajaxScriptUpdateTime	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var ajaxScriptUpdateTime: LiftSession => Long = session => {$/;"	v
ajaxSelect_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  private def ajaxSelect_*(opts: Seq[(String, String)], deflt: Box[String],$/;"	f
ajaxStart	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var ajaxStart: Box[() => JsCmd] = Empty$/;"	v
ajaxSubmit	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxSubmit(value: String, func: () => JsCmd, attrs: (String, String)*): Elem = {$/;"	f
ajaxText	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxText(value: String, func: String => JsCmd, attrs: (String, String)*): Elem = ajaxText_*(value, Empty, SFuncHolder(func), attrs: _*)$/;"	f
ajaxText	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxText(value: String, jsFunc: Call, func: String => JsCmd, attrs: (String, String)*): Elem = ajaxText_*(value, Full(jsFunc), SFuncHolder(func), attrs: _*)$/;"	f
ajaxText_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  private def ajaxText_*(value: String, jsFunc: Box[Call], func: AFuncHolder, attrs: (String, String)*): Elem = {$/;"	f
all	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    def all = children$/;"	f
all	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    def all = delegate$/;"	f
allAttrs	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def allAttrs = AnyAttribute("href", href) :: attrs$/;"	f
allAttrs	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def allAttrs = {AnyAttribute("href", _href) :: attrs }$/;"	f
allAttrs	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def allAttrs: List[AnyAttribute] = wikiFunc match {$/;"	f
allDeclarationsProcessed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Document.scala	/^  var allDeclarationsProcessed = false$/;"	v
allElems	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private def allElems(in: NodeSeq, f: Elem => Boolean): List[Elem] = {$/;"	f
allEntries	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^  def allEntries : List[DBLogEntry] = executedStatements.reverse$/;"	f
allFields	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  def allFields: Seq[BaseField] = List(this)$/;"	f
allFields	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  def allFields: Seq[BaseField]$/;"	f
allFields	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^   def allFields: Seq[BaseField] = formFields$/;"	f
allInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^        val allInfo = request extractFiles$/;"	V
allLabels	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Xml.scala	/^        val allLabels = nodes.map(_.label)$/;"	V
allParams	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def allParams: List[Loc.LocParam[T]] = params ::: siteMap.globalParams$/;"	f
allParams	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^    val allParams: List[(String, Any)] =$/;"	V
allParams	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^    val allParams: List[FacebookParam] =$/;"	V
allSet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  private def allSet(in: Box[Boolean]) {$/;"	f
allTemplate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  protected def allTemplate: NodeSeq = TemplateFinder.findAnyTemplate(allTemplatePath) openOr allTemplateNodeSeq$/;"	f
allTemplate	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  protected def allTemplate: NodeSeq = TemplateFinder.findAnyTemplate(allTemplatePath) openOr allTemplateNodeSeq$/;"	f
allTemplateNodeSeq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  protected def allTemplateNodeSeq: NodeSeq =$/;"	f
allTemplateNodeSeq	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  protected def allTemplateNodeSeq: NodeSeq =$/;"	f
allTemplatePath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  protected def allTemplatePath: List[String] = LiftScreenRules.allTemplatePath.vend$/;"	f
allTemplatePath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  val allTemplatePath: FactoryMaker[List[String]] = new FactoryMaker[List[String]](() => List("templates-hidden", "wizard-all")) {}$/;"	V
allTemplatePath	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  protected def allTemplatePath: List[String] = WizardRules.allTemplatePath.vend$/;"	f
allTemplatePath	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  val allTemplatePath: FactoryMaker[List[String]] = new FactoryMaker[List[String]](() => List("templates-hidden", "wizard-all")) {}$/;"	V
allow	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResourceServer.scala	/^  def allow(path: PartialFunction[List[String], Boolean]) {$/;"	f
allowForwardRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def allowForwardRef: Scope[binderType] = this \/\/ TODO$/;"	f
allowParallelSnippets	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val allowParallelSnippets: FactoryMaker[Boolean] = new FactoryMaker(() => false) {}$/;"	V
allowTemporaryPoolExpansion	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  protected def allowTemporaryPoolExpansion = true$/;"	f
allowedPaths	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResourceServer.scala	/^  var allowedPaths: PartialFunction[List[String], Boolean] = {$/;"	v
alpha_	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def alpha_==[t <: NameElement](other: BoundElement[t]): Boolean = scope.indexFor(el) == other.scope.indexFor(other.el)$/;"	f
also	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val also = le.getCause match {$/;"	V
also	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    def also(f: Response => Any): Response = {f(res); res}$/;"	f
alt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def append[U >: Nothing](a: => ParseResult[U]): ParseResult[U] = { val alt = a; alt match {$/;"	V
alterAddColumn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def alterAddColumn = "ADD COLUMN"$/;"	f
alterAddColumn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  override def alterAddColumn = "ADD"$/;"	f
alternateMethods	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^      def alternateMethods: List[Method] = clz.getDeclaredMethods.toList.filter( m => m.getName.equals(meth) &&$/;"	f
alwaysTrue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  @deprecated def alwaysTrue(a: Req) = true$/;"	f
amount	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^        def amount: BigDecimal$/;"	f
amount	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    def make(x: BigDecimal) = new Currency{val amount = x}$/;"	V
amount	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val amount = r.param("amt")$/;"	V
amount1	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val amount1 = r.param("amount1")$/;"	V
amount2	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val amount2 = r.param("amount2")$/;"	V
amount3	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val amount3 = r.param("amount3")$/;"	V
amqp	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^          val amqp = this$/;"	V
amqp	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^  val amqp = new ExampleSerializedAMQPDispatcher[String](factory, "thor.local", 5672)$/;"	V
amqp	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^  val amqp = new StringAMQPSender(factory, "localhost", 5672, "mult", "routeroute")$/;"	V
anInsertTree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  type anInsertTree = InsertTree[A,B]$/;"	T
anInt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val anInt: Parser[Long] = (digit19 ~ digits ^? {case x ~ xs if xs.length < 12 => (x :: xs).mkString("").toLong}) |$/;"	V
aname	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^      val aname = xName$/;"	V
anchor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val anchor =$/;"	V
and	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DependencySnippet.scala	/^		This methods displays a form for creating a Discovery object and storing it $/;"	o
and	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DiscoverySnippet.scala	/^		This methods displays a form for creating a Discovery object and storing it $/;"	o
andDo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^      def andDo(block: => Unit): T = {block; r}$/;"	f
andDo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def andDo(block: => Unit): T$/;"	f
andThen	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function1.scala	/^  def andThen[A](g: R => A): T1 => A = { x => g(apply(x)) }$/;"	f
andThen	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/PartialFunction.scala	/^  override def andThen[C](k: B => C) : PartialFunction[A, C] = new PartialFunction[A, C] {$/;"	f
animals	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val animals = Animals(Dog("pluto") :: Fish(1.2) :: Dog("devil") :: Nil, Dog("pluto"))$/;"	V
answer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  protected def answer(answer: Any) {$/;"	f
answerWith	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private var answerWith: Box[Any => Any] = Empty$/;"	v
answers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^    private var answers: List[AnswerRender] = Nil$/;"	v
any	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^    val any = a.asInstanceOf[AnyRef]$/;"	V
any2ArrowAssoc	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def any2ArrowAssoc[A](x: A): ArrowAssoc[A] = new ArrowAssoc(x)$/;"	f
any2Ensuring	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def any2Ensuring[A](x: A): Ensuring[A] = new Ensuring(x)$/;"	f
any2stringadd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def any2stringadd(x: Any) = new runtime.StringAdd(x)$/;"	f
anyChar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def anyChar: Parser[Elem] = elem("Any Char", c => c != '\\032')$/;"	f
anyToFindString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def anyToFindString(in: Any): Box[String] =$/;"	f
apiKey	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def apiKey = System.getProperty("com.facebook.api_key")$/;"	f
apiKey_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def apiKey_=(key: String) = System.setProperty("com.facebook.api_key", key)$/;"	f
appP	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def appP(a: T, state: Array[Byte]): Array[Byte]$/;"	f
appP	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def appP(a: T, state: PicklerState): PicklerState$/;"	f
appP	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def appP(a: t, state: Array[Byte]): Array[Byte] =$/;"	f
appP	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def appP(a: t, state: PicklerState): PicklerState =$/;"	f
appP	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def appP(b: Byte, s: PicklerState): PicklerState =$/;"	f
appP	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def appP(b: RefDef, s: Array[Byte]): Array[Byte] =$/;"	f
appP	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def appP(b: u, s: Array[Byte]): Array[Byte] = {$/;"	f
appP	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def appP(b: u, s: PicklerState): PicklerState = {$/;"	f
appP	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def appP(n: Int, s: Array[Byte]): Array[Byte] =$/;"	f
appP	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def appP(n: Int, s: PicklerState): PicklerState = {$/;"	f
appP	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def appP(v: a, state: PicklerState): PicklerState = {$/;"	f
appU	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def appU(s: Array[Byte]): (Int, Array[Byte]) = {$/;"	f
appU	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def appU(s: Array[Byte]): (RefDef, Array[Byte]) =$/;"	f
appU	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def appU(s: Array[Byte]): (u, Array[Byte]) = {$/;"	f
appU	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def appU(s: UnPicklerState): (Byte, UnPicklerState) =$/;"	f
appU	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def appU(s: UnPicklerState): (Int,UnPicklerState) = {$/;"	f
appU	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def appU(s: UnPicklerState): (u, UnPicklerState) = {$/;"	f
appU	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def appU(state: Array[Byte]) = (x, state)$/;"	f
appU	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def appU(state: Array[Byte]): (T, Array[Byte])$/;"	f
appU	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def appU(state: UnPicklerState) = (x, state)$/;"	f
appU	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def appU(state: UnPicklerState): (T, UnPicklerState)$/;"	f
appU	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def appU(state: UnPicklerState): (a, UnPicklerState) = {$/;"	f
appearOnce	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPResponseServlet.scala	/^    val appearOnce = Set(LiftRules.overwrittenReponseHeaders.vend.map(_.toLowerCase): _*)$/;"	V
append	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^      def append(value1: JValue, value2: JValue): JValue = (value1, value2) match {$/;"	f
append	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def append(r: T): RulesSeq[T] = {$/;"	f
append	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    private def append(sb: StringBuilder, cmd: JsCmd) {$/;"	f
append	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^    val append = (failedTests, failedAsserts) match {$/;"	V
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    def append[B >: A](rest : => Iterable[B]): Projection[B] = new Projection[B] {$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def append[B >: A](that: Iterator[B]) = new Iterator[B] {$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def append[B >: A](that: => Iterable[B]): Projection[B] = {$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    override def append[B >: A](that: => Iterable[B]): Projection[B] = that match {$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override def append[B >: A](rest: => Iterable[B]): Stream[B] =$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def append(s: String): StringBuilder = {$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def append(sb: StringBuilder): StringBuilder =$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def append(x: Any): StringBuilder =$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def append(x: Array[Char]): StringBuilder =$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def append(x: Array[Char], offset: Int, len: Int): StringBuilder = {$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def append(x: Boolean): StringBuilder = {$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def append(x: Byte): StringBuilder =$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def append(x: Char): StringBuilder = {$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def append(x: Double): StringBuilder = $/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def append(x: Float): StringBuilder =$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def append(x: Int): StringBuilder =$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def append(x: Long): StringBuilder =$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def append(x: Seq[Char]): StringBuilder =$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def append(x: Short): StringBuilder =$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^  def append[B >: A](item: B): ImmutableIterator[B] = append(item, () => ImmutableIterator.Empty)$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^  def append[B >: A](item: B, right: () => ImmutableIterator[B]): ImmutableIterator[B] =$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^  def append[B >: A](right: () => ImmutableIterator[B]) =$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Buffer.scala	/^  def append(elems: A*) { this ++= elems }$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BufferProxy.scala	/^  override def append(elems: A*): Unit = self.++=(elems)$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/DoubleLinkedList.scala	/^  override def append(that: This): Unit =$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SingleLinkedList.scala	/^  def append(that: This): Unit =$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedBuffer.scala	/^  override def append(elems: A*): Unit = synchronized {$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^    def append(l: T, x: A): T = l ::: x :: Nil$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^    def append(l: T, x: A): T = {$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^  def append(l: T, x: A): T$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def append[U >: Nothing](a: => ParseResult[U]): ParseResult[U] = this$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def append[U >: Nothing](a: => ParseResult[U]): ParseResult[U] = { val alt = a; alt match {$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def append[U >: T](a: => ParseResult[U]): ParseResult[U] = this$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def append[U >: T](a: => ParseResult[U]): ParseResult[U]$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def append[U >: T](p: => Parser[U]): Parser[U] $/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def append(updates: MetaData): MetaData =$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def append(updates: MetaData, scope: NamespaceBinding): MetaData =$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  override def append(m: MetaData): MetaData = m$/;"	f
append	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/TextBuffer.scala	/^  def append(cs: Seq[Char]): TextBuffer = {$/;"	f
appendAll	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    def appendAll(in: NodeSeq, lb: ListBuffer[Elem]) {$/;"	f
appendAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Buffer.scala	/^  def appendAll(iter: Iterable[A]) { this ++= iter }$/;"	f
appendAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BufferProxy.scala	/^  override def appendAll(iter: Iterable[A]): Unit = self.appendAll(iter)$/;"	f
appendAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedBuffer.scala	/^  override def appendAll(iter: Iterable[A]): Unit = synchronized {$/;"	f
appendBuilder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  private def appendBuilder(builder: FormBuilderLocator[_], to: Map[String, List[FormBuilderLocator[_]]]):$/;"	f
appendByte	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def appendByte(a: Array[Byte], b: Int): Array[Byte] =$/;"	f
appendChar	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/TextBuffer.scala	/^  def appendChar(c: Char) =         { ws = false; sb.append( c ) }$/;"	f
appendDispatch	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  def appendDispatch(func: PartialFunction[Req, BaseRecord => Box[LiftResponse]])= {$/;"	f
appendElem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MutableList.scala	/^  protected def appendElem(elem: A): Unit =$/;"	f
appendEscapedQuoted	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def appendEscapedQuoted(s: String, sb: StringBuilder): StringBuilder = {$/;"	f
appendField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def appendField(pf: FieldPF) {$/;"	f
appendFieldToStrings	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def appendFieldToStrings(in: A): String = mappedFieldList.map(p => ??(p.method, in).asString).mkString(",")$/;"	f
appendGlobalFormBuilder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def appendGlobalFormBuilder[T](builder: FormBuilderLocator[T]) {$/;"	f
appendJsonHandler	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def appendJsonHandler(h: PartialFunction[Any, JsCmd]) {$/;"	f
appendParams	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^  def appendParams(url: String, params: Seq[(String, String)]): String = params.toList match {$/;"	f
appendPostFunc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def appendPostFunc(name: ConnectionIdentifier, func: () => Unit) {$/;"	f
appendQuoted	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def appendQuoted(s: String): String = {$/;"	f
appendQuoted	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def appendQuoted(s: String, sb: StringBuilder) = {$/;"	f
appendRequestFormBuilder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def appendRequestFormBuilder[T](builder: FormBuilderLocator[T]) {$/;"	f
appendSessionFormBuilder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def appendSessionFormBuilder[T](builder: FormBuilderLocator[T]) {$/;"	f
appendSpace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/TextBuffer.scala	/^  def appendSpace         = if(!ws) { ws = true;  sb.append(' ') } else {}$/;"	f
appendText	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def appendText(pos: Int, ts: NodeBuffer, txt: String): Unit = {$/;"	f
appendToParent	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^        def appendToParent(name: String): JsCmd =$/;"	f
appendToParent	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  def appendToParent(parentName: String): JsCmd = {$/;"	f
appendToParent	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^  def appendToParent(parentName: String) = in$/;"	f
appendToParent	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^  def appendToParent(parentName: String): JsCmd = {$/;"	f
appendToParent	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^  def appendToParent(parentName: String): JsCmd =$/;"	f
appendToParent	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^  def appendToParent(parentName: String): JsCmd$/;"	f
appendToParent	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def appendToParent(parentName: String) = {$/;"	f
appendToString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxSpec.scala	/^      def appendToString(s: String, x: Int) = s + x.toString$/;"	f
applicationUri	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  def applicationUri = application_uri.is$/;"	f
applicationUri	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def applicationUri: String$/;"	f
applicationUri	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/test/scala/net/liftweb/oauth/OAuthSignatureMethodSpec.scala	/^    def applicationUri: String = ""$/;"	f
application_uri	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  object application_uri extends MappedString(this, 255) {$/;"	o
applied	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def applied(params: JsExp*): JsExp = new JsExp {$/;"	f
applied	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def applied: JsExp = new JsExp {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def apply(msg: String) = new Failure(msg, Empty, Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def apply[InType, OutType](pf: PartialFunction[InType, OutType])(value: InType): Box[OutType] =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def apply[InType, OutType](value: InType)(pf: PartialFunction[InType, OutType]): Box[OutType] =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def apply[T](in: List[T]) = in match {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def apply[T](in: Option[T]) = in match {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  def apply(key: K) = get(key).open_!$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  def apply = get$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def apply(i: Int): JValue = JNothing$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    override def apply(i: Int): JValue = arr(i)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    override def apply(i: Int): JValue = value(i)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    def apply(): Segment = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  def apply(key: K): Box[V] = get(key)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  def apply(key: K, dflt: => V): V = get(key, dflt)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  def apply(what: T): T = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def apply(key: String): Holder[Info] = convert(findAttr(key))$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def apply(prefix: String, key: String): Holder[Info] =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def apply[T](key: String, f: Info => T): Holder[T] =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def apply[T](prefix: String, key: String, f: Info => T): Holder[T] =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^    def apply(in0: Input) = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Currency.scala	/^  def apply(s: String): Box[Currency] = s.roboSplit("&") match {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    def apply(x: BigDecimal): Currency = make(x)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    def apply(x: String): Currency = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^  def apply[T](f: => T) = new FatLazy(f)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^  def apply[T](f: => T) = new ThreadLazy(f)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^  def apply[T](f: => T): LZ[T] = new LZ(f)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^  def apply[T](f: => T): T = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  def apply(field: FieldIdentifier, msg: String) = new FieldError(field, Text(msg))$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/KeyedCache.scala	/^  def apply(key: K): Box[T] = if (cache.contains(key)) {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LD.scala	/^  def apply(root: String, ly: List[String]): (String, Int) = this(root,ly, (a: String) => a)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LD.scala	/^  def apply(x: String, y: String): Int = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LD.scala	/^  def apply[T](root: String, ly: List[T], f: T => String): (T, Int) =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LRU.scala	/^  def apply(k: KeyType): ValueType = map.get(k).asInstanceOf[ValueType]$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LoanWrapper.scala	/^  def apply[T](f: => T): T$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  def apply() = vend$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  def apply[T](f: () => T): Vendor[T] = new Vendor[T] {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  def apply[T](f: T): Vendor[T] = new Vendor[T] {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/NamedPartialFunction.scala	/^  def apply[A, B](name: String)(f: PartialFunction[A,B]):$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/NamedPartialFunction.scala	/^  def apply[A, B](value: A, lst: Seq[PartialFunction[A, B]]): B =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/NamedPartialFunction.scala	/^  override def apply(x: A): B = f(x)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^  def apply() = entities$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^  def apply(in: InputStream): Box[NodeSeq] = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^  def apply(in: String): Box[NodeSeq] = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^  def apply(in: String) = new REDoer(in, Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^  def apply(obj: T, other: String): Box[T] = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^  def apply[T](in: String, func: PartialFunction[(T, List[String]), T]) = new REDoer(in, Full(func))$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^  def apply(key: K): Box[V] = lock(readLock) {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^  def apply[K, V](size: Int) = new SoftReferenceCache[K,V](size)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TemplateCache.scala	/^  def apply(templatesCount: Int) = new InMemoryCache(templatesCount)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ThreadGlobal.scala	/^  def apply(v: T) = set(v)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    def apply(in: Long) = new TimeSpan(in)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ValueHolder.scala	/^  def apply[T](in: T) = tToVHT(in)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^      def apply(in: Any): Unit =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def apply(id: String, node: NodeSeq): Error = Error(Full(id), node)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def apply(id: String, node: NodeSeq): Notice = Notice(Full(id), node)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def apply(id: String, node: NodeSeq): Warning = Warning(Full(id), node)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def apply(id: String, node: String): Error = Error(Full(id), Text(node))$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def apply(id: String, node: String): Notice = Notice(Full(id), Text(node))$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def apply(id: String, node: String): Warning = Warning(Full(id), Text(node))$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def apply(node: NodeSeq): Error = Error(Empty, node)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def apply(node: NodeSeq): Notice = Notice(Empty, node)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def apply(node: NodeSeq): Warning = Warning(Empty, node)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def apply(node: String): Error = Error(Empty, Text(node))$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def apply(node: String): Notice = Notice(Empty, Text(node))$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def apply(node: String): Warning = Warning(Empty, Text(node))$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def apply() = new ForbiddenResponse("")$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def apply() = new NotAcceptableResponse("")$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def apply() = new NotFoundResponse("")$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def apply(_json: JsonAST.JValue, headers: List[(String, String)], cookies: List[HTTPCookie], code: Int): LiftResponse =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def apply(f: () => Unit, msgs: (String, NoticeType.Value)*): RedirectState = new RedirectState(Full(f), msgs: _*)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def apply(js: JsCmd): LiftResponse = JavaScriptResponse(js, S.getHeaders(Nil), S.responseCookies, 200)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def apply(json: JsExp): LiftResponse = JsonResponse(json, headers, cookies, 200)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def apply(json: JsonAST.JValue): LiftResponse = this.apply(json, headers, cookies, 200)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def apply(text: String): CSSResponse = CSSResponse(text, Nil, 200)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def apply(text: String): PlainTextResponse = PlainTextResponse(text, Nil, 200)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def apply(text: String, code: Int): CSSResponse = CSSResponse(text, Nil, code)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def apply(text: String, code: Int): PlainTextResponse = PlainTextResponse(text, Nil, code)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def apply(url: String): LiftResponse = RedirectResponse(url, Nil: _*)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def apply(xml: Node) = new XmlResponse(xml, 200, "text\/xml; charset=utf-8", Nil)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def apply(xml: Node, code: Int) = new XmlResponse(xml, code, "text\/xml; charset=utf-8", Nil)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def apply(xml: Node, code: Int, cookies: List[HTTPCookie]) = new XmlResponse(xml, code, "text\/xml; charset=utf-8", cookies)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def apply(xml: Node, code: Int, mime: String) = new XmlResponse(xml, code, mime, Nil)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def apply(xml: Node, code: Int, mime: String, cookies: List[HTTPCookie]) = new XmlResponse(xml, code, mime, cookies)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def apply(xml: Node, cookies: List[HTTPCookie]) = new XmlResponse(xml, 200, "text\/xml; charset=utf-8", cookies)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def apply(xml: Node, mime: String) = new XmlResponse(xml, 200, mime, Nil)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def apply(xml: Node, mime: String, cookies: List[HTTPCookie]) = new XmlResponse(xml, 200, mime, cookies)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^      def apply(r: Req): () => Box[LiftResponse] = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^      def apply(r: Req): Boolean = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def apply(in: Node): List[XHTMLValidationError] = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def apply[T]: RulesSeq[T] = new RulesSeq[T] {}$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^      override def apply(in: FileParamHolder): Any =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^      override def apply(in: List[String]): Any =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def apply(session: HTTPSession, contextPath: String) =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def apply(n: String, mt: String, fn: String, file: Array[Byte]): FileParamHolder =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def apply(n: String, mt: String, fn: String, inputStream: InputStream): OnDiskFileParamHolder =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def apply(original: Req, rewrite: List[LiftRules.RewritePF]): Req = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def apply(path: List[String]) = new RewriteResponse(ParsePath(path, "", true, false), Map.empty, false)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def apply(path: List[String], params: Map[String, String]) = new RewriteResponse(ParsePath(path, "", true, false), params, false)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def apply(path: List[String], suffix: String) = new RewriteResponse(ParsePath(path, suffix, true, false), Map.empty, false)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def apply(path: ParsePath, params: Map[String, String]) = new RewriteResponse(path, params, false)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def apply(request: HTTPRequest, rewrite: List[LiftRules.RewritePF], nanoStart: Long): Req = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^  def apply(req: HTTPRequest): RequestType = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def apply(func: () => Any): AFuncHolder = new NFuncHolder(func, Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def apply(func: () => Any, owner: Box[String]): AFuncHolder = new NFuncHolder(func, owner)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def apply(func: FileParamHolder => Any): AFuncHolder = new BinFuncHolder(func, Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def apply(func: FileParamHolder => Any, owner: Box[String]): AFuncHolder = new BinFuncHolder(func, owner)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def apply(func: List[String] => Any): AFuncHolder = new LFuncHolder(func, Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def apply(func: List[String] => Any, owner: Box[String]): AFuncHolder = new LFuncHolder(func, owner)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def apply(func: String => Any): AFuncHolder = new SFuncHolder(func, Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def apply(func: String => Any, owner: Box[String]): AFuncHolder = new SFuncHolder(func, owner)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def apply(in: FileParamHolder): Any = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def apply(in: List[String]) {Log.error("You attempted to call a 'File Upload' function with a normal parameter.  Did you forget to 'enctype' to 'multipart\/form-data'?")}$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def apply(in: List[String]): Any = func(in)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def apply(in: List[String]): Any = in.firstOption.toList.map(func(_))$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def apply(in: List[String]): Any = in.firstOption.toList.map(s => func())$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def apply(in: List[String]): Any = proxyTo.apply(in)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def apply(in: List[String]): Any$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    override def apply(in: FileParamHolder) = func(in)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    override def apply(in: FileParamHolder): Any = proxyTo.apply(in)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def apply(in: Any): JsCmd$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    def apply(in: Int) = items(in).xhtml$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    def apply(in: T) = items.filter(_.key == in).first.xhtml$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  def apply[T](session: Box[LiftSession], f: => T): T = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/Role.scala	/^  def apply(roleName: String): Role = new Role {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/Role.scala	/^  def apply(roleName: String, roles: Role*): Role = new Role {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/Role.scala	/^  def apply(roleNames: String*): List[Role] = roleNames.toList.map(n => new Role {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JSArtifacts.scala	/^  def apply(data: JsExp) =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JSArtifacts.scala	/^  def apply(data: JsExp, post: Boolean) =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JSArtifacts.scala	/^  def apply(data: JsExp,$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(): JsCmd = new JsCmd {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(condition: JsExp, body: JsCmd): JsCmd = JE.JsRaw("if ( " + condition.toJsCmd + " ) { " + body.toJsCmd + " }")$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(condition: JsExp, body: JsExp): JsCmd = JE.JsRaw("if ( " + condition.toJsCmd + " ) { " + body.toJsCmd + " }")$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(condition: JsExp, bodyTrue: JsCmd, bodyFalse: JsCmd): JsCmd =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(condition: JsExp, bodyTrue: JsExp, bodyFalse: JsExp): JsCmd =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(formId: String) = new JsExp {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(in: Elem): NodeSeq = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(in: JsCmd): AnonFunc = new JsExp with AnonFunc {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(in: JsExp): JsCmd = new JsCmd {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(members: (String, JsExp)*): JsObj =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(name: String, params: List[String], body: JsCmd): JsCmd =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(obj: JsExp): JsExp = new JsExp {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(obj: JsExp, field: String, idField: String, toUpdate: JsExp): JsExp = new JsExp {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(obj: JsExp, func: JsExp): JsExp = new JsExp {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(obj: JsExp, func: JsExp, alt: JsExp): JsExp = new JsExp {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(obj: JsExp, func: JsExp, alt: String): JsExp = new JsExp {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(obj: JsExp,$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(obj: String): JsExp = new JsExp {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(obj: String, field: String, idField: String, toUpdate: JsExp): JsExp = new JsExp {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(obj: String, func: String): JsExp = new JsExp {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(obj: String, func: String, alt: String): JsExp = new JsExp {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(obj: String,$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(params: String, in: JsCmd): AnonFunc = new JsExp with AnonFunc {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(script: JsCmd): Node = <script type="text\/javascript">{Unparsed("""$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(visible: JsExp, hidden: JsExp): JxBase = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(visible: NodeSeq, hidden: NodeSeq): JxBase = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(what: JsCmd): JsCmd = LiftRules.jsArtifacts.onLoad(what)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(what: JsExp, init1: JsExp, func: AnonFunc): JsExp = new JsExp {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def apply(what: JsExp, init1: JsExp, func: String): JsExp = new JsExp {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  def apply(command: JsExp): JsCmd =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  def apply(command: JsExp, params: JsExp) =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  def apply(command: JsExp, target: JsExp, params: JsExp) =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  def apply(command: String): JsCmd = apply(JE.Str(command))$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  def apply(command: String, params: JsExp) =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  def apply(command: String, target: String, params: JsExp) =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  def apply(in: JsExp) = new JsCommands(List(in.cmd))$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  def apply(in: Seq[JsCmd]) = new JsCommands(in.toList.reverse)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def apply() = new JsExp with JQueryRight {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def apply(): JsExp with JQueryRight with JQueryLeft =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def apply(content: NodeSeq) = new JsExp with JQueryRight with JQueryLeft {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def apply(content: String) = new JsExp with JQueryRight with JQueryLeft {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def apply(html: NodeSeq) = new ModalDialog(html, Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def apply(html: NodeSeq, css: JsObj) = new ModalDialog(html, Full(css))$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def apply(in: JsExp): JsExp with JQueryRight with JQueryLeft =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def apply(name: JsExp, value: JsExp): JsExp with JQueryRight with JQueryLeft =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def apply(tab: Int): JsExp with JQueryRight with JQueryLeft =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def apply(tab: JsExp): JsExp with JQueryRight with JQueryLeft =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def apply(uid: String) = new Hide(uid, Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def apply(uid: String) = new Show(uid, Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def apply(uid: String, content: NodeSeq): JsCmd =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def apply(uid: String, time: TimeSpan) = new Hide(uid, Full(time))$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def apply(uid: String, time: TimeSpan) = new Show(uid, Full(time))$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPCookie.scala	/^  def apply(name: String, value: String) = new HTTPCookie(name, Full(value), Empty, Empty, Empty, Empty, Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPParam.scala	/^  def apply(name: String, value: String) = new HTTPParam(name, List(value))$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^          def apply(in: Req): Box[Role] = role(in)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^        def apply(in: (String, Box[T])): NodeSeq => NodeSeq = func.apply(in._1)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^        def apply(s: String): NodeSeq => NodeSeq = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^      def apply(in: RewriteRequest): RewriteResponse = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    def apply(): Box[() => X]$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    def apply(in: Req): Box[Boolean] = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    def apply(n: String) = dispatch.apply(n)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    def apply(url: String) = new Link[Unit](Nil, false) {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    def apply(urlLst: List[String], matchHead_? : Boolean, url: String) = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def apply(name: String, link: Link[Unit], text: LinkText[Unit], params: List[LocParam[Unit]]): Loc[Unit] = UnitLoc(name, link, text, params)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def apply(name: String, link: Link[Unit], text: LinkText[Unit], params: LocParam[Unit]*): Loc[Unit] = UnitLoc(name, link, text, params.toList)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^  def apply(kids: Menu *) = new SiteMap(Nil, kids :_*)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/XmlMenu.scala	/^  def apply(xml: scala.xml.NodeSeq): Seq[Menu] = for(node<-xml) yield node match {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def apply(key: String, expiration: Long, uid: String) : FacebookSession =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def apply(key: String, value: Any) = new FacebookParam(key, value)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def apply(pair: (String, Any)) = new FacebookParam(pair)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    def apply(name: StV, trans: Meta#ATransition*) = new State(name, trans)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthAccessor.scala	/^  def apply(oauthConsumer: OAuthConsumer): Box[OAuthAccessor] = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthProblemException.scala	/^  def apply(problem: (String, Int)) = new OAuthProblem(problem, Nil)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthProblemException.scala	/^  def apply(problem: (String, Int), msg: String) = new OAuthProblem(problem, List(msg -> msg))$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthProblemException.scala	/^  def apply(problem: (String, Int), param: (String, String)) = new OAuthProblem(problem, param :: Nil)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthProblemException.scala	/^  def apply(problem: (String, Int), params: List[(String, String)]) = new OAuthProblem(problem, params)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^  def apply(accessor: OAuthAccessor): OAuthSignatureMethod = new HMAC_SHA1(accessor)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^  def apply(accessor: OAuthAccessor): OAuthSignatureMethod = new PLAINTEXT(accessor)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^  def apply(accessor: OAuthAccessor): OAuthSignatureMethod$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^  def apply(in: String): Boolean = is.findFirstIn(in).isDefined$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def apply(authToken: String, transactionToken: String, mode: PaypalMode, connection: PaypalConnection): PaypalResponse =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def apply(client: HttpClient, post: PostMethod): List[String] = wasSuccessful(tryo(client.executeMethod(post)).openOr(500)) match {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def apply(mode: PaypalMode, connection: PaypalConnection, paramaters: Seq[(String, String)]): PaypalIPNPostbackReponse =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def apply(p: PostMethod): List[String] = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def apply(r: Req) = NamedPF(r, dispatch)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def apply(request: Req, mode: PaypalMode, connection: PaypalConnection) = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def apply(url: String, paramaters: Seq[(String, String)]): PostMethod = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def apply(url: String, port: Int, connection: String): HttpClient = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^  def apply(f: () => Any) = new Item("Test "+cnt(), false,Full(f), 0, Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^  def apply(name: String, f: () => Any) = new Item(name, false, Full(f), 0, Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^  def apply(name: String, resetDB: Boolean, f: () => Any) = new Item(name, resetDB, Full(f), 0, Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^  def apply(name: String, resetDB: Boolean, theCnt: Int, f: Int => Any) = new Item(name, resetDB, Empty, theCnt, Full(f))$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^  def apply(name: String, theCnt: Int, f: Int => Any) = new Item(name, false, Empty, theCnt, Full(f))$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^  def apply(theCnt: Int, f: Int => Any) = new Item("Test "+cnt(), false, Empty, theCnt, Full(f))$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def apply(in: WikiURLInfo) = in match {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  def apply(in: WikiURLInfo) = in match {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^  def apply(start: String, $/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarDayView.scala	/^  def apply(when: Calendar,$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarItem.scala	/^  def apply(id: String, start: Calendar, calendarType: CalendarType.Value) = new CalendarItem(id, start, calendarType)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarMonthView.scala	/^  def apply(when: Calendar,$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarWeekView.scala	/^  def apply(when: Calendar,$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/gravatar/Gravatar.scala	/^  def apply(e: String): NodeSeq = url(e,defaultSize,defaultRating)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/gravatar/Gravatar.scala	/^  def apply(e: String, s: Int): NodeSeq = url(e,s,defaultRating)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/gravatar/Gravatar.scala	/^  def apply(e: String, s: Int, r: String) = url(e,s,r)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/menu/MenuWidget.scala	/^  def apply() : NodeSeq = apply(MenuStyle.HORIZONTAL)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/menu/MenuWidget.scala	/^  def apply(groups : List[String]) : NodeSeq = apply(groups, MenuStyle.HORIZONTAL)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/menu/MenuWidget.scala	/^  def apply(groups : List[String], style : MenuStyle.Value) : NodeSeq = $/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/menu/MenuWidget.scala	/^  def apply(jsObj: JsObj) = new MenuWidget(MenuStyle.HORIZONTAL, jsObj) render$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/menu/MenuWidget.scala	/^  def apply(style: MenuStyle.Value) = new MenuWidget(style, JsObj()) render$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/menu/MenuWidget.scala	/^  def apply(style: MenuStyle.Value, jsObj: JsObj) = new MenuWidget(style, jsObj) render$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/rssfeed/RSSfeed.scala	/^  def apply(feedUrl: String) = new RSSFeed().render(feedUrl)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tablesorter/TableSorter.scala	/^  def apply(selector: String) = renderOnLoad(selector)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^  def apply(id: String, jsObj: JsObj) = new TreeView().onLoad(id, jsObj)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^  def apply(id: String, jsObj: JsObj, loadTree : () => List[Tree], loadNode: (String) => List[Tree]) =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^  def apply(text:String) = new Tree(text, Empty, Empty, false, false, Nil)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^  def apply(text:String, children: List[Tree]) = new Tree(text, Empty, Empty, false, false, children)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^  def apply(text:String, classes: String) = new Tree(text, Empty, Full(classes), false, false, Nil)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^  def apply(text:String, classes: String, children: List[Tree]) = new Tree(text, Empty, Full(classes), false, false, children)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^  def apply(text:String, classes: String, expanded: Boolean, hasChildren: Boolean, children: List[Tree]) =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^  def apply(text:String, id: String, classes: String, expanded: Boolean, hasChildren: Boolean, children: List[Tree]) =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^  def apply(text:String, id: String, hasChildren: Boolean) = new Tree(text, Full(id), Empty, false, true, Nil)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/HtmlRenderer.scala	/^  def apply(in: Wizard): DispatchSnippet = null$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^      def apply[T](f: => T): T = if (DepthCnt.is == Full(true)) f$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^    def apply (in : Int) = -1$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/HasManyThrough.scala	/^  def apply(): List[To] = others.get$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    def apply(n: Int) = childAt(n)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^   def apply(v: FieldType): OwnerType = { \/\/ issue 154$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def apply[Q <% FieldType](v: Q): OwnerType = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def apply(v: Box[O]): T = this(v.map(_.primaryKeyField.is) openOr 0L)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def apply(v: O): T = this(v.primaryKeyField.is)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def apply(ov: Box[String]): T = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  override def apply(ov: String): T = apply(Full(ov))$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  def apply(v: O): T = this(v.primaryKeyField.is)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^    def apply(in: T): List[FieldError] = f(in)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def apply[T](f: PartialFunction[T, List[FieldError]]): PartialFunction[T, List[FieldError]] with StopValidationOnError[T] =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def apply[T](f: T => List[FieldError]): StopValidationOnError[T] =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      def apply(field: String) = dbFunc match {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[InnerMapper <: Mapper[InnerMapper], JoinTypeA,$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[KeyType, MetaType <: KeyedMapper[KeyType, MetaType], Q <% KeyType](theType:$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[KeyType, MetaType <: KeyedMapper[KeyType, MetaType]](what: KeyedMapper[KeyType, MetaType]): String =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[O <: Mapper[O], T, U <% T](field: MappedField[T, O], value: U) = Cmp[O,T](field, <, Full(value), Empty, Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[O <: Mapper[O], T, U <% T](field: MappedField[T, O], value: U) = Cmp[O,T](field, <>, Full(value), Empty, Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[O <: Mapper[O], T, U <% T](field: MappedField[T, O], value: U) = Cmp[O,T](field, >, Full(value), Empty, Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[O <: Mapper[O], T, U <% T](field: MappedField[T, O], value: U) = Cmp[O,T](field, Eql, Full(value), Empty, Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[O <: Mapper[O], T](field: MappedField[T, O]) = Cmp(field, IsNotNull, Empty, Empty, Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[O <: Mapper[O], T](field: MappedField[T, O]) = Cmp(field, IsNull, Empty, Empty, Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[O <: Mapper[O], T](field: MappedField[T, O], otherField: MappedField[T,O]) = Cmp[O,T](field, <, Empty, Full(otherField), Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[O <: Mapper[O], T](field: MappedField[T, O], otherField: MappedField[T,O]) = Cmp[O,T](field, <>, Empty, Full(otherField), Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[O <: Mapper[O], T](field: MappedField[T, O], otherField: MappedField[T,O]) = Cmp[O,T](field, >, Empty, Full(otherField), Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[O <: Mapper[O], T](field: MappedField[T, O], otherField: MappedField[T,O]) = Cmp[O,T](field, Eql, Empty, Full(otherField), Empty)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[O <: Mapper[O], T](field: MappedNullableField[T, O], value: Box[T]) = value match {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[O <: Mapper[O],T,  Q <: KeyedMapper[T, Q]](field: MappedForeignKey[T, O, Q], value: Q) =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[O <: Mapper[O],T, Q <: KeyedMapper[T, Q]](field: MappedForeignKey[T, O, Q], value: Box[Q]) =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[O <: Mapper[O]](field: MappedField[String, O], value: String) =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[TheType <: Mapper[TheType]](field: MappedForeignKey[_, TheType, _]) =$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    def apply(n: Int) = delegate(n)$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^  override def apply(f: Box[O]) = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^  override def apply(f: O) = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^    def apply[N](f: => N): N = {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def apply(in: MyType): OwnerType = if (owner.meta.mutable_?) {$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def apply(in: MyType): OwnerType$/;"	f
apply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^      def apply(r: Req): () => Box[LiftResponse] = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^       def apply(idx : Int) = Projection.this.apply(length - idx - 1)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def apply(i: Int): A = throw new Error()$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def apply(xs: Boolean*): Array[Boolean] = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def apply(xs: Byte*): Array[Byte] = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def apply(xs: Char*): Array[Char] = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def apply(xs: Double*): Array[Double] = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def apply(xs: Float*): Array[Float] = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def apply(xs: Int*): Array[Int] = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def apply(xs: Long*): Array[Long] = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def apply(xs: Short*): Array[Short] = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def apply(xs: Unit*): Array[Unit] = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def apply[A <: AnyRef](xs: A*): Array[A] = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  def apply(d: Double): BigDecimal =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  def apply(i: Int): BigDecimal =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  def apply(l: Long): BigDecimal =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  def apply(x: Array[Char]): BigDecimal = $/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  def apply(x: BigInt): BigDecimal =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  def apply(x: String): BigDecimal = $/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def apply(bitlength: Int, certaInty: Int, rnd: scala.util.Random): BigInt =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def apply(i: Int): BigInt =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def apply(l: Long): BigInt =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def apply(numbits: Int, rnd: scala.util.Random): BigInt =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def apply(signum: Int, magnitude: Array[Byte]): BigInt =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def apply(x: Array[Byte]): BigInt = $/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def apply(x: String): BigInt = $/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def apply(x: String, radix: Int): BigInt =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ByNameFunction.scala	/^  def apply(x: => A): B$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  final def apply(x: Int): Value = values(x)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function0.scala	/^  def apply(): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function1.scala	/^  def apply(v1:T1): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function10.scala	/^  def apply(v1:T1, v2:T2, v3:T3, v4:T4, v5:T5, v6:T6, v7:T7, v8:T8, v9:T9, v10:T10): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function11.scala	/^  def apply(v1:T1, v2:T2, v3:T3, v4:T4, v5:T5, v6:T6, v7:T7, v8:T8, v9:T9, v10:T10, v11:T11): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function12.scala	/^  def apply(v1:T1, v2:T2, v3:T3, v4:T4, v5:T5, v6:T6, v7:T7, v8:T8, v9:T9, v10:T10, v11:T11, v12:T12): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function13.scala	/^  def apply(v1:T1, v2:T2, v3:T3, v4:T4, v5:T5, v6:T6, v7:T7, v8:T8, v9:T9, v10:T10, v11:T11, v12:T12, v13:T13): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function14.scala	/^  def apply(v1:T1, v2:T2, v3:T3, v4:T4, v5:T5, v6:T6, v7:T7, v8:T8, v9:T9, v10:T10, v11:T11, v12:T12, v13:T13, v14:T14): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function15.scala	/^  def apply(v1:T1, v2:T2, v3:T3, v4:T4, v5:T5, v6:T6, v7:T7, v8:T8, v9:T9, v10:T10, v11:T11, v12:T12, v13:T13, v14:T14, v15:T15): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function16.scala	/^  def apply(v1:T1, v2:T2, v3:T3, v4:T4, v5:T5, v6:T6, v7:T7, v8:T8, v9:T9, v10:T10, v11:T11, v12:T12, v13:T13, v14:T14, v15:T15, v16:T16): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function17.scala	/^  def apply(v1:T1, v2:T2, v3:T3, v4:T4, v5:T5, v6:T6, v7:T7, v8:T8, v9:T9, v10:T10, v11:T11, v12:T12, v13:T13, v14:T14, v15:T15, v16:T16, v17:T17): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function18.scala	/^  def apply(v1:T1, v2:T2, v3:T3, v4:T4, v5:T5, v6:T6, v7:T7, v8:T8, v9:T9, v10:T10, v11:T11, v12:T12, v13:T13, v14:T14, v15:T15, v16:T16, v17:T17, v18:T18): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function19.scala	/^  def apply(v1:T1, v2:T2, v3:T3, v4:T4, v5:T5, v6:T6, v7:T7, v8:T8, v9:T9, v10:T10, v11:T11, v12:T12, v13:T13, v14:T14, v15:T15, v16:T16, v17:T17, v18:T18, v19:T19): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function2.scala	/^  def apply(v1:T1, v2:T2): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function20.scala	/^  def apply(v1:T1, v2:T2, v3:T3, v4:T4, v5:T5, v6:T6, v7:T7, v8:T8, v9:T9, v10:T10, v11:T11, v12:T12, v13:T13, v14:T14, v15:T15, v16:T16, v17:T17, v18:T18, v19:T19, v20:T20): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function21.scala	/^  def apply(v1:T1, v2:T2, v3:T3, v4:T4, v5:T5, v6:T6, v7:T7, v8:T8, v9:T9, v10:T10, v11:T11, v12:T12, v13:T13, v14:T14, v15:T15, v16:T16, v17:T17, v18:T18, v19:T19, v20:T20, v21:T21): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function22.scala	/^  def apply(v1:T1, v2:T2, v3:T3, v4:T4, v5:T5, v6:T6, v7:T7, v8:T8, v9:T9, v10:T10, v11:T11, v12:T12, v13:T13, v14:T14, v15:T15, v16:T16, v17:T17, v18:T18, v19:T19, v20:T20, v21:T21, v22:T22): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function3.scala	/^  def apply(v1:T1, v2:T2, v3:T3): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function4.scala	/^  def apply(v1:T1, v2:T2, v3:T3, v4:T4): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function5.scala	/^  def apply(v1:T1, v2:T2, v3:T3, v4:T4, v5:T5): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function6.scala	/^  def apply(v1:T1, v2:T2, v3:T3, v4:T4, v5:T5, v6:T6): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function7.scala	/^  def apply(v1:T1, v2:T2, v3:T3, v4:T4, v5:T5, v6:T6, v7:T7): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function8.scala	/^  def apply(v1:T1, v2:T2, v3:T3, v4:T4, v5:T5, v6:T6, v7:T7, v8:T8): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function9.scala	/^  def apply(v1:T1, v2:T2, v3:T3, v4:T4, v5:T5, v6:T6, v7:T7, v8:T8, v9:T9): R$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def apply(n: Int): A = drop(n).head$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def apply[A](xs: A*): List[A] = xs.toList$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/PartialFunction.scala	/^    def apply(x: A): C = k(PartialFunction.this.apply(x))$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/PartialFunction.scala	/^    def apply(x: A1): B1 = $/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^    def apply[A, B, C](x: A, y: B, z: C) = Tuple3(x, y, z)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^    def apply[A, B](x: A, y: B) = Tuple2(x, y)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^        def apply(idx : Int) = $/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      def apply(idx : Int) = Mutable.this.apply(idx)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      def apply(idx: Int) = Mutable.this.apply(length - idx - 1)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      override def apply(jdx : Int) = RandomAccessSeq.this.apply(jdx + idx)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    def apply(i: Int): Nothing = throw new NoSuchElementException("empty sequence")$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    def apply(idx : Int) = $/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    def apply(idx : Int) = RandomAccessSeq.this.apply(idx)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    def apply(idx : Int) = RandomAccessSeq.this.apply(length - idx - 1)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    def apply(idx : Int) = if (idx < 0 || idx >= length) throw new Predef.IndexOutOfBoundsException$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^  def apply[A](xs: A*): RandomAccessSeq[A] =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Range.scala	/^    override def apply(idx: Int): Int = super.apply(idx)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Range.scala	/^  def apply(idx: Int): Int = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^          def apply(idx : Int) = $/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^      def apply(idx : Int) : B = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^      def apply(idx : Int) = f(Projection.this.apply(idx))$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^      def apply(idx: Int): B = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    def apply(idx : Int) = (Seq.this.apply(idx))$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    override def apply(idx: Int) = idx match {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  def apply[A](xs: A*): Seq[A] = RandomAccessSeq(xs: _*)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def apply(i: Int): A = self(i)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^     override def apply = this$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^    def apply[A](hd: A, tl: => Stream[A]) = new Stream[A] {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  def apply[A](xs: A*) = (xs :\\ (empty: Stream[A]))(cons(_, _))$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override def apply(n: Int): A = drop(n).head$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def apply(i: Int): Char = charAt(i)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Symbol.scala	/^  def apply(name: String): Symbol = internedSymbols.synchronized {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^  def apply(key: A): B = get(key) match {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/MapProxy.scala	/^  override def apply(key: A) = self.apply(key)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Set.scala	/^  def apply(elem: A): Boolean = contains(elem)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^  def apply[A, B](elems: (A, B)*) = empty[A, B] ++ elems$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashSet.scala	/^  def apply[A](elems: A*) = empty[A] ++ elems$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^  def apply[A](item : A) : ImmutableIterator[A] = NonEmpty(item, () => Empty)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^  def apply[A](item : A, right : () => ImmutableIterator[A]) : () => ImmutableIterator[A] =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^  def apply[A](left : ImmutableIterator[A], item : A, right : () => ImmutableIterator[A]) : ImmutableIterator[A] = left match {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^  def apply[A](left: () => ImmutableIterator[A], right: () => ImmutableIterator[A]): () => ImmutableIterator[A] = () => (left() match {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def apply[T](elems : (Int, T)*) : IntMap[T] = $/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  final override def apply(key : Int) : T = this match {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^    override def apply(k: A): B1 = if (k == key) value else next(k)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^  def apply[A, B](elems: (A, B)*) = empty[A, B] ++ elems$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^  def apply[A, B](elems: A*) = empty[A] ++ elems$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def apply[T](elems : (Long, T)*) : LongMap[T] = $/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  final override def apply(key : Long) : T = this match {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^  def apply[A, B](elems: (A, B)*) = empty[A, B] ++ elems$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  def apply(index: Int) = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  def apply(index: Int) =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^  def apply(n: Int): A = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set.scala	/^  def apply[A](elems: A*) = empty[A] ++ elems$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^  def apply(n: Int): A = reverse.reverseApply(n)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def apply(key: A) = throw new NoSuchElementException("key " + key + " not found")$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def apply(key: A): B$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def apply(sKey: A): B =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  def apply[Key, Value](elems : (Key, Value)*) : TreeHashMap[Key, Value] = fromIterable(elems)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  def apply[Key, Value](maps : (Key, Value)*) = $/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  override def apply(key : Key) = $/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  override final def apply(key : Key) : Value = getOrElse(key, default(key));$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  private def apply[Key, Value](underlying : IntMap[AssocMap[Key, Value]]) = new TreeHashMap(underlying);$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^  def apply[A <% Ordered[A], B](elems: (A, B)*) = empty[A, B] ++ elems$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^  override def apply(key: A): B = tree.lookup(key) match {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^  def apply[A <% Ordered[A]](elems: A*) : SortedSet[A] = empty[A] ++ elems$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^  def apply[A<% Ordered[A], B](elems: (A, B)*) = empty[A, B] ++ elems$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^  override def apply(key: A): B = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    override def apply(idx : Int) : A = Buffer.this.apply(translate(idx));$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    override def apply(idx : Int) = Buffer.this.apply(idx)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  def apply[T](list : java.util.List[T]) = new BufferWrapper[T] {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^  override def apply(idx : Int) = underlying.get(idx).asInstanceOf[A];$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^  def apply[T,E](map0 : java.util.Map[T,E]) = new MapWrapper[T,E] {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^    override def apply(idx : Int) = MutableSeq.this.apply(idx)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^    override def apply(idx : Int) = f(MutableSeq.this.apply(idx));$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^  override def apply(idx : Int) = elements.seek(idx);$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^  def apply[T](set : java.util.Set[T]) = new SetWrapper[T] {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^  def apply[T,E](map0 : java.util.SortedMap[T,E]) = new SortedMapWrapper[T,E] {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^  def apply[T](set : java.util.SortedSet[T]) = new SortedSetWrapper[T] {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayBuffer.scala	/^  override def apply(i: Int) = { $/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BufferProxy.scala	/^  def apply(n: Int): A = self.apply(n)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashMap.scala	/^  def apply[A, B](elems: (A, B)*) = empty[A, B] ++ elems$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashSet.scala	/^  def apply[A](elems: A*) = empty[A] ++ elems$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableMapAdaptor.scala	/^  override def apply(key: A): B = imap.apply(key)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^  override def apply(key: A): B = jmap.get(key).asInstanceOf[B]$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashMap.scala	/^  def apply[A, B](elems: (A, B)*) = empty[A, B] ++ elems$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashSet.scala	/^  def apply[A](elems: A*) = empty[A] ++ elems$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^  def apply(n: Int): A = try {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^  def apply[A, B](elems: (A, B)*) = empty[A, B] ++ elems$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MutableList.scala	/^  def apply(n: Int): A = get(n) match {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  def apply[K, V](elems : (K, V)*) = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/QueueProxy.scala	/^  override def apply(n: Int): A = self.apply(n)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ResizableArray.scala	/^  def apply(i: Int) = array(i).asInstanceOf[A]$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Set.scala	/^  def apply[A](elems: A*) = empty[A] ++ elems$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SingleLinkedList.scala	/^  def apply(n: Int): A =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Stack.scala	/^  override def apply(index: Int) = stack(index)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/StackProxy.scala	/^  override def apply(n: Int): A = self.apply(n)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedBuffer.scala	/^  abstract override def apply(n: Int): A = synchronized {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  override def apply(key: A): B = synchronized {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/jolib.scala	/^    def apply(x: C): A = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/jolib.scala	/^    def apply(x: C): Unit = tryReduction(x)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^    def apply(v: A) =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^  def apply[A0, A1, A2, A3, A4, A5, A6, A7, A8, R](funName: String) =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^  def apply[A0, A1, A2, A3, A4, A5, A6, A7, R](funName: String) =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^  def apply[A0, A1, A2, A3, A4, A5, A6, R](funName: String) =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^  def apply[A0, A1, A2, A3, A4, A5, R](funName: String) =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^  def apply[A0, A1, A2, A3, A4, R](funName: String) =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^  def apply[A0, A1, A2, A3, R](funName: String) =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^  def apply[A0, A1, A2, R](funName: String) =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^  def apply[A0, A1, R](funName: String) =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^  def apply[A0, R](funName: String) =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^  def apply[R](funName: String) =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/Reference.scala	/^  def apply(): T$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/ReferenceWrapper.scala	/^  def apply() = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Print.scala	/^  def apply(any: Any): String = any match {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Print.scala	/^  def apply(datatype: Type): String = datatype match {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Print.scala	/^  def apply(symbol: Symbol): String = symbol match {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Print.scala	/^  def apply(tree: Tree): String = tree match {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Print.scala	/^  def apply[A](code: Code[A]): String =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  def apply(index: Int): Any = synchronized {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^    def apply(idx : Int) = BoxedArray.this.apply(idx)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  def apply(index: Int): Any$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedBooleanArray.scala	/^  def apply(index: Int): Any = Boolean.box(value(index))$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedByteArray.scala	/^  def apply(index: Int): Any = Byte.box(value(index))$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedCharArray.scala	/^  def apply(index: Int): Any = Char.box(value(index))$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedDoubleArray.scala	/^  def apply(index: Int): Any = Double.box(value(index))$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedFloatArray.scala	/^  def apply(index: Int): Any = Float.box(value(index))$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedIntArray.scala	/^  def apply(index: Int): Any = Int.box(value(index))$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedLongArray.scala	/^  def apply(index: Int): Any = Long.box(value(index))$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedObjectArray.scala	/^  def apply(index: Int): Any = value(index)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedShortArray.scala	/^  def apply(index: Int): Any = Short.box(value(index))$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichChar.scala	/^        def apply(i: Int): Char = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  override def apply(n: Int) = self charAt n$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichStringBuilder.scala	/^  override def apply(idx : Int) = self.charAt(idx)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/Show.scala	/^    def apply[A](args: A*) {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/Parsers.scala	/^      def apply(in: inputType): Result = Parser.this.apply(in) match {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/Parsers.scala	/^    def apply(in: inputType): Result = Some((x, in))$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/Parsers.scala	/^    def apply(in: inputType): Result = p.apply(in) match {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/Parsers.scala	/^    def apply(in: inputType): Result$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^         def apply[s  <% Mappable[s], t  <% Mappable[t]](x :{s, t}): {s, t} = x match {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^      def apply[b <: NameElement](w : b): Option[Scope[b]] =  $/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^      f(gmap(new Mapper { def apply[T <% Mappable[T]](x: T): T = x.everywhere(f)}))$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def apply(i: Int): binderType = elements.toList(i)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def apply[A <: NameElement](v: A): Option[Scope[A]] = None$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def apply[A <: NameElement](v: A): Option[Scope[A]]$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def apply[binderType <: NameElement, elementT <% Mappable[elementT]](scope: Scope[binderType], element: elementT) = new UnderBinder(scope, element) $/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def cloneElementNoBoundElements = element.gmap(new Mapper { def apply[t <% Mappable[t]](x :t): t = x match{ $/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def cloneElementWithSubst(subst: scala.collection.immutable.Map[NameElement, NameElement]) = element.gmap(new Mapper { def apply[t <% Mappable[t]](x :t): t = x match{$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  trait Mapper { def apply[T <% Mappable[T]](x: T): T } \/* TODO: having type `Forall T. T => T' is too strict: $/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^      def apply(in: Input) = seq(Parser.this, q)((x, y) => combine(x,y))(in)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^      def apply(in: Input) = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    = new Parser[T] with OnceParser[T] { def apply(in: Input) = f(in) }$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    = new Parser[T]{ def apply(in: Input) = f(in) }$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def apply(in: Input) = p(in) match {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def apply(in: Input): ParseResult[T]$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/RegexParsers.scala	/^    def apply(in: Input) = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/$tilde.scala	/^object mkTilde { def apply[a, b](_1: a, _2: b) = scala.util.parsing.combinatorold.~(_1, _2) }$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^       def apply(in: Input) = Parser.this(in) match {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      def apply(in: Input) = Parser.this(in) match {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      def apply(in: Input) = Parser.this(in).map(f)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      def apply(in: Input) = Parser.this(in).mapPartial(f, error)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      def apply(in: Input) = Parser.this(in).mapPartial(f, result => "Constructor function not defined at "+result)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      def apply(in: Input) = UnitParser.this(in) match {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      def apply(in: Input) = UnitParser.this(in).map(x => v)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      def apply(in: Input) = seq(OnceParser.this, commit(q))((x, y) => new ~(x, y))(in)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      def apply(in: Input) = seq(OnceParser.this, commit(q))((x, y) => x)(in)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      def apply(in: Input) = seq(Parser.this, commit(q))((x, y) => new ~(x,y))(in)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      def apply(in: Input) = seq(Parser.this, commit(q))((x, y) => x)(in)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      def apply(in: Input) = seq(Parser.this, q)((x, y) => combine(x,y))(in)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      def apply(in: Input) = seq(Parser.this, q)((x, y) => new ~(x,y))(in)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      def apply(in: Input) = seq(Parser.this, q)((x, y) => x)(in)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      def apply(in: Input) = seq(UnitParser.this, commit(q))((x, y) => y)(in)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      def apply(in: Input) = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      def apply(in: Input): ParseResult[U] = seq(UnitOnceParser.this, commit(q))((x, y) => y)(in)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      def apply(in: Input): ParseResult[U] = seq(UnitParser.this, q)((x, y) => y)(in)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      def apply(in: Input): ParseResult[Unit] = seq(UnitOnceParser.this, commit(q))((x, y) => y)(in)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      def apply(in: Input): ParseResult[Unit] = seq(UnitParser.this, q)((x, y) => y)(in)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def apply(in0: Input) = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def apply(in: Input) = Failure(msg, in)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def apply(in: Input) = Success((), in)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def apply(in: Input) = Success(v, in)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def apply(in: Input) = p(in) map {(x) => ()}$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def apply(in: Input) = p(in) match {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def apply(in: Input) = p(in) match{$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def apply(in: Input) = {println("trying "+name+" at "+in.pos); val r = p(in); println(name+" --> "+r); r }$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def apply(in: Input) =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def apply(in: Input): ParseResult[T]$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def apply(in: Input): ParseResult[Unit]$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/BindingParsers.scala	/^    def apply(in: Input): ParseResult[UnderBinder[bt, scopeT]] = inScope(scope){$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/BindingParsers.scala	/^    def apply(in: Input): ParseResult[Unit] = { $/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/TokenParsers.scala	/^    def apply(in: Input) = p(in) match {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/StreamReader.scala	/^  def apply(in: java.io.Reader): StreamReader = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Elem.scala	/^  def apply(prefix: String,label: String, attributes: MetaData, scope: NamespaceBinding, child: Node*) = $/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def apply(key: String): Seq[Node]$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def apply(namespace_uri:String, scp:NamespaceBinding, k:String): Seq[Node]$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  final def apply(namespace_uri: String, owner: Node, key: String): Seq[Node] =$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^  def apply(f: Node => Boolean): NodeSeq = filter(f)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^  def apply(i: Int): Node = theSeq.apply(i)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  def apply(key: String) = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  def apply(namespace: String, scope: NamespaceBinding, key: String) = null$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrefixedAttribute.scala	/^  def apply(key: String): Seq[Node] = next(key)$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrefixedAttribute.scala	/^  def apply(namespace: String, scope: NamespaceBinding, key: String): Seq[Node] = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/UnprefixedAttribute.scala	/^  def apply(key: String): Seq[Node] = $/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/UnprefixedAttribute.scala	/^  def apply(namespace: String, scope: NamespaceBinding, key: String): Seq[Node] = $/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^  def apply(n: Node): Boolean = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/XhtmlEntities.scala	/^  def apply() = entities$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/XhtmlParser.scala	/^  def apply(source: Source): NodeSeq = {$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^    def apply(c: Cond) = FExp(this, c);$/;"	f
apply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^  def apply(n: Node): Node = {$/;"	f
applyAssert	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^    def applyAssert(name: String, f:() => T): T = synchronized {$/;"	f
applyBox	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/NamedPartialFunction.scala	/^  def applyBox[A, B](value: A, lst: Seq[PartialFunction[A, B]]): Box[B] =$/;"	f
applyFun	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^  private def applyFun(methName: String, args: Array[JObject],$/;"	f
applyTo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Diff.scala	/^    def applyTo(x: JValue) = x match {$/;"	f
ar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                      val ar: Array[AnyRef] = List(Group(kids)).toArray$/;"	V
ar	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val ar = new Array[(ResultSet, Int, A) => Unit](colCnt + 1)$/;"	V
arbDoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/PrintingTest.scala	/^  implicit def arbDoc: Arbitrary[Document] = Arbitrary(genJValue.map(render(_)))$/;"	f
arbJObject	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JsonASTTest.scala	/^  implicit def arbJObject: Arbitrary[JObject] = Arbitrary(genObject)$/;"	f
arbJValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JsonASTTest.scala	/^  implicit def arbJValue: Arbitrary[JValue] = Arbitrary(genJValue)$/;"	f
arbJValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ParserTest.scala	/^  implicit def arbJValue: Arbitrary[JValue] = Arbitrary(genObject)$/;"	f
arbJValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlTest.scala	/^  implicit def arbJValue: Arbitrary[JValue] = Arbitrary(genObject)$/;"	f
arbJValueClass	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JsonASTTest.scala	/^  implicit def arbJValueClass: Arbitrary[Class[_ <: JValue]] = Arbitrary(genJValueClass)$/;"	f
arbXml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlTest.scala	/^  implicit def arbXml: Arbitrary[Node] = Arbitrary(genXml)$/;"	f
archer	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val archer = Mixer.find(By(Mixer.name, "Archer")).open_!$/;"	V
archer	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val archer = SampleModel.find(By(SampleModel.firstName, "Archer")).open_!$/;"	V
arg	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/Main.scala	/^      var arg: Int = 0$/;"	v
args	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/jolib.scala	/^          val args = values(p)$/;"	V
args	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val args  = Array(p._1)$/;"	V
args	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val args  = Array(p0._1, p1._1)$/;"	V
args	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val args  = Array(p0._1, p1._1, p2._1)$/;"	V
args	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val args  = Array(p0._1, p1._1, p2._1, p3._1)$/;"	V
args	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val args  = Array(p0._1, p1._1, p2._1, p3._1, p4._1)$/;"	V
args	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val args  = Array(p0._1, p1._1, p2._1, p3._1, p4._1, p5._1)$/;"	V
args	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val args  = Array(p0._1, p1._1, p2._1, p3._1, p4._1, p5._1, p6._1)$/;"	V
args	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val args  = Array(p0._1, p1._1, p2._1, p3._1, p4._1, p5._1, p6._1, p7._1)$/;"	V
args	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val args  = Array(p0._1, p1._1, p2._1, p3._1, p4._1, p5._1, p6._1, p7._1, p8._1)$/;"	V
args	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val args  = Array[JObject]()$/;"	V
args1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^          val args1 = meth.invoke(that, null).asInstanceOf[Array[Manifest[_]]]$/;"	V
args1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/Show.scala	/^    val args1 = args map (_.asInstanceOf[AnyRef])$/;"	V
arity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^      val arity = x.productArity$/;"	V
arity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^    val arity = x.productArity$/;"	V
aroundRequest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private var aroundRequest: List[LoanWrapper] = Nil$/;"	v
arr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Xml.scala	/^          val arr = JArray(nodes.toList.flatMap { n => {$/;"	V
arr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^  protected def arr: Array[Int]$/;"	f
arr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/BitSet.scala	/^      val arr = new Array[Int](ba1.length)$/;"	V
arr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/BitSet.scala	/^  protected val arr: Array[Int] = {$/;"	V
arr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BitSet.scala	/^  protected var arr: Array[Int] = new Array[Int](memsize(initSize))$/;"	v
arr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^    val arr =  x.productArity$/;"	V
arr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^    val arr = new Array[Node](nb.length)$/;"	V
array	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val array: Parser[List[Any]] = spaces ~ '[' ~ spaces ~> elements <~ spaces ~ ']' ~ spaces ^^ {case e => e}$/;"	V
array	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BasicTypesHelpersSpec.scala	/^      var array: Array[Byte] = Array(12, 14)$/;"	v
array	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^    val array = new Array[A](xs.length)$/;"	V
array	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^    val array = new Array[Boolean](xs.length)$/;"	V
array	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^    val array = new Array[Byte](xs.length)$/;"	V
array	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^    val array = new Array[Char](xs.length)$/;"	V
array	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^    val array = new Array[Double](xs.length)$/;"	V
array	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^    val array = new Array[Float](xs.length)$/;"	V
array	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^    val array = new Array[Int](xs.length)$/;"	V
array	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^    val array = new Array[Long](xs.length)$/;"	V
array	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^    val array = new Array[Short](xs.length)$/;"	V
array	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^    val array = new Array[Unit](xs.length)$/;"	V
array	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ResizableArray.scala	/^  protected var array: Array[AnyRef] = new Array[AnyRef](initialSize)$/;"	v
array	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^    val array = new Array[A](xs.length)$/;"	V
arrayValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  def arrayValue(x: BoxedArray, elemClass: Class[_]): AnyRef =$/;"	f
arrayValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  def arrayValue(x: BoxedArray, elemTag: String): AnyRef =$/;"	f
array_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Xml.scala	/^    def array_?(nodeNames: Seq[String]) = nodeNames.size != 1 && nodeNames.toList.removeDuplicates.size == 1$/;"	f
arrayclear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/compat/Platform.scala	/^  def arrayclear(arr: Array[Int]) { java.util.Arrays.fill(arr, 0) }$/;"	f
arraycopy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/compat/Platform.scala	/^  def arraycopy(src: AnyRef, srcPos: Int, dest: AnyRef, destPos: Int, length: Int) {$/;"	f
as	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^  private var as: List[LiftActor] = Nil$/;"	v
as	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^    val as: Array[AnyRef] = new Array[AnyRef](size0)$/;"	V
asA	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def asA[B](implicit m: Manifest[B]): Box[B] = Empty$/;"	f
asA	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def asA[B](in: T forSome {type T})(implicit m: Manifest[B]): Box[B] =$/;"	f
asA	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def asA[B](implicit m: Manifest[B]): Box[B] = this$/;"	f
asA	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def asA[B](implicit m: Manifest[B]): Box[B] = this.isA(m.erasure).asInstanceOf[Box[B]]$/;"	f
asAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private def asAny(pos: Int, rs: ResultSet, md: ResultSetMetaData): Any = {$/;"	f
asDigit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichChar.scala	/^  def asDigit: Int = Character.digit(x, Character.MAX_RADIX)$/;"	f
asHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def asHtml: NodeSeq$/;"	f
asHtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/AjaxMapper.scala	/^  override def asHtml : Node =$/;"	f
asHtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def asHtml: NodeSeq$/;"	f
asHtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  override def asHtml : Node = Text(toString)$/;"	f
asHtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def asHtml : NodeSeq = {$/;"	f
asHtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def asHtml(toLine: A): NodeSeq =$/;"	f
asInt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^  def asInt(in: String): Box[Int] = tryo{in.toInt}$/;"	f
asJSON	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def asJSON(sb: StringBuilder): StringBuilder = {$/;"	f
asJSON	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def asJSON: String = asJSON(new StringBuilder).toString$/;"	f
asJSON	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  def asJSON(inst: BaseRecord): JsObj = {$/;"	f
asJSON	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Record.scala	/^  def asJSON: JsExp = meta.asJSON(this)$/;"	f
asJs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def asJs: List[(String, JsExp)] = List((name, asJsExp))$/;"	f
asJs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def asJs: JsExp = getSingleton.asJs(this)$/;"	f
asJs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def asJs(actual: A): JsExp = {$/;"	f
asJs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def asJs: JsExp$/;"	f
asJs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BinaryField.scala	/^  def asJs = Str(hexEncode(value))$/;"	f
asJs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BooleanField.scala	/^  def asJs: JsExp = value$/;"	f
asJs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DateTimeField.scala	/^  def asJs = Str(toInternetDate(value.getTime))$/;"	f
asJs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EnumField.scala	/^ def asJs = Str(toString)$/;"	f
asJs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/NumericField.scala	/^  def asJs = JsRaw(String.valueOf(value))$/;"	f
asJs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^  def asJs = Str(value)$/;"	f
asJs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^  def asJs = Str(value)$/;"	f
asJsExp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def asJsExp = throw new NullPointerException("No way")$/;"	f
asJsExp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def asJsExp: JsExp = JE.Str(is)$/;"	f
asJsExp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  def asJsExp = if (is) JE.JsTrue else JE.JsFalse$/;"	f
asJsExp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  def asJsExp = JE.Num(toLong)$/;"	f
asJsExp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  def asJsExp = JE.Num(toLong)$/;"	f
asJsExp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  def asJsExp = JE.Num(is)$/;"	f
asJsExp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	def asJsExp = JE.Num(is)$/;"	f
asJsExp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def asJsExp: JsExp$/;"	f
asJsExp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def asJsExp = JE.Num(is)$/;"	f
asJsExp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def asJsExp = JE.Num(is.id)$/;"	f
asJsExp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def asJsExp = JE.Num(is)$/;"	f
asJsExp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def asJsExp = is.map(v => JE.Num(v)) openOr JE.JsNull$/;"	f
asJsExp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def asJsExp: JsExp = JE.JsArray(is.map(v => JE.Num(v.id)) :_*)$/;"	f
asJsExp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  def asJsExp = throw new NullPointerException("No way")$/;"	f
asJsExp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def asJsExp: JsExp = JE.Str(is)$/;"	f
asJsExp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  def asJsExp = JE.Num(toLong)$/;"	f
asJsObj	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def asJsObj: JsObj = JsObj(buildOptions.flatten(_.toList) :_*)$/;"	f
asJsonField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def asJsonField: JsonAST.JField = JsonAST.JField(name, asJsonValue)$/;"	f
asJsonValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def asJsonValue: JsonAST.JValue = is match {$/;"	f
asJsonValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^     def asJsonValue: JsonAST.JValue = JsonAST.JBool(is)$/;"	f
asJsonValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  def asJsonValue: JsonAST.JValue = is match {$/;"	f
asJsonValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  def asJsonValue: JsonAST.JValue = is match {$/;"	f
asJsonValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  def asJsonValue: JsonAST.JValue = JsonAST.JDouble(is.doubleValue)$/;"	f
asJsonValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^  def asJsonValue: JsonAST.JValue = JsonAST.JDouble(is)$/;"	f
asJsonValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def asJsonValue: JsonAST.JValue$/;"	f
asJsonValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def asJsonValue: JsonAST.JValue = JsonAST.JInt(is)$/;"	f
asJsonValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def asJsonValue: JsonAST.JValue = JsonAST.JInt(is.id)$/;"	f
asJsonValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def asJsonValue: JsonAST.JValue = JsonAST.JInt(is)$/;"	f
asJsonValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def asJsonValue: JsonAST.JValue = JsonAST.JInt(toLong)$/;"	f
asJsonValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def asJsonValue: JsonAST.JValue = is.map(v => JsonAST.JInt(v)) openOr JsonAST.JNull$/;"	f
asJsonValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def asJsonValue: JsonAST.JValue = if (defined_?) super.asJsonValue else JsonAST.JNull$/;"	f
asJsonValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^   def asJsonValue: JsonAST.JValue = JsonAST.JNull$/;"	f
asJsonValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def asJsonValue: JsonAST.JValue = is match {$/;"	f
asJsonValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  def asJsonValue: JsonAST.JValue = is match {$/;"	f
asList	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^  def asList = PostgreSqlProvider :: MySqlProvider :: DerbyProvider :: H2Provider :: H2MemoryProvider :: Nil$/;"	f
asLong	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^  def asLong(in: Any): Box[Long] = {$/;"	f
asLong	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^  def asLong(in: String): Box[Long] = tryo(in.toLong)$/;"	f
asNodeSeq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private def asNodeSeq(in: Seq[Node]): NodeSeq = in$/;"	f
asSafeJs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def asSafeJs(obs: Box[KeyObfuscator]): JsExp =$/;"	f
asSafeJs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  def asSafeJs(obs: Box[KeyObfuscator]): JsExp =$/;"	f
asSafeJs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def asSafeJs(f: KeyObfuscator): JsExp = getSingleton.asSafeJs(this, f)$/;"	f
asSafeJs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def asSafeJs(actual: A, f: KeyObfuscator): JsExp = {$/;"	f
asString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private def asString(pos: Int, rs: ResultSet, md: ResultSetMetaData): String = {$/;"	f
asString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def asString = displayName + "=" + toString$/;"	f
asString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def asString: String$/;"	f
asString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def asString = displayName + "=" + data$/;"	f
asXHtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def asXHtml: NodeSeq$/;"	f
asXHtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BinaryField.scala	/^  def asXHtml: NodeSeq = NodeSeq.Empty$/;"	f
asXHtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BooleanField.scala	/^  def asXHtml: NodeSeq = {$/;"	f
asXHtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DateTimeField.scala	/^  def asXHtml: NodeSeq = {$/;"	f
asXHtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EnumField.scala	/^  def asXHtml: NodeSeq = {$/;"	f
asXHtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/LocaleField.scala	/^  override def asXHtml: NodeSeq = {$/;"	f
asXHtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/NumericField.scala	/^  def asXHtml: NodeSeq = {$/;"	f
asXHtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^  def asXHtml: NodeSeq = {$/;"	f
asXHtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^  def asXHtml: NodeSeq = {$/;"	f
asXHtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TextareaField.scala	/^  override def asXHtml: NodeSeq = {$/;"	f
asXHtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TimeZoneField.scala	/^  override def asXHtml: NodeSeq = {$/;"	f
ascending	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  var ascending = true$/;"	v
asin	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def asin(x: Double): Double = java.lang.Math.asin(x)$/;"	f
ask	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  protected def ask(who: LiftCometActor, what: Any)(answerWith: Any => Unit) {$/;"	f
askingWho	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private var askingWho: Box[LiftCometActor] = Empty$/;"	v
assert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def assert(assertion: Boolean) {$/;"	f
assert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def assert(assertion: Boolean, message: Any) {$/;"	f
assertCnt	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^    val assertCnt = res.filter(a => a.isAssert && !a.isBegin).length$/;"	V
assertEq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def assertEq(expected: AnyRef, actual: AnyRef) {$/;"	f
assertEq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def assertEq(msg: String, expected: AnyRef, actual: AnyRef) {$/;"	f
assertEquals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def assertEquals[A](expected: A, actual: A) {$/;"	f
assertEquals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def assertEquals[A](msg: String, expected: A, actual: A) {$/;"	f
assertFalse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def assertFalse(actual: Boolean) {$/;"	f
assertFalse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def assertFalse(msg: String, actual: Boolean) {$/;"	f
assertLog	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def assertLog(assertion: Boolean, msg: => String): Unit = ()$/;"	f
assertLog	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def assertLog(assertion: Boolean, msg: => String) = if (assertion) logger.assertLog(assertion, msg)$/;"	f
assertLog	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def assertLog(assertion: Boolean, msg: => String) = rootLogger.assertLog(assertion, msg)$/;"	f
assertLog	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  override def assertLog(assertion: Boolean, msg: => String) = if (assertion) info(msg)$/;"	f
assertLog	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    override def assertLog(assertion: Boolean, msg: => String): Unit = ()$/;"	f
assertNotEq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def assertNotEq(expected: AnyRef, actual: AnyRef) {$/;"	f
assertNotEq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def assertNotEq(msg: String, expected: AnyRef, actual: AnyRef) {$/;"	f
assertNotNull	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def assertNotNull(actual: AnyRef): Unit  =$/;"	f
assertNotNull	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def assertNotNull(msg: String, actual: AnyRef) {$/;"	f
assertNull	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def assertNull(actual: AnyRef) {$/;"	f
assertNull	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def assertNull(msg: String, actual: AnyRef) {$/;"	f
assertSameElements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def assertSameElements[A](actual: Seq[A], expected: Seq[A]) {$/;"	f
assertTrue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def assertTrue(actual: Boolean) {$/;"	f
assertTrue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def assertTrue(msg: String, actual: Boolean) {$/;"	f
assignable	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^    "return false if the list to match doesn't contain any class assignable by the tested class" in {$/;"	c
assocIt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^    val assocIt = new AssocMapIterator(AssocMap.empty[Key, Value]);$/;"	V
assocProp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JsonASTTest.scala	/^    val assocProp = (x: JValue, y: JValue, z: JValue) => x ++ (y ++ z) == (x ++ y) ++ z$/;"	V
assume	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def assume(assumption: Boolean) {$/;"	f
assume	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def assume(assumption: Boolean, message: Any) {$/;"	f
astParser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  private val astParser = (p: Parser) => {$/;"	V
asyncById	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private var asyncById = new HashMap[String, LiftCometActor]()$/;"	v
asyncComponents	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private var asyncComponents = new HashMap[(Box[String], Box[String]), LiftCometActor]()$/;"	v
at	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^  val at = millis$/;"	V
atEnd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/Scanners.scala	/^    def atEnd = in.atEnd || (whitespace(in) match { case Success(_, in1) => in1.atEnd case _ => false })$/;"	f
atEnd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/Scanners.scala	/^    def atEnd = in.atEnd || (whitespace(in) match { case Success(_, in1) => in1.atEnd case _ => false })$/;"	f
atEnd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/CharSequenceReader.scala	/^  def atEnd = offset >= source.length$/;"	f
atEnd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/PagedSeqReader.scala	/^  def atEnd = !seq.isDefinedAt(offset)$/;"	f
atEnd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/Reader.scala	/^  def atEnd: Boolean$/;"	f
atRoot	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^  private var atRoot = false$/;"	v
atTail	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^      val atTail = new LinkedList(x, null)$/;"	V
atan	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def atan(x: Double): Double = java.lang.Math.atan(x)$/;"	f
atan2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def atan2(y: Double, x: Double): Double = java.lang.Math.atan2(y, x)$/;"	f
atom	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModelParser.scala	/^  def atom = token match {$/;"	f
atpe	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^      val atpe = cbuf.toString()$/;"	V
attList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    var attList: List[AttrDecl] = Nil$/;"	v
attListDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^  def attListDecl(name: String, attList: List[AttrDecl]): Unit = ()$/;"	f
attListDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^  final override def attListDecl(name: String, attList: List[AttrDecl]) {$/;"	f
attach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^    def attach(f: A => Unit) =$/;"	f
attachRedirectFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] def attachRedirectFunc(uri: String, f: Box[() => Unit]) = {$/;"	f
attr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  object attr extends AttrHelper[Option] {$/;"	o
attr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Form.scala	/^    val attr = S.currentAttrsToMetaData(name => name != "id" && name != "onsubmit" && name != "action")$/;"	V
attr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  object attr extends AttrHelper[Box] {$/;"	o
attr	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  val attr: _root_.scala.collection.jcl.HashMap[String, Any] =$/;"	V
attr	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  val attr = new _root_.scala.collection.jcl.HashMap[String, Any](new _root_.java.util.HashMap)$/;"	V
attr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/DTD.scala	/^  var attr: Map[String, AttListDecl] = new HashMap[String, AttListDecl]()$/;"	v
attr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^      val attr = it.next$/;"	V
attr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^      var attr: AttrDecl = null;$/;"	v
attrBind	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^      def attrBind(attr: MetaData): MetaData = attr match {$/;"	f
attrDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def attrDecl() = {$/;"	f
attrStr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  private def attrStr(elem: Elem, attr: String): String = elem.attributes.get(attr) match {$/;"	f
attrToObject	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^  def attrToObject(fieldName: String, attrName: String, f: JString => JValue)(json: JValue) = json map {$/;"	f
attr_name	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def attr_name(c: Char) = Character.isLetterOrDigit(c) || c == '_' || c == '-'$/;"	f
attr_value	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def attr_value(c: Char) = c >= ' '$/;"	f
attribStack	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  val attribStack = new Stack[MetaData]$/;"	V
attribute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPContext.scala	/^  def attribute(name: String): Box[Any]$/;"	f
attribute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPSession.scala	/^  def attribute(name: String): Any$/;"	f
attribute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletContext.scala	/^  def attribute(name: String): Box[Any] = Box !! ctx.getAttribute(name)$/;"	f
attribute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletSession.scala	/^  def attribute(name: String): Any = session getAttribute name$/;"	f
attribute	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val attribute = style | class_id | the_class | the_id | the_lang$/;"	V
attribute	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  final def attribute(key: String): Option[Seq[Node]] = attributes.get(key)$/;"	f
attribute	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  final def attribute(uri: String, key: String): Option[Seq[Node]] =$/;"	f
attribute	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ExternalID.scala	/^  def attribute = Node.NoAttributes$/;"	f
attributes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^        val attributes = s.attributes.filter(attr => !elem.attribute(attr.key).isDefined )$/;"	V
attributes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    val attributes = in.firstOption.map(_.attributes).getOrElse(Null)$/;"	V
attributes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def attributes = _attributes$/;"	f
attributes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPContext.scala	/^  def attributes: List[(String, Any)]$/;"	f
attributes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletContext.scala	/^  def attributes: List[(String, Any)] = enumToList[String](ctx.getAttributeNames.asInstanceOf[_root_.java.util.Enumeration[String]]).$/;"	f
attributes	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Elem.scala	/^                override val attributes: MetaData,$/;"	V
attributes	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Group.scala	/^  final override def attributes =$/;"	f
attributes	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  def attributes: MetaData = Null$/;"	f
attributes	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/SpecialNode.scala	/^  final override def attributes = Null$/;"	f
attrs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^    val attrs = S.attrs$/;"	V
attrs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^    val attrs = S.prefixedAttrsToMetaData("a")$/;"	V
attrs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def attrs: List[(Either[String, (String, String)], String)] = S._attrs.value match {$/;"	f
attrs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^      case x :: xs => val attrs = elem.attributes.filter(_.key != "onblur")$/;"	V
attrsFlattenToMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def attrsFlattenToMap: Map[String, String] = Map.empty ++ attrs.flatMap {$/;"	f
attrsToMetaData	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def attrsToMetaData(predicate: String => Boolean): MetaData = {$/;"	f
attrsToMetaData	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def attrsToMetaData: MetaData = attrsToMetaData(ignore => true)$/;"	f
atts	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^    var atts = atts1$/;"	v
attsImpl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^          val attsImpl = new AttributesImpl(atts)$/;"	V
au	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CurrencyZoneSpec.scala	/^            val au = AU(20.68) * 3$/;"	V
au	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CurrencyZoneSpec.scala	/^            val au = AU(20.68) + AU(3.08)$/;"	V
au	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CurrencyZoneSpec.scala	/^            val au = AU(20.68) \/ AU(3)$/;"	V
au	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CurrencyZoneSpec.scala	/^            val au = AU(23.76) - AU(3.08)$/;"	V
auBoolean	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CurrencyZoneSpec.scala	/^            val auBoolean = AU(20.68) <= AU(20.68)$/;"	V
auBoolean	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CurrencyZoneSpec.scala	/^            val auBoolean = AU(20.68) > AU(3)$/;"	V
auBoolean	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CurrencyZoneSpec.scala	/^            val auBoolean = AU(3.439) < AU(3.44)$/;"	V
auBoolean	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CurrencyZoneSpec.scala	/^            val auBoolean = AU(4.42) != US(4.42)$/;"	V
auBoolean	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CurrencyZoneSpec.scala	/^            val auBoolean = AU(4.42) == AU(4.42)$/;"	V
auBoolean	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CurrencyZoneSpec.scala	/^            val auBoolean = AU(4.42) > AU(4.420000)$/;"	V
auBoolean	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CurrencyZoneSpec.scala	/^            val auBoolean = AU(4.48) == AU(4.481)$/;"	V
auctionBuyerId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val auctionBuyerId  = r.param("auction_buyer_id")$/;"	V
auctionClosingDate	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val auctionClosingDate  = r.param("auction_closing_date")$/;"	V
auctionMultiItem	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val auctionMultiItem  = r.param("auction_multi_item")$/;"	V
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def openOr[B >: A](default: => B): B = default$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def openOr[B >: A](default: => B): B = default$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def openOr[B >: A](default: => B): B = value$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^      def |[B >: A](default: => B): B  = x$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^      def |[B >: A](default: => B): B$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^      def |[B](default: => B): B  = default$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def apply(key: String, default: => Info): Info =$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def apply(prefix: String, key: String, default: => Info): Info =$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def apply[T](key: String, f: Info => T, default: => T): T =$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def apply[T](prefix: String, key: String, f: Info => T, default: => T): T =$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Factory.scala	/^    object default extends PSettableValueHolder[() => T] {$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Factory.scala	/^  abstract class FactoryMaker[T](_default: () => T)$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    def default: ValueType$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    vendAVar[ValueType](setFilter.foldLeft(default)((nv, f) => f(nv)))$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  def default = ""$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  def default = 0$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  def default = false$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  val section = path(0) match {case null => "default"; case s => s}$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  &lt;lift:surround with="default" at="content"&gt;$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^      val defaultNonce: Seq[String] = default.flatMap(d => secure.find(_._1 == d).map(_._2))$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    val defaultNonce = default.flatMap(d => secure.find(_._1 == d).map(_._2))$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxSelectObj[T](options: Seq[(T, String)], default: Box[T],$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def multiSelectObj[T](options: Seq[(T, String)], default: Seq[T],$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def selectObj[T](options: Seq[(T, String)], default: Box[T],$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  private def secureOptions[T](options: Seq[(T, String)], default: Box[T],$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  private[http] def secureMultiOptions[T](options: Seq[(T, String)], default: Seq[T],$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^                          default: Box[T],$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^                         default: Box[T],$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^    val defaultNonce = default.flatMap(d => secure.find(_._1 == d).map(_._2))$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^    val defaultString = default.flatMap(d => options.find(_._1 == d).map(_._2))$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^  private def secureOptions[T](options: Seq[(T, String)], default: Box[T],$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  <lift:surround with="default" at="content">$/;"	f
ault	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  override def screenWrap = Full(<lift:surround with="default" at="content">$/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^  def getOrElse[B >: A](default: => B): B = $/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^  def get[B >: A](default: B): B = this match {$/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^  def default(key: A): B =$/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^  def getOrElse[B2 >: B](key: A, default: => B2): B2 =$/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/MapProxy.scala	/^  override def default(key: A) = self.default(key)$/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/MapProxy.scala	/^  override def getOrElse[B2 >: B](key: A, default: => B2) = self.getOrElse(key, default)$/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  final override def getOrElse[S >: T](key : Int, default : =>S) : S = this match {$/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  final override def getOrElse[S >: T](key : Long, default : =>S) : S = this match {$/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^    override def default(key: A): B1 = d(key)$/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  override final def getOrElse[V >: Value](key : Key, default : =>V) : V = this match {$/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    override def add(k : K) = Map.this.put(k, default(k)) == None;$/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^      case None => val d = default; this(key) = d; d$/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^  def getOrElseUpdate(key: A, default: => B): B =$/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  override def getOrElseUpdate(key: A, default: => B): B = synchronized {$/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/DetWordAutom.scala	/^  def isSink(q: Int) = delta(q).isEmpty && default(q) == q$/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/DetWordAutom.scala	/^  val default: Array[Int]$/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^      for (i <- default(q)) { \/\/@todo: OR$/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^  val default: Array[immutable.BitSet]$/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^      val default = defaultR$/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^          val default  = defaultArr$/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def getOrElse[B >: T](default: => B): B = $/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def getOrElse[B >: T](default: => B): B = $/;"	f
ault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class AttrDecl(name: String, tpe: String, default: DefaultDecl) {$/;"	f
aultArr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^            defaultArr(k) = x.toImmutable$/;"	f
aultArr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^        val defaultArr = new Array[immutable.BitSet](pos)$/;"	f
aultAward	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/AwardSnippet.scala	/^	def defaultAward() = {$/;"	f
aultCharsetName	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/compat/Platform.scala	/^  def defaultCharsetName: String = {$/;"	f
aultChecked	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    defaultChecked={JsVar("it", field.name)} \/>$/;"	f
aultCreateNotFound	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  private[liftweb] def defaultCreateNotFound(in: Req) =$/;"	f
aultDiscovery	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DependencySnippet.scala	/^	def defaultDiscovery(): Discovery = {$/;"	f
aultDiscovery	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DiscoverySnippet.scala	/^	def defaultDiscovery(): Discovery = {$/;"	f
aultErrorMessage	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  abstract override def validations = valMaxLen(maxLen, defaultErrorMessage) _ :: super.validations$/;"	f
aultErrorMessage	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def defaultErrorMessage = S.?("Field too long.  Maximum Length")+": "+maxLen$/;"	f
aultFailure	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/ScriptRenderer.scala	/^    lift_defaultFailure: function() {$/;"	f
aultField	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/FieldSnippet.scala	/^	def defaultField() = {$/;"	f
aultFinder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  private val defaultFinder = getClass.getResource _$/;"	f
aultGetResource	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def defaultGetResource(name: String): Box[_root_.java.net.URL] =$/;"	f
aultHeaders	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var defaultHeaders: PartialFunction[(NodeSeq, Req), List[(String, String)]] = {$/;"	f
aultHttpClient	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  lazy val defaultHttpClient = buildNoAuthClient$/;"	f
aultInstitution	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/InstitutionSnippet.scala	/^	def defaultInstitution() = {$/;"	f
aultLab	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/SourceSnippet.scala	/^		def defaultLab() = {$/;"	f
aultLiftTagProcessing	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private def _defaultLiftTagProcessing: LiftRules.LiftTagPF =$/;"	f
aultLocaleCalculator	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def defaultLocaleCalculator(request: Box[HTTPRequest]) =$/;"	f
aultNonce	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    val (nonces, defaultNonce, secureOnSubmit) =$/;"	f
aultNonce	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^                     defaultNonce: Box[String], onSubmit: AFuncHolder, jsonOptions: List[(String,String)]): Elem = {$/;"	f
aultNonce	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^    val (nonces, defaultNonce, secureOnSubmit) = secureOptions(options, default, onSubmit)$/;"	f
aultNumberParser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/JSON.scala	/^  def globalNumberParser_=(f: NumericParser) { defaultNumberParser = f }$/;"	f
aultNumberParser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Parser.scala	/^  protected var defaultNumberParser : NumericParser = {_.toDouble}$/;"	f
aultPeek	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^      override protected def defaultPeek : A = Advanced.this.defaultPeek$/;"	f
aultPeek	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^      override protected def defaultPeek : A = PutBack.this.defaultPeek$/;"	f
aultPeek	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    override protected def defaultPeek : A = throw new Predef.NoSuchElementException$/;"	f
aultPeek	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    protected def defaultPeek : A = throw new Predef.NoSuchElementException$/;"	f
aultPeek	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^      override protected def defaultPeek : Char = throw new NoSuchElementException$/;"	f
aultPeek	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^      override protected def defaultPeek : a = throw new NoSuchElementException("no lookahead")$/;"	f
aultPrefix	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def defaultPrefix: Box[String] = Empty$/;"	f
aultPrefix	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private lazy val _defaultPrefix: String = (defaultPrefix or _name) openOr "comet"$/;"	f
aultProps	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  var defaultProps =$/;"	f
aultR	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    val defaultR = new Array[Int](nstatesR)$/;"	f
aultRating	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/gravatar/Gravatar.scala	/^  val defaultRating: String = "G"$/;"	f
aultResponse	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def defaultResponse(): Box[LiftResponse] = Full(PlainTextResponse("ok"))$/;"	f
aultSchemaName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def defaultSchemaName : Box[String] = Empty$/;"	f
aultSchemaName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  override def defaultSchemaName : Box[String] = Full("PUBLIC")$/;"	f
aultSchemaName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  override def defaultSchemaName : Box[String] = Full("dbo")$/;"	f
aultSchemaName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  override def defaultSchemaName : Box[String] = Full("public")$/;"	f
aultScientist	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/SourceSnippet.scala	/^		def defaultScientist(): Scientist = {$/;"	f
aultSize	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/gravatar/Gravatar.scala	/^  val defaultSize: Int = 42$/;"	f
aultString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Properties.scala	/^    val defaultString = "(c) 2002-2009 LAMP\/EPFL"$/;"	f
aultString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Properties.scala	/^    val defaultString = "(unknown)"$/;"	f
aultString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Properties.scala	/^    val defaultString = "UTF8" \/\/"ISO-8859-1"$/;"	f
aultTimeZoneCalculator	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def defaultTimeZoneCalculator(request: Box[HTTPRequest]): TimeZone = TimeZone.getDefault$/;"	f
aultTitle	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msgs.scala	/^      case (msg, titleList, defaultTitle, styleList, ord) =>$/;"	f
aultTransactionService	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  private implicit val defaultTransactionService = atomikos.AtomikosTransactionService$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    override val defaultValue: Box[T],$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    override val defaultValue: Box[Unit] = Full(())$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def defaultValue: Box[T]$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^    override def defaultValue = 1$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^    override def defaultValue = new java.util.Date$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^      override def defaultValue = ""$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^      override def defaultValue = 0$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^      override def defaultValue = 60.minutes.later$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^      override def defaultValue = new Date$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^          def defaultValue = Empty$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^        def defaultValue = Empty$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def defaultValue: Array[Byte] = null$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def defaultValue: String = null$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  def defaultValue: Boolean = false$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  def defaultValue: Date = null$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  def defaultValue: Date = null$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  def defaultValue = zero.setScale(scale)$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	def defaultValue: Double = 0.0$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def defaultValue: FieldType$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def defaultValue = 0$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def defaultValue: ENUM#Value = enum.elements.next$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  override def defaultValue = -1$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def defaultValue: Box[Long] = Empty$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def defaultValue: Long = 0L$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def defaultValue: Seq[ENUM#Value] = Nil$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def defaultValue = -1L$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def defaultValue = millis$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  def defaultValue = "*"$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^  override def defaultValue = Locale.getDefault.toString$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^  override def defaultValue = TimeZone.getDefault.getID$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def defaultValue = ""$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  override def defaultValue = ""$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  def defaultValue: Date = null$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  override def defaultValue = Genders.Male$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  override def defaultValue = year(timeNow) - minAge$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  override lazy val defaultValue = randomString(maxLen)$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^    override def defaultValue = expirationTime$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    override def defaultValue = false$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^    override def defaultValue = "wrong"$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^    override def defaultValue = -99$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^    override def defaultValue = 1$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^    override def defaultValue = false$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^    override def defaultValue = new _root_.java.util.Date()$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def defaultValue: MyType$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BinaryField.scala	/^  def defaultValue = Array(0)$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BooleanField.scala	/^  def defaultValue = false$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DateTimeField.scala	/^  def defaultValue = Calendar.getInstance$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DecimalField.scala	/^  def defaultValue = zero.setScale(scale)$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DoubleField.scala	/^  def defaultValue = 0.0$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EnumField.scala	/^ def defaultValue: ENUM#Value = enum.elements.next$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/IntField.scala	/^  def defaultValue = 0$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/LocaleField.scala	/^  override def defaultValue = Locale.getDefault.toString$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/LongField.scala	/^  def defaultValue = 0L$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^  def defaultValue = ""$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^  def defaultValue = ""$/;"	f
aultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TimeZoneField.scala	/^  override def defaultValue = TimeZone.getDefault.getID$/;"	f
aultValue	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^		override def defaultValue = {$/;"	f
aultValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^    var defaultValue: A = _$/;"	f
aultXml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^                                       defaultXml: NodeSeq,$/;"	f
aultXml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^                               defaultXml: NodeSeq,$/;"	f
aultXml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^    this._defaultXml = defaultXml$/;"	f
aultXml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def defaultXml = _defaultXml$/;"	f
aultXml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private var _defaultXml: NodeSeq = _$/;"	f
aultXml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                                            defaultXml: NodeSeq,$/;"	f
aultXml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                                 defaultXml: NodeSeq,$/;"	f
aultXml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                              defaultXml: NodeSeq,$/;"	f
aultcreds	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    val defaultcreds = new UsernamePasswordCredentials(name, pwd)$/;"	f
aultlValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def hidden(func: (String) => Any, defaultlValue: String, attrs: (String, String)*): Elem =$/;"	f
aultq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^      defaultq(j) = Nil$/;"	f
aultq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^    defaultq = new Array[List[Int]](pos) \/\/ default transitions$/;"	f
aultq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^  protected var defaultq: Array[List[Int]] = _ \/\/ default transitions$/;"	f
authExchange	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  def authExchange(req: Req): Box[LiftResponse] = {$/;"	f
authPassed_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  private def authPassed_?(req: Req): Boolean = {$/;"	f
authReq	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^    val authReq = manager.authenticate(discovered, returnToUrl)$/;"	V
authRequest	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  def authRequest(userSuppliedString: String, targetUrl: String): LiftResponse =$/;"	f
authToken	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/Facebook.scala	/^  private def authToken : Box[String] = S.param("auth_token")$/;"	f
authType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def authType: Box[String]$/;"	f
authType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  lazy val authType: Box[String] = Box !! req.getAuthType$/;"	V
authType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  val authType: Box[String] = req.authType$/;"	V
authType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var authType = null$/;"	v
authentication	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var authentication: HttpAuthentication = NoAuthentication$/;"	v
authenticator	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  var authenticator: Box[Authenticator] = Empty$/;"	v
authority	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^    var authority = uri.getAuthority().toLowerCase()$/;"	v
authorized	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    def authorized = _authorized.is$/;"	f
authorized	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def authorized: Int$/;"	f
autoCompleteData	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/AutoCompleteDemo.scala	/^    def autoCompleteData(current: String, limit: Int) :Seq[String] = {$/;"	f
autoIncludeAjax	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var autoIncludeAjax: LiftSession => Boolean = session => true$/;"	v
autoIncludeComet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var autoIncludeComet: LiftSession => Boolean = session => true$/;"	v
autocompleteObj	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^   def autocompleteObj[T](options: Seq[(T, String)], $/;"	f
autocompleteObj	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^  def autocompleteObj[T](options: Seq[(T, String)], $/;"	f
autocompleteOptions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^      val autocompleteOptions = JsRaw(json)$/;"	V
autocompleteSubmit	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/AutoCompleteDemo.scala	/^    def autocompleteSubmit(in: String): Unit = {$/;"	f
autocomplete_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^  private def autocomplete_*(options: Seq[(String, String)], default: Box[String],$/;"	f
autocomplete_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def autocomplete_? = false$/;"	f
autologinFunc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  var autologinFunc: Box[()=>Unit] = Empty$/;"	v
automatonFrom	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^  def automatonFrom(pat: RegExp, finalTag: Int): NondetWordAutom[_labelT] = {$/;"	f
av	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^        val av = xEntityValue()$/;"	V
available	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/Lock.scala	/^  var available = true$/;"	v
availableUsers	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^  def availableUsers: Iterable[(String, Presence)] = {$/;"	f
avatarEndpoint	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/gravatar/Gravatar.scala	/^  val avatarEndpoint: String = "http:\/\/www.gravatar.com\/avatar\/"$/;"	V
aw	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^                  val aw = answerWith$/;"	V
award	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/AwardSource.scala	/^	object award extends MappedLongForeignKey(this, Award)  $/;"	o
award	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/AwardSnippet.scala	/^	object award extends RequestVar( defaultAward() )$/;"	o
awardOptions	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/SourceSnippet.scala	/^		val awardOptions :Seq[(String,String)] = awards.map{ award => (award.name.is,award.name.is+"("+award.year.toString+")")}$/;"	V
awards	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^	def awards =  AwardSource.findAll(By(AwardSource.source,this.id)).map(_.award.obj.open_!)$/;"	f
awards	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/SourceSnippet.scala	/^		val awards = Award.findAll$/;"	V
b	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^        val b: Int = in(pos)$/;"	V
b	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BasicTypesHelpersSpec.scala	/^      var b: Array[Byte] = Array(12, 13)$/;"	v
b	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BasicTypesHelpersSpec.scala	/^      var b: Array[Byte] = Array(12, 14)$/;"	v
b	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPProvider.scala	/^        val b: Bootable = loader.map(b => Class.forName(b).newInstance.asInstanceOf[Bootable]) openOr DefaultBootstrap$/;"	V
b	/Users/Mads/Dev/logicOfScientificDiscovery/src/test/scala/LiftConsole.scala	/^    val b = new Boot()$/;"	V
b	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^            val b = new ListBuffer[A]$/;"	V
b	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      val b = new ListBuffer[A]$/;"	V
b	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      val b = new ListBuffer[B]$/;"	V
b	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    val b = new ListBuffer[(A, B)]$/;"	V
b	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    val b = new ListBuffer[(A, Int)]$/;"	V
b	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    val b = new ListBuffer[(C, D)]$/;"	V
b	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    val b = new ListBuffer[A] $/;"	V
b	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    val b = new ListBuffer[A]$/;"	V
b	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    val b = new ListBuffer[B]$/;"	V
b	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    val b = new ListBuffer[C]$/;"	V
b	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    val b = new ListBuffer[D]$/;"	V
b	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    val b = new ListBuffer[Int]$/;"	V
b	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^        var b = 0$/;"	v
b	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^        var b = 0;$/;"	v
b	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^    var b = 0$/;"	v
b	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^      var b = src(i) & 0xFF$/;"	v
b	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^        var b = a$/;"	v
b	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^      var b = _b$/;"	v
b	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^      val b = Box(ind, s.substring(0, last.head))$/;"	V
b1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    val b1 = new ListBuffer[A]$/;"	V
b2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    val b2 = new ListBuffer[B]$/;"	V
ba	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^    val ba = new Array[Byte](4096)$/;"	V
ba	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/IoHelpers.scala	/^    val ba = new Array[Byte](4096)$/;"	V
ba	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/IoHelpers.scala	/^    val ba = new Array[Char](4096)$/;"	V
ba	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^                     val ba = Helpers.readWholeStream(s)$/;"	V
ba	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^            val ba = new Array[Byte](8192)$/;"	V
ba	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    val ba = new Array[Byte](8192)$/;"	V
ba	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Marshal.scala	/^    val ba = new ByteArrayOutputStream(512)$/;"	V
ba1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/BitSet.scala	/^    val ba1 = if (ba != null) ba else new Array[Int](0)$/;"	V
back	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    def back = cur = cur-1$/;"	f
back	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    val back = p1.length > 1 && p1.endsWith("\/")$/;"	V
backgroundColor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def backgroundColor: Box[String] = Empty \/\/  null or color$/;"	f
backgroundColor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def backgroundColor: Box[String] = Empty$/;"	f
backgroundOpacity	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def backgroundOpacity: Box[Double] = Empty \/\/ number in 0.0 - 1.0$/;"	f
bal	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^    def bal(list: List[(A,B)], s: Int): (aNode, List[(A,B)]) = {$/;"	f
balance	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def balance(s: Int) = this$/;"	f
balance	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def balance(s: Int): GBTree[A,B] =$/;"	f
balance	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def balance(s: Int): GBTree[A,B]$/;"	f
balance	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def balance: This =$/;"	f
balanceLeft	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^      def balanceLeft(isBlack: Boolean, z: A, zv: B, l: Tree[B1], d: Tree[B1]) = l match {$/;"	f
balanceRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^      def balanceRight(isBlack: Boolean, x: A, xv: B, a: Tree[B1], r: Tree[B1]) = r match {$/;"	f
balance_list	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  protected def balance_list(list: List[(A,B)], s: Int): GBTree[A,B] = {$/;"	f
balance_p	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  protected def balance_p(t:GBTree[A,B],subtree:GBTree[A,B]):InsertTree[A,B] = {$/;"	f
band	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^  val band =$/;"	V
baos	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^      val baos = new ByteArrayOutputStream()$/;"	V
barWidth	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def barWidth: Box[Int] = Empty \/\/ TODO$/;"	f
bars	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotSerie.scala	/^  def bars: Box[FlotBarsOptions] = Empty$/;"	f
base	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Range.scala	/^      val base = if (start < end) end - start$/;"	V
base	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^    val base = if (hex) 16 else 10$/;"	V
base	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^      val base = atts.getValue(NamespaceSupport.XMLNS, "base")$/;"	V
base	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^      val base = bases.peek().asInstanceOf[URL]$/;"	V
base	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^    val base = locator.getSystemId()$/;"	V
base	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    val base = if (hex) 16 else 10;$/;"	V
base64Decode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def base64Decode(in: String): Array[Byte] = (new Base64).decode(in.getBytes("UTF-8"))$/;"	f
base64Encode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def base64Encode(in: Array[Byte]): String = new String((new Base64).encode(in))$/;"	f
baseCSSClassName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarItem.scala	/^  def baseCSSClassName(name: String) = CalendarItem(id, start, calendarType, Empty, Empty, Empty, Box.legacyNullTest(name))$/;"	f
baseMailbox	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  private[this] val baseMailbox: MailboxItem = new SpecialMailbox$/;"	V
basePath	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  val basePath: List[String] = "user_mgt" :: Nil$/;"	V
baseResourceLocation	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResourceServer.scala	/^  var baseResourceLocation = "toserve"$/;"	v
baseString	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/test/scala/net/liftweb/oauth/OAuthSignatureMethodSpec.scala	/^      val baseString = hmacSha1.getBaseString(oauthMessage)$/;"	V
baseURI	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Document.scala	/^  var baseURI: String = _$/;"	v
baseUrl	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def baseUrl: String$/;"	f
baseUrl	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^class HttpResponse(override val baseUrl: String,$/;"	V
baseUrl_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/JettyTestServer.scala	/^  private var baseUrl_ = "http:\/\/localhost:" + serverPort_$/;"	v
bases	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^  private val bases = new Stack[URL]();$/;"	V
bc	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^      val bc = x(b) compare x(c)$/;"	V
bccEmail	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def bccEmail: Box[String] = Empty$/;"	f
bchar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val bchar = ('\\\\' ~> ('"' ^^ {case _ => '"'} |$/;"	V
before	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^      val before = joins.take(n2)$/;"	V
before	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def before(i: Int): java.lang.CharSequence = $/;"	f
before	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def before: java.lang.CharSequence = $/;"	f
beforeAssert	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^   def beforeAssert(name: String): Unit = synchronized {$/;"	f
beforeCompletion	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/EntityManagerSynchronization.scala	/^  def beforeCompletion = {$/;"	f
beforeCreate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def beforeCreate: List[(A) => Unit] = Nil$/;"	f
beforeDelete	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def beforeDelete: List[(A) => Unit] = Nil$/;"	f
beforeDelete	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Award.scala	/^	override def beforeDelete = deleteWithValidDBState _ :: Nil$/;"	f
beforeDelete	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Discovery.scala	/^	override def beforeDelete = deleteWithValidDBState _ :: Nil	$/;"	f
beforeDelete	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Institution.scala	/^	override def beforeDelete = deleteWithValidDBState _ :: Nil	$/;"	f
beforeDelete	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^	override def beforeDelete = deleteWithValidDBState _ :: Nil$/;"	f
beforeSave	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def beforeSave: List[A => Unit] = Nil$/;"	f
beforeSave	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Field.scala	/^	override def beforeSave = checkValidation _ :: Nil$/;"	f
beforeSchemifier	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def beforeSchemifier: Unit$/;"	f
beforeSend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val beforeSend = RulesSeq[(BasicResponse, HTTPResponse, List[(String, String)], Box[Req]) => Any]$/;"	V
beforeTest	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^    def beforeTest(name: String) {$/;"	f
beforeUpdate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def beforeUpdate: List[(A) => Unit] = Nil$/;"	f
beforeValidation	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def beforeValidation: List[A => Unit] = Nil$/;"	f
beforeValidationOnCreate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def beforeValidationOnCreate: List[A => Unit] = Nil$/;"	f
beforeValidationOnUpdate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def beforeValidationOnUpdate: List[A => Unit] = Nil$/;"	f
begOrSpace	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val begOrSpace: Parser[Int] = rep1(' ') ^^ {case lst => lst.length} | beginl ^^^ 0$/;"	V
begin	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    val begin = millis$/;"	V
beginl	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val beginl = Parser[Unit]{ in =>$/;"	V
beginlS	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val beginlS = beginl ~ rep(' ')$/;"	V
benchmark	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Jsonbench.scala	/^  def benchmark(name: String)(f: => Any) = run(name, 50000, 50000)(f)$/;"	f
benchmark	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^    def benchmark(name: String)(f: => Any) = run(name, 20000, 20000)(f)$/;"	f
bfalse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    val bfalse = new ListBuffer[A]$/;"	V
bi	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^    val bi = new BufferedInputStream(istream, Source.DefaultBufSize)$/;"	V
bigDecimal	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^class BigDecimal(val bigDecimal: BigDec) extends java.lang.Number {$/;"	V
bigDecimal2ordered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  implicit def bigDecimal2ordered(x: BigDecimal): Ordered[BigDecimal] =$/;"	f
bigInt2ordered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  implicit def bigInt2ordered(x: BigInt): Ordered[BigInt] = new Ordered[BigInt] with Proxy {$/;"	f
bigInteger	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^class BigInt(val bigInteger: BigInteger) extends java.lang.Number {$/;"	V
bigdecimal2jvalue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  implicit def bigdecimal2jvalue(x: BigDecimal) = JDouble(x.doubleValue)$/;"	f
bigint2jvalue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  implicit def bigint2jvalue(x: BigInt) = JInt(x)$/;"	f
bin	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^    def bin[S](left : IntMap[S], right : IntMap[S]) : IntMap[S] = {$/;"	f
bin	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def bin[T](prefix : Int, mask : Int, left : IntMap[T], right : IntMap[T]) : IntMap[T] = (left, right) match {$/;"	f
bin	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^    def bin[S](left : LongMap[S], right : LongMap[S]) : LongMap[S] = {$/;"	f
bin	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def bin[T](prefix : Long, mask : Long, left : LongMap[T], right : LongMap[T]) : LongMap[T] = (left, right) match {$/;"	f
binHash	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^    val binHash = (MessageDigest.getInstance("SHA")).digest(in)$/;"	V
binHash	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^    val binHash = (MessageDigest.getInstance("SHA-256")).digest(in)$/;"	V
binaryColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def binaryColumnType = "BINARY"$/;"	f
binaryColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def binaryColumnType = "BLOB"$/;"	f
binaryColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def binaryColumnType = "BYTEA"$/;"	f
binaryColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def binaryColumnType = "IMAGE"$/;"	f
binaryColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def binaryColumnType = "LONG RAW"$/;"	f
binaryColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def binaryColumnType = "LONG VARCHAR FOR BIT DATA"$/;"	f
binaryColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def binaryColumnType = "MEDIUMBLOB"$/;"	f
binaryColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def binaryColumnType: String$/;"	f
binaryColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  override def binaryColumnType = "VARBINARY(MAX)"$/;"	f
bind	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def bind(namespace: String, nodeFailureXform: Box[NodeSeq => NodeSeq],$/;"	f
bind	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def bind(namespace: String, xml: NodeSeq, params: BindParam*): NodeSeq =$/;"	f
bind	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def bind(vals: Map[String, NodeSeq], xml: NodeSeq): NodeSeq = {$/;"	f
bind	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindPlus.scala	/^    def bind(prefix: String, bindParams: BindParam*) = Helpers.bind(prefix, ns, bindParams: _*)$/;"	f
bind	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindPlus.scala	/^    def bind(prefix: String, nodeFailureXform: Box[NodeSeq => NodeSeq],$/;"	f
bind	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def bind(prefix: String, vals: BindParam*): NodeSeq = bind(prefix, _defaultXml, vals: _*)$/;"	f
bind	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def bind(vals: BindParam*): NodeSeq = bind(_defaultPrefix, vals: _*)$/;"	f
bind	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/FormProcessor.scala	/^  def bind(xhtml: NodeSeq) = {$/;"	f
bind	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/BindingParsers.scala	/^  def bind[bt <: NameElement](binderParser: Parser[bt], scope: Scope[bt]) = new UnitParser {$/;"	f
bindByNameMixIn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  private def bindByNameMixIn(bindParam: BindParam, s: Elem): NodeSeq = {$/;"	f
bindByNameTag	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  private def bindByNameTag(namespace: String, elem: Elem) =$/;"	f
bindByNameType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  private def bindByNameType(b: String) = b == "input" || b == "select" || b == "button" || b == "a"$/;"	f
bindFieldLine	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    def bindFieldLine(xhtml: NodeSeq): NodeSeq = {$/;"	f
bindFieldLine	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    def bindFieldLine(xhtml: NodeSeq): NodeSeq = {$/;"	f
bindFields	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    def bindFields(xhtml: NodeSeq): NodeSeq =$/;"	f
bindFields	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    def bindFields(xhtml: NodeSeq): NodeSeq =$/;"	f
bindFields	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Util.scala	/^  def bindFields[T <: Mapper[T]](mapper: T, nsfn: MappedField[_,T]=>NodeSeq): NodeSeq=>NodeSeq = {$/;"	f
bindLab	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/SourceSnippet.scala	/^		def bindLab(lab: Lab): NodeSeq= {$/;"	f
bindNodes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def bindNodes: Box[List[NodeSeq]] = _bindNodes.box$/;"	f
bindScientist	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/SourceSnippet.scala	/^		def bindScientist(scientist: Scientist) = {$/;"	f
bindSwitch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindPlus.scala	/^    def bindSwitch(prefix: String, choices: Seq[String])(choice: (Int, NodeSeq=>NodeSeq)) =$/;"	f
bindSwitch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindPlus.scala	/^  def bindSwitch(prefix: String, xml: NodeSeq, choices: Seq[String])(choice: (Int, NodeSeq=>NodeSeq)) = {$/;"	f
binderEnv	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/BindingParsers.scala	/^  private var binderEnv: BinderEnv = EmptyBinderEnv $/;"	v
bindersToString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def bindersToString: List[String] = (for(val b <- elements) yield b+"!"+id).toList$/;"	f
bindlist	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def bindlist(listvals: List[Map[String, NodeSeq]], xml: NodeSeq): Box[NodeSeq] = {$/;"	f
binds	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def binds(b: binderType): Boolean = substitution.contains(b)$/;"	f
birth	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^	object birth extends MappedInt(this) {$/;"	o
bis	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/XmlParseSpecs.scala	/^      val bis = new ByteArrayInputStream(actual.toString.getBytes("UTF-8"))$/;"	V
bit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^      var bit = 0$/;"	v
bit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    var bit = 0$/;"	v
bitCount	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def bitCount: Int             = this.bigInteger.bitCount()$/;"	f
bitLength	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def bitLength: Int            = this.bigInteger.bitLength()$/;"	f
bl	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      val bl = by.toList  ::: addlQueryParams.is$/;"	V
bl	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      val bl = by.toList ::: addlQueryParams.is$/;"	V
blacken	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^  private def blacken[B](t: Tree[B]): Tree[B] = t match {$/;"	f
blankLine	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val blankLine: Parser[Textile] = beginlS ~ '\\n' ^^^ BlankLine$/;"	V
blankPara	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val blankPara : Parser[Textile] = rep1(blankLine) ^^^ BlankLine$/;"	V
blankPw	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  val blankPw = "*******"$/;"	V
blankPw	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^  val blankPw = "*******"$/;"	V
blockquote	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val blockquote : Parser[Textile] = (beginl ~> accept("bq") ~> rep(para_attribute)) ~ (accept(". ") ~> rep1(not_blank_line) <~ blankLine) ^^ {$/;"	V
blocks	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    private[this] val blocks = new LinkedList[BlockMode]()$/;"	V
blowfishDecrypt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def blowfishDecrypt(enc: Array[Byte], key: Array[Byte]): Array[Byte] = blowfishDecrypt(enc, blowfishKeyFromBytes(key))$/;"	f
blowfishDecrypt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def blowfishDecrypt(enc: Array[Byte], key: SecretKey): Array[Byte] = readWholeStream(decryptStream(new ByteArrayInputStream(enc), key))$/;"	f
blowfishDecrypt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def blowfishDecrypt(enc: String, key: Array[Byte]): String = blowfishDecrypt(enc, blowfishKeyFromBytes(key))$/;"	f
blowfishDecrypt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def blowfishDecrypt(enc: String, key: SecretKey): String = new String(blowfishDecrypt(base64Decode(enc), key), "UTF-8")$/;"	f
blowfishEncrypt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def blowfishEncrypt(plain: Array[Byte], key: Array[Byte]): Array[Byte] = blowfishEncrypt(plain, blowfishKeyFromBytes(key))$/;"	f
blowfishEncrypt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def blowfishEncrypt(plain: Array[Byte], key: SecretKey): Array[Byte] = readWholeStream(encryptStream(new ByteArrayInputStream(plain), key))$/;"	f
blowfishEncrypt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def blowfishEncrypt(plain: String, key: Array[Byte]): String = blowfishEncrypt(plain, blowfishKeyFromBytes(key))$/;"	f
blowfishEncrypt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def blowfishEncrypt(plain: String, key: SecretKey): String = base64Encode(blowfishEncrypt(plain.getBytes("UTF-8"), key))$/;"	f
blowfishKeyFromBytes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def blowfishKeyFromBytes(key: Array[Byte]): SecretKey = new SecretKeySpec(key, "blowfish")$/;"	f
blueprint	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/CSS.scala	/^  def blueprint: NodeSeq = {$/;"	f
bm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val bm = buildMapper(rs)$/;"	V
bn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^      val bn = name + "_inited_?"$/;"	V
bn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^    val bn = name + VarConstants.initedSuffix$/;"	V
bn	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^      val bn = name + "_inited_?"$/;"	V
bns	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^          val bns = tryo {reqVarCallback(() => f)}$/;"	V
body	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^                   val body: Array[Byte],$/;"	V
bodyAsString	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  lazy val bodyAsString = new String(body, "UTF-8")$/;"	V
bodyChildren	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^    val bodyChildren = new ListBuffer[Node]$/;"	V
bodyHead	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^                var bodyHead = false$/;"	v
bodyTag	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^    var bodyTag = <body\/>$/;"	v
bodyTail	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^                var bodyTail = false$/;"	v
bodyTypes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^          val bodyTypes = info.flatMap {case x: MailBodyType => Some[MailBodyType](x); case _ => None}$/;"	V
bold	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val bold: Parser[Textile] =$/;"	V
bool	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def bool: SPU[Boolean] = {$/;"	f
bool2Monadic	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/MonadicConversions.scala	/^  implicit def bool2Monadic(cond: Boolean) = cond match {$/;"	f
boolToJsExp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  implicit def boolToJsExp(in: Boolean): JsExp = if (in) JsTrue else JsFalse$/;"	f
boolToResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/rest/XMLApiHelper.scala	/^  implicit def boolToResponse(in: Boolean): LiftResponse =$/;"	f
boolean	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  @deprecated type boolean = scala.Boolean$/;"	T
boolean2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^  implicit def boolean2(b: => Boolean) = new Boolean2(b)$/;"	f
boolean2Boolean	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def boolean2Boolean(x: Boolean) = java.lang.Boolean.valueOf(x)$/;"	f
boolean2jvalue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  implicit def boolean2jvalue(x: Boolean) = JBool(x)$/;"	f
booleanColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def booleanColumnType = "BIT"$/;"	f
booleanColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def booleanColumnType = "BOOLEAN"$/;"	f
booleanColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def booleanColumnType = "NUMBER"$/;"	f
booleanColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def booleanColumnType = "SMALLINT"$/;"	f
booleanColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def booleanColumnType: String$/;"	f
booleanValues	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/FormProcessor.scala	/^  val booleanValues = mMap.empty[String, Boolean]$/;"	V
booleanWrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def booleanWrapper(x: Boolean)  = new runtime.RichBoolean(x)$/;"	f
booleans	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/FormProcessor.scala	/^  val booleans = mMap.empty[String, (Boolean,Boolean=>Unit)=>NodeSeq]$/;"	V
booster	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private def booster(lst: List[String], func: String => Any): Unit = lst.foreach(v => func(v))$/;"	f
boot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def boot(): Unit = {$/;"	f
boot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def boot(): Unit;$/;"	f
bootLift	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPProvider.scala	/^  protected def bootLift(loader: Box[String]): Unit =$/;"	f
bootLift	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^  override def bootLift(loader : Box[String]) { \/* Nothing! *\/ }$/;"	f
borderWidth	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def borderWidth: Box[Int] = Empty$/;"	f
bos	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^    val bos = new ByteArrayOutputStream$/;"	V
bos	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/IoHelpers.scala	/^    val bos = new ByteArrayOutputStream$/;"	V
bos	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/IoHelpers.scala	/^    val bos = new StringBuilder$/;"	V
bottom_align	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val bottom_align : Parser[Attribute] = elem('~') ^^ Align$/;"	V
bound	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/BindingParsers.scala	/^  def bound[bt <: NameElement](boundElementParser: Parser[bt]) = $/;"	f
boundary	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^    val boundary = System.currentTimeMillis.toString$/;"	V
boundedFieldToItem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  implicit def boundedFieldToItem(in: (MappedField[String, A], Int)): BoundedIndexField[A] = BoundedIndexField(in._1, in._2)$/;"	f
box	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ThreadGlobal.scala	/^  def box: Box[T] = Box !! value$/;"	f
box2Iterable	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  implicit def box2Iterable[T](in: Box[T]): Iterable[T] = in.toList$/;"	f
box2Option	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  implicit def box2Option[T](in: Box[T]): Option[T] = in.toOption$/;"	f
boxArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  def boxArray(value: AnyRef): BoxedArray = value match {$/;"	f
boxOfScreen	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  implicit def boxOfScreen[T <: AbstractScreen](in: T): Box[T] = Box !! in$/;"	f
boxParseInternetDate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def boxParseInternetDate(dateString: String): Box[Date] = tryo {$/;"	f
boxToBoolean	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Boolean boxToBoolean(boolean b) {$/;"	m	class:BoxesRunTime
boxToByte	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Byte boxToByte(byte b) {$/;"	m	class:BoxesRunTime
boxToCharacter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Character boxToCharacter(char c) {$/;"	m	class:BoxesRunTime
boxToDouble	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Double boxToDouble(double d) {$/;"	m	class:BoxesRunTime
boxToFloat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Float boxToFloat(float f) {$/;"	m	class:BoxesRunTime
boxToInteger	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Integer boxToInteger(int i) {$/;"	m	class:BoxesRunTime
boxToLong	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Long boxToLong(long l) {$/;"	m	class:BoxesRunTime
boxToShort	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Short boxToShort(short s) {$/;"	m	class:BoxesRunTime
boxValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^  private def boxValue(value: Any) = value match {$/;"	f
boxed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  private var boxed = new Array[AnyRef](length)$/;"	v
bp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^                    val bp = new MimeBodyPart$/;"	V
bp2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^                        val bp2 = new MimeBodyPart$/;"	V
br	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/IoHelpers.scala	/^          val br = new BufferedReader(new InputStreamReader(in))$/;"	V
branchMask	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def branchMask(i : Int, j : Int) = highestOneBit(i ^ j);$/;"	f
branchMask	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def branchMask(i : Long, j : Long) = highestOneBit(i ^ j);$/;"	f
breadCrumbs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def breadCrumbs: List[Loc[_]] = _menu.breadCrumbs ::: List(this)$/;"	f
breadCrumbs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def breadCrumbs: Seq[MenuItem] = {$/;"	f
breadCrumbs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  lazy val breadCrumbs: Seq[MenuItem] = lines.flatMap(_.breadCrumbs)$/;"	V
breadCrumbs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Menu.scala	/^  def breadCrumbs: List[Loc[_]] = _parent match {$/;"	f
break	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def break(p: A => Boolean): (List[A], List[A]) = span { x => !p(x) }$/;"	f
break	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^  def break = DocBreak$/;"	f
breakOutComet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] def breakOutComet(): Unit = {$/;"	f
brokenLimit_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def brokenLimit_? : Boolean = false$/;"	f
brokenLimit_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  override def brokenLimit_? : Boolean = true$/;"	f
browse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/JettyTestServer.scala	/^  def browse(startPath: String, f:(WebTester) => Unit) = {$/;"	f
bsl	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^                      val bsl = tField.buildSetBooleanValue(fieldInfo.get, colName)$/;"	V
bsl	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^                      val bsl = tField.buildSetLongValue(fieldInfo.get, colName)$/;"	V
bsl	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^                      val bsl = tField.buildSetStringValue(fieldInfo.get, colName)$/;"	V
bsl	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^                    val bsl = tField.buildSetDateValue(fieldInfo.get, colName)$/;"	V
btrue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    val btrue = new ListBuffer[A]$/;"	V
buf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    val buf = new StringBuilder$/;"	V
buf	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-imaging/src/main/scala/net/liftweb/imaging/ImageHelpers.scala	/^      val buf  = new Array[Int](w) $/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    val buf = new ArrayBuffer[A]$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    val buf = new ArrayBuffer[B]$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    val buf = new StringBuilder$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    val buf = new StringBuilder()$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    val buf = new StringBuilder$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      val buf = new ListBuffer[B]$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    val buf = new ListBuffer[B]$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    val buf = new ListBuffer[List[A]]$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      val buf = new scala.collection.mutable.ArrayBuffer[B]$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    val buf = new ArrayBuffer[B]$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Set.scala	/^     val buf = new Array[A](min)$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^    val buf = new StringBuilder$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayBuffer.scala	/^    val buf = new ArrayBuffer[B]$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Buffer.scala	/^    val buf = new ArrayBuffer[B]$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    val buf = new ArrayBuffer[Byte]$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^    val buf = new StringBuilder$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^    val buf = new StringBuilder()$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^    val buf = new ArrayBuffer[b]$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^    val buf = new StringBuilder()$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^    val buf = new StringBuilder$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichStringBuilder.scala	/^    val buf = new ArrayBuffer[B]$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    val buf = new ArrayBuffer[(Test, Throwable)]()$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    val buf = new ArrayBuffer[Test]()$/;"	V
buf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/SimpleTokenizer.scala	/^  private val buf = new StringBuilder()$/;"	V
buf0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      var buf0 = buf$/;"	v
buf1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      var buf1 = buf.append(prefix0).append(head)$/;"	v
buf1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^        val buf1 = buf.append(prefix).append(hd)$/;"	V
bufIn	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^      val bufIn = new BufferedInputStream(in)$/;"	V
bufSize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ParserTest.scala	/^    val bufSize = Gen.choose(2, 64)$/;"	V
buf_char	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BufferedSource.scala	/^    var buf_char = { $/;"	v
buf_size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BufferedSource.scala	/^      val buf_size = buffer_size$/;"	V
buf_size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BufferedSource.scala	/^  val buf_size: Int$/;"	V
buffer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val buffer = new Array[Byte](2048)$/;"	V
buffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    val buffer = new ArrayBuffer[A]$/;"	V
buffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      val buffer = new ArrayBuffer[A]$/;"	V
buffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^    val buffer = new scala.collection.mutable.ListBuffer[(Int, T)];$/;"	V
buffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  var buffer = new Array[AnyRef](33);$/;"	v
buffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^    val buffer = new scala.collection.mutable.ListBuffer[(Long, T)];$/;"	V
buffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  var buffer = new Array[AnyRef](65);$/;"	v
buffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^    val buffer = new scala.collection.mutable.ListBuffer[(Key, Value)];$/;"	V
buffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  val buffer      = new StringBuilder()$/;"	V
buffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^  protected def buffer(pos: Int, ns: Seq[Node]): NodeBuffer = {$/;"	f
bufferSize	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  var bufferSize: Int = 0$/;"	v
buffered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^  override def buffered: this.type = this$/;"	f
buffered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CountedIterator.scala	/^    override def buffered : this.type = this$/;"	f
buffered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CountedIterator.scala	/^  override def buffered: BufferedIterator[A] with CountedIterator[A] = new BufferedIterator.Default[A] with CountedIterator[A] {$/;"	f
buffered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def buffered: BufferedIterator[A] = new BufferedIterator.Default[A] {$/;"	f
buffered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterator.scala	/^    val buffered = this.buffered0;$/;"	V
build	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^    def build(root: JValue, mapping: Mapping): Any = mapping match {$/;"	f
build	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Xml.scala	/^    def build(root: NodeSeq, rootName: Option[String], argStack: List[JValue]): List[JValue] = root match {$/;"	f
build	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def build (listvals: List[Map[String, NodeSeq]], ret: NodeSeq): NodeSeq = listvals match {$/;"	f
buildANavItem	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^        def buildANavItem(i: MenuItem) = {$/;"	f
buildAttrs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Xml.scala	/^    def buildAttrs(n: Node) = n.attributes.map((a: MetaData) => makeField(a.key, a.value.text)).toList$/;"	f
buildBasicAuthClient	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def buildBasicAuthClient(name: String, pwd: String) = {$/;"	f
buildCheckbox	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def buildCheckbox = <input type="checkbox" onclick={AnonFunc(theCall(JsRaw("this.checked")))}$/;"	f
buildComet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Comet.scala	/^  private def buildComet(kids: NodeSeq) : NodeSeq = {$/;"	f
buildDate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/VersionInfo.scala	/^  private def buildDate(ignore: NodeSeq): NodeSeq =$/;"	f
buildDisplayList	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def buildDisplayList: List[(Int, String)] = enum.map(a => (a.id, a.toString)).toList$/;"	f
buildDisplayList	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EnumField.scala	/^  def buildDisplayList: List[(Int, String)] = enum.map(a => (a.id, a.toString)).toList$/;"	f
buildFromJson	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  def buildFromJson(json: JsonAST.JObject): SampleModel = decodeFromJSON_!(json, false)$/;"	f
buildFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    def buildFunc(i: RunnerHolder): () => Any = i.func match {$/;"	f
buildInfo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  protected def buildInfo(resp: PaypalResponse, req: Req): Box[PayPalInfo] = {$/;"	f
buildInput	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def buildInput: NodeSeq = <input type="text" onblur={AnonFunc(onBlurCmd)}$/;"	f
buildInput	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def buildInput: NodeSeq = <select onchange={AnonFunc(onChangeCmd)}>$/;"	f
buildIt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    protected def buildIt[T](implicit man: Manifest[T]): Manifest[T] = man$/;"	f
buildItem	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^    def buildItem(in: MenuItem): JsExp =  in match {$/;"	f
buildItem	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  private[liftweb] def buildItem(kids: List[MenuItem], current: Boolean, path: Boolean): Box[MenuItem] =$/;"	f
buildItemMenu	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^  private def buildItemMenu [A] (loc : Loc[A], currLoc: Box[Loc[_]], expandAll : Boolean) : List[MenuItem] = {$/;"	f
buildItems	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^    def buildItems(in: Seq[MenuItem]): JsExp =$/;"	f
buildJsonFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def buildJsonFunc(f: Any => JsCmd): (JsonCall, JsCmd) = buildJsonFunc(Empty, Empty, f)$/;"	f
buildJsonFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def buildJsonFunc(name: Box[String], onError: Box[JsCmd], f: Any => JsCmd): (JsonCall, JsCmd) = {$/;"	f
buildJsonFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def buildJsonFunc(onError: JsCmd, f: Any => JsCmd): (JsonCall, JsCmd) =$/;"	f
buildKidMenuItems	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def buildKidMenuItems(kids: Seq[Menu]): List[MenuItem] = {$/;"	f
buildLRU	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  protected def buildLRU = new LRU[K, V](cacheSize)$/;"	f
buildLine	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def buildLine =$/;"	f
buildLine	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def buildLine(v: (String, FieldType)) =$/;"	f
buildLine	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def buildLine(v: Enum#Value) =$/;"	f
buildLink	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^  def buildLink(name: String): NodeSeq = buildLink(name, Nil)$/;"	f
buildLink	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^  def buildLink(name: String, text: NodeSeq): NodeSeq = {$/;"	f
buildLoanWrapper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def buildLoanWrapper(): LoanWrapper =$/;"	f
buildLoanWrapper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def buildLoanWrapper(eager: Boolean): LoanWrapper =$/;"	f
buildLoanWrapper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def buildLoanWrapper(eager: Boolean, in: List[ConnectionIdentifier]): LoanWrapper =$/;"	f
buildLoanWrapper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def buildLoanWrapper(in: List[ConnectionIdentifier]): LoanWrapper =$/;"	f
buildMapList	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def buildMapList: JsExp$/;"	f
buildMapper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def buildMapper(rs: ResultSet): (Int, Array[(ResultSet,Int,A) => Unit]) = synchronized {$/;"	f
buildMenu	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  lazy val buildMenu: CompleteMenu = location.map(_.buildMenu) openOr$/;"	V
buildMenu	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def buildMenu: CompleteMenu = {$/;"	f
buildMenu	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^  def buildMenu(current: Box[Loc[_]]): CompleteMenu = {$/;"	f
buildNoAuthClient	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def buildNoAuthClient =$/;"	f
buildOnBlur	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  private def buildOnBlur(bf: Box[String => JsCmd]): MetaData = bf match {$/;"	f
buildOptions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^   protected def buildOptions =$/;"	f
buildOptions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def buildOptions =$/;"	f
buildOptions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  override protected def buildOptions =$/;"	f
buildOptions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  protected def buildOptions =$/;"	f
buildOptions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  protected def buildOptions: List[Box[(String, JsExp)]]$/;"	f
buildPF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    def buildPF(in: Loc.Snippet): PartialFunction[String, NodeSeq => NodeSeq] = {$/;"	f
buildPackage	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def buildPackage(end: String) = synchronized(otherPackages.map(_ + "." + end))$/;"	f
buildParams	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  private def buildParams(meth: FacebookMethod, params: FacebookParam*): List[(String, Any)] = {$/;"	f
buildParams	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  private[facebook] def buildParams(methodName: String, params: FacebookParam*): List[(String, Any)] = {$/;"	f
buildProps	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  def buildProps: Properties = {$/;"	f
buildResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/rest/XMLApiHelper.scala	/^  protected def buildResponse(success: Boolean, msg: Box[NodeSeq],$/;"	f
buildRunner	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def buildRunner: TestRunner$/;"	f
buildSetActualValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def buildSetActualValue(accessor: Method, inst: AnyRef, columnName: String): (T, AnyRef) => Unit =$/;"	f
buildSetActualValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  def buildSetActualValue(accessor : Method, inst : AnyRef, columnName : String) : (T, AnyRef) => Unit = {$/;"	f
buildSetActualValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  def buildSetActualValue(accessor: Method, v: AnyRef, columnName: String): (T, AnyRef) => Unit =$/;"	f
buildSetActualValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  def buildSetActualValue(accessor: Method, v: AnyRef, columnName: String): (T, AnyRef) => Unit =$/;"	f
buildSetActualValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  def buildSetActualValue(accessor: Method, data: AnyRef, columnName: String) : (T, AnyRef) =>$/;"	f
buildSetActualValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	def buildSetActualValue(accessor: Method, data: AnyRef, columnName: String) : (T, AnyRef) =>$/;"	f
buildSetActualValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def buildSetActualValue(accessor: Method, inst : AnyRef, columnName : String) : (OwnerType, AnyRef) => Unit$/;"	f
buildSetActualValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def buildSetActualValue(accessor: Method, data: AnyRef, columnName: String) : (T, AnyRef) => Unit =$/;"	f
buildSetActualValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def buildSetActualValue(accessor: Method, v: AnyRef, columnName: String): (T, AnyRef) => Unit =$/;"	f
buildSetActualValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def buildSetActualValue(accessor: Method, data: AnyRef, columnName: String) : (T, AnyRef) => Unit =$/;"	f
buildSetActualValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def buildSetActualValue(accessor: Method, data: AnyRef, columnName: String): (T, AnyRef) => Unit =$/;"	f
buildSetActualValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  def buildSetActualValue(accessor : Method, inst : AnyRef, columnName : String) : (T, AnyRef) => Unit = {$/;"	f
buildSetActualValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def buildSetActualValue(accessor: Method, inst: AnyRef, columnName: String): (T, AnyRef) => Unit =$/;"	f
buildSetActualValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  def buildSetActualValue(accessor: Method, v: AnyRef, columnName: String): (T, AnyRef) => Unit =$/;"	f
buildSetBooleanValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def buildSetBooleanValue(accessor : Method, columnName : String): (T, Boolean, Boolean) => Unit = null$/;"	f
buildSetBooleanValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  def buildSetBooleanValue(accessor: Method, columnName : String) : (T, Boolean, Boolean) => Unit   =$/;"	f
buildSetBooleanValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  def buildSetBooleanValue(accessor: Method, columnName: String): (T, Boolean, Boolean) => Unit =$/;"	f
buildSetBooleanValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  def buildSetBooleanValue(accessor: Method, columnName: String): (T, Boolean, Boolean) => Unit =$/;"	f
buildSetBooleanValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  def buildSetBooleanValue(accessor : Method, columnName : String) : (T, Boolean, Boolean) => Unit = null$/;"	f
buildSetBooleanValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	def buildSetBooleanValue(accessor : Method, columnName : String) : (T, Boolean, Boolean) => Unit = null$/;"	f
buildSetBooleanValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def buildSetBooleanValue(accessor: Method, columnName: String) : (OwnerType, Boolean, Boolean) => Unit$/;"	f
buildSetBooleanValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def buildSetBooleanValue(accessor: Method, columnName: String): (T, Boolean, Boolean) => Unit =$/;"	f
buildSetBooleanValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def buildSetBooleanValue(accessor : Method, columnName : String) : (T, Boolean, Boolean) => Unit = null$/;"	f
buildSetBooleanValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def buildSetBooleanValue(accessor : Method, columnName : String): (T, Boolean, Boolean) => Unit =$/;"	f
buildSetBooleanValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  def buildSetBooleanValue(accessor : Method, columnName : String) : (T, Boolean, Boolean) => Unit   = {$/;"	f
buildSetBooleanValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def buildSetBooleanValue(accessor: Method, columnName: String): (T, Boolean, Boolean) => Unit =$/;"	f
buildSetBooleanValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  def buildSetBooleanValue(accessor: Method, columnName: String): (T, Boolean, Boolean) => Unit =$/;"	f
buildSetDateValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def buildSetDateValue(accessor : Method, columnName : String): (T, Date) => Unit = null$/;"	f
buildSetDateValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  def buildSetDateValue(accessor: Method, columnName: String): (T, Date) => Unit =$/;"	f
buildSetDateValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  def buildSetDateValue(accessor: Method, columnName: String): (T, Date) => Unit =$/;"	f
buildSetDateValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  def buildSetDateValue(accessor: Method, columnName: String): (T, Date) => Unit =$/;"	f
buildSetDateValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  def buildSetDateValue(accessor : Method, columnName : String) : (T, Date) => Unit =$/;"	f
buildSetDateValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	def buildSetDateValue(accessor : Method, columnName : String) : (T, Date) => Unit =$/;"	f
buildSetDateValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def buildSetDateValue(accessor: Method, columnName: String): (OwnerType, Date) => Unit$/;"	f
buildSetDateValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def buildSetDateValue(accessor: Method, columnName: String): (T, Date) => Unit =$/;"	f
buildSetDateValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def buildSetDateValue(accessor : Method, columnName : String) : (T, Date) => Unit =$/;"	f
buildSetDateValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def buildSetDateValue(accessor: Method, columnName: String): (T, Date) => Unit =$/;"	f
buildSetDateValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  def buildSetDateValue(accessor : Method, columnName : String) : (T, Date) => Unit   = {$/;"	f
buildSetDateValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def buildSetDateValue(accessor: Method, columnName: String): (T, Date) => Unit =$/;"	f
buildSetDateValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  def buildSetDateValue(accessor: Method, columnName: String): (T, Date) => Unit =$/;"	f
buildSetLongValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def buildSetLongValue(accessor : Method, columnName : String): (T, Long, Boolean) => Unit = null$/;"	f
buildSetLongValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  def buildSetLongValue(accessor : Method, columnName : String): (T, Long, Boolean) => Unit =$/;"	f
buildSetLongValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  def buildSetLongValue(accessor: Method, columnName: String): (T, Long, Boolean) => Unit =$/;"	f
buildSetLongValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  def buildSetLongValue(accessor: Method, columnName: String): (T, Long, Boolean) => Unit =$/;"	f
buildSetLongValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  def buildSetLongValue(accessor: Method, columnName : String) : (T, Long, Boolean) =>$/;"	f
buildSetLongValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	def buildSetLongValue(accessor: Method, columnName : String) : (T, Long, Boolean) =>$/;"	f
buildSetLongValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def buildSetLongValue(accessor: Method, columnName: String): (OwnerType, Long, Boolean) => Unit$/;"	f
buildSetLongValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def buildSetLongValue(accessor: Method, columnName: String): (T, Long, Boolean) => Unit =$/;"	f
buildSetLongValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def buildSetLongValue(accessor: Method, columnName : String) : (T, Long, Boolean) => Unit =$/;"	f
buildSetLongValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def buildSetLongValue(accessor: Method, columnName: String): (T, Long, Boolean) => Unit =$/;"	f
buildSetLongValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  def buildSetLongValue(accessor : Method, columnName : String) : (T, Long, Boolean) => Unit = {$/;"	f
buildSetLongValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def buildSetLongValue(accessor: Method, columnName: String): (T, Long, Boolean) => Unit =$/;"	f
buildSetLongValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  def buildSetLongValue(accessor: Method, columnName: String): (T, Long, Boolean) => Unit =$/;"	f
buildSetStringValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def buildSetStringValue(accessor : Method, columnName : String): (T, String) => Unit  = (inst, v) => doField(inst, accessor, {case f: MappedFakeClob[T] =>$/;"	f
buildSetStringValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def buildSetStringValue(accessor : Method, columnName : String): (T, String) => Unit  = (inst, v) => doField(inst, accessor, {case f: MappedText[T] =>$/;"	f
buildSetStringValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def buildSetStringValue(accessor : Method, columnName : String): (T, String) => Unit  = null$/;"	f
buildSetStringValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  def buildSetStringValue(accessor : Method, columnName : String): (T, String) => Unit =$/;"	f
buildSetStringValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  def buildSetStringValue(accessor: Method, columnName: String): (T, String) => Unit =$/;"	f
buildSetStringValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  def buildSetStringValue(accessor: Method, columnName: String): (T, String) => Unit =$/;"	f
buildSetStringValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  def buildSetStringValue(accessor: Method, columnName: String): (T, String) =>$/;"	f
buildSetStringValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	def buildSetStringValue(accessor: Method, columnName: String): (T, String) =>$/;"	f
buildSetStringValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def buildSetStringValue(accessor: Method, columnName: String): (OwnerType, String) => Unit$/;"	f
buildSetStringValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def buildSetStringValue(accessor: Method, columnName: String): (T, String) => Unit =$/;"	f
buildSetStringValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def buildSetStringValue(accessor: Method, columnName: String): (T, String) => Unit =$/;"	f
buildSetStringValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  def buildSetStringValue(accessor : Method, columnName : String) : (T, String) => Unit  = {$/;"	f
buildSetStringValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def buildSetStringValue(accessor: Method, columnName: String): (T, String) => Unit =$/;"	f
buildSetStringValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  def buildSetStringValue(accessor: Method, columnName: String): (T, String) => Unit =$/;"	f
buildSpan	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Comet.scala	/^  private def buildSpan(timeb: Box[Long], xml: NodeSeq, cometActor: LiftCometActor, spanId: String): NodeSeq =$/;"	f
buildSpan	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def buildSpan(time: Long, xml: NodeSeq): NodeSeq =$/;"	f
buildSpan	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def buildSpan(time: Long, xml: NodeSeq): NodeSeq$/;"	f
buildUlLine	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^        def buildUlLine(in: Seq[MenuItem]): NodeSeq =$/;"	f
buildUpperLines	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Menu.scala	/^  override def buildUpperLines(pathAt: HasKids, actual: Menu, populate: List[MenuItem]): List[MenuItem]$/;"	f
buildUpperLines	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^  def buildUpperLines(pathAt: HasKids, actual: Menu, populate: List[MenuItem]): List[MenuItem] = populate$/;"	f
builder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^  def builder(info: NodeSeq): NodeSeq = {$/;"	f
bulkDelete_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^    def bulkDelete_!!(minTimestamp: Long): Unit = this.bulkDelete_!!(By_<(_timestamp, minTimestamp))$/;"	f
bulkDelete_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    def bulkDelete_!!(what: Long): Unit =$/;"	f
bulkDelete_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def bulkDelete_!!(minTimestamp: Long): Unit$/;"	f
bulkDelete_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def bulkDelete_!!(token: Box[OAuthUtil.Parameter]): Unit$/;"	f
bulkDelete_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def bulkDelete_!!(by: QueryParam[A]*): Boolean = bulkDelete_!!(dbDefaultConnectionIdentifier, by :_*)$/;"	f
bulkDelete_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def bulkDelete_!!(dbId: ConnectionIdentifier, by: QueryParam[A]*): Boolean = {$/;"	f
bullet	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def bullet(depth : Int, numbered : Boolean): Parser[Textile] = {$/;"	f
bullet_line	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^      def bullet_line(depth : Int, numbered : Boolean): Parser[Textile] =$/;"	f
bump	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    val bump: Long = ((_formGroup.is openOr 0) + 1000L) * 10000L$/;"	V
bundleWatcher	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^  private var bundleWatcher: BundleWatcher[ManifestEntry] = _$/;"	v
business	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val business = r.param("business")$/;"	V
but	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^        case x => fail("Expected object but got " + x)$/;"	o
but	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^        case Some(x) => p.fail("expected field, array or object but got " + x)$/;"	o
bv	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^          var bv = x(b) compare v$/;"	v
bw	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^    var bw = bytesToWrite$/;"	v
by	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^      val by = new Cmp[O, TheKeyType](thisField, OprEnum.Eql, Full(primaryKeyField.is), Empty, Empty)$/;"	V
by	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Range.scala	/^    override def by(step: Int): Range = new Inclusive(start, end, step)$/;"	f
by	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Range.scala	/^  def by(step: Int): Range = new Range(start, end, step)$/;"	f
byName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^    val byName = new HashMap[String, List[String]]()$/;"	V
byte	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  @deprecated type byte    = scala.Byte$/;"	T
byte	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def byte: SPU[Byte] = new SPU[Byte] {$/;"	f
byte1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/EncodingHeuristics.scala	/^      val byte1 = in.read()$/;"	V
byte2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/EncodingHeuristics.scala	/^      val byte2 = in.read()$/;"	V
byte2Byte	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def byte2Byte(x: Byte) = new java.lang.Byte(x)$/;"	f
byte2double	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def byte2double(x: Byte): Double = x.toDouble$/;"	f
byte2float	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def byte2float(x: Byte): Float = x.toFloat$/;"	f
byte2int	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def byte2int(x: Byte): Int = x.toInt$/;"	f
byte2long	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def byte2long(x: Byte): Long = x.toLong$/;"	f
byte2short	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def byte2short(x: Byte): Short = x.toShort$/;"	f
byte3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/EncodingHeuristics.scala	/^      val byte3 = in.read()$/;"	V
byte4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/EncodingHeuristics.scala	/^      val byte4 = in.read();$/;"	V
byteBuffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BufferedSource.scala	/^  val byteBuffer = ByteBuffer.allocate(buf_size)$/;"	V
byteCache	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static Byte[] byteCache = new Byte[byteUpBound - byteLowBound + 1];$/;"	f	class:BoxesRunTime	file:
byteChannel	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BufferedSource.scala	/^    val byteChannel = Channels.newChannel(inpStream)$/;"	V
byteLowBound	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static int byteLowBound = -128;$/;"	f	class:BoxesRunTime	file:
byteMark	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^    val byteMark = 0x80 $/;"	V
byteMask	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^    val byteMask = 0xBF$/;"	V
byteOf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^    def byteOf(in: Char): Int = in match {$/;"	f
byteToHex	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def byteToHex(b: Byte): String = Integer.toHexString((b & 0xf0) >>> 4) + Integer.toHexString(b & 0x0f)$/;"	f
byteUpBound	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static int byteUpBound = 127;$/;"	f	class:BoxesRunTime	file:
byteValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  override def byteValue   = intValue.toByte$/;"	f
byteValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  override def byteValue   = intValue.toByte$/;"	f
byteWrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def byteWrapper(x: Byte)     = new runtime.RichByte(x)$/;"	f
bytearray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def bytearray: SPU[Array[Byte]] = {$/;"	f
bytes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^    val bytes = js.toJsCmd.getBytes("UTF-8")$/;"	V
bytes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^    val bytes = json.toJsCmd.getBytes("UTF-8")$/;"	V
bytes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^    val bytes = text.getBytes("UTF-8")$/;"	V
bytes	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^    val bytes = new ByteArrayOutputStream$/;"	V
bytes	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^      private val bytes = body$/;"	V
bytes	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^      private val bytes = body.toString.getBytes("UTF-8")$/;"	V
bytes	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/gravatar/Gravatar.scala	/^    val bytes = message.getBytes("CP1252")$/;"	V
bytes	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^    val bytes = new collection.mutable.ArrayBuffer[Byte]()$/;"	V
bytesToWrite	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^    var bytesToWrite = 0$/;"	v
c	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^      val c = s.charAt(i)$/;"	V
c	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^          val c = buf.next$/;"	V
c	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^        val c = segment(cur)$/;"	V
c	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^        var c = '\\\\'$/;"	v
c	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^        var c = buf.next$/;"	v
c	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^        val c = ptype.getActualTypeArguments()(i).asInstanceOf[ParameterizedType]$/;"	V
c	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^    var c: Class[_] = in$/;"	v
c	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BasicTypesHelpersSpec.scala	/^      var c: Array[Byte] = Array(12, 13)$/;"	v
c	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-imaging/src/main/scala/net/liftweb/imaging/ImageHelpers.scala	/^          val c = buf(x) $/;"	V
c	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^    val c: HttpClient = new HttpClient()$/;"	V
c	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def c[T](name: String,value: Box[T])(implicit cvt: T => JsExp):$/;"	f
c	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarDayViewDemo.scala	/^    val c = Calendar getInstance;$/;"	V
c	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarMonthViewDemo.scala	/^    val c = Calendar getInstance;$/;"	V
c	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarWeekViewDemo.scala	/^    val c = Calendar getInstance;$/;"	V
c	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^      val c = getClass.getSimpleName$/;"	V
c	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^      val c = new Company$/;"	V
c	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^       val c = length + 1$/;"	V
c	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^      def next = { val c = str charAt i; i += 1; c }$/;"	V
c	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    private var c: Int = 0$/;"	v
c	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BufferedSource.scala	/^      val c = buf_char$/;"	V
c	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichStringBuilder.scala	/^    val c = self.charAt(idx)$/;"	V
c	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^        var c = off + len - 1$/;"	v
c	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^      var c = it.next$/;"	v
c	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^      var c = s.charAt(i);$/;"	v
c	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Scanner.scala	/^  private var c: Char = 'z'$/;"	v
c	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/EncodingHeuristics.scala	/^        var c: Char = '\\0'  \/\/ bogus init value$/;"	v
c	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^      val c = new Array[Char](1024)$/;"	V
c	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^        val c = ch(start+i);$/;"	V
c	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^            var c = it.next$/;"	v
c	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/TokenTests.scala	/^      var c = ' ';$/;"	v
c	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/TokenTests.scala	/^    var c = it.next;$/;"	v
c	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/CachedFileStorage.scala	/^    val c   = fos.getChannel()$/;"	V
c1	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarDayViewDemo.scala	/^    val c1 = Calendar getInstance;$/;"	V
c1	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarMonthViewDemo.scala	/^    val c1 = Calendar getInstance$/;"	V
c1	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarWeekViewDemo.scala	/^    val c1 = Calendar getInstance;$/;"	V
c1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^          val c1 = value(i + 1)$/;"	V
c1End	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarDayViewDemo.scala	/^    val c1End = Calendar getInstance;$/;"	V
c1End	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarWeekViewDemo.scala	/^    val c1End = Calendar getInstance;$/;"	V
c2	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarDayViewDemo.scala	/^    val c2 = Calendar getInstance;$/;"	V
c2	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarMonthViewDemo.scala	/^    val c2 = Calendar getInstance$/;"	V
c2	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarWeekViewDemo.scala	/^    val c2 = Calendar getInstance;$/;"	V
c2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^        val c2 = value(i)$/;"	V
c2End	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarDayViewDemo.scala	/^    val c2End = Calendar getInstance;$/;"	V
c2End	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarMonthViewDemo.scala	/^    val c2End = Calendar getInstance$/;"	V
c2End	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarWeekViewDemo.scala	/^    val c2End = Calendar getInstance;$/;"	V
c3	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarDayViewDemo.scala	/^    val c3 = Calendar getInstance;$/;"	V
c3	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarMonthViewDemo.scala	/^    val c3 = Calendar getInstance$/;"	V
c3	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarWeekViewDemo.scala	/^    val c3 = Calendar getInstance;$/;"	V
c3End	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarDayViewDemo.scala	/^    val c3End = Calendar getInstance;$/;"	V
c3End	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarWeekViewDemo.scala	/^    val c3End = Calendar getInstance;$/;"	V
c4	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarDayViewDemo.scala	/^    val c4 = Calendar getInstance;$/;"	V
c4	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarWeekViewDemo.scala	/^    val c4 = Calendar getInstance;$/;"	V
c4End	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarDayViewDemo.scala	/^    val c4End = Calendar getInstance;$/;"	V
c4End	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarWeekViewDemo.scala	/^    val c4End = Calendar getInstance;$/;"	V
c5	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarDayViewDemo.scala	/^    val c5 = Calendar getInstance;$/;"	V
c5	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarWeekViewDemo.scala	/^    val c5 = Calendar getInstance;$/;"	V
c5End	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarDayViewDemo.scala	/^    val c5End = Calendar getInstance;$/;"	V
c5End	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarWeekViewDemo.scala	/^    val c5End = Calendar getInstance;$/;"	V
cToL	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^    def cToL(in: Char) = in.toLong - '0'.toLong$/;"	f
cache	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^    private var cache = Map[A, R]()$/;"	v
cache	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/KeyedCache.scala	/^  val cache = new LRU[K, T](size, loadFactor)$/;"	V
cache	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^    def cache: SoftReferenceCache[K, V] = lruCache$/;"	f
cache	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^  val cache = new LinkedHashMap[K, SoftValue[K, V]]() {$/;"	V
cache	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TemplateCache.scala	/^  private val cache : LRU[(Locale, List[String]), NodeSeq] = new LRU(templatesCount)$/;"	V
cache	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val cache = if (lrCache.isDefined) lrCache.open_! else NoCache$/;"	V
cache	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  private lazy val cache = new Array[BigDecimal](maxCached - minCached + 1)$/;"	V
cache	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  private val cache = new Array[BigInt](maxCached - minCached + 1)$/;"	V
cache	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/NodeFactory.scala	/^  val cache = new collection.mutable.HashMap[Int, List[A]]();$/;"	V
cacheLock	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TemplateCache.scala	/^  private val cacheLock = new ConcurrentLock$/;"	V
cacheSize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  protected def cacheSize: Int = 200$/;"	f
cacheSize	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala	/^  def cacheSize: Int$/;"	f
cached	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashSet.scala	/^    val cached = new mutable.ArrayBuffer() ++ super.elements$/;"	V
cached_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def cached_? : Boolean = synchronized{ _calcedObj}$/;"	f
cal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    val cal = Calendar.getInstance(utc)$/;"	V
cal	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarDayView.scala	/^        val cal = Calendar getInstance;$/;"	V
cal	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarDayView.scala	/^    val cal = when.clone().asInstanceOf[Calendar]$/;"	V
cal	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarMonthView.scala	/^      val cal = calendar.clone().asInstanceOf[Calendar]$/;"	V
cal	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarMonthView.scala	/^    val cal = when.clone().asInstanceOf[Calendar]$/;"	V
cal	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarWeekView.scala	/^        val cal = Calendar getInstance;$/;"	V
cal	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarWeekView.scala	/^    val cal = when.clone().asInstanceOf[Calendar]$/;"	V
cal	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DateTimeField.scala	/^    val cal = Calendar.getInstance()$/;"	V
calc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LD.scala	/^        val calc = min(left + cost, i + 1, top + 1)$/;"	V
calcBaseCount	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private def calcBaseCount(conn: ConnectionIdentifier): Int =$/;"	f
calcCometPath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var calcCometPath: String => JsExp = prefix => {$/;"	v
calcCreateItem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def calcCreateItem = "create"$/;"	f
calcDbId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  private def calcDbId = if (dbCalculateConnectionIdentifier.isDefinedAt(this)) dbCalculateConnectionIdentifier(this)$/;"	f
calcDbId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/DBRecord.scala	/^  private def calcDbId = if (dbCalculateConnectionIdentifier.isDefinedAt(this)) dbCalculateConnectionIdentifier(this)$/;"	f
calcDefaultValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  protected def calcDefaultValue: T = dflt$/;"	f
calcDefaultValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  protected def calcDefaultValue: T$/;"	f
calcDeleteItem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def calcDeleteItem = "delete"$/;"	f
calcDriver	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  var calcDriver:  Connection => DriverType = conn => {$/;"	v
calcEditItem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def calcEditItem = "edit"$/;"	f
calcFieldName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def calcFieldName: String = fieldOwner.getSingleton.internal_dbTableName+":"+name$/;"	f
calcFirstScreen	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  def calcFirstScreen: Box[Screen] = screens.firstOption$/;"	f
calcHidden	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  protected def calcHidden(kids: List[MenuItem]) = hidden || (hideIfNoKids_? && kids.isEmpty)$/;"	f
calcIE6ForResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var calcIE6ForResponse: () => Boolean = () => S.request.map(_.isIE6) openOr false$/;"	v
calcIEMode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var calcIEMode: () => Boolean =$/;"	v
calcLastModified	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResourceServer.scala	/^  def calcLastModified(in: URL): Long = {$/;"	f
calcLinkText	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^          def calcLinkText(in: CrudType): NodeSeq = Text(S.??("crudify.menu.delete.displayName", displayName))$/;"	f
calcLinkText	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^          def calcLinkText(in: CrudType): NodeSeq = Text(S.??("crudify.menu.edit.displayName", displayName))$/;"	f
calcLinkText	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^        def calcLinkText(in: CrudType): NodeSeq = Text(S.??("crudify.menu.view.displayName", displayName))$/;"	f
calcListItems	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def calcListItems = "list"$/;"	f
calcPrefix	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def calcPrefix = List(_dbTableNameLC)$/;"	f
calcRequestTimeout	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var calcRequestTimeout: Box[Req => Int] = Empty$/;"	v
calcScreenAfter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  def calcScreenAfter(which: Screen): Box[Screen] =$/;"	f
calcSnippets	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  lazy val calcSnippets: SnippetTest = {$/;"	V
calcTemplate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def calcTemplate: Box[NodeSeq] = Empty$/;"	f
calcTemplate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^          override def calcTemplate = Full(deleteTemplate)$/;"	f
calcTemplate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^          override def calcTemplate = Full(editTemplate)$/;"	f
calcTemplate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^        override def calcTemplate = Full(viewTemplate)$/;"	f
calcTime	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def calcTime[T](f: => T): (Long, T) = {$/;"	f
calcValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def calcValue(in: NodeSeq): Option[NodeSeq] = Some(Text(value))$/;"	f
calcValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def calcValue(in: NodeSeq): Option[NodeSeq] = Some(Text(value.name))$/;"	f
calcValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def calcValue(in: NodeSeq): Option[NodeSeq] = Some(Text(value.toString))$/;"	f
calcValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def calcValue(in: NodeSeq): Option[NodeSeq] = Some(myValue)$/;"	f
calcValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def calcValue(in: NodeSeq): Option[NodeSeq] = Some(value(in))$/;"	f
calcValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def calcValue(in: NodeSeq): Option[NodeSeq] = Some(value)$/;"	f
calcValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def calcValue(in: NodeSeq): Option[NodeSeq] = Some(value.asHtml)$/;"	f
calcValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def calcValue(in: NodeSeq): Option[NodeSeq] = func(in)$/;"	f
calcValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def calcValue(in: NodeSeq): Option[NodeSeq] = value$/;"	f
calcValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def calcValue(in: NodeSeq): Option[NodeSeq]$/;"	f
calcViewItem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def calcViewItem = "view"$/;"	f
calced	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^  private val calced = new ThreadGlobal[Boolean]$/;"	V
calculateContextPath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var calculateContextPath: () => Box[String] = () => Empty$/;"	v
calculateXmlHeader	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var calculateXmlHeader: (NodeResponse, Node, Box[String]) => String = {$/;"	v
calculated_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^  def calculated_? = synchronized {value.isDefined}$/;"	f
calendar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^      val calendar = Calendar.getInstance$/;"	V
call	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LAPinger.scala	/^      def call: Unit = { to ! msg }$/;"	f
call	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ParserTest.scala	/^      executor.submit(new Callable[JValue] { def call = parse(json) })).toList.map(_.get)$/;"	f
call	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ActorPing.scala	/^      def call: Unit = { Helpers.tryo( to ! msg ) }$/;"	f
call	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def call: JsonCall = handlers._1$/;"	f
call	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  private[facebook] def call(params: List[(String, Any)]): Node = {$/;"	f
callInitCometActor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private[http] def callInitCometActor(theSession: LiftSession,$/;"	f
callMethod	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def callMethod(meth: FacebookMethod): Node =$/;"	f
callMethod	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def callMethod(meth: FacebookMethod, fileName: String, mimeType: String, file: Array[Byte], params: FacebookParam* ): Node = {$/;"	f
callMethod	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def callMethod(meth: FacebookMethod, otherParams: FacebookParam*): Node =$/;"	f
callMethod	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def callMethod(meth: SessionlessFacebookMethod): Node =$/;"	f
callPlotFunction	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^  def callPlotFunction(idPlaceholder: String): JsCmd = JsRaw("flot_plot_"+idPlaceholder+"();")$/;"	f
callableMethod_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def callableMethod_?(meth: Method) = {$/;"	f
callback	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ControlHelpersSpec.scala	/^      val callback = (e: Throwable) => { e must_== exception; () }$/;"	V
callback	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ControlHelpersSpec.scala	/^      val callback = (e: Throwable) => { fail("must not be called") }$/;"	V
callbackUri	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  def callbackUri = callback_uri.is$/;"	f
callbackUri	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def callbackUri: String$/;"	f
callbackUri	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/test/scala/net/liftweb/oauth/OAuthSignatureMethodSpec.scala	/^    def callbackUri: String = ""$/;"	f
callback_uri	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  object callback_uri extends MappedString(this, 255) {$/;"	o
camelCase	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def camelCase(name : String): String = {$/;"	f
camelCaseMethod	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def camelCaseMethod(name: String): String = {$/;"	f
camelCasedMethodIsCamelCaseWithLowerCase	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      val camelCasedMethodIsCamelCaseWithLowerCase = forAllProp(underscoredStrings){$/;"	V
camelCasedNameDoesntChange	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      val camelCasedNameDoesntChange = forAllProp(camelCasedStrings){ (name: String) => camelCase(name) == name }$/;"	V
camelCasedStrings	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^  val camelCasedStrings = for {length <- choose(0, 4)$/;"	V
camelUrl	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val camelUrl: Parser[Textile] =$/;"	V
camelizedWord	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val camelizedWord: Parser[CharBlock] =$/;"	V
can	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^      fail("Root object can't yet be List or Map (needs a feature from Scala 2.8)")$/;"	o
can	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^    "return a failure if a class can not be instantiated with a new instance" in {$/;"	c
can	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^    "return a full can if a class can be instantiated with a new instance" in {$/;"	c
can	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def can: Box[Long] = if (defined_?) Full(is) else Empty$/;"	f
canAddBinder	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def canAddBinder(b: binderType): Boolean = !binds(b)$/;"	f
canBoolToResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/rest/XMLApiHelper.scala	/^  implicit def canBoolToResponse(in: Box[Boolean]): LiftResponse =$/;"	f
canExpand_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  protected def canExpand_? : Boolean = allowTemporaryPoolExpansion && poolSize <= doNotExpandBeyond$/;"	f
canMatch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/jolib.scala	/^    def canMatch(p: Pattern) =$/;"	f
canNodeToResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/rest/XMLApiHelper.scala	/^  implicit def canNodeToResponse(in: Box[NodeSeq]): LiftResponse = in match {$/;"	f
canRead_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def canRead_? = owner.safe_? || checkCanRead_?$/;"	f
canStrBoxNodeSeq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    implicit def canStrBoxNodeSeq(in: Box[Any]): Box[NodeSeq] = in.map(_ match {$/;"	f
canWrite_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def canWrite_? = owner.safe_? || checkCanWrite_?$/;"	f
can_delete_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/DBRecord.scala	/^  def can_delete_? : Boolean =  meta.saved_?(this) && !was_deleted_?$/;"	f
cancelButton	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    val cancelButton: Elem = theScreen.cancelButton % ("onclick" -> ("document.getElementById(" + cancelId.encJs + ").submit()"))$/;"	V
cancelButton	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  def cancelButton: Elem = <button>{S.??("Cancel")}<\/button>$/;"	f
cancelButton	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    override def cancelButton: Elem = Wizard.this.cancelButton$/;"	f
cancelButton	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    val cancelButton: Elem = theScreen.cancelButton % ("onclick" -> ("document.getElementById(" + cancelId.encJs + ").submit()"))$/;"	V
cancelButton	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  def cancelButton: Elem = <button>{S.??("Cancel")}<\/button>$/;"	f
cancelId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    val cancelId = Helpers.nextFuncName$/;"	V
cancelId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    val cancelId = Helpers.nextFuncName$/;"	V
cannot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^    "return an Empty can if the class cannot be coerced to the expected type" in {$/;"	c
canvasPage_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/Facebook.scala	/^  def canvasPage_? : Boolean = S.param("fb_sig_in_canvas") match {$/;"	f
capacity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def capacity: Int = value.length$/;"	f
capacity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^  def capacity: Int$/;"	f
capacity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/BitSet.scala	/^class BitSet(val size: Int, val capacity: Int, ba: Array[Int], copy: Boolean)$/;"	V
capacity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BitSet.scala	/^  var capacity: Int = initSize$/;"	v
capacity_	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def capacity_=(n: Int) { ensureCapacity(n) }$/;"	f
capify	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^  def capify(in: String): String = {$/;"	f
capify	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^  private def capify(in: String, pos: Int, max: Int, lastLetter: Boolean, lastSymbol: Boolean, out: GoodSB): Unit = {$/;"	f
capify	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala	/^  def capify: String => String = Helpers.capify _$/;"	f
capitalize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  def capitalize: String =$/;"	f
capture	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^  lazy val capture = map(s => s)$/;"	V
capture	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  var capture: Boolean = false$/;"	v
captureText	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  def captureText(): Unit = {$/;"	f
caseFields	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  def caseFields(x: Product): List[Any] = {$/;"	f
catCamelUrl	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val catCamelUrl: Parser[Textile] =$/;"	V
catTickUrl	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val catTickUrl: Parser[WikiAnchor] =$/;"	V
cbuf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  protected val cbuf = new StringBuilder()$/;"	V
cc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty6AsyncProvider.scala	/^      val cc = Class.forName("org.mortbay.util.ajax.ContinuationSupport")$/;"	V
cc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty7AsyncProvider.scala	/^      val cc = Class.forName("org.eclipse.jetty.continuation.ContinuationSupport")$/;"	V
ccache	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Location.scala	/^  private var ccache: Map[String, java.lang.Class[T] forSome { type T }] = new HashMap$/;"	v
cci	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty6AsyncProvider.scala	/^      val cci = Class.forName("org.mortbay.util.ajax.Continuation")$/;"	V
cci	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty7AsyncProvider.scala	/^      val cci = Class.forName("org.eclipse.jetty.continuation.Continuation")$/;"	V
ccol	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  protected var ccol = 1$/;"	v
ceil	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def ceil(x: Double): Double = java.lang.Math.ceil(x)$/;"	f
ceil	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichDouble.scala	/^  def ceil: Double = Math.ceil(x)$/;"	f
ceil	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichFloat.scala	/^  def ceil: Float = Math.ceil(x).toFloat$/;"	f
cell	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Queue.scala	/^      var cell = start$/;"	v
cell	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Queue.scala	/^      var cell: Option[LinkedList[A]] = extractFirst(first0, p)$/;"	v
center_align	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val center_align : Parser[Attribute] = elem('=') ^^ Align$/;"	V
ch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^      val ch: Char = str.charAt(two)$/;"	V
ch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^      var ch = iter.next$/;"	v
ch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^    var ch = it.next$/;"	v
ch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  var ch: Char = _$/;"	v
ch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^      val ch = src(i)$/;"	V
ch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^    var ch = ch1$/;"	v
ch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/CharInputStreamIterator.scala	/^  private var ch: Int = _$/;"	v
ch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/SimpleTokenizer.scala	/^  private var ch: Int = nextChar$/;"	v
ch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^    val ch = if (s.indexOf('"'.asInstanceOf[Int]) == -1) '"' else '\\'';$/;"	V
ch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  var ch: Char = _$/;"	v
ch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^      val ch = n.child$/;"	V
chSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/CharInputStreamIterator.scala	/^  private var chSet = false$/;"	v
chain	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^				 override val chain: Box[Failure], param: T) extends$/;"	V
chain	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^    protected def chain(method : Method, args : Array[Object]) : Object =$/;"	f
chain	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function.scala	/^  def chain[a](fs: Seq[a => a]): a => a = { x => (x \/: fs) ((x, f) => f(x)) }$/;"	f
chainList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  private def chainList: List[Failure] = chain match {$/;"	f
chainl1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def chainl1[T, U](first: => Parser[T], p: => Parser[U], q: => Parser[(T, U) => T]): Parser[T] $/;"	f
chainl1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def chainl1[T](p: => Parser[T], q: => Parser[(T, T) => T]): Parser[T]  $/;"	f
chainl1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def chainl1[T, U](first: => Parser[T], p: => Parser[U], q: => Parser[(T, U) => T]): Parser[T] = $/;"	f
chainl1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def chainl1[T](p: => Parser[T], q: => Parser[(T, T) => T]): Parser[T] = $/;"	f
chainr1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def chainr1[T, U](p: => Parser[T], q: => Parser[(T, U) => U], combine: (T, U) => U, first: U): Parser[U]$/;"	f
chainr1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def chainr1[T, U](p: Parser[T], q: Parser[(T, U) => U], combine: (T, U) => U, first: U): Parser[U] = $/;"	f
changePassword	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def changePassword = {$/;"	f
changePasswordMenuLoc	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^  override def changePasswordMenuLoc: Box[Menu] = Empty$/;"	f
changePasswordMenuLoc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def changePasswordMenuLoc: Box[Menu] =$/;"	f
changePasswordPath	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  lazy val changePasswordPath = thePath(changePasswordSuffix)$/;"	V
changePasswordSuffix	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def changePasswordSuffix = "change_password"$/;"	f
changePasswordXhtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def changePasswordXhtml = {$/;"	f
changed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    var changed = false;$/;"	v
changed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Collection.scala	/^    var changed = false;$/;"	v
changed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^    var changed = false;$/;"	v
changed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterator.scala	/^    var changed = false;$/;"	v
changedElem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashSet.scala	/^  protected var changedElem: A = _$/;"	v
channel	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^    val channel = conn.createChannel()$/;"	V
channel	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^    val channel = conn.createChannel()$/;"	V
channel	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^  val channel = conn.createChannel()$/;"	V
char	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  @deprecated type char    = scala.Char$/;"	T
char2Character	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def char2Character(x: Char) = new java.lang.Character(x)$/;"	f
char2double	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def char2double(x: Char): Double = x.toDouble$/;"	f
char2float	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def char2float(x: Char): Float = x.toFloat$/;"	f
char2int	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def char2int(x: Char): Int = x.toInt$/;"	f
char2long	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def char2long(x: Char): Long = x.toLong$/;"	f
charAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^    def charAt(index: Int): Char = xs(index)$/;"	f
charAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    def charAt(index: Int): Char = sb.charAt(index)$/;"	f
charAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def charAt(index: Int): Char = {$/;"	f
charBlock	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val charBlock : Parser[Textile] = chrExcept('\\n') ^^ {c => CharBlock(c.toString)}$/;"	V
charBuffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BufferedSource.scala	/^  var charBuffer = CharBuffer.allocate(buf_size)$/;"	v
charCache	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static Character[] charCache = new Character[charUpBound - charLowBound + 1];$/;"	f	class:BoxesRunTime	file:
charEncoding	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var charEncoding = "ISO-8859-1" \/\/ HTTP's default encoding$/;"	v
charEncoding	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  var charEncoding = "ISO-8859-1" \/\/ yes, that's HTTP's default$/;"	v
charLowBound	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static int charLowBound = 0;$/;"	f	class:BoxesRunTime	file:
charSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Lexer.scala	/^  def charSeq: Parser[String] =$/;"	f
charSet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  lazy val charSet = properties.getProperty("mail.charset") match {$/;"	V
charUpBound	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static int charUpBound = 255;$/;"	f	class:BoxesRunTime	file:
charValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  def charValue   = intValue.toChar$/;"	f
charValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def charValue   = intValue.toChar$/;"	f
charWrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def charWrapper(c: Char)     = new runtime.RichChar(c)$/;"	f
characters	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^  override def characters(ch: Array[Char], start: Int, length: Int) {$/;"	f
characters	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^  def characters(ch: Array[Char], start: Int, length: Int) {$/;"	f
characters	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  override def characters(ch: Array[Char], offset: Int, length: Int): Unit = {$/;"	f
chars	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^                val chars = Array(buf.next, buf.next, buf.next, buf.next)$/;"	V
chars	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^        val chars = new Array[Char](len)$/;"	V
chars	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^      val chars = self.toCharArray$/;"	V
chars	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/CharArrayPosition.scala	/^    var chars = new StringBuffer$/;"	v
chars	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/Tokens.scala	/^    def chars = "*** error: "+msg$/;"	f
chars	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/Tokens.scala	/^    def chars = "<eof>"$/;"	f
chars	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/Tokens.scala	/^    def chars: String$/;"	f
charsRead	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^      var charsRead: Int = 0  \/\/ bogus init value$/;"	v
chat	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^            val chat = conn.getChatManager().createChat(to, new MessageDispatcher(this))$/;"	V
chat	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^        val chat: Chat = conn.getChatManager().createChat(to, md)$/;"	V
chatCreated	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^    def chatCreated(chat: Chat, createdLocally: Boolean) {$/;"	f
chats	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^  val chats: HashMap[String, Chat] = new HashMap[String, Chat]$/;"	V
chats	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^  val chats: Map[String, List[Message]] = new HashMap[String, List[Message]]$/;"	V
check	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^  def check(md: MetaData): Boolean = {$/;"	f
check	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^  def check(nodes: Seq[Node]): Boolean = contentModel match {$/;"	f
checkAttr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    def checkAttr(attr_name: String, in: MetaData, base: MetaData): MetaData =$/;"	f
checkAttributeValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def checkAttributeValue(value: String): String = {$/;"	f
checkCanRead_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def checkCanRead_? = true$/;"	f
checkCanWrite_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def checkCanWrite_? = true$/;"	f
checkChildren	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^  override def checkChildren(pos: Int, pre: String, label:String,ns:NodeSeq): Unit = {$/;"	f
checkCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^      def checkCmd(in: Any) = in match {$/;"	f
checkConfig	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  lazy val checkConfig: Boolean = loggerSetup()$/;"	V
checkContinuations	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def checkContinuations(req: HTTPRequest): Option[Any] = req resumeInfo$/;"	f
checkFieldNames	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def checkFieldNames(in: A): Unit = mappedFieldList.foreach(f =>$/;"	f
checkForFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private def checkForFunc(whole: List[String], what: ViewDispatchPF): Box[NodeSeq] =$/;"	f
checkForLiftView	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private def checkForLiftView(part: List[String], last: String, what: ViewDispatchPF): Box[NodeSeq] = {$/;"	f
checkInitialized	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  def checkInitialized[T <: AnyRef](x: T): T = $/;"	f
checkKeyword	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Lexer.scala	/^  def checkKeyword(xs : List[Any]) = {$/;"	f
checkMultiPart	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    def checkMultiPart(in: MetaData): MetaData = in.filter(_.key == "multipart").toList match {$/;"	f
checkPubID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Parsing.scala	/^  def checkPubID(s: String): Boolean =$/;"	f
checkPubID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/TokenTests.scala	/^  def checkPubID(s: String): Boolean = {$/;"	f
checkRedirect	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] def checkRedirect(resp: LiftResponse): LiftResponse = resp match {$/;"	f
checkRoles	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^    val checkRoles: (Role, List[Role]) => Boolean = {$/;"	V
checkSingleParameters	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthValidator.scala	/^  private def checkSingleParameters(message: Box[OAuthMessage]): Box[OAuthMessage] = {$/;"	f
checkSysID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Parsing.scala	/^  def checkSysID(s: String): Boolean =$/;"	f
checkSysID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/TokenTests.scala	/^  def checkSysID( s:String ): Boolean = {$/;"	f
checkValidation	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Field.scala	/^	def checkValidation(in: Field) = Field.validate(in).foreach{ msg => S.error(msg.toString)}$/;"	f
checkbox	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def checkbox(value: Boolean, func: Boolean => Any, attrs: (String, String)*): NodeSeq = {$/;"	f
checkbox	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def checkbox[T](possible: Seq[T], actual: Seq[T], func: Seq[T] => Any, attrs: (String, String)*): ChoiceHolder[T] = {$/;"	f
checkbox	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/FormProcessor.scala	/^  def checkbox(attrs: (String, String)*)(init: Boolean, action: Boolean=>Unit) = SHtml.checkbox(init, action, attrs:_*)$/;"	f
checkbox	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/FormProcessor.scala	/^  def checkbox: (Boolean, Boolean=>Unit)=>NodeSeq = checkbox()_$/;"	f
checkbox_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def checkbox_*(value: Boolean, func: AFuncHolder, id: Box[String],$/;"	f
checkbox_id	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def checkbox_id(value: Boolean, func: Boolean => Any,$/;"	f
checked	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  private def checked(in: Boolean) = if (in) new UnprefixedAttribute("checked", "checked", Null) else Null$/;"	f
child	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^        def child = Nil$/;"	f
child	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^  def child = Nil$/;"	f
child	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def child = Nil$/;"	f
child	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^      val child = childAt(n)$/;"	V
child	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Elem.scala	/^                val child: Node*) extends Node {$/;"	V
child	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Group.scala	/^  final override def child =$/;"	f
child	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  def child: Seq[Node]$/;"	f
child	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/SpecialNode.scala	/^  final def child = Nil$/;"	f
child	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ExternalID.scala	/^  def child = Nil$/;"	f
child	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^    var child: Node = hStack.pop$/;"	v
childAt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    protected def childAt(n: Int) = children(n)$/;"	f
childValues	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def childValues: List[T] = Nil$/;"	f
children	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def children = this match {$/;"	f
children	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JValueGen.scala	/^  private def children = choose(1, 3).sample.get$/;"	f
children	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    protected def children: List[T2] = {$/;"	f
children	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Document.scala	/^  var children: Seq[Node] = _$/;"	v
children	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    var children: NodeSeq = null$/;"	v
childrenAreLeaves	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  protected def childrenAreLeaves(n: Node): Boolean = {$/;"	f
childs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/Role.scala	/^  private var childs: List[Role] = Nil$/;"	v
choice	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def choice[B](f1: A => Box[B])(alternative: => Box[B]): Box[B] = this match {$/;"	f
choice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^  def choice[A](s: GP[A]*): A = {$/;"	f
choiceRest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModelParser.scala	/^  def choiceRest( p:RegExp ) = { $/;"	f
choose	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarItem.scala	/^  private def choose[T](l: Box[T], r: Box[T]): Box[T] = l match {case Empty => r case _ => l}$/;"	f
chooseTemplate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def chooseTemplate(prefix: String, tag: String, xhtml: NodeSeq): NodeSeq =$/;"	f
chrExcept	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    private def chrExcept(cs: Char*): Parser[Char] = elem("", {c => ('\\032' :: cs.toList) forall (_ != c)}) \/\/{x =>  !cs.contains(x)})$/;"	f
chrExcept	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/Lexical.scala	/^  def chrExcept(cs: Char*) = elem("", ch => (cs forall (ch !=)))$/;"	f
chrExcept	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/Lexical.scala	/^  def chrExcept(cs: Char*) = elem("", ch => (cs forall (ch !=)))$/;"	f
chrsExcept	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def chrsExcept(cs: Char*): Parser[String] = rep1(chrExcept(cs : _*)) ^^ mkString$/;"	f
ciGet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^    def ciGet(swhat: String): Box[String] = {$/;"	f
cipher	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^    val cipher = Cipher.getInstance("DESede\/CBC\/PKCS5Padding")$/;"	V
cipher	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^    val cipher = Cipher.getInstance("blowfish")$/;"	V
cite	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val cite: Parser[Textile] = formattedLineElem(accept("??")) ^^ flatten4(Cite)$/;"	V
cl	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^      val cl: Char = str.charAt(two + 1)$/;"	V
cl	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val cl = synchronized {cometList}$/;"	V
cl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Location.scala	/^      val cl = new URLClassLoader(Array(url))$/;"	V
classFor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  def classFor(hint: String) = None$/;"	f
classFor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  def classFor(hint: String) = Some(Thread.currentThread.getContextClassLoader.loadClass(hint))$/;"	f
classFor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  def classFor(hint: String) = hints find (hintFor(_) == hint)$/;"	f
classFor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  def classFor(hint: String): Option[Class[_]]$/;"	f
classHasControllerMethod	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def classHasControllerMethod(clz: Class[_], name: String): Boolean = {$/;"	f
classHierarchy	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def classHierarchy(in: Class[_]): List[Class[_]] = {$/;"	f
classInx	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^    val classInx = className.lastIndexOf(".")$/;"	V
className	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^    var className = clazz.getName()$/;"	v
classOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def classOf[T]: Class[T] = null$/;"	f
classType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^  def classType[T](clazz: Predef.Class[T]): Manifest[T] =$/;"	f
classType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^  def classType[T](clazz: Predef.Class[_], args: Manifest[_]*): Manifest[T] =$/;"	f
classType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^  def classType[T](prefix: Manifest[_], clazz: Predef.Class[_]): Manifest[T] =$/;"	f
classType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^  def classType[T](prefix: Manifest[_], clazz: Predef.Class[_], args: Manifest[_]*): Manifest[T] =$/;"	f
class_id	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val class_id : Parser[Attribute] = ('(' ~> str1("class", validClassChar)) ~ ('#' ~> str1("class", validClassChar) <~ ')') ^^ flatten2(ClassAndId)$/;"	V
classes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^  val classes = List(classOf[Project], classOf[Team], classOf[Employee], classOf[Language])$/;"	V
classes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^            val classes: Array[Class[_]] = ptypes openOr params.map(_.getClass)$/;"	V
clazz	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^    val clazz = bundle loadClass "bootstrap.liftweb.Boot"$/;"	V
clazz	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Location.scala	/^        val clazz = if (loader.loadClass(className).isInterface()) {$/;"	V
clean	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^  def clean(in : String) =  if (in == null) "" else in.replaceAll("[^a-zA-Z0-9_]", "")$/;"	f
clean_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def clean_?(toCheck: A): Boolean = mappedColumns.foldLeft(true)((bool, ptr) => bool && !(??(ptr._2, toCheck).dirty_?))$/;"	f
cleanup	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  private val cleanup: ThreadGlobal[ListBuffer[Box[LiftSession] => Unit]] = new ThreadGlobal$/;"	V
cleanupUnseenFuncs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] def cleanupUnseenFuncs(): Unit = synchronized {$/;"	f
clear	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    private[json] def clear = segments.clear$/;"	f
clear	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    def clear(name: String): Unit =$/;"	f
clear	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  private[http] def clear(name: String): Unit =$/;"	f
clear	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    def clear(name: String): Unit =$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/IterableWrapper.scala	/^  override def clear = underlying.clear;$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^  override def clear() = super[MutableIterable].clear;$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^  override def clear() = underlying.clear$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^  def clear(): Unit = {$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^  override def clear() = super.clear()$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SetWrapper.scala	/^  override def clear() = super[CollectionWrapper].clear;$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^  def clear = {$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BitSet.scala	/^  override def clear(): Unit = {$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Buffer.scala	/^  def clear(): Unit$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BufferProxy.scala	/^  def clear(): Unit = self.clear$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashMap.scala	/^  override def clear() = super.clear()$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashSet.scala	/^  override def clear() = super.clear()$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/History.scala	/^  def clear(): Unit = log.clear$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableMapAdaptor.scala	/^  override def clear(): Unit = { imap = imap.empty }$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableSetAdaptor.scala	/^  override def clear(): Unit = { set = set.empty }$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^  override def clear(): Unit = jmap.clear()$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaSetAdaptor.scala	/^  override def clear(): Unit = jset.clear()$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^  def clear() { keys foreach -= }$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MapProxy.scala	/^  override def clear(): Unit = self.clear$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ObservableBuffer.scala	/^  abstract override def clear(): Unit = {$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ObservableMap.scala	/^  abstract override def clear(): Unit = {$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ObservableSet.scala	/^  abstract override def clear(): Unit = {$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^  def clear(): Unit = { size0 = 1 }$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueueProxy.scala	/^  override def clear(): Unit = self.clear$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Queue.scala	/^  def clear(): Unit = reset$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/QueueProxy.scala	/^  override def clear(): Unit = self.clear$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Set.scala	/^  def clear() { elements foreach -= }$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SetProxy.scala	/^  override def clear(): Unit = self.clear$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Stack.scala	/^  def clear(): Unit = stack = immutable.Stack.Empty$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/StackProxy.scala	/^  override def clear(): Unit = self.clear$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedBuffer.scala	/^  abstract override def clear(): Unit = synchronized {$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  override def clear(): Unit = synchronized {$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedPriorityQueue.scala	/^  override def clear(): Unit = synchronized { super.clear }$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedQueue.scala	/^  override def clear(): Unit = synchronized { super.clear }$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedSet.scala	/^  abstract override def clear(): Unit = synchronized {$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedStack.scala	/^  override def clear(): Unit = synchronized { super.clear }$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/Reference.scala	/^  def clear(): Unit$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/ReferenceWrapper.scala	/^  def clear = underlying.clear$/;"	f
clear	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichStringBuilder.scala	/^  override def clear = self.setLength(0)$/;"	f
clearBit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def clearBit(n: Int): BigInt  = new BigInt(this.bigInteger.clearBit(n))$/;"	f
clearFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  protected def clearFunc(name: String): Unit$/;"	f
clearFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    override protected def clearFunc(name: String): Unit = ScreenVarHandler.clear(name)$/;"	f
clearFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  override protected def clearFunc(name: String): Unit = RequestVarHandler.clear(name)$/;"	f
clearFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  override protected def clearFunc(name: String): Unit = S.session.foreach(_.unset(name))$/;"	f
clearFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  override protected def clearFunc(name: String): Unit = TransientRequestVarHandler.clear(name)$/;"	f
clearFunc	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    override protected def clearFunc(name: String): Unit = WizardVarHandler.clear(name)$/;"	f
clearHighLevelSessionDispatcher	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def clearHighLevelSessionDispatcher = session map (_.highLevelSessionDispatcher.clear)$/;"	f
clearPostCommit	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def clearPostCommit(in: A) {$/;"	f
clearProcessing	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^    var clearProcessing = true$/;"	v
clearSessionRewriter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def clearSessionRewriter = session map (_.sessionRewriter.clear)$/;"	f
clearThread	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private def clearThread(success: Boolean): Unit = {$/;"	f
clickable	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def clickable: Box[Boolean] = Empty$/;"	f
client	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  protected def client(mode: PaypalMode, connection: PaypalConnection): HttpClient = HttpClientFactory(mode.domain, connection.port, connection.protocol)$/;"	f
clients	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^  private var clients: List[LiftActor] = Nil$/;"	v
cline	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  protected var cline = 1$/;"	v
clobColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def clobColumnType = "CLOB"$/;"	f
clobColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def clobColumnType = "LONG VARCHAR"$/;"	f
clobColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def clobColumnType = "LONGTEXT"$/;"	f
clobColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def clobColumnType = "LONGVARCHAR"$/;"	f
clobColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def clobColumnType = "NTEXT"$/;"	f
clobColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def clobColumnType = "TEXT"$/;"	f
clobColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def clobColumnType: String$/;"	f
clobColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  override def clobColumnType = "NVARCHAR(MAX)"$/;"	f
clone	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPCookie.scala	/^  override def clone(): HTTPCookie = {$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/ArrayList.scala	/^  override def clone: ArrayList[A] =$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/HashMap.scala	/^  override def clone: HashMap[K, E] =$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/HashSet.scala	/^  override def clone: HashSet[A] =$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Hashtable.scala	/^  override def clone() : Hashtable[K,E] =$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/IdentityHashMap.scala	/^  override def clone: IdentityHashMap[K, E] =$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/LinkedHashMap.scala	/^  override def clone: LinkedHashMap[K, E] =$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/LinkedHashSet.scala	/^  override def clone: LinkedHashSet[A] =$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/LinkedList.scala	/^  override def clone: LinkedList[A] =$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/TreeMap.scala	/^  override def clone: TreeMap[K, E] =$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/TreeSet.scala	/^  override def clone: TreeSet[A] =$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/WeakHashMap.scala	/^  override def clone: WeakHashMap[K, E] =$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayBuffer.scala	/^  override def clone(): Buffer[A] = {$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^  def clone(x : Array[AnyRef]) = {$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^  override def clone = new ArrayStack[T](Utils.clone(table), index);$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BitSet.scala	/^  override def clone(): BitSet = new BitSet(capacity) {$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Buffer.scala	/^  override def clone(): Buffer[A] = super.clone().asInstanceOf[Buffer[A]]$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BufferProxy.scala	/^  override def clone(): Buffer[A] = new BufferProxy[A] {$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/CloneableCollection.scala	/^  override def clone(): AnyRef = super.clone()$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashMap.scala	/^  override def clone(): Map[A, B] = new HashMap[A, B] ++ this$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashSet.scala	/^  override def clone(): Set[A] = new HashSet[A] ++ this$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^  override def clone(): Map[A, B] = {$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaSetAdaptor.scala	/^  override def clone(): Set[A] = {$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashMap.scala	/^  override def clone(): Map[A, B] = new LinkedHashMap[A, B] ++ this$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashSet.scala	/^  override def clone(): Set[A] = new LinkedHashSet[A] ++ this$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^  override def clone(): Buffer[A] = (new ListBuffer[A]) ++ this$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^  override def clone(): Map[A, B] = super.clone().asInstanceOf[Map[A, B]]$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MapProxy.scala	/^  override def clone(): Map[A, B] = self.clone()$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  override def clone : OpenHashMap[Key, Value] = {$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^  override def clone(): PriorityQueue[A] = {$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueueProxy.scala	/^  override def clone(): PriorityQueue[A] = new PriorityQueueProxy[A] {$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Queue.scala	/^  override def clone(): Queue[A] = {$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/QueueProxy.scala	/^  override def clone(): Queue[A] = new QueueProxy[A] {$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Set.scala	/^  override def clone(): Set[A] = super.clone().asInstanceOf[Set[A]]$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SetProxy.scala	/^  override def clone(): Set[A] = new SetProxy[A] {$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Stack.scala	/^  override def clone(): Stack[A] = {$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/StackProxy.scala	/^  override def clone(): Stack[A] = new StackProxy[A] {$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedBuffer.scala	/^  override def clone(): Buffer[A] = synchronized {$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  override def clone(): Map[A, B] = synchronized {$/;"	f
clone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedSet.scala	/^  override def clone(): Set[A] = synchronized {$/;"	f
cloneable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/cloneable.scala	/^class cloneable extends StaticAnnotation$/;"	c
close	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BufferedSource.scala	/^  def close: Unit$/;"	f
closeAllConnections_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def closeAllConnections_!(): Unit = synchronized {$/;"	f
closeAtTxCompletion	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/EntityManagerSynchronization.scala	/^  val closeAtTxCompletion: Boolean) $/;"	V
closeBlock	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    def closeBlock(v: JValue) {$/;"	f
closeEM	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  def closeEM(e: javax.persistence.EntityManager) = closeEntityManager$/;"	f
closeEntityManager	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  def closeEntityManager = TransactionContext.closeEntityManager$/;"	f
closeEntityManager	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  private def closeEntityManager = em.close$/;"	f
closeEntityManager	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  private[transaction] def closeEntityManager = current.closeEntityManager$/;"	f
closingTag	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def closingTag(tag: String) =$/;"	f
clusters	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/QueryExamples.scala	/^    val clusters = for {$/;"	V
clz	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val clz = inst match {$/;"	V
cmax	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    private val cmax = n.productArity$/;"	V
cmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^      val cmd: JsCmd = cmdF.apply$/;"	V
cmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def cmd: JsCmd = JsCmds.Run(toJsCmd + ";")$/;"	f
cmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  def cmd: JsCmd = JsCmds.Run(toJsCmd + ";")$/;"	f
cmdToString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  implicit def cmdToString(in: JsCmd): String = in.toJsCmd$/;"	f
cmds	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^                  val cmds = parsed.map(checkCmd)$/;"	V
cmds	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^    val cmds = new ListBuffer[String]()$/;"	V
cmp	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/test/scala/net/lift/textile/TextileSpec.scala	/^      val cmp: Long =  (if (shouldRelax) 10000L else 3000L)$/;"	V
cmstr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    val cmstr = cbuf.toString()$/;"	V
cn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val cn = """\\.""".r.replaceAllIn(LiftRules.getClass.getName, "\/")$/;"	V
cn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/ScriptRenderer.scala	/^      var cn = node.childNodes;$/;"	v
cname	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    val cname = this.getClass().getName()$/;"	V
cnt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^    val cnt = matcher.groupCount$/;"	V
cnt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/ScriptRenderer.scala	/^               var cnt = aboutToSend.retryCnt;$/;"	v
cnt	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^  private def cnt() = synchronized {$/;"	f
cnt	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^      var cnt = fieldCnt$/;"	v
cnt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^    val cnt = md.getColumnCount$/;"	V
cnt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^      private var cnt = -1$/;"	v
cnt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    private var cnt = -1$/;"	v
cnt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var cnt = 0$/;"	v
cnt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^    var cnt = 0$/;"	v
cnt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashSet.scala	/^    var cnt = 0$/;"	v
cnt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^        val cnt = current.length min len$/;"	V
cnt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    private var cnt: Int = 64$/;"	v
cnt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/Reader.scala	/^    var cnt = n$/;"	v
cntList	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^    val cntList = (1 to cnt).toList$/;"	V
code	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def code = 200$/;"	f
code	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def code = 201$/;"	f
code	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def code: Int$/;"	f
code	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  def code: String = "Basic"$/;"	f
code	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  def code: String = "Digest"$/;"	f
code	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  def code: String = "MD5"$/;"	f
code	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  def code: String = "MD5-sess"$/;"	f
code	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  def code: String = "Unknown"$/;"	f
code	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  def code: String$/;"	f
code	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val code: Parser[Textile] = formattedLineElem('@') ^^ flatten4(Special * "code")$/;"	V
code	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^    var code = x.getClass().hashCode()$/;"	v
codePoint	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^                val codePoint = Integer.parseInt(new String(chars), 16)$/;"	V
coerce	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  protected def coerce (in : BigDecimal) = new BigDecimal(in.bigDecimal.setScale(scale, context.getRoundingMode))$/;"	f
col	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^    val col = Position.column(pos)$/;"	V
col	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^    val col = Position.column(pos)$/;"	V
colCnt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val colCnt = meta.getColumnCount$/;"	V
colName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      val colName = meta.getColumnName(pos).toLowerCase$/;"	V
colNames	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^    val colNames = cntList.map(i => md.getColumnName(i))$/;"	V
colNum	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^                  var colNum = 1$/;"	v
colNum	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^                var colNum = 1$/;"	v
colType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^            val colType = meta.getColumnType(pos)$/;"	V
colVal	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^                    val colVal = ??(col._2, toSave)$/;"	V
colVal	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^                    val colVal = col._2.invoke(toSave).asInstanceOf[MappedField[AnyRef, A]]$/;"	V
colVal	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^            val colVal = ??(col._2, toSave)$/;"	V
col_span	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val col_span : Parser[Attribute] = '\\\\' ~> num ^^ {s => AnyAttribute("colspan", s )}$/;"	V
collect	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def collect: Seq[A] = {$/;"	f
collectGarbage	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/compat/Platform.scala	/^  def collectGarbage: Unit = System.gc()$/;"	f
collectNamespaces	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def collectNamespaces(n: Node, set: Set[String]) {$/;"	f
collectNamespaces	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def collectNamespaces(nodes: Seq[Node]): Set[String] = {$/;"	f
collectTransitions	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^  protected def collectTransitions(): Unit = {  \/\/ make transitions$/;"	f
colon	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def colon = elem("colon", c => c == ':')$/;"	f
colon	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^      val colon = qname.indexOf(':'.asInstanceOf[Int])$/;"	V
colon	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^    val colon = qname.indexOf(':'.asInstanceOf[Int])$/;"	V
color	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def color: Box[String] = Empty$/;"	f
color	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotSerie.scala	/^  def color: Box[Either[String, Int]] = Empty$/;"	f
coloredAreas	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def coloredAreas: Box[String] = Empty \/\/ only (fn: plot area -> array of areas)$/;"	f
coloredAreasColor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def coloredAreasColor: Box[String] = Empty$/;"	f
cols	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^      var cols: List[String] = Nil$/;"	v
column	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LD.scala	/^    def column(word: List[Char], dist: List[Int],$/;"	f
column	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val column: Int = offset - index(line - 1) + 1$/;"	V
column	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Position.scala	/^  final def column(pos: Int): Int =$/;"	f
column	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/CharArrayPosition.scala	/^class CharArrayPosition(val source: Array[Char], val line: Int, val column: Int) extends Position {$/;"	V
column	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/NoPosition.scala	/^  def column = 0$/;"	f
column	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/OffsetPosition.scala	/^  def column: Int = offset - index(line - 1) + 1$/;"	f
column	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/Position.scala	/^  def column: Int$/;"	f
column	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/StreamReader.scala	/^    def column = off + 1$/;"	f
column	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^    var column = -1$/;"	v
columnName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^          val columnName = rs.getString(4).toLowerCase$/;"	V
columnNameToMappee	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private val columnNameToMappee = new HashMap[String, Box[(ResultSet, Int, A) => Unit]]$/;"	V
columnNamesForInsert	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  val columnNamesForInsert = (mappedColumnInfo.filter(c => !(c._2.dbPrimaryKey_? && c._2.dbAutogenerated_?)).map(_._1)).toList.mkString(",")$/;"	V
columnPrimaryKey_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def columnPrimaryKey_?(name : String) = mappedColumnInfo.get(name).map(c => (c.dbPrimaryKey_? && c.dbAutogenerated_?)) getOrElse false$/;"	f
columnQueriesForInsert	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  val columnQueriesForInsert = {$/;"	V
columnTypeMap	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def columnTypeMap : TypeMapFunc =$/;"	f
columns	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^sealed abstract class BaseIndex[A <: Mapper[A]](val columns : IndexItem[A]*)$/;"	V
columns	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^      val columns = index.columns.toList$/;"	V
combine	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^    private def combine[B](l: UnbalancedTreeMap[A, B], r: UnbalancedTreeMap[A, B]) = {$/;"	f
combine	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^  def combine(f : (T, T) => T) = push(f(pop, pop));$/;"	f
combineStack	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^        def combineStack(ex: Throwable,base: List[StackTraceElement]): List[StackTraceElement] = ex match {$/;"	f
comet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JSArtifacts.scala	/^  def comet(data: AjaxInfo): String$/;"	f
comet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JQueryArtifacts.scala	/^  def comet(data: AjaxInfo): String = {$/;"	f
comet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^  def comet(data: AjaxInfo): String = {$/;"	f
cometFailureRetryTimeout	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var cometFailureRetryTimeout: Long = 10 seconds$/;"	v
cometGetTimeout	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var cometGetTimeout = 140000$/;"	v
cometList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^      val cometList = cometTimes.toList$/;"	V
cometList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private var cometList: List[AnyActor] = Nil$/;"	v
cometLogger	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def cometLogger: LiftLogger = _cometLogger.get$/;"	f
cometLogger_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def cometLogger_=(newLogger: LiftLogger): Unit = _cometLogger.set(newLogger)$/;"	f
cometPath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var cometPath = "comet_request"$/;"	v
cometRequestTimeout	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var cometRequestTimeout: Box[Int] = Empty$/;"	v
cometScript	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^        val cometScript = (len >= 3 && kindaComet &&$/;"	V
cometScript	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/ScriptRenderer.scala	/^  def cometScript = JsCmds.Run("""$/;"	f
cometScriptName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var cometScriptName: () => String = () => "cometAjax.js"$/;"	v
cometScriptUpdateTime	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var cometScriptUpdateTime: LiftSession => Long = session => {$/;"	v
cometServer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var cometServer: () => String = () => S.contextPath$/;"	v
cometSessionId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val cometSessionId =$/;"	V
cometSetup	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private object cometSetup extends RequestVar[List[((Box[String], Box[String]), Any)]](Nil)$/;"	o
cometTimeout	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  private lazy val cometTimeout: Long = (LiftRules.cometRequestTimeout openOr 120) * 1000L$/;"	V
cometTimes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^    val cometTimes = new ListBuffer[CometVersionPair]$/;"	V
comma	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^    def comma: String = what.mkString(", ")$/;"	f
commaIt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^        def commaIt(in: List[Char]): List[Char] = in match {$/;"	f
commafy	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^    def commafy: String = {$/;"	f
commafy	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/StringHelpersSpec.scala	/^  "The SuperString class commafy method" should {$/;"	c
comment	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/DiscoveryDependency.scala	/^	object comment extends MappedText(this)$/;"	o
comment	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/StdLexical.scala	/^  protected def comment: Parser[Any] = ($/;"	f
comment	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/StdLexical.scala	/^  protected def comment: Parser[Any] = ($/;"	f
comment	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/Binder.scala	/^  final def comment(pos: Int, txt: String) =$/;"	f
comment	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^  def comment(ch: Array[Char], start: Int, length: Int) {$/;"	f
comment	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingHandler.scala	/^  def comment(pos: Int, txt: String) =$/;"	f
comment	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/DefaultMarkupHandler.scala	/^  def comment(pos: Int, comment: String ): NodeSeq = NodeSeq.Empty$/;"	f
comment	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^  def comment(pos: Int, comment: String): NodeSeq$/;"	f
comment	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^    def comment(pos: Int, txt: String): NodeSeq = {$/;"	f
commit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def commit[T](p: => Parser[T]) = Parser{ in =>$/;"	f
commit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def commit[Q <% UnitParser](p: => Q) = new UnitParser {$/;"	f
commit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def commit[T](p: => Parser[T]) = new Parser[T] {$/;"	f
commitOrRollBack	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^  protected def commitOrRollBack(tm: TransactionManager) = {$/;"	f
compFirst	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^  protected def compFirst(r: RegExp): immutable.Set[Int] = r match {$/;"	f
compFirst	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^  protected override def compFirst(r: RegExp): immutable.Set[Int] = r match {$/;"	f
compFollow	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^  protected def compFollow(r: Seq[RegExp]): immutable.Set[Int] = {$/;"	f
compFollow1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^  protected def compFollow1(fol1: immutable.Set[Int], r: RegExp): immutable.Set[Int] = {$/;"	f
compFollow1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^  protected override def compFollow1(fol1: immutable.Set[Int], r: RegExp): immutable.Set[Int] =$/;"	f
compLast	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^  protected def compLast(r: RegExp): immutable.Set[Int] = r match {$/;"	f
compLast	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^  protected override def compLast(r: RegExp): immutable.Set[Int] = r match {$/;"	f
compact	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  def compact(d: Document): String = compact(d, new StringWriter).toString$/;"	f
compact	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  def compact[A <: Writer](d: Document, out: A): A = {$/;"	f
companies	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^    val companies = (1 to 10).toList map { i =>$/;"	V
companies	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^  object companies extends MappedManyToMany(PersonCompany, PersonCompany.person, PersonCompany.company, Company)$/;"	o
company	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^  object company extends MappedLongForeignKey(this, Company)$/;"	o
compare	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^        def compare(that: Currency) = this.amount compare that.amount$/;"	f
compare	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala	/^  def compare(other: MyType): Int = name.is.compare(other.name.is)$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^      def compare(y: BigDecimal): Int = x.bigDecimal.compareTo(y.bigDecimal)$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  def compare (that: BigDecimal): Int = this.bigDecimal.compareTo(that.bigDecimal)$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^    def compare (y: BigInt): Int = x.bigInteger.compareTo(y.bigInteger)$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def compare (that: BigInt): Int = this.bigInteger.compareTo(that.bigInteger)$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    override def compare(that: Value): Int = this.id - that.id$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^      def compare[B >: Iterable[A] <% Ordered[B]](that: B): Int = that match {$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    def compare [b >: List[a] <% Ordered[b]](y: b): Int = y match {$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Ordered.scala	/^  def compare(that: A): Int$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Ordering.scala	/^  def compare(x: T, y: T): Int$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^      def compare(that: Iterable[A]): Int = {$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^      def compare(y: Tuple2[A1, A2]): Int = {$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^      def compare(y: Tuple3[A1, A2, A3]): Int = {$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^      def compare(y: Tuple4[A1, A2, A3, A4]): Int = {$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^      def compare(y: Tuple5[A1, A2, A3, A4, A5]): Int = {$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^      def compare(y: Tuple6[A1, A2, A3, A4, A5, A6]): Int = {$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^      def compare(y: Tuple7[A1, A2, A3, A4, A5, A6, A7]): Int = {$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^      def compare(y: Tuple8[A1, A2, A3, A4, A5, A6, A7, A8]): Int = {$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^      def compare(y: Tuple9[A1, A2, A3, A4, A5, A6, A7, A8, A9]): Int = {$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^    def compare(y: Unit): Int = 0$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Ranged.scala	/^  def compare(k0: K, k1: K): Int$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedMap.scala	/^    def compare(k0 : K, k1 : K) = SortedMap.this.compare(k0, k1);$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^  override def compare(k0: A, k1: A): Int = k0.compare(k1)$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^   override def compare(a0: A, a1: A) = a0.compare(a1)$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  final def compare(k0 : Int, k1 : Int) = k0 - k1;$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Ranged.scala	/^    def compare(x0 : Any, x1 : Any) = {$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Ranged.scala	/^  def compare(k0: K, k1: K): Int;$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    def compare(k0 : K, k1 : K) = SortedMap.this.compare(k0, k1);$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    def compare(k0 : K, k1 : K) = SortedMap.this.compare(k0,k1);$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    override def compare(k0 : K, k1 : K) = SortedMap.this.compare(k0, k1)$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^  override def compare(k0 : K, k1 : K) : Int;$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMapWrapper.scala	/^    override def compare(k0 : K, k1 : K) = super[SortedMapWrapper].compare(k0, k1);$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMapWrapper.scala	/^  def compare(k0 : K, k1 : K) = underlying.comparator.compare(k0,k1);$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^    def compare(a0 : A, a1 : A) : Int = SortedSet.this.compare(a0, a1);$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^    override def compare(a0 : A, a1 : A) = SortedSet.this.compare(a0, a1)$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^  def compare(a0 : A, a1 : A) : Int;$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSetWrapper.scala	/^  override def compare(a0 : A, a1 : A) = underlying.comparator.compare(a0, a1);$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^  private def compare(s1: Sum, ss: List[Sum]): List[Sum] =$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichBoolean.scala	/^  def compare (y: Boolean): Int = if (x == y) 0 else if (x) 1 else -1$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichByte.scala	/^  def compare (y: Byte): Int = if (x < y) -1 else if (x > y) 1 else 0$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichChar.scala	/^  def compare (y: Char): Int = if (x < y) -1 else if (x > y) 1 else 0$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichDouble.scala	/^  def compare(y: Double): Int = java.lang.Double.compare(x, y)$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichFloat.scala	/^  def compare(y: Float): Int = java.lang.Float.compare(x, y)$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichInt.scala	/^  def compare(that: Int): Int = if (start < that) -1 else if (start > that) 1 else 0$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichLong.scala	/^  def compare(y: Long): Int = if (x < y) -1 else if (x > y) 1 else 0$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichShort.scala	/^  def compare(that: Short): Int = if (start < that) -1 else if (start > that) 1 else 0$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  override def compare(other: String) = self compareTo other$/;"	f
compare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    def compare(that: BitSet): Int = {$/;"	f
compareLists	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    private def compareLists(xs: List[a], ys: List[a]): Int = {$/;"	f
comparePrimaryKeys	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def comparePrimaryKeys(other: A) = false$/;"	f
comparePrimaryKeys	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  override def comparePrimaryKeys(other: OwnerType) = primaryKeyField.is == other.primaryKeyField.is$/;"	f
comparePrimaryKeys	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Record.scala	/^  def comparePrimaryKeys(other: MyType) = primaryKey === other.primaryKey$/;"	f
compareTo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Ordered.scala	/^  def compareTo(that: A): Int = compare(that)$/;"	f
compiled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^  val compiled = Pattern.compile(pattern)$/;"	V
compiled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^class REMatcher(val str: String, val compiled: Pattern) {$/;"	V
complement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def complement(i : Int) = (-1) ^ i;$/;"	f
complement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def complement(i : Long) = (-1) ^ i;$/;"	f
complement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object complement(Object arg) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
completeInfo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^    object completeInfo extends WizardVar(false)$/;"	o
compose	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function1.scala	/^  def compose[A](g: A => T1): A => R = { x => apply(g(x)) }$/;"	f
composeFunction	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def composeFunction = composeFunction_i$/;"	f
composeFunction_i	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private def composeFunction_i = highPriority orElse mediumPriority orElse _mediumPriority orElse lowPriority orElse _lowPriority$/;"	f
compositionProp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JsonASTTest.scala	/^    val compositionProp = (json: JValue, fa: JValue => JValue, fb: JValue => JValue) => $/;"	V
compoundFailMsg	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def compoundFailMsg(msg: String): Box[A] = ?~!(msg)$/;"	f
computeSignature	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^  def computeSignature(baseString: String): Box[Array[Byte]] =$/;"	f
computeUrl	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthMessage.scala	/^  def computeUrl(req: Req) = {$/;"	f
con	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/rssfeed/RSSfeed.scala	/^    val con = u.openConnection$/;"	V
concat	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  def concat(xs: JValue*) = xs.foldLeft(JNothing: JValue)(_ ++ _)$/;"	f
concat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def concat[T](xs: Seq[T]*): Array[T] = {$/;"	f
concat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def concat[B >: A](that: Iterable[B]): Collection[B] =$/;"	f
concat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def concat [B >: A](that: Iterable[B]) = self concat that$/;"	f
concat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def concat[A](xss: List[A]*): List[A] = { $/;"	f
concat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  override def concat [B >: A](that: Iterable[B]): Seq[B] = {$/;"	f
concat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def concat [B >: A](that: Iterable[B]): Seq[B] = self concat that$/;"	f
concat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  def concat[A](s1: Stream[A], s2: Stream[A], ss: Stream[A]*): Stream[A] =$/;"	f
concat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  def concat[A](xs: Iterable[Stream[A]]): Stream[A] = concat(xs.elements)$/;"	f
concat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  def concat[A](xs: Iterator[Stream[A]]): Stream[A] =$/;"	f
concatenate	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def concatenate(attribs: MetaData, new_tail: MetaData): MetaData =$/;"	f
concreteClass	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^          val concreteClass = formats.typeHints.classFor(typeHint) getOrElse fail("Do not know how to deserialize '" + typeHint + "'")$/;"	V
cond	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^  def cond[A, B](test: Boolean, right: => B, left: => A) = $/;"	f
cond	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^    def cond(n:Node) = $/;"	f
config	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^    val config = LiftBundleConfig(entries get 0)$/;"	V
configure	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^  def configure(channel: Channel)$/;"	f
configure	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^  override def configure(channel: Channel) {$/;"	f
configure	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^  def configure(channel: Channel): AnyRef$/;"	f
configure	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^  override def configure(channel: Channel) = {$/;"	f
confirmScreen_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    def confirmScreen_? = false$/;"	f
conn	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^    val conn = cf.newConnection(host, port)$/;"	V
conn	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^    val conn = cf.newConnection(host, port)$/;"	V
conn	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^    val conn = factory.newConnection(host, port)$/;"	V
conn	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^  val conn = cf.newConnection(host, port)$/;"	V
conn	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^  val conn = new XMPPConnection(connf())$/;"	V
conn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^        val conn = (new InitialContext).lookup("java:\/comp\/env").asInstanceOf[Context].lookup(name.jndiName).asInstanceOf[DataSource].getConnection$/;"	V
conn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^    val conn = getConnection(name)$/;"	V
conn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^    val conn = DB.currentConnection$/;"	V
conn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val conn = DB.currentConnection$/;"	V
connect	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^  private def connect(): (Connection, Channel) = {$/;"	f
connection	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def connection: PaypalConnection = PaypalSSL$/;"	f
connection	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^      val connection = con \/\/ SuperConnection(con)$/;"	V
connectionIdentifier	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def connectionIdentifier = dbConnectionIdentifier openOr calcDbId$/;"	f
connectionIdentifier	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def connectionIdentifier(id: ConnectionIdentifier): A = {$/;"	f
connectionIdentifier	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/DBRecord.scala	/^  def connectionIdentifier = dbConnectionIdentifier openOr calcDbId$/;"	f
connectionManagers	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private val connectionManagers = new HashMap[ConnectionIdentifier, ConnectionManager]$/;"	V
connf	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^  def connf() = new ConnectionConfiguration("talk.google.com", 5222, "gmail.com")$/;"	f
cons	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  object cons {$/;"	o
const	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function.scala	/^  def const[T, U](x: T)(y: U): T = x$/;"	f
const	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  def const[A](elem: A): Stream[A] = cons(elem, const(elem))$/;"	f
constant	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Responder.scala	/^  def constant[A](x: A) = new Responder[A] {$/;"	f
constantParams	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Paginator.scala	/^  var constantParams: Seq[QueryParam[T]] = Nil$/;"	v
constr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                val constr = cls.getConstructor()$/;"	V
constr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                val constr = cls.getConstructor(this.getClass, classOf[Box[String]], classOf[NodeSeq], classOf[Map[String, String]])$/;"	V
construct	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/NodeFactory.scala	/^  protected def construct(hash: Int, old:List[A], pre: String, name: String, attrSeq:MetaData, scope: NamespaceBinding, children:Seq[Node]): A = {$/;"	f
constructor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^            fail("Parsed JSON values do not match with class constructor\\nargs=" + $/;"	c
constructorArgs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^    def constructorArgs(clazz: Class[_], visited: Set[Class[_]]) = $/;"	f
consumer	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    def consumer = _consumer.obj.open_!$/;"	f
consumer	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def consumer: OAuthConsumer$/;"	f
consumerKey	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  def consumerKey = consumer_key.is$/;"	f
consumerKey	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^    def consumerKey = _consumer_key.is$/;"	f
consumerKey	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def consumerKey: String$/;"	f
consumerSecret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  def consumerSecret = consumer_secret.is$/;"	f
consumerSecret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthAccessor.scala	/^  def consumerSecret = oauthConsumer.consumerSecret$/;"	f
consumerSecret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def consumerSecret: String$/;"	f
consumer_key	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  object consumer_key extends MappedUniqueId(this, 48) {$/;"	o
consumer_secret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  object consumer_secret extends MappedUniqueId(this, 48) {$/;"	o
cont	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^    val cont = new ContinuationActor(request, session, actors,$/;"	V
cont	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty6AsyncProvider.scala	/^      val cont = getContinuation.invoke(contSupport, servletReq, LiftRules)$/;"	V
cont	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty6AsyncProvider.scala	/^    val cont = getContinuation.invoke(contSupport, servletReq, LiftRules)$/;"	V
cont	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty7AsyncProvider.scala	/^      val cont = getContinuation.invoke(contSupport, servletReq)$/;"	V
cont	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty7AsyncProvider.scala	/^    val cont = getContinuation.invoke(contSupport, servletReq)$/;"	V
cont	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^    var cont: () => Any = _$/;"	v
containedIn1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def containedIn1(m: MetaData): Boolean =$/;"	f
containedIn1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  override def containedIn1(m: MetaData): Boolean = false$/;"	f
container	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def container: Box[String] = Empty \/\/ null or jQuery object$/;"	f
containerRequest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def containerRequest: Box[HTTPRequest] =$/;"	f
containerSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def containerSession: Box[HTTPSession] = session.flatMap(_.httpSession).or(containerRequest.map(_.session))$/;"	f
containing	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxSpec.scala	/^    "define a 'toOption' method returning a Some object containing its value" in {$/;"	o
contains	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  def contains(key: K): Boolean = localMap.containsKey(key)$/;"	f
contains	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LRU.scala	/^  def contains(k: KeyType): Boolean = map.containsKey(k)$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def contains(value: Value) = (underlying & value.mask32) != 0$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def contains(value: Value) = (underlying & value.mask64) != 0$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def contains(elem: Any): Boolean = exists { _ == elem }$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Range.scala	/^  def contains(x: Int): Boolean = {$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  def contains(elem: Any): Boolean = exists (_ == elem)$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def contains(elem: Any): Boolean = self contains elem$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^  def contains(i: Int): Boolean = {$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^    def contains(key : A) = Map.this.contains(key)$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^    override def contains(key: A) = Map.this.contains(key) && p(key)$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^    override def contains(key: A) = Map.this.contains(key)$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^  def contains(key: A): Boolean = get(key) match {$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/MapProxy.scala	/^  override def contains(key: A) = self.contains(key)$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Set.scala	/^  def contains(elem: A): Boolean$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SetProxy.scala	/^  def contains(elem: A): Boolean = self.contains(elem)$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedMap.scala	/^    def contains(key : K) = SortedMap.this.contains(key)$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/EmptySet.scala	/^  def contains(elem: A): Boolean = false$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashSet.scala	/^  def contains(elem: A): Boolean = synchronized {$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^    override def contains(e: A) = (e == elem) || ListSet.this.contains(e)$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^  def contains(elem: A): Boolean = false$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set1.scala	/^  def contains(elem: A): Boolean = $/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set2.scala	/^  def contains(elem: A): Boolean = $/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set3.scala	/^  def contains(elem: A): Boolean = $/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set4.scala	/^  def contains(elem: A): Boolean = $/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^  def contains(elem: A): Boolean = !tree.lookup(elem).isEmpty$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    override def contains(key : K) = p(key) && Map.this.contains(key);$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^  override def contains(key: K) = underlying.containsKey(key)$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^  final def contains(a : A) = has(a)$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    override def contains(key : K) = SortedMap.this.contains(key) && contains0(key);$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashSet.scala	/^  def contains(elem: A): Boolean = containsEntry(elem)$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableMapAdaptor.scala	/^  override def contains(key: A): Boolean = imap.contains(key)$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableSetAdaptor.scala	/^  def contains(elem: A): Boolean = set.contains(elem)$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^  override def contains(key: A): Boolean = jmap.containsKey(key)$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaSetAdaptor.scala	/^  def contains(elem: A): Boolean = jset.contains(elem)$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashSet.scala	/^  def contains(elem: A): Boolean = containsEntry(elem)$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Set.scala	/^    def contains(item : A) = Set.this.contains(item)$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  override def contains(key: A): Boolean = synchronized {$/;"	f
contains	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedSet.scala	/^  abstract override def contains(elem: A) = synchronized {$/;"	f
contains0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    private def contains0(key : K) = $/;"	f
contains1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^    private def contains1(key : A) = $/;"	f
containsClass	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def containsClass[C](clz: Class[C], toMatch: List[Class[_]]): Boolean =$/;"	f
containsEntry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^  def containsEntry(elem: A): Boolean = {$/;"	f
containsFinal	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^  final def containsFinal(Q: immutable.BitSet): Boolean = {$/;"	f
containsHeader	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def containsHeader(header: String): Boolean = {$/;"	f
containsHint_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  def containsHint_?(clazz: Class[_]) = hints exists (_ isAssignableFrom clazz)$/;"	f
containsSlice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  def containsSlice[B](that: Seq[B]): Boolean = indexOf(that) != -1 $/;"	f
containsSlice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def containsSlice[B](that: Seq[B]) = self containsSlice that$/;"	f
containsSlice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  override def containsSlice[B](that: Seq[B]) = that match {$/;"	f
containsText	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  def containsText(cm: ContentModel) = (cm == PCDATA) || isMixed(cm)$/;"	f
content	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^      val content = new StringBuilder;$/;"	V
content	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^  var content = NodeSeq.Empty$/;"	v
content	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def content(pscope: NamespaceBinding): NodeSeq = {$/;"	f
content1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def content1(pscope: NamespaceBinding, ts: NodeBuffer): Unit =$/;"	f
contentLength	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var contentLength = 0$/;"	v
contentLength	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  var contentLength = 0$/;"	v
contentModel	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^  protected var contentModel: ContentModel           = _$/;"	v
contentParser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^ lazy val contentParser = Parser[String] {$/;"	V
contentType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^          val contentType: Box[String],$/;"	V
contentType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    val contentType = request.contentType$/;"	V
contentType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def contentType: Box[String]$/;"	f
contentType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def contentType = Box !! req.getContentType$/;"	f
contentType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  val contentType: Box[String] = req.contentType$/;"	V
contentType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^    val contentType = props.getContentType$/;"	V
contentType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  lazy val contentType: String = headers.filter {case (name, value) => name equalsIgnoreCase "content-type"}.toList.firstOption.map(_._2.head) getOrElse ""$/;"	V
contentType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var contentType = null$/;"	v
contentType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  var contentType = "text\/html"$/;"	v
contentType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^      var contentType = uc.getContentType()$/;"	v
contentspec	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModelParser.scala	/^  def contentspec: ContentModel = token match {$/;"	f
context	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def context: HTTPContext = synchronized {_context}$/;"	f
context	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPProvider.scala	/^  protected def context: HTTPContext$/;"	f
context	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def context: HTTPContext$/;"	f
context	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def context: HTTPContext = ctx$/;"	f
context	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  val context: HTTPContext = req.context$/;"	V
context	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/ServletFilterProvider.scala	/^  def context: HTTPContext = ctx$/;"	f
context	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/JettyTestServer.scala	/^    val context = new WebAppContext()$/;"	V
context	/Users/Mads/Dev/logicOfScientificDiscovery/src/test/scala/RunWebApp.scala	/^  val context = new WebAppContext()$/;"	V
contextFuncBuilder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] def contextFuncBuilder(f: S.AFuncHolder): S.AFuncHolder = {$/;"	f
contextFuncBuilder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def contextFuncBuilder(f: S.AFuncHolder): S.AFuncHolder = S.session match {$/;"	f
contextPath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^    val contextPath: String = S.contextPath$/;"	V
contextPath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def contextPath = LiftRules.calculateContextPath() openOr _contextPath$/;"	f
contextPath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^          val contextPath: String,$/;"	V
contextPath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    val contextPath = LiftRules.calculateContextPath() openOr request.contextPath$/;"	V
contextPath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def contextPath: String = (request.map(_.contextPath) or session.map(_.contextPath)) openOr ""$/;"	f
contextPath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def contextPath: String$/;"	f
contextPath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def contextPath: String = req.getContextPath$/;"	f
contextPath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  val contextPath: String = req.contextPath$/;"	V
contextPath	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var contextPath = ""$/;"	v
continuation	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/jolib.scala	/^      val continuation = join synchronized {$/;"	V
continue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^    def continue = synchronized {$/;"	f
continue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^  var continue: Boolean = true$/;"	v
controllerMethods	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^    def controllerMethods(instance: C) = instance.getClass.getDeclaredMethods.filter { m =>$/;"	f
conversion	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlTest.scala	/^    val conversion = (json: JValue) => { parse(compact(render(toJson(toXml(json))))); true }$/;"	V
conversion	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlTest.scala	/^    val conversion = (xml: Node) => { toXml(toJson(xml)) == xml }$/;"	V
conversionIsOk	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^      val conversionIsOk = forAll(timeAmounts)((t: TimeAmounts) => { val (timeSpanToString, timeSpanAmounts) = t$/;"	V
convert	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^  private def convert(json: JValue, targetType: Class[_], formats: Formats): Any = json match {$/;"	f
convert	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    private def convert[A <: JValue](x: JValue, expectedType: Class[A]): A = {$/;"	f
convert	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    protected def convert[T](in: Option[T]): Option[T] = in$/;"	f
convert	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  protected def convert[T](in: Option[T]): Holder[T]$/;"	f
convert	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    protected def convert[T](in: Option[T]): Box[T] = Box(in)$/;"	f
convert	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def convert(in: List[(String, Any)]): List[String] = in.map{case (name, value) => stripSig(name)+"="+value}$/;"	f
convertAnswersToCometResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  private def convertAnswersToCometResponse(session: LiftSession, ret: Seq[AnswerRender], actors: List[(LiftCometActor, Long)]): LiftResponse = {$/;"	f
convertKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def convertKey(in: AnyRef): Box[O]$/;"	f
convertKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def convertKey(in: Int): Box[O]$/;"	f
convertKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def convertKey(in: Long): Box[O]$/;"	f
convertKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def convertKey(in: String): Box[O]$/;"	f
convertKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def convertKey(in : AnyRef): Box[Int] = {$/;"	f
convertKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def convertKey(in : Int): Box[Int] = {$/;"	f
convertKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def convertKey(in : Long): Box[Int] = {$/;"	f
convertKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def convertKey(in : String): Box[Int] = {$/;"	f
convertKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def convertKey(in : AnyRef): Box[Long] = {$/;"	f
convertKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def convertKey(in : Int): Box[Long] = {$/;"	f
convertKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def convertKey(in : Long): Box[Long] = {$/;"	f
convertKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def convertKey(in: String): Box[Long] = {$/;"	f
convertKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  def convertKey(in: AnyRef): Box[String] =$/;"	f
convertKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  def convertKey(in: Int): Box[String] = Full(in.toString)$/;"	f
convertKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  def convertKey(in: Long): Box[String] = Full(in.toString)$/;"	f
convertKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  def convertKey(in: String): Box[String] = Box.legacyNullTest(in)$/;"	f
convertList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Conversions.scala	/^  implicit def convertList[T](set : java.util.List[T]) = Buffer(set)$/;"	f
convertMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Conversions.scala	/^  implicit def convertMap[T,E](set : java.util.Map[T,E]) = Map(set)$/;"	f
convertResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  var convertResponse: PartialFunction[(Any, List[(String, String)], List[HTTPCookie], Req), LiftResponse] = {$/;"	v
convertSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Conversions.scala	/^  implicit def convertSet[T](set : java.util.Set[T]) = Set(set)$/;"	f
convertSortedMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Conversions.scala	/^  implicit def convertSortedMap[T,E](set : java.util.SortedMap[T,E]) = SortedMap(set)$/;"	f
convertSortedSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Conversions.scala	/^  implicit def convertSortedSet[T](set : java.util.SortedSet[T]) = SortedSet(set)$/;"	f
convertToJDBCFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  final def convertToJDBCFriendly(value: FieldType): Object = real_convertToJDBCFriendly(runFilters(value, setFilter))$/;"	f
convertToQPList	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def convertToQPList(prod: Product): Array[QueryParam[A]] = {$/;"	f
cookie	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPResponseServlet.scala	/^      val cookie = new javax.servlet.http.Cookie(c.name, c.value openOr null)$/;"	V
cookie	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^    val cookie = HTTPCookie(CookieName, inst.cookieId).$/;"	V
cookieId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^  object cookieId extends MappedUniqueId(this, 32) {$/;"	o
cookieValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def cookieValue(name: String): Box[String] =$/;"	f
cookies	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def cookies = Nil$/;"	f
cookies	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def cookies: List[HTTPCookie]$/;"	f
cookies	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  val cookies = S.responseCookies$/;"	V
cookies	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class RedirectWithState(override val uri: String, state: RedirectState, override val cookies: HTTPCookie*) extends RedirectResponse(uri, cookies: _*)$/;"	V
cookies	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^class XmlResponse(val xml: Node, val code: Int, val mime: String, val cookies: List[HTTPCookie]) extends NodeResponse {$/;"	V
cookies	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  lazy val cookies = request.cookies match {$/;"	V
cookies	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def cookies: List[HTTPCookie]$/;"	f
cookies	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def cookies: List[HTTPCookie] = _cookies$/;"	f
cookies	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  lazy val cookies: List[HTTPCookie] = {$/;"	V
cookies	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var cookies: List[Cookie] = Nil$/;"	v
cookies	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  var cookies: List[Cookie] = Nil$/;"	v
copy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def copy(src: AnyRef, srcPos: Int, dest: AnyRef, destPos: Int, length: Int) {$/;"	f
copy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^    def copy(e: Entry): Entry = $/;"	f
copy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ResizableArray.scala	/^  protected def copy(m: Int, n: Int, len: Int) {$/;"	f
copy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def copy(next: MetaData): MetaData$/;"	f
copy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  def copy(next: MetaData) = next$/;"	f
copy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrefixedAttribute.scala	/^  def copy(next: MetaData) = $/;"	f
copy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/UnprefixedAttribute.scala	/^  def copy(next: MetaData) = $/;"	f
copyFrom	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  override def copyFrom(src: AnyRef, from: Int, to: Int, len: Int) {$/;"	f
copyFrom	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  def copyFrom(src: AnyRef, from: Int, to: Int, len: Int): Unit = $/;"	f
copyOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  private def copyOf(src: Array[Char], newLength: Int): Array[Char] = {$/;"	f
copyTo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  override def copyTo(from: Int, dest: AnyRef, to: Int, len: Int) {$/;"	f
copyTo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  def copyTo(from: Int, dest: AnyRef, to: Int, len: Int): Unit = {$/;"	f
copyToArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def copyToArray[B >: A](xs: Array[B], start: Int): Unit = $/;"	f
copyToArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def copyToArray[B >: A](xs: Array[B], start: Int) = self.copyToArray(xs, start)$/;"	f
copyToArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def copyToArray[B >: A](xs: Array[B], start: Int) {$/;"	f
copyToArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override final def copyToArray[B >: A](xs: Array[B], start: Int) {$/;"	f
copyToArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ResizableArray.scala	/^  override def copyToArray[B >: A](xs: Array[B], start: Int) {$/;"	f
copyToArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  override def copyToArray[B](xs: Array[B], start: Int): Unit =$/;"	f
copyToBuffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def copyToBuffer[B >: A](dest: Buffer[B]): Unit = self copyToBuffer dest$/;"	f
copyToBuffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def copyToBuffer[B >: A](dest: Buffer[B]): Unit = elements copyToBuffer dest$/;"	f
copyToBuffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def copyToBuffer[B >: A](dest: Buffer[B]) = self copyToBuffer dest$/;"	f
copyToBuffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def copyToBuffer[B >: A](dest: Buffer[B]) {$/;"	f
copyToBuffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ResizableArray.scala	/^  override def copyToBuffer[B >: A](dest: Buffer[B]) {$/;"	f
copyright	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val copyright: Parser[Textile] =$/;"	V
copyrightString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Properties.scala	/^  val copyrightString: String = {$/;"	V
coreVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  protected def coreVar: AnyVar[LRU[K, V], _]$/;"	f
coreVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  protected object coreVar extends RequestVar[LRU[K, V]](buildLRU)$/;"	o
coreVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  protected object coreVar extends SessionVar[LRU[K, V]](buildLRU)$/;"	o
correspondingCharInCamelCase	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      def correspondingCharInCamelCase(name: String, i: Int): Char = camelCase(name).charAt(correspondingIndexInCamelCase(name, i))$/;"	f
correspondingIndexInCamelCase	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      def correspondingIndexInCamelCase(name: String, i: Int) = i - underscoresNumber(name, i)$/;"	f
cos	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def cos(x: Double): Double = java.lang.Math.cos(x)$/;"	f
cost	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LD.scala	/^          val cost = if (c == ch) 0 else 1$/;"	V
couldBeHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^  def couldBeHtml(in: Map[String, String]): Boolean =$/;"	f
couldNotSetValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def couldNotSetValue = valueCouldNotBeSet = true$/;"	f
count	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def count(by: QueryParam[A]*): Long = countDb(dbDefaultConnectionIdentifier, by:_*)$/;"	f
count	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def count: Long = countDb(dbDefaultConnectionIdentifier, Nil :_*)$/;"	f
count	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Paginator.scala	/^  def count = meta.count(constantParams: _*)$/;"	f
count	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^	override def count = {$/;"	f
count	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^      def count = cnt$/;"	f
count	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CountedIterator.scala	/^    override def count = CountedIterator.this.count - peekList(0).length$/;"	f
count	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CountedIterator.scala	/^  def count: Int$/;"	f
count	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def count = cnt$/;"	f
count	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var count = n$/;"	v
count	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def count(p: A => Boolean): Int = {$/;"	f
count	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  private var count: Int = 0$/;"	v
count	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Set.scala	/^     var count = 0$/;"	v
count	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^      val count = more(data, filled, PageSize - filled) $/;"	V
count	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def count : Int$/;"	f
count	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def count = 0$/;"	f
count	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def count = 1 + left.count + right.count$/;"	f
count	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def count = (1, 0)$/;"	f
count	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def count: (Int,Int) = {$/;"	f
count	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def count: (Int,Int)$/;"	f
count	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^    var count = 0;$/;"	v
countByInsecureSql	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def countByInsecureSql(query: String, checkedBy: IHaveValidatedThisSQL): scala.Long =$/;"	f
countByInsecureSqlDb	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def countByInsecureSqlDb(dbId: ConnectionIdentifier, query: String, checkedBy: IHaveValidatedThisSQL): scala.Long =$/;"	f
countDb	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def countDb(dbId: ConnectionIdentifier, by: QueryParam[A]*): Long = {$/;"	f
counted	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^      override def counted : this.type = this$/;"	f
counted	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    override def counted : CountedIterator[A] with Advanced[A] = new CountedIterator[A] with Advanced[A] {$/;"	f
counted	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    override def counted : CountedIterator[A] with PutBack[A] = new CountedIterator[A] with PutBack[A] {$/;"	f
counted	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CountedIterator.scala	/^    override def counted : this.type = this$/;"	f
counted	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CountedIterator.scala	/^  override def counted : this.type = this$/;"	f
counted	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def counted = new CountedIterator[A] {$/;"	f
countryField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def countryField: Box[MappedCountry[A]] = Empty$/;"	f
countryField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Record.scala	/^  def countryField: Box[CountryField[MyType]] = Empty$/;"	f
cpa	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingParser.scala	/^    val cpa = scala.xml.parsing.ConstructingParser.fromSource(src, false); \/\/ fromSource initializes automatically$/;"	V
cr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^    val cr = "c" + Helpers.nextFuncName$/;"	V
create	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  def create = new JsCommands(Nil)$/;"	f
create	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^    def create(consumerKey: String, token: String, timestamp: Long, nonce: String): Unit =$/;"	f
create	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def create(consumer: OAuthConsumer, user: Box[OAuthUser],$/;"	f
create	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def create(consumer: OAuthConsumer, user: OAuthUser,$/;"	f
create	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def create(consumerKey: String, token: String, timestamp: Long, nonce: String): Unit$/;"	f
create	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def create: A = createInstance$/;"	f
create	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Location.scala	/^  def create(className: String) = new Code($/;"	f
create	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedObjectArray.scala	/^  private def create(length: Int): Array[AnyRef] = {$/;"	f
create	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/NodeFactory.scala	/^  protected def create(pre: String, name: String, attrs: MetaData, scope: NamespaceBinding, children:Seq[Node]): A;$/;"	f
create	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/NoBindingFactoryAdapter.scala	/^  protected def create(pre: String, label: String, attrs: MetaData, scpe: NamespaceBinding, children:Seq[Node]): Elem = {$/;"	f
createAConsumer	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  def createAConsumer = new AnyRef with OpenIdConsumer[UserType]$/;"	f
createAConsumer	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  def createAConsumer: ConsumerType$/;"	f
createApplier	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def createApplier(name : String, inst : AnyRef \/*, clz : Class*\/) : (A, AnyRef) => Unit = {$/;"	f
createArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/compat/Platform.scala	/^  def createArray(elemClass: Class[_], length: Int): AnyRef =$/;"	f
createButton	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def createButton = S.??("Create")$/;"	f
createChat	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^  def createChat(to: String) {$/;"	f
createClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def createClass = "create_class"$/;"	f
createColumns	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^  private def createColumns(table: BaseMetaMapper, connection: SuperConnection): Seq[String] = {$/;"	f
createDefaultLink	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def createDefaultLink: Option[NodeSeq] = currentValue.flatMap(p => link.createLink(p)).toOption$/;"	f
createExecutor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  var createExecutor: () => ILAExecute = () => {$/;"	v
createId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def createId = "create_page"$/;"	f
createInstance	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def createInstance(dbId: ConnectionIdentifier, rs : ResultSet, colCnt: Int, mapFuncs: Array[(ResultSet,Int,A) => Unit]) : A = {$/;"	f
createInstance	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def createInstance: A = rootClass.newInstance.asInstanceOf[A]$/;"	f
createInstances	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def createInstances(dbId: ConnectionIdentifier, rs: ResultSet, start: Box[Long], omax: Box[Long]) : List[A] = createInstances(dbId, rs, start, omax, v => Full(v))$/;"	f
createInstances	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def createInstances[T](dbId: ConnectionIdentifier, rs: ResultSet, start: Box[Long], omax: Box[Long], f: A => Box[T]) : List[T] = {$/;"	f
createInvoker	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def createInvoker[C <: AnyRef](name: String, on: C): Box[() => Box[Any]] = {$/;"	f
createLink	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^        override def createLink(value: Unit): Box[NodeSeq] = Full(Text(url))$/;"	f
createLink	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^      override def createLink(value: Unit): Box[NodeSeq] = Full(Text(url))$/;"	f
createLink	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    def createLink(value: T): Box[NodeSeq] = Full(Text(createPath(value)))$/;"	f
createLink	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def createLink(in: T): Option[NodeSeq] = link.createLink(in).toOption$/;"	f
createLink	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^            override def createLink(in: CrudType) =$/;"	f
createLink	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^          override def createLink(in: CrudType) =$/;"	f
createMenuLoc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def createMenuLoc: Box[Menu] =$/;"	f
createMenuLocParams	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def createMenuLocParams: List[Loc.AnyLocParam] = Nil$/;"	f
createMenuName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def createMenuName = S.??("Create")+" "+displayName$/;"	f
createNewInstance	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  def createNewInstance(firstEvent: Meta#Event)(setup: MyType => Unit): MyType = createNewInstance(firstEvent, Full(setup))$/;"	f
createNewInstance	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  def createNewInstance(firstEvent: Meta#Event, setup: Box[MyType => Unit]): MyType = {$/;"	f
createNode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  def createNode(pre: String, elemName: String, attribs: MetaData,$/;"	f
createNode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/NoBindingFactoryAdapter.scala	/^  def createNode(pre:String, label: String, attrs: MetaData, scpe: NamespaceBinding, children: List[Node] ): Elem = {$/;"	f
createNotFound	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def createNotFound(f: Failure): LiftResponse = $/;"	f
createNotFound	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def createNotFound: LiftResponse = $/;"	f
createNotFound	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  private[http] def createNotFound(f: (ParsePath) => Box[LiftResponse]): Box[LiftResponse] = $/;"	f
createOne	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  protected def createOne: Box[Connection] = try {$/;"	f
createOne	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  protected def createOne: Box[Connection]$/;"	f
createPath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    def createPath(value: T): String = {$/;"	f
createPath	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  lazy val createPath = Prefix ::: List(CreateItem)$/;"	V
createPathString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  lazy val createPathString: String = mp(createPath)$/;"	V
createPerson	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^  def createPerson = {$/;"	f
createProcInstr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  def createProcInstr(target: String, data: String): Seq[ProcInstr] $/;"	f
createProcInstr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/NoBindingFactoryAdapter.scala	/^  def createProcInstr(target: String, data: String) = $/;"	f
createRecord	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  def createRecord(json: String): Box[BaseRecord] = {$/;"	f
createRecord	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  def createRecord: BaseRecord = {$/;"	f
createSnapshot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  protected def createSnapshot = new ScreenSnapshot(ScreenVars.is, PrevSnapshot.is)$/;"	f
createSnapshot	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  def createSnapshot = new WizardSnapshot(ScreenVars.is, CurrentScreen.is, PrevSnapshot.is, OnFirstScreen.is)$/;"	f
createStatement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^  def createStatement (conn : Connection) = {$/;"	f
createStatement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^      val createStatement = index match {$/;"	V
createTablePostpend	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def createTablePostpend: String = driverType.createTablePostpend$/;"	f
createTablePostpend	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def createTablePostpend: String = ""$/;"	f
createTablePostpend	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  override def createTablePostpend: String = " ENGINE = InnoDB "$/;"	f
createTag	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/rest/XMLApiHelper.scala	/^  def createTag(in: NodeSeq): Elem$/;"	f
createTemplate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def createTemplate(): NodeSeq = pageWrapper(_createTemplate)$/;"	f
createText	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  def createText(text: String): Text \/\/ abstract$/;"	f
createText	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/NoBindingFactoryAdapter.scala	/^  def createText( text:String ) = $/;"	f
createUpdate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  protected def createUpdate: Any$/;"	f
createUserMenuLoc	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^  override def createUserMenuLoc: Box[Menu] = Empty$/;"	f
createUserMenuLoc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def createUserMenuLoc: Box[Menu] =$/;"	f
createWithMutableField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  def createWithMutableField[FieldType](original: BaseRecord,$/;"	f
createdTime	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  object createdTime extends MappedDateTime(this) {$/;"	o
creationTime	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  var creationTime = System.currentTimeMillis$/;"	v
credentials	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  def credentials(r: Req): Box[(String, String)] = {$/;"	f
crop	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  final def crop(in: String): String = in.substring(0, Math.min(in.length, maxLen))$/;"	f
crossScalaVersions	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/project/build/src/LiftJson.scala	/^  override def crossScalaVersions = Set("2.7.7", "2.8.0.Beta1-RC1")$/;"	f
crt	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarMonthView.scala	/^            val crt = current getTimeInMillis;$/;"	V
crudDoForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def crudDoForm(item: CrudType, noticeMsg: String)(in: NodeSeq): NodeSeq = {$/;"	f
crudSnippets	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def crudSnippets: LiftRules.SnippetPF = {$/;"	f
crudSnippets_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def crudSnippets_? = false$/;"	f
crudyDelete	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^          def crudyDelete(item: CrudType)(html: NodeSeq): NodeSeq = {$/;"	f
crunchStyle	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^      def crunchStyle(st : List[Pair[String, String]]) : List[Pair[String,String]] = {$/;"	f
cs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^    val cs = new Array[Char](len)$/;"	V
cs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^            val cs = clazz.getConstructors()$/;"	V
css	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^        val css = LiftRules.loadResourceAsString(cssPath);$/;"	V
cssFixer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val cssFixer: LiftRules.DispatchPF = new LiftRules.DispatchPF {$/;"	V
cssPath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^        val cssPath = path.mkString("\/", "\/", ".css")$/;"	V
cstr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^            val cstr = clazz.getConstructor(argTypes : _*)$/;"	V
ct	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^            val ct = "DROP TABLE "+table._dbTableNameLC$/;"	V
ct	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^    val ct = makeSql()$/;"	V
ct	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^              val ct = "DROP TABLE "+table$/;"	V
ctx	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  private lazy val ctx = new HTTPServletContext(req.getSession.getServletContext)$/;"	V
ctx	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletContext.scala	/^class HTTPServletContext(val ctx: ServletContext) extends HTTPContext {$/;"	V
ctx	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/ServletFilterProvider.scala	/^  var ctx: HTTPContext = _$/;"	v
ctype	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^        val ctype = c.getRawType.asInstanceOf[Class[_]]$/;"	V
cuf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  private var cuf: List[CleanUpParam => Unit] = Nil$/;"	v
cur	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    private[this] var cur = 0 \/\/ Pointer which points current parsing location$/;"	v
cur	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    private var cur: Iterator[B] = Iterator.empty$/;"	v
cur	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      var cur = this$/;"	v
cur	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^    var cur = 0$/;"	v
cur	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  protected var cur = 0$/;"	v
curInput	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  var curInput: Source = input$/;"	v
curLoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val curLoc = S.location$/;"	V
curMark	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    var curMark = -1$/;"	v
curMarkSegment	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    var curMarkSegment = -1$/;"	v
curPage	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Paginator.scala	/^        val curPage = (first \/ num).toInt$/;"	V
curSegmentIdx	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    private[this] var curSegmentIdx = 0 \/\/ Pointer which points current segment$/;"	v
curSize	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^          val curSize = poolSize$/;"	V
curTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  var curTag : String = null$/;"	v
curUser	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  private object curUser extends RequestVar[Box[ModelType]](currentUserId.flatMap(id => getSingleton.find(id)))  with CleanRequestVarOnSessionTransition$/;"	o
curUserId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  private object curUserId extends SessionVar[Box[String]](Empty)$/;"	o
currencySymbol	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^        val currencySymbol: String$/;"	V
currencySymbol	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    abstract class EUR extends AbstractCurrency("EUR") with TwoFractionDigits {val currencySymbol = "€"}$/;"	V
currencySymbol	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    abstract class GBP extends AbstractCurrency("GBP") with TwoFractionDigits {val currencySymbol = "£"}$/;"	V
currencySymbol	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    val currencySymbol = "$"$/;"	V
current	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  private[this] def current = stack.value$/;"	f
current	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/HasManyThrough.scala	/^    val current = through.findAll(By(throughFromField,owner.primaryKeyField))$/;"	V
current	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  var current: List[T] = Nil$/;"	v
current	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var current: ::[B] = this$/;"	v
current	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^    var current = Stream.this$/;"	v
current	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^    var current: String = ""$/;"	v
current	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  private var current: Page[T] = first$/;"	v
current	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/Inclusion.scala	/^    var current = encode(q1, q2)$/;"	v
currentAttrs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def currentAttrs: MetaData = _currentAttrs.is$/;"	f
currentAttrsToMetaData	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def currentAttrsToMetaData(predicate: String => Boolean): MetaData = {$/;"	f
currentAttrsToMetaData	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def currentAttrsToMetaData: MetaData = currentAttrsToMetaData(ignore => true)$/;"	f
currentBase	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^      var currentBase = parentBase$/;"	v
currentConn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private object currentConn extends DynoVar[SuperConnection]$/;"	o
currentConnection	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def currentConnection: Box[SuperConnection] = currentConn.is$/;"	f
currentId	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    private var currentId = 0$/;"	v
currentIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^    var currentIndex = index;$/;"	v
currentMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val currentMap = snippetMap.is$/;"	V
currentNode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def currentNode: Box[Elem] = _currentNode.box$/;"	f
currentScreen	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^                       val currentScreen: Box[Screen],$/;"	V
currentScreen	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  def currentScreen: Box[Screen] = CurrentScreen.is$/;"	f
currentSnippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def currentSnippet: Box[String] = _currentSnippet.is$/;"	f
currentState	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  object currentState extends MappedInt[MyType](this)$/;"	o
currentThread	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def currentThread = java.lang.Thread.currentThread()$/;"	f
currentTime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/compat/Platform.scala	/^  def currentTime: Long = System.currentTimeMillis()$/;"	f
currentTimeMsec	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthValidator.scala	/^    val currentTimeMsec = millis$/;"	V
currentUser	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  def currentUser = OpenIdUser.is$/;"	f
currentUser	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  def currentUser: Box[UserType]$/;"	f
currentUser	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def currentUser: Box[ModelType] = curUser.is$/;"	f
currentUserId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def currentUserId: Box[String] = curUserId.is$/;"	f
currentValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def currentValue: Box[T] = overrideValue or requestValue.is or defaultValue$/;"	f
currentWizards	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  private object currentWizards extends SessionVar[Set[String]](Set())$/;"	o
currentYear	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def currentYear: Int = Calendar.getInstance.get(Calendar.YEAR)$/;"	f
curried	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function.scala	/^  def curried[a1, a2, a3, a4, a5, b](f: (a1, a2, a3, a4, a5) => b): a1 => a2 => a3 => a4 => a5 => b = {$/;"	f
curried	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function.scala	/^  def curried[a1, a2, a3, a4, b](f: (a1, a2, a3, a4) => b): a1 => a2 => a3 => a4 => b = {$/;"	f
curried	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function.scala	/^  def curried[a1, a2, a3, b](f: (a1, a2, a3) => b): a1 => a2 => a3 => b = {$/;"	f
curried	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function.scala	/^  def curried[a1, a2, b](f: (a1, a2) => b): a1 => a2 => b = {$/;"	f
curry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function10.scala	/^  def curry: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => R = { $/;"	f
curry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function11.scala	/^  def curry: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => R = { $/;"	f
curry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function12.scala	/^  def curry: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => R = { $/;"	f
curry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function13.scala	/^  def curry: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => R = { $/;"	f
curry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function14.scala	/^  def curry: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => R = { $/;"	f
curry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function15.scala	/^  def curry: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => R = { $/;"	f
curry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function16.scala	/^  def curry: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => T16 => R = { $/;"	f
curry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function17.scala	/^  def curry: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => T16 => T17 => R = { $/;"	f
curry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function18.scala	/^  def curry: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => T16 => T17 => T18 => R = { $/;"	f
curry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function19.scala	/^  def curry: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => T16 => T17 => T18 => T19 => R = { $/;"	f
curry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function2.scala	/^  def curry: T1 => T2 => R = { $/;"	f
curry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function20.scala	/^  def curry: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => T16 => T17 => T18 => T19 => T20 => R = { $/;"	f
curry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function21.scala	/^  def curry: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => T16 => T17 => T18 => T19 => T20 => T21 => R = { $/;"	f
curry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function22.scala	/^  def curry: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => T16 => T17 => T18 => T19 => T20 => T21 => T22 => R = { $/;"	f
curry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function3.scala	/^  def curry: T1 => T2 => T3 => R = { $/;"	f
curry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function4.scala	/^  def curry: T1 => T2 => T3 => T4 => R = { $/;"	f
curry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function5.scala	/^  def curry: T1 => T2 => T3 => T4 => T5 => R = { $/;"	f
curry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function6.scala	/^  def curry: T1 => T2 => T3 => T4 => T5 => T6 => R = { $/;"	f
curry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function7.scala	/^  def curry: T1 => T2 => T3 => T4 => T5 => T6 => T7 => R = { $/;"	f
curry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function8.scala	/^  def curry: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => R = { $/;"	f
curry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function9.scala	/^  def curry: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => R = { $/;"	f
cursor	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^    private[this] var cursor: ImmutableIterator[A] = ImmutableIterator.this$/;"	v
cursor	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^        var cursor = start$/;"	v
cursor	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^      var cursor = start$/;"	v
cursor	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^    var cursor = start$/;"	v
cursor	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^    var cursor: List[A] = null$/;"	v
custom	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val custom = r.param("custom")$/;"	V
customColumnTypeMap	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  override def customColumnTypeMap = {$/;"	f
customColumnTypeMap	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  protected def customColumnTypeMap : TypeMapFunc = new TypeMapFunc {$/;"	f
customProperties	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  var customProperties: Map[String, String] = Map()$/;"	v
cut	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  protected def cut(s: String, ind: Int): List[Item] = {$/;"	f
cv	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^    val cv = is$/;"	V
cv	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^          var cv = x(c) compare v$/;"	v
cvt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  private def cvt(ns: Node, headers: List[(String, String)], cookies: List[HTTPCookie], req: Req, code:Int) =$/;"	f
cvt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def cvt: PartialFunction[Any, Box[Boolean]] = {$/;"	f
cvt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def cvt: PartialFunction[Any, Box[Enum#Value]] = {$/;"	f
cvt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def cvt: PartialFunction[Any, Box[FieldType]]$/;"	f
cvt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def cvt: PartialFunction[Any, Box[String]] = {$/;"	f
d	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LAPinger.scala	/^    val d: Thread = threadFactory.newThread(r)$/;"	V
d	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ActorPing.scala	/^    val d: Thread = threadFactory.newThread(r)$/;"	V
d	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Currency.scala	/^      val d = amount.toDouble$/;"	V
d	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^      val d = now$/;"	V
d	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^              var d = destPos$/;"	v
d	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^      val d = table.length >> 1$/;"	V
d	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^      case None => val d = default; this(key) = d; d$/;"	V
d	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^    val untyped = UGP(n, polarity, v, c)$/;"	T
d	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^        var d = c$/;"	v
d	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/StdLexical.scala	/^      val d = new Array[String](delimiters.size)$/;"	V
d	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/StdLexical.scala	/^      val d = new Array[String](delimiters.size)$/;"	V
d	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^            var d = nchar$/;"	v
da	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/SimpleTokenizer.scala	/^    val da = new Array[Boolean]((0 \/: ds)(max) + 1)$/;"	V
data	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    val data = reverseList.reverse.map(_.toJsCmd).mkString("\\n").getBytes("UTF-8")$/;"	V
data	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/ScriptRenderer.scala	/^      var data = "__lift__GC=_"$/;"	v
data	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^        var data = """+data.toJsCmd+""";$/;"	v
data	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^        var data = """+what.encJs+""";$/;"	v
data	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^      val data = JsArray(options.map { $/;"	V
data	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotSerie.scala	/^  def data: List[(Double, Double)] = Nil$/;"	f
data	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/SparklinesDemo.scala	/^    val data = JsArray(100,500,300,200,400,500,400,400,100,200, 345, 412, 111, 234, 490);$/;"	V
data	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  private val data : FatLazy[Array[Byte]] =  FatLazy(defaultValue)$/;"	V
data	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  private val data : FatLazy[String] =  FatLazy(defaultValue)$/;"	V
data	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  private var data : Box[Boolean] = Full(defaultValue)$/;"	v
data	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  private val data = FatLazy(defaultValue)$/;"	V
data	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  private val data = FatLazy(defaultValue)$/;"	V
data	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  private var data : BigDecimal = defaultValue$/;"	v
data	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	private var data: Double = defaultValue$/;"	v
data	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  private var data: ENUM#Value = defaultValue$/;"	v
data	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  private var data: Int = defaultValue$/;"	v
data	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  private var data: Box[Long] = defaultValue$/;"	v
data	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  private var data: Long = defaultValue$/;"	v
data	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  private var data: Seq[ENUM#Value] = defaultValue$/;"	v
data	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  private val data: FatLazy[String] =  FatLazy(defaultValue) \/\/ defaultValue$/;"	V
data	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  private val data = FatLazy(defaultValue)$/;"	V
data	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  private[record] var data: MyType = _$/;"	v
data	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  final val data = new Array[T](PageSize)$/;"	V
data	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def data[a](tag: a => Int, ps: List[()=>SPU[a]]): SPU[a] =$/;"	f
data	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^      var data: Int = _$/;"	v
data	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Atom.scala	/^class Atom[+A](val data: A) extends SpecialNode {  $/;"	V
data	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/EncodingHeuristics.scala	/^        val data = new Array[Byte](1024)$/;"	V
date	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^  def date(s: String) = DefaultFormats.dateFormat.parse(s).get$/;"	f
date	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    def date = new Date(millis)$/;"	f
date	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BasicTypesHelpersSpec.scala	/^      def date(t: Int) = new _root_.java.util.Date(t)$/;"	f
dateColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def dateColumnType = "DATE"$/;"	f
dateColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def dateColumnType = "TIMESTAMP"$/;"	f
dateColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def dateColumnType: String$/;"	f
dateFormat	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  val dateFormat = new DateFormat {    $/;"	V
dateFormat	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  val dateFormat: DateFormat$/;"	V
dateFormat	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Serialization.scala	/^    val dateFormat = DefaultFormats.lossless.dateFormat$/;"	V
dateFormatter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^    override def dateFormatter = DefaultFormats.losslessDate()$/;"	f
dateFormatter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  protected def dateFormatter = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'")$/;"	f
dateFormatter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def dateFormatter = new SimpleDateFormat("yyyy\/MM\/dd")$/;"	f
dateFormatter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/ViewMeta.scala	/^  var dateFormatter = new SimpleDateFormat("M\/dd", locale)$/;"	v
dateTimeColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def dateTimeColumnType = "DATETIME"$/;"	f
dateTimeColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def dateTimeColumnType = "TIMESTAMP"$/;"	f
dateTimeColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def dateTimeColumnType: String$/;"	f
day	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    def day = days$/;"	f
day	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def day(in: Date): Int =  {$/;"	f
day	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarMonthView.scala	/^            val day = cal.get(DAY_OF_MONTH)$/;"	V
dayClick	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarMonthViewDemo.scala	/^  def dayClick = Full(AnonFunc("elem, param", JsRaw("alert(param + ' - ' + elem.nodeName)")))$/;"	f
dayNow	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def dayNow: Date = 0.seconds.later.noTime$/;"	f
days	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    def days = TimeSpan(outer.days(len))$/;"	f
days	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def days(in: Long): Long = hours(in) * 24L$/;"	f
daysSinceEpoch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def daysSinceEpoch: Long = millisToDays(millis)$/;"	f
dbAddTable	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def dbAddTable: Box[() => Unit] = Empty$/;"	f
dbAddTable	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def dbAddTable: Box[() => Unit]$/;"	f
dbAddTable	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  override def dbAddTable = Full(populate _)$/;"	f
dbAddedColumn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbAddedColumn: Box[() => Unit] = Empty$/;"	f
dbAddedColumn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbAddedColumn: Box[() => Unit]$/;"	f
dbAddedForeignKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbAddedForeignKey: Box[() => Unit]$/;"	f
dbAddedForeignKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def dbAddedForeignKey: Box[() => Unit] = Empty$/;"	f
dbAddedForeignKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  def dbAddedForeignKey: Box[() => Unit] = Empty$/;"	f
dbAddedIndex	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbAddedIndex: Box[() => Unit] = Empty$/;"	f
dbAddedIndex	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbAddedIndex: Box[() => Unit]$/;"	f
dbAutogenerated_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbAutogenerated_? : Boolean = dbPrimaryKey_?$/;"	f
dbCalculateConnectionIdentifier	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def dbCalculateConnectionIdentifier: PartialFunction[A, ConnectionIdentifier] = Map.empty$/;"	f
dbCalculateConnectionIdentifier	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/DBRecord.scala	/^  def dbCalculateConnectionIdentifier: PartialFunction[MyType, ConnectionIdentifier] = Map.empty$/;"	f
dbColumnCount	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbColumnCount = 1$/;"	f
dbColumnCount	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbColumnCount: Int$/;"	f
dbColumnCount	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  override def dbColumnCount = 2$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^    override def dbColumnName = "osr_application_title"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^    override def dbColumnName = "osr_application_uri"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^    override def dbColumnName = "osr_callback_uri"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^    override def dbColumnName = "osr_consumer_key"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^    override def dbColumnName = "osr_consumer_secret"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^    override def dbColumnName = "osr_enabled"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^    override def dbColumnName = "osr_id"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^    override def dbColumnName = "osr_issue_date"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^    override def dbColumnName = "osr_usa_id_ref"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^      override def dbColumnName = "osn_consumer_key"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^      override def dbColumnName = "osn_id"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^      override def dbColumnName = "osn_nonce"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^      override def dbColumnName = "osn_timestamp"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^      override def dbColumnName = "osn_token"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^      override def dbColumnName = "ost_authorized"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^      override def dbColumnName = "ost_id"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^      override def dbColumnName = "ost_osr_id_ref"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^      override def dbColumnName = "ost_referrer_host"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^      override def dbColumnName = "ost_timestamp"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^      override def dbColumnName = "ost_token"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^      override def dbColumnName = "ost_token_secret"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^      override def dbColumnName = "ost_token_ttl"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^      override def dbColumnName = "ost_token_type"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^      override def dbColumnName = "ost_usa_id_ref"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbColumnName = name.toLowerCase match {$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbColumnName: String$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^    override def dbColumnName = expirationColumnName$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^    override def dbColumnName = "ACTUAL_AGE"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^    override def dbColumnName = "CreatedTime"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^    override def dbColumnName = "DOG2_Id"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^    override def dbColumnName = "NaM_E"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^    override def dbColumnName = "WEIGHT"$/;"	f
dbColumnName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^    override def dbColumnName = "is_a_dog"$/;"	f
dbColumnNames	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbColumnNames(in : String) = if (dbColumnCount == 1) List(_dbColumnNameLC) else List(in.toLowerCase)$/;"	f
dbColumnNames	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbColumnNames(in: String): List[String]$/;"	f
dbColumnNames	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  override def dbColumnNames(in : String) = in.toLowerCase+"_pw" :: in.toLowerCase+"_slt" :: Nil$/;"	f
dbConnectionIdentifier	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  private var dbConnectionIdentifier: Box[ConnectionIdentifier] = Empty$/;"	v
dbConnectionIdentifier	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/DBRecord.scala	/^  private var dbConnectionIdentifier: Box[ConnectionIdentifier] = Empty$/;"	v
dbConnections	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  def dbConnections: List[ConnectionIdentifier] = WizardRules.dbConnectionsForTransaction.vend$/;"	f
dbConnectionsForTransaction	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  val dbConnectionsForTransaction: FactoryMaker[List[ConnectionIdentifier]] =$/;"	V
dbDefaultConnectionIdentifier	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def dbDefaultConnectionIdentifier: ConnectionIdentifier = DefaultConnectionIdentifier$/;"	f
dbDefaultConnectionIdentifier	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/DBMetaRecord.scala	/^  def dbDefaultConnectionIdentifier: ConnectionIdentifier = DefaultConnectionIdentifier$/;"	f
dbDisplay_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbDisplay_? = true$/;"	f
dbDisplay_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  override def dbDisplay_? = false$/;"	f
dbDisplay_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  override def dbDisplay_? = false$/;"	f
dbDisplay_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def dbDisplay_? = false$/;"	f
dbDisplay_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  override def dbDisplay_? = false$/;"	f
dbFieldClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def dbFieldClass = classOf[Array[Byte]]$/;"	f
dbFieldClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def dbFieldClass = classOf[String]$/;"	f
dbFieldClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  def dbFieldClass = classOf[Boolean]$/;"	f
dbFieldClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  def dbFieldClass = classOf[Date]$/;"	f
dbFieldClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  def dbFieldClass = classOf[Date]$/;"	f
dbFieldClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  def dbFieldClass = classOf[BigDecimal]$/;"	f
dbFieldClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	def dbFieldClass = classOf[Double]$/;"	f
dbFieldClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbFieldClass: Class[FieldType]$/;"	f
dbFieldClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def dbFieldClass = classOf[ENUM#Value]$/;"	f
dbFieldClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def dbFieldClass = classOf[Int]$/;"	f
dbFieldClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def dbFieldClass = classOf[Box[Long]]$/;"	f
dbFieldClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def dbFieldClass = classOf[Long]$/;"	f
dbFieldClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def dbFieldClass = classOf[Seq[ENUM#Value]]$/;"	f
dbFieldClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  def dbFieldClass = classOf[String]$/;"	f
dbFieldClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def dbFieldClass = classOf[String]$/;"	f
dbFieldClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  def dbFieldClass = classOf[Date]$/;"	f
dbForeignKey_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbForeignKey_? : Boolean = false$/;"	f
dbForeignKey_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbForeignKey_? : Boolean$/;"	f
dbForeignKey_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def dbForeignKey_? = true$/;"	f
dbForeignKey_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  override def dbForeignKey_? = true$/;"	f
dbIncludeInForm_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbIncludeInForm_? = dbDisplay_?$/;"	f
dbIndexFieldIndicatesSaved_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbIndexFieldIndicatesSaved_? = false;$/;"	f
dbIndexFieldIndicatesSaved_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  override def dbIndexFieldIndicatesSaved_? = {i_is_! != defaultValue}$/;"	f
dbIndexFieldIndicatesSaved_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def dbIndexFieldIndicatesSaved_? = {i_is_! != defaultValue}$/;"	f
dbIndexed_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    override def dbIndexed_?  = true$/;"	f
dbIndexed_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^      override def dbIndexed_? = true$/;"	f
dbIndexed_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^    override def dbIndexed_? = true$/;"	f
dbIndexed_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbIndexed_? : Boolean = false$/;"	f
dbIndexed_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbIndexed_? : Boolean$/;"	f
dbIndexed_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  override def dbIndexed_? = true$/;"	f
dbIndexed_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def dbIndexed_? = true$/;"	f
dbIndexed_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  override def dbIndexed_? = true$/;"	f
dbIndexed_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^    override def dbIndexed_? = true$/;"	f
dbIndexed_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala	/^    override def dbIndexed_? = true$/;"	f
dbIndexed_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    override def dbIndexed_? = true$/;"	f
dbIndexed_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^    override def dbIndexed_? = true$/;"	f
dbIndexes	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def dbIndexes: List[BaseIndex[A]] = Nil$/;"	f
dbIndexes	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def dbIndexes: List[BaseIndex[RealType]]$/;"	f
dbKeyToColumn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbKeyToColumn: BaseMappedField$/;"	f
dbKeyToColumn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def dbKeyToColumn = dbKeyToTable.primaryKeyField$/;"	f
dbKeyToColumn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  def dbKeyToColumn = dbKeyToTable.primaryKeyField$/;"	f
dbKeyToTable	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbKeyToTable: BaseMetaMapper$/;"	f
dbKeyToTable	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbKeyToTable: KeyedMetaMapper[KeyType, Other]$/;"	f
dbKeyToTable	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  lazy val dbKeyToTable: KeyedMetaMapper[Long, O] = foreign$/;"	V
dbKeyToTable	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  def dbKeyToTable: KeyedMetaMapper[String, O] = foreign$/;"	f
dbNotNull_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbNotNull_? : Boolean = false$/;"	f
dbNotNull_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbNotNull_? : Boolean$/;"	f
dbNotNull_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  override def dbNotNull_? : Boolean = false$/;"	f
dbNotNull_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  override final def dbNotNull_? : Boolean = false$/;"	f
dbNotNull_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^    override def dbNotNull_? = true$/;"	f
dbPrimaryKey_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbPrimaryKey_? : Boolean = false$/;"	f
dbPrimaryKey_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbPrimaryKey_? : Boolean$/;"	f
dbPrimaryKey_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  override def dbPrimaryKey_? = true$/;"	f
dbPrimaryKey_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def dbPrimaryKey_? = true$/;"	f
dbPrimaryKey_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  override def dbPrimaryKey_? = true$/;"	f
dbSelectDBConnectionForFind	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def dbSelectDBConnectionForFind: PartialFunction[Type, ConnectionIdentifier] = Map.empty$/;"	f
dbSelectString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dbSelectString = fieldOwner.getSingleton._dbTableNameLC + "." + _dbColumnNameLC$/;"	f
dbSelectString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  override lazy val dbSelectString =$/;"	V
dbSelectString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def dbSelectString: String$/;"	f
dbStringToKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def dbStringToKey(in: String): Box[Type] = primaryKeyField.convertKey(in)$/;"	f
dbTableName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  override def dbTableName = "oauth_server_registry"$/;"	f
dbTableName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^    override def dbTableName = "oauth_server_nonce"$/;"	f
dbTableName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    override def dbTableName = "oauth_server_token"$/;"	f
dbTableName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def dbTableName = internal_dbTableName$/;"	f
dbTableName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def dbTableName: String$/;"	f
dbTableName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala	/^  override def dbTableName: String \/\/  = "tags"$/;"	f
dbTableName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  override def dbTableName = "DOG2"$/;"	f
dbTableName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  override def dbTableName = "MIXME_UP"$/;"	f
dbTableName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  override def dbTableName = "users" \/\/ define the DB table name$/;"	f
dbTableName	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^	override def dbTableName = "Source"	$/;"	f
dbTableName	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^	override def dbTableName = "Source"$/;"	f
db_can_delete_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def db_can_delete_? : Boolean =  getSingleton.saved_?(this) && !was_deleted_?$/;"	f
dbfToFunc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    implicit def dbfToFunc(in: Box[String]): DBFuncWrapper = new DBFuncWrapper(in)$/;"	f
deDupUnderscore	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^  def deDupUnderscore(in: String): String = in.indexOf("__") match {$/;"	f
deMod	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      def deMod(in: String): String =$/;"	f
dealWithBlur	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  private def dealWithBlur(elem: Elem, blurCmd: String): Elem = {$/;"	f
dealWithPrecache	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def dealWithPrecache(ret: List[A], by: Seq[QueryParam[A]]): List[A] = {$/;"	f
death	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^	object death extends MappedInt(this) {$/;"	o
debug	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def debug(msg: => AnyRef): Unit = ()$/;"	f
debug	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def debug(msg: => AnyRef, t: => Throwable): Unit = ()$/;"	f
debug	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def debug(msg: => AnyRef) = if (isDebugEnabled) logger.debug(msg)$/;"	f
debug	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def debug(msg: => AnyRef) = rootLogger.debug(msg)$/;"	f
debug	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def debug(msg: => AnyRef, t: => Throwable) = if (isDebugEnabled) logger.debug(msg, t)$/;"	f
debug	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def debug(msg: => AnyRef, t: => Throwable) = rootLogger.debug(msg, t)$/;"	f
debug	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  override def debug(msg: => AnyRef) = if (isDebugEnabled) logger.debug(String.valueOf(msg))$/;"	f
debug	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  override def debug(msg: => AnyRef, t: => Throwable) = if (isDebugEnabled) logger.debug(String.valueOf(msg), t)$/;"	f
debug	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    override def debug(msg: => AnyRef): Unit = logger.debug(msg)$/;"	f
debug	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    override def debug(msg: => AnyRef, t: => Throwable): Unit = logger.debug(msg, t)$/;"	f
decimalNumber	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/JavaTokenParsers.scala	/^  def decimalNumber: Parser[String] = $/;"	f
decimals	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Currency.scala	/^class Currency(val amount: Long, val symbol: String, val decimals: Int) {$/;"	V
decl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^              defdecl = DEFAULT(true, defValue)$/;"	f
decl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^              defdecl = IMPLIED$/;"	f
decl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^              defdecl = REQUIRED$/;"	f
decl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^          defdecl = DEFAULT(false, defValue)$/;"	f
decl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^      attList = AttrDecl(aname, atpe, defdecl) :: attList$/;"	f
decl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^      var defdecl: DefaultDecl = null$/;"	f
decl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^    val decl = lookupElemDecl(label);$/;"	V
declCurrent	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^  var declCurrent: ElemDecl = null$/;"	v
declStack	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^  var declStack: List[ElemDecl] = Nil$/;"	v
declaration	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/EncodingHeuristics.scala	/^        val declaration = new String(data, 0, length, "8859_1");$/;"	V
decls	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/DTD.scala	/^  var decls: List[Decl] = Nil$/;"	v
decls	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^  var decls: List[Decl] = Nil$/;"	v
decode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^  def decode(src: Array[Byte], from: Int, len: Int): String = {$/;"	f
decode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^  def decode(src: Array[Byte], from: Int,$/;"	f
decode1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/Inclusion.scala	/^    def decode1(c: Int) = (c-1) % (dfa1.nstates)$/;"	f
decode2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/Inclusion.scala	/^    def decode2(c: Int) = (c-1) \/ (dfa1.nstates) \/\/integer division$/;"	f
decodeAuthorization	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthMessage.scala	/^  def decodeAuthorization(authorization: String): List[OAuthUtil.Parameter] =$/;"	f
decodeFromJSON_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  protected def decodeFromJSON_!(json: JsonAST.JObject, markFieldsAsDirty: Boolean): A = {$/;"	f
decodePercent	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  def decodePercent(s: String) = URLDecoder.decode(s, ENCODING)$/;"	f
decoded	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^      val decoded = new String(Base64.decodeBase64(auth.substring(6, auth.length).getBytes)).split(":").toList$/;"	V
decompose	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^  def decompose(a: Any)(implicit formats: Formats): JValue = {$/;"	f
decryptStream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def decryptStream(in: InputStream, key: Array[Byte]): InputStream = decryptStream(in, blowfishKeyFromBytes(key))$/;"	f
decryptStream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def decryptStream(in: InputStream, key: SecretKey): InputStream = {$/;"	f
decryptXML	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def decryptXML(in: String, key: Array[Byte]): Box[Node] =$/;"	f
decryptXML	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def decryptXML(in: String, key: SecretKey): Box[Node] =$/;"	f
deepEquals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def deepEquals(that: Any): Boolean = throw new Error()$/;"	f
deepEquals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  final def deepEquals(that: Any): Boolean = {$/;"	f
deepFindKids	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^  def deepFindKids(in: NodeSeq, prefix: String, label: String): NodeSeq = {$/;"	f
deepMkString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def deepMkString(sep: String): String = throw new Error()$/;"	f
deepMkString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def deepMkString(start: String, sep: String, end: String): String =$/;"	f
deepMkString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  final def deepMkString(sep: String): String = this.deepMkString("", sep, "")$/;"	f
deepMkString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  final def deepMkString(start: String, sep: String, end: String): String = {$/;"	f
deepToString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def deepToString(): String = throw new Error()$/;"	f
deepToString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  final def deepToString() = deepMkString(stringPrefix + "(", ", ", ")")$/;"	f
defPropBytes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^      val defPropBytes = defaultProps.toString.getBytes("UTF-8")$/;"	V
defValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^              val defValue = xAttributeValue() \/\/ default value$/;"	V
defValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^          val defValue = xAttributeValue() \/\/ default value$/;"	V
default	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Factory.scala	/^    object default extends PSettableValueHolder[() => T] {$/;"	o
default	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/DetWordAutom.scala	/^  val default: Array[Int]$/;"	V
default	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^  val default: Array[immutable.BitSet]$/;"	V
default	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^      val default = defaultR$/;"	V
default	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^          val default  = defaultArr$/;"	V
defaultArr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^        val defaultArr = new Array[immutable.BitSet](pos)$/;"	V
defaultFinder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  private val defaultFinder = getClass.getResource _$/;"	V
defaultHeaders	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var defaultHeaders: PartialFunction[(NodeSeq, Req), List[(String, String)]] = {$/;"	v
defaultHttpClient	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  lazy val defaultHttpClient = buildNoAuthClient$/;"	V
defaultNonce	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^      val defaultNonce: Seq[String] = default.flatMap(d => secure.find(_._1 == d).map(_._2))$/;"	V
defaultNonce	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    val defaultNonce = default.flatMap(d => secure.find(_._1 == d).map(_._2))$/;"	V
defaultNonce	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^    val defaultNonce = default.flatMap(d => secure.find(_._1 == d).map(_._2))$/;"	V
defaultNumberParser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Parser.scala	/^  protected var defaultNumberParser : NumericParser = {_.toDouble}$/;"	v
defaultProps	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  var defaultProps =$/;"	v
defaultR	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    val defaultR = new Array[Int](nstatesR)$/;"	V
defaultRating	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/gravatar/Gravatar.scala	/^  val defaultRating: String = "G"$/;"	V
defaultSize	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/gravatar/Gravatar.scala	/^  val defaultSize: Int = 42$/;"	V
defaultString	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^    val defaultString = default.flatMap(d => options.find(_._1 == d).map(_._2))$/;"	V
defaultString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Properties.scala	/^    val defaultString = "(c) 2002-2009 LAMP\/EPFL"$/;"	V
defaultString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Properties.scala	/^    val defaultString = "(unknown)"$/;"	V
defaultString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Properties.scala	/^    val defaultString = "UTF8" \/\/"ISO-8859-1"$/;"	V
defaultTransactionService	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  private implicit val defaultTransactionService = atomikos.AtomikosTransactionService$/;"	V
defaultValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    override val defaultValue: Box[T],$/;"	V
defaultValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    override val defaultValue: Box[Unit] = Full(())$/;"	V
defaultValue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  override lazy val defaultValue = randomString(maxLen)$/;"	V
defaultValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^    var defaultValue: A = _$/;"	v
defaultcreds	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    val defaultcreds = new UsernamePasswordCredentials(name, pwd)$/;"	V
defaultq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^  protected var defaultq: Array[List[Int]] = _ \/\/ default transitions$/;"	v
defdecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^      var defdecl: DefaultDecl = null$/;"	v
deferredSnippetFailure	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val deferredSnippetFailure: FactoryMaker[Failure => NodeSeq] =$/;"	V
deferredSnippetTimeout	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val deferredSnippetTimeout: FactoryMaker[NodeSeq] =$/;"	V
deferredSnippets	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] object deferredSnippets extends RequestVar[HashMap[String, Box[NodeSeq]]](new HashMap)$/;"	o
deftrans	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    var deftrans = new TreeMap[BitSet, BitSet]$/;"	v
del	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def del(k: A): Tree[B] = {$/;"	f
del	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def del(k: A): Tree[B]$/;"	f
del	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def del(k: A): Tree[Nothing] = this$/;"	f
delegate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    protected def delegate: List[O] = {$/;"	f
delegate_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    protected def delegate_=(d: List[O]) = _delegate = d$/;"	f
delete	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TemplateCache.scala	/^  def delete(key: K): Unit$/;"	f
delete	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TemplateCache.scala	/^  def delete(key: T) {$/;"	f
delete	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TemplateCache.scala	/^  override def delete(key: T) {$/;"	f
delete	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def delete(name: String) = {$/;"	f
delete	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def delete(old: HTTPCookie) =$/;"	f
delete	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def delete(url: String, httpClient: HttpClient,$/;"	f
delete	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def delete(url: String, params: (String, Any)*): Response =$/;"	f
delete	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val delete : Parser[Textile] = formattedLineElem('-') ^^ flatten4(Special * "del")$/;"	V
delete	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def delete(start: Int, end: Int): StringBuilder = {$/;"	f
delete	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def delete(k: A): Tree[B] = del(k)$/;"	f
delete	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def delete(_key: A) = throw new NoSuchElementException("Delete on empty tree.")$/;"	f
delete	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def delete(key: A): aNode$/;"	f
delete	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def delete(sKey:A):aNode = {$/;"	f
delete	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  private def delete(key: A): This =$/;"	f
deleteAny	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  protected def deleteAny(key: A): This =$/;"	f
deleteBtn	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/AwardSnippet.scala	/^		val deleteBtn = $/;"	V
deleteBtn	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DependencySnippet.scala	/^			val deleteBtn = $/;"	V
deleteBtn	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DiscoverySnippet.scala	/^			val deleteBtn = $/;"	V
deleteBtn	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/FieldSnippet.scala	/^		val deleteBtn = $/;"	V
deleteBtn	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/InstitutionSnippet.scala	/^		val deleteBtn = $/;"	V
deleteBtn	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/SourceSnippet.scala	/^		val deleteBtn = $/;"	V
deleteButton	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def deleteButton = S.??("Delete")$/;"	f
deleteCharAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def deleteCharAt(index: Int): StringBuilder = {$/;"	f
deleteClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def deleteClass = "delete_class"$/;"	f
deleteConnections	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/DiscoveryDependency.scala	/^	def deleteConnections(discovery: Discovery) = {$/;"	f
deleteCookie	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def deleteCookie(cookie: HTTPCookie) {$/;"	f
deleteCookie	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def deleteCookie(name: String) {$/;"	f
deleteDiscovery	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DependencySnippet.scala	/^	def deleteDiscovery() = {$/;"	f
deleteDiscovery	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DiscoverySnippet.scala	/^	def deleteDiscovery() = {$/;"	f
deleteField	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/FieldSnippet.scala	/^	def deleteField() = {$/;"	f
deleteId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def deleteId = "delete_page"$/;"	f
deleteInstitution	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/InstitutionSnippet.scala	/^	def deleteInstitution() = {$/;"	f
deleteIt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^      def deleteIt(file: File) {$/;"	f
deleteMenuLoc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def deleteMenuLoc: Box[Menu] = {$/;"	f
deleteMenuLocParams	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def deleteMenuLocParams: List[Loc.LocParam[CrudType]] = Nil$/;"	f
deleteMenuName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def deleteMenuName = S.??("Delete")+" "+displayName$/;"	f
deletePath	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  lazy val deletePath = Prefix ::: List(DeleteItem)$/;"	V
deletePathString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  lazy val deletePathString: String = mp(deletePath)$/;"	V
deleteTemplate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def deleteTemplate(): NodeSeq = pageWrapper(_deleteTemplate)$/;"	f
deleteWithValidDBState	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Award.scala	/^	private def deleteWithValidDBState(in: Award) = $/;"	f
deleteWithValidDBState	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Discovery.scala	/^	private def deleteWithValidDBState(in: Discovery) = {$/;"	f
deleteWithValidDBState	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Institution.scala	/^	private def deleteWithValidDBState(in: Institution) = {	$/;"	f
deleteWithValidDBState	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^	private def deleteWithValidDBState(in: Lab) = {		$/;"	f
deleteWithValidDBState	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^	private def deleteWithValidDBState(in: Scientist) = {		$/;"	f
delete_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^  def delete_? : Boolean = false$/;"	f
delete_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^  override def delete_? = true$/;"	f
delete_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  override def delete_! = {$/;"	f
delete_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    def delete_! = {$/;"	f
delete_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^  abstract override def delete_! = {$/;"	f
delete_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def delete_! : Boolean = {$/;"	f
delete_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def delete_! : Boolean$/;"	f
delete_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def delete_!(toDelete : A): Boolean =$/;"	f
delete_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    def delete_! = {$/;"	f
delete_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^  override def delete_! = {$/;"	f
delete_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/DBMetaRecord.scala	/^  def delete_!(inst: BaseRecord): Boolean = {$/;"	f
delete_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/DBRecord.scala	/^  def delete_! : Boolean = {$/;"	f
deleted	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^    val deleted = toRemove filter (_.delete_!)$/;"	V
deleted	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashSet.scala	/^  protected var deleted: Boolean = _$/;"	v
deleted	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  private var deleted = 0; $/;"	v
delim	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/StdLexical.scala	/^  protected def delim: Parser[Token] = {$/;"	f
delim	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/StdLexical.scala	/^  protected def delim: Parser[Token] = {$/;"	f
delimArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/SimpleTokenizer.scala	/^  private def delimArray: Array[Boolean] = {$/;"	f
delimiter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/EncodingHeuristics.scala	/^        var delimiter: Char = c$/;"	v
delimiters	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/StdLexical.scala	/^  val delimiters = new HashSet[String]$/;"	V
delimiters	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/StdLexical.scala	/^  val delimiters = new HashSet[String]$/;"	V
deliveryTag	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^    val deliveryTag = env.getDeliveryTag$/;"	V
delta	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^      val delta = JsDelta(time, cmd)$/;"	V
delta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarMonthView.scala	/^    val delta = cal.get(DAY_OF_WEEK) - meta.firstDayOfWeek$/;"	V
delta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarWeekView.scala	/^    val delta = cal.get(DAY_OF_WEEK) - meta.firstDayOfWeek$/;"	V
delta	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/DetWordAutom.scala	/^  val delta: Array[Map[T,Int]]$/;"	V
delta	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^  val delta: Array[Map[T, immutable.BitSet]]$/;"	V
delta	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^      val delta = deltaR$/;"	V
delta	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    val delta    = new mutable.HashMap[BitSet,$/;"	V
delta	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^          val delta    = deltaArr$/;"	V
delta1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^        var delta1: immutable.TreeMap[Int, Map[_labelT, List[Int]]] =$/;"	v
deltaArr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^        val deltaArr = new Array[Map[_labelT, immutable.BitSet]](pos)$/;"	V
deltaR	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    val deltaR = new Array[Map[T,Int]](nstatesR)$/;"	V
deltaSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^  protected var deltaSize: Int = _$/;"	v
deltaq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^  protected var deltaq: Array[mutable.HashMap[_labelT,List[Int]]] = _ \/\/ delta$/;"	v
deltas	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private var deltas: List[Delta] = Nil$/;"	v
dependencies	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Discovery.scala	/^	def dependencies = $/;"	f
dependency	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/DiscoveryDependency.scala	/^	object dependency extends MappedLongForeignKey(this, Discovery)  $/;"	o
dependent	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/DiscoveryDependency.scala	/^	object dependent extends MappedLongForeignKey(this, Discovery)  $/;"	o
deprecated	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/deprecated.scala	/^class deprecated extends StaticAnnotation {}$/;"	c
depth	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^  private var depth = 0;$/;"	v
dequeue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^  def dequeue: (A, Queue[A]) = {$/;"	f
dequeue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^  def dequeue(): A =$/;"	f
dequeue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueueProxy.scala	/^  override def dequeue(): A = self.dequeue$/;"	f
dequeue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Queue.scala	/^  def dequeue(): A =$/;"	f
dequeue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/QueueProxy.scala	/^  override def dequeue(): A = self.dequeue$/;"	f
dequeue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedPriorityQueue.scala	/^  override def dequeue(): A = synchronized { super.dequeue }$/;"	f
dequeue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedQueue.scala	/^  override def dequeue(): A = synchronized { super.dequeue }$/;"	f
dequeueAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Queue.scala	/^  def dequeueAll(p: A => Boolean): Seq[A] = {$/;"	f
dequeueFirst	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Queue.scala	/^  def dequeueFirst(p: A => Boolean): Option[A] =$/;"	f
derby	/Users/Mads/Dev/logicOfScientificDiscovery/project/build/LogicOfScientificDiscovery.scala	/^	val derby = "org.apache.derby" % "derby" % "10.2.2.0" % "runtime"$/;"	V
deregisterWizardSession	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  private[wizard] def deregisterWizardSession(id: String) {$/;"	f
descendant	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Xml.scala	/^      def descendant(n: Node): List[Node] = n match {$/;"	f
descendant	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  def descendant: List[Node] =$/;"	f
descendant_or_self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  def descendant_or_self: List[Node] = this :: descendant$/;"	f
descr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  var descr: String = ""$/;"	v
description	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/EnumWithDescription.scala	/^                def description = inDescription$/;"	f
description	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/EnumWithDescription.scala	/^    def description: String$/;"	f
description	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarItem.scala	/^  def description(description: String) = CalendarItem(id, start, calendarType, Empty, Empty, Box.legacyNullTest(description), Empty)$/;"	f
description	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Discovery.scala	/^	object description extends MappedTextarea(this, 600){$/;"	o
description	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/BeanDescription.scala	/^class BeanDescription(val description: String) extends Annotation$/;"	V
deserialize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^    def deserialize(array: Array[Byte]) =$/;"	f
deserialize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  def deserialize: PartialFunction[(String, JObject), Any] = Map()$/;"	f
deserialize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    override def deserialize: PartialFunction[(String, JObject), Any] = {$/;"	f
deserializer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^        val deserializer = formats.typeHints.deserialize$/;"	V
designation	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    abstract class AbstractCurrency(val designation: String) extends Ordered[Currency] {$/;"	V
dest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    val dest = new Array[Char](newLength)$/;"	V
dest1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    var dest1 = adapt(dest)$/;"	v
destroy	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^                               val destroy: Box[JsCmd],$/;"	V
destroy	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  def destroy = {$/;"	f
destroyTables_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^  def destroyTables_!!(dbId: ConnectionIdentifier, logFunc: (=> AnyRef) => Unit, stables: BaseMetaMapper*): Unit =$/;"	f
destroyTables_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^  def destroyTables_!!(dbId: ConnectionIdentifier,cnt: Int, logFunc: (=> AnyRef) => Unit, stables: List[BaseMetaMapper]) {$/;"	f
destroyTables_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^  def destroyTables_!!(logFunc: (=> AnyRef) => Unit, stables: BaseMetaMapper*): Unit = destroyTables_!!(DefaultConnectionIdentifier, logFunc, stables :_*)$/;"	f
detach	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/Role.scala	/^  def detach: Box[Role] = {$/;"	f
details	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^        val details = connect()$/;"	V
detectContentType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResourceServer.scala	/^  def detectContentType(path: String): String = {$/;"	f
determineContentType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var determineContentType: PartialFunction[(Box[Req], Box[String]), String] = {$/;"	v
determinize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^  def determinize: DetWordAutom[T] = {$/;"	f
devMode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  lazy val devMode: Boolean = mode == RunModes.Development$/;"	V
devMode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  protected def devMode = false$/;"	f
df	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^            val df = nf.asInstanceOf[DecimalFormat]$/;"	V
dfa	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  def dfa = {$/;"	f
dfa	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^  protected var dfa:          DetWordAutom[ElemName] = _$/;"	v
diHash	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  private val diHash: CHash[String, Function0[_]] = new CHash$/;"	V
dict	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^    val dict = new OpenHashMap[K, V];$/;"	V
dict	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  class PicklerState(val stream: Array[Byte], val dict: PicklerEnv)$/;"	V
dict	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  class UnPicklerState(val stream: Array[Byte], val dict: UnPicklerEnv)$/;"	V
diff	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Diff.scala	/^    def diff(other: JValue) = Diff.diff(this, other)$/;"	f
diff	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Diff.scala	/^  def diff(val1: JValue, val2: JValue): Diff = (val1, val2) match {$/;"	f
diff	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^                    val diff = ns - state$/;"	V
diff	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^      val diff = lastServiceTime - httpSession.lastAccessedTime$/;"	V
diff	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def diff[B >: A](that: List[B]): List[B] = this -- that$/;"	f
diffFields	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Diff.scala	/^  private def diffFields(vs1: List[JField], vs2: List[JField]) = {$/;"	f
diffRec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Diff.scala	/^    def diffRec(xleft: List[JField], yleft: List[JField]): Diff = xleft match {$/;"	f
diffRec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Diff.scala	/^    def diffRec(xleft: List[JValue], yleft: List[JValue]): Diff = (xleft, yleft) match {$/;"	f
diffVals	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Diff.scala	/^  private def diffVals(vs1: List[JValue], vs2: List[JValue]) = {$/;"	f
digit	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def digit = elem("digit", isNum)$/;"	f
digit	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val digit = elem("digit", c => c >= '0' && c <= '9')$/;"	V
digit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/Lexical.scala	/^  def digit = elem("digit", _.isDigit)$/;"	f
digit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/Lexical.scala	/^  def digit = elem("digit", _.isDigit)$/;"	f
digit19	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val digit19 = elem("digit", c => c >= '1' && c <= '9')$/;"	V
digits	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val digits = rep1(digit)$/;"	V
dimension	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val dimension: Parser[Textile] = accept(" x ") ^^^ Dimension$/;"	V
dir	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/JettyTestServer.scala	/^    val dir = System.getProperties().getProperty("net.liftweb.webapptest.src.test.webapp", "src\/test\/webapp")$/;"	V
directChildren	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Xml.scala	/^    def directChildren(n: Node) = n.child.filter(c => c.isInstanceOf[Elem])$/;"	f
dirty	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  private[record] var dirty = false$/;"	v
dirty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/CachedFileStorage.scala	/^  protected var dirty = false$/;"	v
dirty_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def dirty_? = !dbPrimaryKey_? && _dirty_?$/;"	f
dirty_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  override protected def dirty_?(b: Boolean) = { \/\/ issue 165$/;"	f
dirty_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  protected def dirty_?(b: Boolean) = _dirty_? = b$/;"	f
dirty_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def dirty_? : Boolean = getSingleton.dirty_?(this)$/;"	f
dirty_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def dirty_?(toTest: A): Boolean = mappedFieldList.exists($/;"	f
dirty_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def dirty_? : Boolean = dirty$/;"	f
dirty_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  protected def dirty_?(b: Boolean) = dirty = b$/;"	f
discard	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def discard[T](p: Parser[T]): Parser[Unit] = p ^^ {x => ()}$/;"	f
discard	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  implicit def discard[T](p: => Parser[T]) = new UnitParser {$/;"	f
discovered	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^    val discovered = httpReq.session.attribute("openid-disc") match {$/;"	V
discovered	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^    val discovered = manager.associate(discoveries)$/;"	V
discoveries	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^    val discoveries = manager.discover(userSuppliedString)$/;"	V
discoveries	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^	def discoveries = DiscoverySource.findAll(By(DiscoverySource.source,this.id)).map(_.discovery.obj.open_!)$/;"	f
discoveries	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DependencySnippet.scala	/^	object discoveries extends RequestVar[List[Discovery]](List[Discovery]())$/;"	o
discoveries	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DiscoverySnippet.scala	/^	object discoveries extends RequestVar[List[Discovery]](List[Discovery]())$/;"	o
discoveriesJSON	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/api/RestAPI.scala	/^	def discoveriesJSON(): Box[LiftResponse] = {$/;"	f
discovery	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/DiscoverySource.scala	/^	object discovery extends MappedLongForeignKey(this, Discovery)  $/;"	o
discovery	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DependencySnippet.scala	/^	object discovery extends RequestVar[Discovery]( defaultDiscovery() )$/;"	o
discovery	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DiscoverySnippet.scala	/^	object discovery extends RequestVar[Discovery]( defaultDiscovery() )$/;"	o
dispName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    val dispName = divName + "_display"$/;"	V
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/A.scala	/^  def dispatch : DispatchIt = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/CSS.scala	/^  def dispatch: DispatchIt = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Children.scala	/^  def dispatch : DispatchIt = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Comet.scala	/^  def dispatch : DispatchIt = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Embed.scala	/^  def dispatch : DispatchIt = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Form.scala	/^  def dispatch : DispatchIt = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/HTML5.scala	/^  def dispatch : DispatchIt = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Ignore.scala	/^  def dispatch : DispatchIt = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^  def dispatch : DispatchIt = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Loc.scala	/^  def dispatch : DispatchIt = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^  def dispatch: DispatchIt = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msg.scala	/^  def dispatch: DispatchIt = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msgs.scala	/^  def dispatch: DispatchIt = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/SkipDocType.scala	/^  def dispatch : DispatchIt = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Surround.scala	/^  def dispatch : DispatchIt = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Tail.scala	/^   def dispatch: DispatchIt = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/TestCond.scala	/^  def dispatch : DispatchIt = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/VersionInfo.scala	/^  def dispatch : DispatchIt = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/WithParam.scala	/^  def dispatch : DispatchIt = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/XmlGroup.scala	/^  def dispatch : DispatchIt = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val dispatch = RulesSeq[DispatchPF]$/;"	V
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  def dispatch = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^      val dispatch: (Boolean, Box[LiftResponse]) =$/;"	V
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def dispatch: PartialFunction[String, () => Box[NodeSeq]]$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/StatefulSnippet.scala	/^  def dispatch: DispatchIt$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    def dispatch: PartialFunction[String, NodeSeq => NodeSeq]$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  lazy val dispatch: LiftRules.DispatchPF = {$/;"	V
dispatch	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def dispatch: List[LiftRules.DispatchPF] = Nil$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  override def dispatch: List[LiftRules.DispatchPF] = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/UploadProgressDemo.scala	/^  def dispatch = { $/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  def dispatch = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^abstract class DispatchRosterListener(val dispatch: LiftActor) extends RosterListener$/;"	V
dispatch	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^    val dispatch: PartialFunction[String, NodeSeq => NodeSeq] = {$/;"	V
dispatch	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/ModelView.scala	/^  def dispatch = {$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Paginator.scala	/^  override def dispatch = super.dispatch orElse Map("paginate" -> paginator.paginate _ )$/;"	f
dispatch	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^    def dispatch = {$/;"	f
dispatch	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/api/RestAPI.scala	/^	def dispatch: LiftRules.DispatchPF = {$/;"	f
dispatchPF	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  def dispatchPF: LiftRules.DispatchPF = NamedPF("Login default") {$/;"	f
dispatchStatefulRequest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  private def dispatchStatefulRequest(req: Req,$/;"	f
dispatchTable	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  private[http] def dispatchTable(req: HTTPRequest): List[DispatchPF] = {$/;"	f
display	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/AutoCompleteDemo.scala	/^  def display(xhtml: NodeSeq) :NodeSeq = {$/;"	f
display	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    lazy val display = name match {$/;"	V
displayAwards	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/AwardSnippet.scala	/^	def displayAwards(xhtml: NodeSeq): NodeSeq = {$/;"	f
displayDiscoveries	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DiscoverySnippet.scala	/^	def displayDiscoveries(xhtml: NodeSeq): NodeSeq = {$/;"	f
displayFieldAsLineElement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  var displayFieldAsLineElement: NodeSeq => NodeSeq = in => <td>{in}<\/td>$/;"	v
displayFieldAsLineElement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  var displayFieldAsLineElement: NodeSeq => NodeSeq =$/;"	v
displayFields	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/FieldSnippet.scala	/^	def displayFields(xhtml: NodeSeq): NodeSeq = {$/;"	f
displayForm	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/AwardSnippet.scala	/^	def displayForm(xhtml: NodeSeq): NodeSeq = {$/;"	f
displayForm	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DependencySnippet.scala	/^	def displayForm(xhtml: NodeSeq): NodeSeq = {$/;"	f
displayForm	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DiscoverySnippet.scala	/^	def displayForm(xhtml: NodeSeq): NodeSeq = {$/;"	f
displayForm	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/FieldSnippet.scala	/^	def displayForm(xhtml: NodeSeq): NodeSeq = {$/;"	f
displayForm	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/InstitutionSnippet.scala	/^	def displayForm(xhtml: NodeSeq): NodeSeq = {$/;"	f
displayHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  def displayHtml: NodeSeq = displayNameHtml openOr Text(displayName)$/;"	f
displayHtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def displayHtml: NodeSeq = Text(calcPrefix.head)$/;"	f
displayInstitutions	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/InstitutionSnippet.scala	/^	def displayInstitutions(xhtml: NodeSeq): NodeSeq = {$/;"	f
displayLabForm	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/SourceSnippet.scala	/^	def displayLabForm(xhtml: NodeSeq): NodeSeq = {$/;"	f
displayMarkup	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    def displayMarkup : NodeSeq =$/;"	f
displayName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  def displayName: String = name$/;"	f
displayName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def displayName = displayHtml.text$/;"	f
displayName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  override def displayName: String = name$/;"	f
displayName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    override def displayName = fieldOwner.emailDisplayName$/;"	f
displayName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    override def displayName = fieldOwner.firstNameDisplayName$/;"	f
displayName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    override def displayName = fieldOwner.lastNameDisplayName$/;"	f
displayName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    override def displayName = fieldOwner.localeDisplayName$/;"	f
displayName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    override def displayName = fieldOwner.passwordDisplayName$/;"	f
displayName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    override def displayName = fieldOwner.timezoneDisplayName$/;"	f
displayName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^    override def displayName = "Personal Essay"$/;"	f
displayName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def displayName = name$/;"	f
displayNameHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  def displayNameHtml: Box[NodeSeq] = Empty$/;"	f
displayNameToHeaderElement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  var displayNameToHeaderElement: String => NodeSeq = in => <th>{in}<\/th>$/;"	v
displayNameToHeaderElement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  var displayNameToHeaderElement: String => NodeSeq =$/;"	v
displayRecord	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^        def displayRecord(entry: CrudType)(in: NodeSeq): NodeSeq = {$/;"	f
displayScientistForm	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/SourceSnippet.scala	/^	def displayScientistForm(xhtml: NodeSeq): NodeSeq = {$/;"	f
displaySources	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/SourceSnippet.scala	/^	def displaySources(xhtml: NodeSeq): NodeSeq = {$/;"	f
displayStats	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/Stats.scala	/^	def displayStats(xhtml: NodeSeq): NodeSeq = {$/;"	f
displayUser	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  def displayUser(id: UserType): NodeSeq$/;"	f
displayUser	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  def displayUser(in: UserType): NodeSeq = Text("Welcome "+in)$/;"	f
distinct	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def distinct: String =$/;"	f
distinct	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def distinct(in: Seq[QueryParam[A]]): String =$/;"	f
div	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/test/scala/net/lift/textile/TextileSpec.scala	/^      val div =$/;"	V
div	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarMonthView.scala	/^            val div = <div>{$/;"	V
divName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    val divName = Helpers.nextFuncName$/;"	V
divide	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object divide(Object arg1, Object arg2) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
divideInUnits	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^      def divideInUnits(millis: Long) = scales.foldLeft[(Long, List[(Long, String)])]((millis, Nil)){ (total, div) =>$/;"	f
dm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^    val dm = (dbUser, dbPassword) match {$/;"	V
dm	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/bootstrap/liftweb/Boot.scala	/^	val dm = DriverManager.getConnection("jdbc:mysql:\/\/localhost:8889\/logicOfScientificDiscovery?user=root&password=root&characterEncoding=UTF-8")$/;"	V
dmap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def dmap[B](dflt: => B)(f: A => B): B = dflt$/;"	f
dmap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def dmap[B](dflt: => B)(f: A => B): B = f(value)$/;"	f
doAround	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private def doAround[B](ar: List[LoanWrapper])(f: => B): B =$/;"	f
doClose	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/IoHelpers.scala	/^  def doClose[T](is: _root_.java.io.Closeable*)(f : => T): T = {$/;"	f
doCometActorCleanup	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] def doCometActorCleanup(): Unit = {$/;"	f
doContinuation	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def doContinuation(req: HTTPRequest, timeout: Long) = req suspend timeout$/;"	f
doCrudAll	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^    def doCrudAll(in: NodeSeq): NodeSeq = {$/;"	f
doEnd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    override protected def doEnd = {$/;"	f
doEnd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    protected def doEnd : Boolean = false$/;"	f
doField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  protected def doField(inst: OwnerType, meth: Method, func: PartialFunction[MappedField[FieldType, OwnerType], Unit]) {$/;"	f
doFields	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^            def doFields(html: NodeSeq): NodeSeq =$/;"	f
doFields	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^      def doFields(html: NodeSeq): NodeSeq =$/;"	f
doFilter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/ServletFilterProvider.scala	/^  def doFilter(req: ServletRequest, res: ServletResponse, chain: FilterChain) = {$/;"	f
doFilter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def doFilter(req: ServletRequest, res: ServletResponse) {println("doing nothing")}$/;"	f
doHeaderItems	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^      def doHeaderItems(in: NodeSeq): NodeSeq =$/;"	f
doHtmlLine	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def doHtmlLine(toLine: A): NodeSeq =$/;"	f
doIgnore	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    def doIgnore() = {$/;"	f
doInclude	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    def doInclude() = {$/;"	f
doIt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^    def doIt(in: NodeSeq) {$/;"	f
doIt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^    def doIt(in: List[T], cnt: Int): List[List[T]] = ((in, cnt): @unchecked) match {$/;"	f
doIt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^      def doIt: Boolean = {$/;"	f
doNewMessage	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/MailerSpec.scala	/^  private def doNewMessage(f: => Unit): MimeMessage = {$/;"	f
doNotExpandBeyond	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  protected def doNotExpandBeyond = 20$/;"	f
doNotices	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResponseShortcutException.scala	/^class ResponseShortcutException(_response: => LiftResponse, val doNotices: Boolean) extends Exception("Shortcut") {$/;"	V
doNotify	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^  def doNotify(): NodeSeq = synchronized {$/;"	f
doPostCommit	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def doPostCommit(func: () => Unit): A = {$/;"	f
doPostCommit	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/DBRecord.scala	/^  def doPostCommit(func: () => Unit) {$/;"	f
doRender	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def doRender(session: LiftSession): NodeSeq =$/;"	f
doRow	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^          def doRow(in: NodeSeq): NodeSeq =$/;"	f
doRowItem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^        def doRowItem(in: NodeSeq): NodeSeq = fieldsForList.map(ffl => getActualField(c, ffl)).flatMap($/;"	f
doRows	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^      def doRows(in: NodeSeq): NodeSeq =$/;"	f
doService	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  def doService(req: Req, response: HTTPResponse): Boolean = {$/;"	f
doSnippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private[http] def doSnippet[T](name: String)(f: => T): T = {$/;"	f
doStatefulRewrite	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private def doStatefulRewrite(old: Req): Req = {$/;"	f
doSubmit	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^            def doSubmit() = {$/;"	f
doSubmit	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^      def doSubmit() = item.validate match {$/;"	f
doSync	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  def doSync[F](f: => F): F$/;"	f
doSync	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    def doSync[F](f: => F): F = f \/\/ no sync necessary for RequestVars... always on the same thread$/;"	f
doSync	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  def doSync[F](f: => F): F = S.session match {$/;"	f
doSync	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  def doSync[F](f: => F): F = f \/\/ no sync necessary for RequestVars... always on the same thread$/;"	f
doSync	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    def doSync[F](f: => F): F = f \/\/ no sync necessary for RequestVars... always on the same thread$/;"	f
doWith	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  def doWith[F](newVal: T)(f: => F): F = {$/;"	f
doWith	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  def doWith[F](addl: PValueHolder[Maker[T]])(f: => F): F = {$/;"	f
doWith	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  def doWith[F](vFunc: () => T)(f: => F): F =$/;"	f
doWith	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  def doWith[F](value: T)(f: => F): F =$/;"	f
doWith	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ThreadGlobal.scala	/^  def doWith[R](x: T)(f : => R) : R = {$/;"	f
doWith	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def doWith[F, T](builder: FormBuilderLocator[T])(f: => F): F =$/;"	f
doWith	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def doWith[R](f: (String) => String)(block: => R): R = {$/;"	f
doWithConnectionManagers	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def doWithConnectionManagers[T](mgrs: (ConnectionIdentifier, ConnectionManager)*)(f: => T): T = {$/;"	f
doWithResource	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def doWithResource[T](name: String)(f: InputStream => T): Box[T] =$/;"	f
doc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^    val doc = docType.map(_ + "\\n") openOr ""$/;"	V
doc	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingParser.scala	/^    val doc = cpa.document();$/;"	V
doc	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  protected var doc: Document = null$/;"	v
docElem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Document.scala	/^  var docElem: Node = _$/;"	v
docType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  def docType = _docType$/;"	f
docType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def docType = Empty$/;"	f
docType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def docType: Box[String]$/;"	f
docType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  var docType: PartialFunction[Req, Box[String]] = {$/;"	v
docType_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  def docType_=(in: Box[String]) {$/;"	f
document	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val document : Parser[Lst] = rep(paragraph) ^^ Lst$/;"	V
document	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def document(): Document = {$/;"	f
doesMatch_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def doesMatch_?(req: Req): Boolean = {$/;"	f
doesn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^    "return false if the class doesn't have 'name' as a method" in {$/;"	c
doesntContainUnderscores	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      val doesntContainUnderscores = forAllProp(underscoredStrings)((name: String) => !camelCase(name).contains("_"))$/;"	V
dog2id	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  object dog2id extends MappedLongIndex[Dog2](this.asInstanceOf[MapperType]) {$/;"	o
dogs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^            val dogs = Dog.findAll(By(Dog.name,"fido"),OrderBy(Dog.name,Ascending),$/;"	V
dogs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^            val dogs = Dog2.findAll(By(Dog2.name,"fido"),OrderBy(Dog2.name,Ascending),$/;"	V
dogs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val dogs = Dog.findAll(By(Dog.name,"fido"), PreCache(Dog.owner, false))$/;"	V
dogs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val dogs = Dog.findAll(By(Dog.name,"fido"),OrderBy(Dog.name,Ascending),$/;"	V
dogs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val dogs = Dog2.findAll(By(Dog2.name,"fido"), PreCache(Dog2.owner, false))$/;"	V
dogs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val dogs = Dog2.findAll(By(Dog2.name,"fido"),OrderBy(Dog2.name,Ascending),$/;"	V
doit	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^      def doit = makeFormElement("submit", func, attrs: _*) % ("value" -> value)$/;"	f
doit	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    def doit = {$/;"	f
domConf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^        val domConf = new DOMConfigurator$/;"	V
domConf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^      val domConf = new DOMConfigurator$/;"	V
domain	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def domain = "www.paypal.com"$/;"	f
domain	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def domain = "www.sandbox.paypal.com"$/;"	f
domain	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def domain: String$/;"	f
done	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^    private var done = false$/;"	v
done	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    var done: List[() => Unit] = Nil$/;"	v
done	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^        var done = false$/;"	v
doneBoot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile private[http] var doneBoot = false;$/;"	v
doneWithSave	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  protected[mapper] def doneWithSave() {orgData = data}$/;"	f
doom	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  def doom = TransactionContext.setRollbackOnly$/;"	f
dotLen	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  private def dotLen(in: String): String = in match {$/;"	f
double	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  @deprecated type double  = scala.Double$/;"	T
double2Double	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def double2Double(x: Double) = new java.lang.Double(x)$/;"	f
double2bigDecimal	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  implicit def double2bigDecimal(d: Double): BigDecimal = apply(d)$/;"	f
double2jvalue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  implicit def double2jvalue(x: Double) = JDouble(x)$/;"	f
doubleColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def doubleColumnType = "DOUBLE PRECISION"$/;"	f
doubleColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def doubleColumnType = "DOUBLE"$/;"	f
doubleColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def doubleColumnType = "FLOAT"$/;"	f
doubleColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def doubleColumnType = "FLOAT(38)"$/;"	f
doubleColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def doubleColumnType = "NUMBER"$/;"	f
doubleColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def doubleColumnType: String$/;"	f
doubleVal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^        var doubleVal = false$/;"	v
doubleValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^        def doubleValue = amount.doubleValue$/;"	f
doubleValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  def doubleValue = this.bigDecimal.doubleValue$/;"	f
doubleValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def doubleValue = this.bigInteger.doubleValue$/;"	f
doubleWrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def doubleWrapper(x: Double) = new runtime.RichDouble(x)$/;"	f
double_quote_attr	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val double_quote_attr: Parser[Attribute] =$/;"	V
doubles	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^    val doubles = Array($/;"	V
down	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    private val down = step(start) < start$/;"	V
down	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    val down = step(start) < start$/;"	V
down	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^    val down = step(start) < start$/;"	V
dr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/EnumWithDescriptionSpec.scala	/^    val dr = Value("DR", "Dr")$/;"	V
dr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^    val dr = this.bigInteger.divideAndRemainder(that.bigInteger)$/;"	V
drain	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^  def drain(f : T => Unit) = while(!isEmpty) f(pop);$/;"	f
driver	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^      val driver = DriverType.calcDriver(connection)$/;"	V
driverType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  lazy val driverType: DriverType = DriverType.calcDriver(connection)$/;"	V
drop	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def drop(cnt: Int) = ParsePath(partPath.drop(cnt), suffix, absolute, endSlash)$/;"	f
drop	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    override def drop(n: Int): CharSequenceReader =$/;"	f
drop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^     override def drop( from: Int) = slice(from, length)$/;"	f
drop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^     override def drop(from : Int) : Projection[A] = projection.drop(from)$/;"	f
drop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def drop(n: Int): Collection[A] = self drop n$/;"	f
drop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  @deprecated def drop(n: Int): Collection[A] =$/;"	f
drop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  @deprecated override def drop(n: Int) = self drop n$/;"	f
drop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def drop(n: Int): Iterator[A] =$/;"	f
drop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def drop(n: Int): List[A] = {$/;"	f
drop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def drop( from: Int): MutableProjection[A] = slice(from, length)$/;"	f
drop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^  override def drop( from: Int): RandomAccessSeq[A] = slice(from, length)$/;"	f
drop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeqProxy.scala	/^  override def drop(from: Int): RandomAccessSeq[A] = self.drop(from)$/;"	f
drop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  override def drop(n: Int): Seq[A] = {$/;"	f
drop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def drop(n: Int): Seq[A] = self drop n$/;"	f
drop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override final def drop(n: Int): Stream[A] = {$/;"	f
drop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  override def drop(from: Int): RichString = slice(from, self.length)$/;"	f
drop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/CharSequenceReader.scala	/^  override def drop(n: Int): CharSequenceReader = $/;"	f
drop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/PagedSeqReader.scala	/^  override def drop(n: Int): PagedSeqReader = $/;"	f
drop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/Reader.scala	/^  def drop(n: Int): Reader[T] = {$/;"	f
drop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/StreamReader.scala	/^  override def drop(n: Int): StreamReader = {$/;"	f
dropPort	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^    val dropPort = (scheme.equals("http") && uri.getPort() == 80) || (scheme.equals("https") && uri.getPort() == 443)$/;"	V
dropRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def dropRight(n: Int): List[A] = {$/;"	f
dropWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^     override def dropWhile(p: A => Boolean) = projection.dropWhile(p)$/;"	f
dropWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^     override def dropWhile(p: A => Boolean) = {$/;"	f
dropWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def dropWhile(p: A => Boolean): Collection[A] = self dropWhile p$/;"	f
dropWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def dropWhile(p: A => Boolean): Collection[A] = $/;"	f
dropWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def dropWhile(p: A => Boolean) = self dropWhile p$/;"	f
dropWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def dropWhile(p: A => Boolean): Iterator[A] =$/;"	f
dropWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def dropWhile(p: A => Boolean): List[A] =$/;"	f
dropWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  override def dropWhile(p: A => Boolean): Seq[A] = super.dropWhile(p).asInstanceOf[Seq[A]]$/;"	f
dropWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def dropWhile(p: A => Boolean): Seq[A] = self dropWhile p$/;"	f
dropWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override final def dropWhile(p: A => Boolean): Stream[A] = {$/;"	f
ds	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/SimpleTokenizer.scala	/^    val ds = List.fromString(delimiters)$/;"	V
dst	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^    val dst = new Array[Byte](s.length() * 3)$/;"	V
dtd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Document.scala	/^  var dtd: scala.xml.dtd.DTD = _$/;"	v
dtd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  var dtd: DTD = null$/;"	v
dump	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Marshal.scala	/^  def dump[A](o: A)(implicit m: Manifest[A]): Array[Byte] = {$/;"	f
dumpRequestResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  val dumpRequestResponse = Props.getBool("dump.request.response", false)$/;"	V
dup	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^  def dup = push(peek);$/;"	f
duplicate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def duplicate(newOwner: String): AFuncHolder = new ProxyFuncHolder(this, Full(newOwner))$/;"	f
duplicate	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def duplicate: (Iterator[A], Iterator[A]) = {$/;"	f
duration	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^  def duration : Long$/;"	f
dw	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^      def dw[A](in: List[A])(f: A => Boolean): List[A] = in match {$/;"	f
e	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val e = ('e' ~ '-' ^^ {case _ => -1}) | ('e' ~ '+' ^^ {case _ => 1}) | ('e' ^^ {case _ => 1}) |$/;"	V
e	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                  val e = xmlb.asInstanceOf[Failure].exception$/;"	V
e	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/ScriptRenderer.scala	/^                if (!e) var e = window.event;$/;"	v
e	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^        val e: Array[Object] = r.getEntries.toArray.asInstanceOf[Array[Object]]$/;"	V
e	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^      val e = unown(delegate(n))$/;"	V
e	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^              val e = Iterator.this.next$/;"	V
e	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^          val e = Iterator.this.next$/;"	V
e	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^      val e = next$/;"	V
e	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    val e = end min this.length$/;"	V
e	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    val e = this.elements$/;"	V
e	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^    val e = findEntry(key)$/;"	V
e	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^    val e = m.findEntry(key)$/;"	V
e	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^    val e = if (_end == UndeterminedEnd) _end else start + _end$/;"	V
e	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/DefaultMapModel.scala	/^    val e = findEntry(key)$/;"	V
e	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^      var e = oldTable(i)$/;"	v
e	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^    var e = table(h).asInstanceOf[Entry]$/;"	v
e	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashMap.scala	/^      val e = new Entry(key, value)$/;"	V
e	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashMap.scala	/^    val e = findEntry(key)$/;"	V
e	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^        val e = it.next      $/;"	V
e	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^          val e = new CircularIncludeException($/;"	V
e1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^        val e1 = e.next$/;"	V
e1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^        var e1 = e.next$/;"	v
eMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    val eMap = Map.empty[String, List[String]]$/;"	V
eachField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def eachField(what: A, toRun: List[(A) => Any])(f: (LifecycleCallbacks) => Any) {$/;"	f
eachField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Util.scala	/^  def eachField[T<:net.liftweb.mapper.Mapper[T]]($/;"	f
eachFound	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^  def eachFound: List[List[String]] = {$/;"	f
eagerEval	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val eagerEval: Boolean = (attrs.get("eager_eval").map(toBoolean) or$/;"	V
early	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val early = RulesSeq[(HTTPRequest) => Any]$/;"	V
early	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^          val early = LiftRules.preAccessControlResponse_!!.firstFull(request)$/;"	V
early	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    def early(what: List[Loc.LocParam[T]]): Box[LiftResponse] = what match {$/;"	f
earlyResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val earlyResponse = new RulesSeq[Req => Box[LiftResponse]] with FirstBox[Req, LiftResponse]$/;"	V
earlyResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def earlyResponse: Box[LiftResponse] = {$/;"	f
edit	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def edit = {$/;"	f
edit	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/ModelView.scala	/^  def edit(name: String) = {$/;"	f
edit	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/ModelView.scala	/^  def edit(ns: NodeSeq): NodeSeq$/;"	f
edit	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  def edit(xhtml: NodeSeq) = {$/;"	f
editAction	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/ModelView.scala	/^  def editAction(e: T) = TheBindParam("edit", link("edit", ()=>load(e), Text(?("Edit"))))$/;"	f
editAction	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/ModelView.scala	/^  lazy val editAction = TheBindParam("edit", snippet.link("edit", ()=>load, Text(?("Edit"))))$/;"	V
editButton	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def editButton = S.??("Save")$/;"	f
editClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def editClass = "edit_class"$/;"	f
editErrorClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def editErrorClass = "edit_error_class"$/;"	f
editFunc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  object editFunc extends RequestVar[Box[() => NodeSeq]](Empty)$/;"	o
editId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def editId = "edit_page"$/;"	f
editMarkup	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    def editMarkup : NodeSeq = {$/;"	f
editMenuLoc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def editMenuLoc: Box[Menu] = {$/;"	f
editMenuLocParams	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def editMenuLocParams: List[Loc.LocParam[CrudType]] = Nil$/;"	f
editMenuName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def editMenuName = S.??("Edit")+" "+displayName$/;"	f
editName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    val editName = divName + "_edit"$/;"	V
editPath	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  lazy val editPath = Prefix ::: List(EditItem)$/;"	V
editPath	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  lazy val editPath = thePath(editSuffix)$/;"	V
editPathString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  lazy val editPathString: String = mp(editPath)$/;"	V
editSnippet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def editSnippet(xhtml: NodeSeq): NodeSeq = {$/;"	f
editSnippetCallback	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def editSnippetCallback(obj: A) { obj.save }$/;"	f
editSnippetSetup	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def editSnippetSetup: A = {$/;"	f
editSuffix	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def editSuffix = "edit"$/;"	f
editTemplate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def editTemplate(): NodeSeq = pageWrapper(_editTemplate)$/;"	f
editUserMenuLoc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def editUserMenuLoc: Box[Menu] =$/;"	f
editXhtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def editXhtml(user: ModelType) = {$/;"	f
editableField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/AjaxMapper.scala	/^  def editableField = true$/;"	f
editable_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    def editable_? = true$/;"	f
eh	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^    val eh = exceptionHandler$/;"	V
el	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DateTimeField.scala	/^    var el = elem$/;"	v
el	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EnumField.scala	/^    var el = elem$/;"	v
el	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/LocaleField.scala	/^    var el = elem$/;"	v
el	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/NumericField.scala	/^    var el = elem$/;"	v
el	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^    var el = elem$/;"	v
el	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^    var el = elem$/;"	v
el	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TextareaField.scala	/^    var el = elem$/;"	v
el	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TimeZoneField.scala	/^    var el = elem$/;"	v
el	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  class UnboundElement[N <: NameElement](private val el: N) extends NameElement {$/;"	V
el	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/NodeFactory.scala	/^    val el = create(pre, name, attrSeq, scope, children);$/;"	V
ele	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingParser.scala	/^    val ele = doc.docElem;$/;"	V
elem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BooleanField.scala	/^  private def elem = SHtml.checkbox(value, this.set _, "tabIndex" -> tabIndex.toString)$/;"	f
elem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DateTimeField.scala	/^  private def elem =$/;"	f
elem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EnumField.scala	/^  private def elem = SHtml.selectObj[Int](buildDisplayList, Full(toInt), this.setFromAny(_)) % ("tabindex" -> tabIndex.toString)$/;"	f
elem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/LocaleField.scala	/^  private def elem = SHtml.select(Locale.getAvailableLocales.$/;"	f
elem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/NumericField.scala	/^  private def elem = S.fmapFunc{s: List[String] => {$/;"	f
elem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^  private def elem = S.fmapFunc(SFuncHolder(this.setFromAny(_))){$/;"	f
elem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^  private def elem = S.fmapFunc(SFuncHolder(this.setFromAny(_))) {$/;"	f
elem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TextareaField.scala	/^  private def elem = S.fmapFunc(SFuncHolder(this.setFromAny(_))){$/;"	f
elem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TimeZoneField.scala	/^  private def elem = SHtml.select(TimeZoneField.timeZoneList, Full(value), set) % ("tabindex" -> tabIndex.toString)$/;"	f
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      var elem = head$/;"	v
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^  protected class Node(override protected val elem: A) extends ListSet[A] {$/;"	V
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^  protected def elem: A = throw new NoSuchElementException("Set has no elements");$/;"	f
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SingleLinkedList.scala	/^  var elem: A$/;"	v
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/Channel.scala	/^    var elem: a = _$/;"	v
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BooleanRef.java	/^    public boolean elem;$/;"	f	class:BooleanRef
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    val elem = _elem.asInstanceOf[AnyRef]$/;"	V
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ByteRef.java	/^    public byte elem;$/;"	f	class:ByteRef
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/CharRef.java	/^    public char elem;$/;"	f	class:CharRef
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/DoubleRef.java	/^    public double elem;$/;"	f	class:DoubleRef
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/FloatRef.java	/^    public float elem;$/;"	f	class:FloatRef
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/IntRef.java	/^    public int elem;$/;"	f	class:IntRef
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/LongRef.java	/^    public long elem;$/;"	f	class:LongRef
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ObjectRef.java	/^    public Object elem;$/;"	f	class:ObjectRef
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^      val elem = x.productElement(i)$/;"	V
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ShortRef.java	/^    public short elem;$/;"	f	class:ShortRef
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def elem(e: Elem): Parser[Elem] = accept(e)$/;"	f
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def elem(kind: String, p: Elem => Boolean) = acceptIf(p)(inEl => kind+" expected")$/;"	f
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def elem(e: Elem): Parser[Elem] = new Parser[Elem] {$/;"	f
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def elem(kind: String, p: Elem => Boolean) = new Parser[Elem] {$/;"	f
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/DTD.scala	/^  var elem: Map[String, ElemDecl]    = new HashMap[String, ElemDecl]()$/;"	v
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingHandler.scala	/^  def elem(pos: Int, pre: String, label: String, attrs: MetaData,$/;"	f
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/DefaultMarkupHandler.scala	/^  def elem(pos: Int, pre: String, label: String, attrs: MetaData,$/;"	f
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^  def elem(pos: Int, pre: String, label: String, attrs: MetaData, scope: NamespaceBinding, args: NodeSeq): NodeSeq$/;"	f
elem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^    final def elem(pos: Int, pre: String, label: String, attrs: MetaData, pscope: NamespaceBinding, nodes: NodeSeq): NodeSeq = $/;"	f
elemClass	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  private var elemClass: Class[_] = null$/;"	v
elemCount	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    var elemCount = 0;$/;"	v
elemDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^  def elemDecl(n: String, cmstr: String): Unit = ()$/;"	f
elemDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^  final override def elemDecl(name: String, cmstr: String) {$/;"	f
elemEnd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^  def elemEnd(pos: Int, pre: String, label: String): Unit = ()$/;"	f
elemEnd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^  override def elemEnd(pos: Int, pre: String, label: String) {$/;"	f
elemEnd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^    override def elemEnd(pos: Int, pre: String, label: String) {$/;"	f
elemEquals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^  protected def elemEquals(key1: A, key2: A): Boolean = (key1 == key2)$/;"	f
elemHashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^  protected def elemHashCode(elem: A) = elem.hashCode()$/;"	f
elemHashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^  protected def elemHashCode(key: A) = key.hashCode()$/;"	f
elemInABox	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  implicit def elemInABox(in: Elem): Box[Elem] = Full(in)$/;"	f
elemName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  val elemName = getClass.getSuperclass.getName.split("\\\\.").toList.last$/;"	V
elemStart	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^  def elemStart(pos: Int, pre: String, label: String, attrs: MetaData, scope: NamespaceBinding): Unit = ()$/;"	f
elemStart	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^  override def elemStart(pos: Int, pre: String, label: String, attrs: MetaData, scope:NamespaceBinding) {$/;"	f
elemStart	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^    override def elemStart(pos: Int, pre: String, label: String, attrs: MetaData, scope: NamespaceBinding) {$/;"	f
elemToFull	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  implicit def elemToFull(in: Elem): Box[NodeSeq] = Full(in)$/;"	f
element	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  class UnderBinder[binderType  <: NameElement, elementT <% Mappable[elementT]](val scope: Scope[binderType], private[Binders] val element: elementT) extends Element with BindingSensitive {$/;"	V
element	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def element(pscope: NamespaceBinding): NodeSeq = {$/;"	f
element1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def element1(pscope: NamespaceBinding): NodeSeq = {$/;"	f
elementToString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def elementToString: String = element.toString$/;"	f
elements	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def elements: Iterator[A] = Iterator.empty$/;"	f
elements	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def elements: Iterator[A] = Iterator.fromValues(value)$/;"	f
elements	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  def elements: Iterator[(K, V)] = {$/;"	f
elements	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val elements = repsep(theValue, spaces ~ ',' ~ spaces)$/;"	V
elements	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    def elements = children.elements$/;"	f
elements	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    def elements = delegate.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  override def elements: Iterator[A] = throw new Error()$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def elements: Iterator[A] = self.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def elements = new Iterator[Value] {$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  final def elements: Iterator[Value] = updateCache.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^      def elements = Projection.this.elements ++ rest.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^      def elements = Projection.this.elements.filter(p)$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^      def elements = Projection.this.elements.flatMap(a => f(a).elements)$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^      def elements = Projection.this.elements.map(f)$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^      def elements = Projection.this.elements.takeWhile(p)$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    def elements = Iterable.this.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    def elements = Iterator.empty$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def elements: Iterator[A]$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def elements = self.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def elements: Iterator[A] = new Iterator[A] {$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^  def elements: Iterator[A] = $/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def elements = Iterator.empty$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def elements = RandomAccessSeq.this.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^  override def elements : Iterator[A] = new BufferedIterator.Advanced[A] {$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^          def elements : Iterator[B] = Projection.this.elements ++ (that.elements:Iterator[B])$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^      def elements = Projection.this.elements.flatMap(a => f(a).elements)$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^      def elements = Projection.this.elements.map(f)$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^      override def elements = Projection.this.elements.filter(p)$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^      override def elements = Projection.this.elements.takeWhile(p)$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    def elements = Seq.this.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override def elements: Iterator[A] = new Iterator[A] {$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^   final def elements: Iterator[Int] = new Iterator[Int] {$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^    def elements = Map.this.elements.filter(x => p(x._1))$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^    def elements = Map.this.elements.map(_._1)$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^    def elements = Map.this.elements.map(e => (e._1, f(e._2)))$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^    override def elements = Map.this.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedMap.scala	/^    def elements = SortedMap.this.elements.map(_._1)$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/EmptyMap.scala	/^  def elements: Iterator[(A, B)] = Iterator.empty$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/EmptySet.scala	/^  def elements: Iterator[A] = Iterator.empty$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^  def elements = synchronized {$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashSet.scala	/^  override def elements = synchronized {$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^  def elements: Iterator[A] = new Elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def elements : Iterator[(Int, T)] = this match {$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^  def elements: Iterator[(A,B)] =$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^  def elements: Iterator[A] = new Iterator[A] {$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def elements : Iterator[(Long, T)] = this match {$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^    def elements = Map.this.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map1.scala	/^  def elements = Iterator.single((key1, value1))$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map2.scala	/^  def elements = Iterator.fromValues($/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map3.scala	/^  def elements = Iterator.fromValues($/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map4.scala	/^  def elements = Iterator.fromValues($/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^  override def elements: Iterator[A] = (out ::: in.reverse).elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def elements : ImmutableIterator[Pair[A,B]] = $/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def elements : ImmutableIterator[Pair[A,B]];$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def elements : ImmutableIterator[Pair[A,Nothing]] = ImmutableIterator.empty$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set1.scala	/^  def elements: Iterator[A] = $/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set2.scala	/^  def elements: Iterator[A] = $/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set3.scala	/^  def elements: Iterator[A] = $/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set4.scala	/^  def elements: Iterator[A] = $/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^  override def elements: Iterator[A] = reverse.reverseElements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  def elements : Iterator[(Key, Value)] = new AssocMapIterator(this);$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  def elements : Iterator[(Key, Value)] = new Iterator[(Key, Value)]{$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^  def elements: Iterator[Pair[A, B]] = tree.elements.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^  def elements: Iterator[A] = tree.elements.elements map (_._1)$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^    override def elements: Iterator[(A, B)] =$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^  def elements: Iterator[(A, B)] = Iterator.empty$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    override def elements : BufferIterator[Int,A] = new DefaultBufferIterator$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    override def elements : BufferIterator[Int,A] = new RangeIterator;$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    override def elements : SeqIterator[Int,A] = new DefaultSeqIterator$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    override def elements = Buffer.this.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    override def elements = Buffer.this.elements.map[B](f);$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  override def elements : BufferIterator[Int,A] = new DefaultBufferIterator$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^    override def elements = super[BufferWrapper].elements;$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^  override def elements : BufferIterator[Int,A] = new IteratorWrapper(underlying.listIterator);$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Collection.scala	/^    override def elements = Collection.this.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/CollectionWrapper.scala	/^  override def elements : MutableIterator[A] = super.elements;$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/IterableWrapper.scala	/^  override def elements : MutableIterator[A] = new MutableIterator.Wrapper[A](underlying.iterator);$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/LinkedList.scala	/^  override def elements = super[BufferWrapper].elements;$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    override def elements = Map.this.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    override def elements = Map.this.elements.map(_._1);$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    override def elements = Map.this.elements.map(k => Tuple2(k._1, f(k._2)));$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    override def elements = {$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^  override def elements : MutableIterator[Tuple2[K,E]];$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^  override def elements: MutableIterator[Tuple2[K,E]] = new IteratorWrapper$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^    def elements = {$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^    override def elements = MutableIterable.this.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^    override def elements = MutableIterable.this.elements.map(f)$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^  override def elements : MutableIterator[A];$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^    override def elements : SeqIterator[Int,A] = new FilterIterator(MutableSeq.this.elements);$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^    override def elements = MutableSeq.this.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^    override def elements = MutableSeq.this.elements.map(f);$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^  override def elements : SeqIterator[Int,A] = new DefaultSeqIterator$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^    override def elements = Set.this.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    override def elements = SortedMap.this.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^    override def elements = SortedSet.this.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSetWrapper.scala	/^    override def elements : MutableIterator[A] = super[SortedSetWrapper].elements;$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^  def elements = new Iterator[T]{$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BufferProxy.scala	/^  override def elements: Iterator[A] = self.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/DefaultMapModel.scala	/^  def elements = entries map {e => (e.key, e.value)}$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^  def elements = new Iterator[A] {$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/History.scala	/^  def elements: Iterator[(B, A)] = log.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableMapAdaptor.scala	/^  def elements: Iterator[(A, B)] = imap.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableSetAdaptor.scala	/^  def elements: Iterator[A] = set.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^  def elements: Iterator[(A, B)] = new Iterator[(A, B)] {$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaSetAdaptor.scala	/^  def elements: Iterator[A] = new Iterator[A] {$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashMap.scala	/^  override def elements = ordered.reverse.elements map {e => (e.key, e.value)}$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashSet.scala	/^  override def elements = ordered.reverse.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^  override def elements = new Iterator[A] {$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^    override def elements = Map.this.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MutableList.scala	/^  override def elements: Iterator[A] =$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  def elements = new Iterator[(Key, Value)]{$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^  override def elements: Iterator[A] = new Iterator[A] {$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueueProxy.scala	/^  override def elements: Iterator[A] = self.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/QueueProxy.scala	/^  override def elements: Iterator[A] = self.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ResizableArray.scala	/^  override def elements: Iterator[A] = new Iterator[A] {$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Set.scala	/^    override def elements = Set.this.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SingleLinkedList.scala	/^  override def elements: Iterator[A] = new Iterator[A] {$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Stack.scala	/^  override def elements: Iterator[A] = stack.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/StackProxy.scala	/^  override def elements: Iterator[A] = self.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedBuffer.scala	/^  abstract override def elements: Iterator[A] = synchronized {$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  abstract override def elements: Iterator[(A, B)] = synchronized {$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedPriorityQueue.scala	/^  override def elements: Iterator[A] = synchronized { super.elements }$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedStack.scala	/^  override def elements: Iterator[A] = synchronized { super.elements }$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  override def elements = new AnyIterator$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def elements = substitution.keys    $/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def elements: Iterator[MetaData] = new Iterator[MetaData] {$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^  override def elements = theSeq.elements$/;"	f
elements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  override def elements = Iterator.empty$/;"	f
elementsSlow	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def elementsSlow: Iterator[Pair[A, B]] = $/;"	f
elementsSlow	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def elementsSlow: Iterator[Pair[A, B]];$/;"	f
elementsSlow	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def elementsSlow: Iterator[Pair[A, Nothing]] = Iterator.empty$/;"	f
elementsSlow	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^  def elementsSlow = tree.elementsSlow map (_._1)$/;"	f
elems	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    val elems = elements$/;"	V
elems	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    val elems = this$/;"	V
elems	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    val elems = elements$/;"	V
elems	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    val elems = elements$/;"	V
elems	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^      var elems = iter.elements.toList.reverse$/;"	v
elems	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SingleLinkedList.scala	/^    var elems = SingleLinkedList.this$/;"	v
elems	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^    val elems = elements$/;"	V
elemsLeft	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JsonASTTest.scala	/^      val elemsLeft = removed filter {$/;"	V
elipsis	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val elipsis: Parser[Textile] = accept("...") ^^^ Elipsis$/;"	V
elwood	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val elwood = Dog2.find(By(Dog2.name, "Elwood")).open_!$/;"	V
elwood	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val elwood = Mixer.find(By(Mixer.name, "Elwood")).open_!$/;"	V
elwood	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val elwood = SampleModel.find(By(SampleModel.firstName, "Elwood")).open_!$/;"	V
em	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/EntityManagerSynchronization.scala	/^  val em: EntityManager,$/;"	V
em	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  val em: EntityManager = transactionService.entityManagerFactory.createEntityManager$/;"	V
em	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^    val em = TransactionContext.getEntityManager$/;"	V
em	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-jpa/src/main/scala/net/liftweb/jpa/RequestVarEM.scala	/^  protected def em = emVar.is$/;"	f
emDash	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val emDash: Parser[Textile] = accept(" -- ") ^^^ EmDash$/;"	V
emVar	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-jpa/src/main/scala/net/liftweb/jpa/RequestVarEM.scala	/^  object emVar extends TransientRequestVar[EntityManager](openEM()) {$/;"	o
em_left	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val em_left : Parser[Attribute] = rep1(elem('(')) ^^ {xs => Em(xs.length)}$/;"	V
em_right	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val em_right : Parser[Attribute] = rep1(elem(')')) ^^ {xs => Em(-xs.length)}$/;"	V
email	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^        val email: String = user.email$/;"	V
email	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    val email: String = user.email$/;"	V
email	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  object email extends MappedEmail(this, 48) {$/;"	o
emailDisplayName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def emailDisplayName = ??("Email")$/;"	f
emailFrom	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def emailFrom = "noreply@"+S.hostName$/;"	f
emailPattern	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedEmail.scala	/^  val emailPattern = Pattern.compile("^[a-z0-9._%\\\\-+]+@(?:[a-z0-9\\\\-]+\\\\.)+[a-z]{2,4}$")$/;"	V
emailPattern	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EmailField.scala	/^  val emailPattern = Pattern.compile("^[a-z0-9._%-]+@(?:[a-z0-9-]+\\\\.)+[a-z]{2,4}$")$/;"	V
emph	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val emph : Parser[Textile] = formattedLineElem('_') ^^ flatten4(Emph)$/;"	V
empty	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxSpec.scala	/^      val empty: Box[Int] = Empty$/;"	V
empty	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxSpec.scala	/^      var empty = false$/;"	v
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def empty[B]: scala.collection.immutable.Set[B] = new scala.collection.immutable.HashSet[B];$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  val empty = new Iterable[Nothing] {$/;"	V
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  val empty = new Iterator[Nothing] {$/;"	V
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^  val empty : RandomAccessSeq[Nothing] = new RandomAccessSeq.Projection[Nothing] {$/;"	V
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  val empty : Seq[Nothing] = RandomAccessSeq.empty$/;"	V
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  val empty: Stream[Nothing] = new Definite[Nothing] {$/;"	V
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/EmptyMap.scala	/^  def empty[C]: Map[A, C] = new EmptyMap[A, C]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/EmptySet.scala	/^  def empty[C]: Set[C] = new EmptySet[C]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^  def empty[A, B] = new HashMap[A, B]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^  def empty[C]: Map[A, C] = new EmptyMap[A, C]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashSet.scala	/^  def empty[A] = new HashSet[A]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashSet.scala	/^  def empty[C]: Set[C] = new EmptySet[C]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^  def empty : ImmutableIterator[Nothing] = Empty$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def empty[S] : IntMap[S] = IntMap.Nil;$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def empty[T] : IntMap[T]  = IntMap.Nil;$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^  def empty[A, B] = new ListMap[A, B]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^  def empty[C] = ListMap.empty[A, C]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^  def empty[A] = new ListSet[A]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^  def empty[B] = ListSet.empty[B]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def empty[S] : LongMap[S] = LongMap.Nil;$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def empty[T] : LongMap[T]  = LongMap.Nil;$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^    def empty[C] = Map.this.empty$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^  def empty[A, B]: Map[A, B] = new EmptyMap[A, B]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^  def empty[C]: Map[A, C]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map1.scala	/^  def empty[B]: Map[A, B] = new EmptyMap[A, B]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map2.scala	/^  def empty[C]: Map[A, C] = new EmptyMap[A, C]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map3.scala	/^  def empty[C]: Map[A, C] = new EmptyMap[A, C]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map4.scala	/^  def empty[C]: Map[A, C] = new EmptyMap[A, C]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set.scala	/^  def empty[A]: Set[A] = new EmptySet[A]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set.scala	/^  def empty[B]: Set[B]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set1.scala	/^  def empty[C]: Set[C] = new EmptySet[C]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set2.scala	/^  def empty[C]: Set[C] = new EmptySet[C]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set3.scala	/^  def empty[C]: Set[C] = new EmptySet[C]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set4.scala	/^  def empty[C]: Set[C] = new EmptySet[C]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/SortedMap.scala	/^  override def empty[C]: SortedMap[A, C]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^    val empty = GBLeaf[A,B]();$/;"	V
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  def empty[Key, Value] : AssocMap[Key, Value] = _empty.asInstanceOf[AssocMap[Key, Value]]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  def empty[Key, Value] : TreeHashMap[Key, Value] = _empty.asInstanceOf[TreeHashMap[Key, Value]];$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  def empty[V] = AssocMap.empty[Key, V]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  def empty[V] = TreeHashMap.empty[Key, V];$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^  def empty[A <% Ordered[A], B] = new TreeMap[A, B]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^  def empty[C] = TreeMap.empty[A, C]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^  def empty[A <% Ordered[A]] = new TreeSet[A]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^  def empty[B]: Set[B] = ListSet.empty[B]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^  def empty[A <% Ordered[A], B] = new UnbalancedTreeMap[A, B]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^  def empty[C] = UnbalancedTreeMap.empty[A, C]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashMap.scala	/^  def empty[A, B] = new HashMap[A, B]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashSet.scala	/^  def empty[A] = new HashSet[A]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashMap.scala	/^  def empty[A, B] = new LinkedHashMap[A, B]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashSet.scala	/^  def empty[A] = new LinkedHashSet[A]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^  def empty[A, B]: Map[A, B] = new HashMap[A, B]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Set.scala	/^  def empty[A]: Set[A] = new HashSet[A]$/;"	f
empty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^  def empty = DocNil$/;"	f
emptyProp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JsonASTTest.scala	/^    val emptyProp = (x: JValue) => (x diff x) == Diff(JNothing, JNothing, JNothing)$/;"	V
emptySet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^  final val emptySet:immutable.Set[Int] = new immutable.TreeSet[Int]()$/;"	V
emptyState	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def emptyState: State$/;"	f
emptyString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxSpec.scala	/^      def emptyString(s: Box[String]) = s foreach {c: String => empty = c.isEmpty}$/;"	f
empty_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Xml.scala	/^    def empty_?(node: Node) = node.child.isEmpty$/;"	f
enDash	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val enDash: Parser[Textile] = accept(" - ") ^^^ EnDash$/;"	V
enableContainerSessions	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var enableContainerSessions = true$/;"	v
enableLiftGC	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var enableLiftGC = true;$/;"	v
enableStackTrace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def enableStackTrace: Boolean = true$/;"	f
enabled	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  def enabled = _enabled.is$/;"	f
enabled	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def enabled: Int$/;"	f
enabled	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/test/scala/net/liftweb/oauth/OAuthSignatureMethodSpec.scala	/^    def enabled: Int = 0$/;"	f
encJs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^    def encJs: String = {$/;"	f
encJs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/StringHelpersSpec.scala	/^  "The SuperString class encJs method" should {$/;"	c
enclosed	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def enclosed(delim: Char, what: String, pred: Char => Boolean) = delim ~> str(what, {c => c != delim && pred(c)}) <~ delim$/;"	f
encode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Position.scala	/^  final def encode(line: Int, column: Int): Int = {$/;"	f
encode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^  def encode(ch1: Int): Array[Byte] = {$/;"	f
encode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^  def encode(s: String): Array[Byte] = {$/;"	f
encode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^  def encode(s: String, dst: Array[Byte], to: Int): Int =$/;"	f
encode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^  def encode(src: Array[Char], from: Int, dst: Array[Byte], to: Int, len: Int): Int = {$/;"	f
encode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/Inclusion.scala	/^    def encode(q1: Int, q2: Int) = 1 + q1 + q2 * dfa1.nstates$/;"	f
encodeAsJSON_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  protected def encodeAsJSON_! (toEncode: A): JsonAST.JObject = {$/;"	f
encodeAsJson	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  def encodeAsJson(): JsonAST.JObject = SampleModel.encodeAsJson(this)$/;"	f
encodeAsJson	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  def encodeAsJson(in: SampleModel): JsonAST.JObject = encodeAsJSON_!(in)$/;"	f
encodeRedirectURL	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def encodeRedirectURL(url: String): String = encodeRedirectUrl(url)$/;"	f
encodeRedirectUrl	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def encodeRedirectUrl(url: String): String = {$/;"	f
encodeURL	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def encodeURL(url: String) = {$/;"	f
encodeURL	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def encodeURL(url: String): String = encodeUrl(url)$/;"	f
encodeUrl	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPResponse.scala	/^  def encodeUrl(url: String): String$/;"	f
encodeUrl	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPResponseServlet.scala	/^  def encodeUrl(url: String): String = resp encodeURL url$/;"	f
encodeUrl	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def encodeUrl(url: String): String = {$/;"	f
encoding	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^    val encoding: String = if (!includeXmlVersion) "" else _encoding$/;"	V
encoding	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Document.scala	/^  var encoding: Option[String] = _$/;"	v
encoding	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^  val encoding  = "ISO-8859-1"$/;"	V
encoding	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^          val encoding = atts.getValue("encoding");$/;"	V
encoding	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^    var encoding = encoding1$/;"	v
encodingFromHeader	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^      var encodingFromHeader = uc.getContentEncoding()$/;"	v
encodingName	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/EncodingHeuristics.scala	/^        val encodingName = new StringBuffer()$/;"	V
encodingString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Properties.scala	/^  val encodingString: String = {$/;"	V
encryptStream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def encryptStream(in: InputStream, key: Array[Byte]): InputStream= encryptStream(in, blowfishKeyFromBytes(key))$/;"	f
encryptStream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def encryptStream(in: InputStream, key: SecretKey): InputStream = {$/;"	f
encryptXML	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def encryptXML(in: Node, key: Array[Byte]): String =$/;"	f
encryptXML	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def encryptXML(in: Node, key: SecretKey): String =$/;"	f
encrypted	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/SecurityHelpersSpec.scala	/^      val encrypted = blowfishEncrypt("hello world", key)$/;"	V
end	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^          val end = if (i == curSegmentIdx) cur else s.length+1$/;"	V
end	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^    val end = res.map(_.at).reduceLeft((a: Long, b: Long) => if (a > b) a else b)$/;"	V
end	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarItem.scala	/^  def end (end: Calendar) = CalendarItem(id, start, calendarType, Box.legacyNullTest(end), Empty, Empty, Empty)$/;"	f
end	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^    val end = (year(timeNow) - minAge)$/;"	V
end	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^      val end = if (start + length < xs.length) start + length else xs.length$/;"	V
end	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^            val end = j + targetCount - 1$/;"	V
end	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  final def end = start + filled$/;"	f
end	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Buffer.scala	/^    val end = i + len$/;"	V
end	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^    val end = from + len$/;"	V
end	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def end(i: Int) = ends(i)$/;"	f
end	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def end(i: Int): Int = matcher.end(i)$/;"	f
end	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def end(i: Int): Int$/;"	f
end	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def end: Int = matcher.end$/;"	f
end	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def end: Int$/;"	f
end	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    val end = matcher.end$/;"	V
end0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    val end0 = if (end > count) count else end$/;"	V
endDTD	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^  def endDTD(n: String): Unit = ()$/;"	f
endDTD	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^  override def endDTD(n:String) = {$/;"	f
endElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^  override def endElement(uri: String, localName: String, qName: String) {$/;"	f
endElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^  def endElement(namespaceURI: String, localName:String, qualifiedName: String) {$/;"	f
endElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  override def endElement(uri: String , _localName: String , qname: String): Unit = {$/;"	f
endEntity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^  def endEntity(name: String) {$/;"	f
endFlot	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^   val endFlot = "});"$/;"	V
endIndex	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarUtils.scala	/^      val endIndex = em match {$/;"	V
endOfInput	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BufferedSource.scala	/^  var endOfInput = false$/;"	v
endOfLine	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val endOfLine: Parser[Textile] = (('\\r' ~ '\\n') | '\\n') ^^^ EOL$/;"	V
endOfLine	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^   def endOfLine () = {$/;"	f
endOfPath	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    lazy val endOfPath = path.last$/;"	V
endPrefixMapping	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^  override def endPrefixMapping(prefix: String) {$/;"	f
endPrefixMapping	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^  def endPrefixMapping(prefix: String) {}$/;"	f
endTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  protected def endTag(n: Node) = {$/;"	f
endch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    val endch = ch$/;"	V
ended	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    private var ended = false$/;"	v
ending	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile private[http] var ending = false$/;"	v
ends	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    private lazy val ends: Array[Int] = $/;"	V
endsWith	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  def endsWith[B](that: Seq[B]): Boolean =$/;"	f
endsWith	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def endsWith[B](that: Seq[B]) = self endsWith that$/;"	f
endsWith	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  override def endsWith[B](that: Seq[B]) = that match {$/;"	f
enqueue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^  def enqueue[B >: A](elem: B) = mkQueue(elem :: in, out)$/;"	f
enqueue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^  def enqueue[B >: A](iter: Iterable[B]) = {$/;"	f
enqueue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^  def enqueue(elems: A*): Unit = (this ++= elems)$/;"	f
enqueue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueueProxy.scala	/^  override def enqueue(elems: A*): Unit = self ++= elems$/;"	f
enqueue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Queue.scala	/^  def enqueue(elems: A*): Unit = (this ++= elems)$/;"	f
enqueue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/QueueProxy.scala	/^  override def enqueue(elems: A*): Unit = self ++= elems$/;"	f
enqueue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedPriorityQueue.scala	/^  override def enqueue(elems: A*): Unit = synchronized { super.++=(elems) }$/;"	f
enqueue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedQueue.scala	/^  override def enqueue(elems: A*): Unit = synchronized { super.++=(elems) }$/;"	f
enqueue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/Reference.scala	/^  def enqueue(): Boolean$/;"	f
enqueue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/ReferenceWrapper.scala	/^  def enqueue = underlying.enqueue$/;"	f
ensureCapacity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def ensureCapacity(n: Int) {$/;"	f
ensureCapacity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BitSet.scala	/^  def ensureCapacity(n: Int): Unit =$/;"	f
ensureColumns	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^  private def ensureColumns(performWrite: Boolean, logFunc: (=> AnyRef) => Unit, table: BaseMetaMapper, connection: SuperConnection, actualTableNames: HashMap[String, String]): Collector = {$/;"	f
ensureConstraints	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^  private def ensureConstraints(performWrite: Boolean, logFunc: (=> AnyRef) => Unit, table: BaseMetaMapper, connection: SuperConnection, actualTableNames: HashMap[String, String]): Collector = {$/;"	f
ensureIndexes	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^  private def ensureIndexes(performWrite: Boolean, logFunc: (=> AnyRef) => Unit, table: BaseMetaMapper, connection: SuperConnection, actualTableNames: HashMap[String, String]): Collector = {$/;"	f
ensureSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ResizableArray.scala	/^  protected def ensureSize(n: Int) {$/;"	f
ensureSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichStringBuilder.scala	/^  def ensureSize(size : Int) = self.ensureCapacity(size)$/;"	f
ensureTable	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^  private def ensureTable(performWrite: Boolean, logFunc: (=> AnyRef) => Unit, table: BaseMetaMapper, connection: SuperConnection, actualTableNames: HashMap[String, String]): Collector = {$/;"	f
ensuring	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^    def ensuring(cond: A => Boolean): A = { assert(cond(x)); x }$/;"	f
ensuring	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^    def ensuring(cond: A => Boolean, msg: Any): A = { assert(cond(x), msg); x }$/;"	f
ensuring	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^    def ensuring(cond: Boolean): A = { assert(cond); x }$/;"	f
ensuring	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^    def ensuring(cond: Boolean, msg: Any): A = { assert(cond, msg); x }$/;"	f
ent	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/DTD.scala	/^  var ent:  Map[String, EntityDecl]  = new HashMap[String, EntityDecl]()$/;"	v
ent	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^  var ent: Map[String, EntityDecl] = new HashMap[String, EntityDecl]()$/;"	v
ent	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^              val ent = xName$/;"	V
ent	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^      val ent = xName$/;"	V
entList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^  val entList = List(("quot",34), ("amp",38), ("lt",60), ("gt",62), ("nbsp",160), ("iexcl",161), ("cent",162), ("pound",163), ("curren",164), ("yen",165),$/;"	V
entList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/XhtmlEntities.scala	/^  val entList = List(("quot",34), ("amp",38), ("lt",60), ("gt",62), ("nbsp",160), ("iexcl",161), ("cent",162), ("pound",163), ("curren",164), ("yen",165),$/;"	V
entMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^  val entMap: Map[String, Char] = Map.empty ++ entList.map{ case (name, value) => (name, value.toChar)}$/;"	V
entMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/XhtmlEntities.scala	/^  val entMap: Map[String, Char] = Map.empty ++ entList.map { case (name, value) => (name, value.toChar)}$/;"	V
entdef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    var entdef: EntityDef = null$/;"	v
enterComet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] def enterComet(what: AnyActor): Unit = synchronized {$/;"	f
entities	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^  val entities = entList.map{case (name, value) => (name, new ParsedEntityDecl(name, new IntDef(value.toChar.toString)))}$/;"	V
entities	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^  private val entities = new Stack[String]()$/;"	V
entities	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/XhtmlEntities.scala	/^  val entities = entList.$/;"	V
entity	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/ModelView.scala	/^class ModelView[T <: Mapper[T]](var entity: T, val snippet: ModelSnippet[T]) {$/;"	v
entityDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def entityDecl() = {$/;"	f
entityManagerFactory	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^  def entityManagerFactory: EntityManagerFactory$/;"	f
entityManagerFactory	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^  lazy val entityManagerFactory = Persistence.createEntityManagerFactory(JPA_PERSISTENT_UNIT)$/;"	V
entityRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/Binder.scala	/^  final def entityRef(pos: Int, n: String) =$/;"	f
entityRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingHandler.scala	/^  def entityRef(pos: Int, n: String) =$/;"	f
entityRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/DefaultMarkupHandler.scala	/^  def entityRef(pos: Int, n: String) = NodeSeq.Empty$/;"	f
entityRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^  def entityRef(pos: Int, n: String): NodeSeq$/;"	f
entityRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^    def entityRef(pos: Int, n: String): NodeSeq = {$/;"	f
entries	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/bootstrap/liftweb/Boot.scala	/^    val entries = Menu(Loc("Home", List("index"), "Home")) ::$/;"	V
entries	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/test/scala/bootstrap/liftweb/Boot.scala	/^    val entries = Menu(Loc("Home", List("index"), "Home")) ::$/;"	V
entries	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/bootstrap/liftweb/Boot.scala	/^    val entries = Menu(Loc("Home", List("index"), "Home"),$/;"	V
entries	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/bootstrap/liftweb/Boot.scala	/^    val entries = Menu(Loc("Home", List("index"), "Home")) ::$/;"	V
entries	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/bootstrap/liftweb/Boot.scala	/^    val entries = 	List(	Menu(Loc("Home", List("index"), "Home")),$/;"	V
entries	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  protected def entries: Iterator[B] =$/;"	f
entries	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/DefaultMapModel.scala	/^  protected def entries: Iterator[Entry]$/;"	f
entries	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^  protected def entries: Iterator[Entry] = new Iterator[Entry] {$/;"	f
entriesAdded	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^      def entriesAdded(a: Collection[String]) {$/;"	f
entriesDeleted	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^      def entriesDeleted(a: Collection[String]) {$/;"	f
entriesUpdated	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^      def entriesUpdated(a: Collection[String]) {$/;"	f
entry	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    def entry(act: (MyType, StV, StV, Meta#Event) => Any): Meta#State = {_entry = act :: _entry; this}$/;"	f
entry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^      val entry = oldtable(i)$/;"	V
entry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^    var entry = table(h)$/;"	v
entry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^    val entry = table(index);$/;"	V
entry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^    var entry = table(index);$/;"	v
entryExists	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MultiMap.scala	/^  def entryExists(key: A, p: B => Boolean): Boolean = get(key) match {$/;"	f
enum	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/EnumWithDescription.scala	/^    val enum = new Enumeration {$/;"	V
enum	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^  val field: MappedEnum[KMType, Enum], val enum: Enum) extends JxNodeBase with JsonBridge[KeyType, Enum#Value, KMType] {$/;"	V
enum	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^  val field: MappedField[FieldType, KMType], val enum: List[(String, FieldType)]) extends JxNodeBase with JsonBridge[KeyType, FieldType, KMType] {$/;"	V
enum	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^abstract class MappedEnum[T<:Mapper[T], ENUM <: Enumeration](val fieldOwner: T, val enum: ENUM) extends MappedField[ENUM#Value, T] {$/;"	V
enum	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^abstract class MappedEnumList[T<:Mapper[T], ENUM <: Enumeration](val fieldOwner: T, val enum: ENUM) extends MappedField[Seq[ENUM#Value], T] {$/;"	V
enumColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def enumColumnType = "BIGINT"$/;"	f
enumColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def enumColumnType = "FIXED(38)"$/;"	f
enumColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def enumColumnType = "NUMBER"$/;"	f
enumColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def enumColumnType: String$/;"	f
enumListColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def enumListColumnType = "BIGINT"$/;"	f
enumListColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def enumListColumnType = "FIXED(38)"$/;"	f
enumListColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def enumListColumnType = "NUMBER"$/;"	f
enumListColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def enumListColumnType: String$/;"	f
enumToList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^  def enumToList[T](enum: _root_.java.util.Enumeration[T]): List[T] = {$/;"	f
enumToStringList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^  def enumToStringList[C](enum: _root_.java.util.Enumeration[C]): List[String] =$/;"	f
eof	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  var eof: Boolean = false$/;"	v
eolPos	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/StreamReader.scala	/^    val eolPos = nextEol$/;"	V
eq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^    def eq(a: Array[Byte], b: Array[Byte], pos: Int, len: Int): Boolean = {$/;"	f
eqElements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/NodeFactory.scala	/^  def eqElements(ch1:Seq[Node], ch2:Seq[Node]): Boolean = {$/;"	f
eqe	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^      def eqe(index: Int): Boolean = ($/;"	f
equality	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxUnit.scala	/^      val equality = (c1: Box[Int], c2: Box[Int]) => (c1, c2) match {$/;"	V
equals	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def equals(other: Any): Boolean = (this, other) match {$/;"	f
equals	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Currency.scala	/^  override def equals(other: Any) = other match {$/;"	f
equals	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^        override def equals(that: Any) = that match {$/;"	f
equals	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^  final override def equals(x: Any) = x match {$/;"	f
equals	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    override def equals(cmp: Any) = {$/;"	f
equals	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  override def equals(other: Any): Boolean = other match {$/;"	f
equals	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  override def equals(other: Any) = other match {$/;"	f
equals	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  override def equals(other: Any): Boolean = {$/;"	f
equals	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  override def equals(other: Any): Boolean = {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  def equals (that: BigDecimal): Boolean =$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  override def equals(that: Any): Boolean = that match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def equals (that: BigInt): Boolean =$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  override def equals (that: Any): Boolean = that match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    override def equals(other: Any): Boolean = $/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Proxy.scala	/^  override def equals(that: Any): Boolean = that match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^  override def equals(other: Any): Boolean = other match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^  override def equals(that: Any): Boolean = that match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/MapProxy.scala	/^  override def equals(that: Any) = self equals that$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Set.scala	/^  override def equals(that: Any): Boolean = that match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^    override def equals(that : Any) = this eq that.asInstanceOf[AnyRef] $/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^  override def equals(obj: Any): Boolean = obj match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^    override def equals(that : Any) = this eq that.asInstanceOf[AnyRef] $/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^  override def equals(o: Any): Boolean = o match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^  override def equals(obj: Any): Boolean = obj match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  override def equals(that : Any) = $/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  override def equals(that : Any) = that match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/CollectionWrapper.scala	/^  override def equals(that : Any) = that match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^  override def equals(that : Any) = that match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayBuffer.scala	/^  override def equals(obj: Any): Boolean = obj match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedList.scala	/^  override def equals(obj: Any): Boolean = obj match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^  override def equals(obj: Any): Boolean = obj match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^  override def equals(obj: Any): Boolean = obj match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Queue.scala	/^  override def equals(obj: Any): Boolean = obj match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Stack.scala	/^  override def equals(obj: Any): Boolean = obj match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  override def equals(that: Any): Boolean = synchronized {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedPriorityQueue.scala	/^  override def equals(that: Any): Boolean = synchronized { super.equals(that) }$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedQueue.scala	/^  override def equals(that: Any): Boolean = synchronized { super.equals(that) }$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedStack.scala	/^    override def equals(that: Any): Boolean = synchronized { super.equals(that) }$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^  override def equals(that: Any): Boolean = that match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  override def equals(other: Any): Boolean = ($/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedBooleanArray.scala	/^  override def equals(other: Any) =$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedByteArray.scala	/^  override def equals(other: Any) =$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedCharArray.scala	/^  override def equals(other: Any) = ($/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedDoubleArray.scala	/^  override def equals(other: Any) =$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedFloatArray.scala	/^  override def equals(other: Any) =$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedIntArray.scala	/^  override def equals(other: Any) =$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedLongArray.scala	/^  override def equals(other: Any) =$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedObjectArray.scala	/^  override def equals(other: Any): Boolean =$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedShortArray.scala	/^  override def equals(other: Any) =$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedUnit.java	/^    public boolean equals(java.lang.Object other) {$/;"	m	class:BoxedUnit
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static boolean equals(Object a, Object b) {$/;"	m	class:BoxesRunTime
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    override def equals(other: Any): Boolean = $/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/AbstractSyntax.scala	/^    override def equals(that: Any): Boolean = that match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Atom.scala	/^  override def equals(x: Any) = x match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Comment.scala	/^  override def equals(x: Any): Boolean = x match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/EntityRef.scala	/^  override def equals(x: Any): Boolean = x match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Group.scala	/^  override def equals(x: Any) = x match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  override def equals(that: Any) =$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  override def equals(x: Any): Boolean = x match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^  override def equals(x: Any) = x match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  override def equals(that: Any) = that match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PCData.scala	/^  final override def equals(x: Any) = x match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/ProcInstr.scala	/^  override def equals(x: Any): Boolean = x match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Text.scala	/^  final override def equals(x: Any) = x match {$/;"	f
equals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Unparsed.scala	/^  final override def equals(x: Any) = x match {$/;"	f
equals1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def equals1(that: MetaData): Boolean$/;"	f
equals1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  def equals1(that:MetaData) = that.length == 0$/;"	f
equals1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrefixedAttribute.scala	/^  def equals1(m: MetaData) =$/;"	f
equals1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/UnprefixedAttribute.scala	/^  def equals1(m: MetaData) =$/;"	f
equalsWith	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  def equalsWith[B](that: Seq[B])(f: (A,B) => Boolean): Boolean = {$/;"	f
equalsWith	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def equalsWith[B](that: Seq[B])(f: (A, B) => Boolean): Boolean = self.equalsWith(that)(f)$/;"	f
equiv	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Equiv.scala	/^  def equiv(x: T, y: T): Boolean $/;"	f
equiv	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Ordering.scala	/^  override def equiv(x: T, y: T): Boolean = compare(x, y) == 0$/;"	f
equiv	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/PartialOrdering.scala	/^  def equiv(x: T, y: T): Boolean = lteq(x,y) && lteq(y,x)$/;"	f
erCall	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^            <button onclick={deferCall(Str(name + "=true"), jsFunc).toJsCmd + "; return false;"}>{text}<\/button>))(_ % _)$/;"	f
erCall	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  private def deferCall(data: JsExp, jsFunc: Call): Call =$/;"	f
erasure	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^      lazy val erasure = parents.first.erasure$/;"	V
erasure	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^      lazy val erasure = upperBound.erasure$/;"	V
erasure	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^      lazy val erasure =$/;"	V
erasure	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^      val erasure = clazz$/;"	V
erasure	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^  def erasure: Predef.Class[U] forSome { type U }$/;"	f
err	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  val err = java.lang.System.err$/;"	V
err	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def err(msg: String) = Parser{ in => Error(msg, in) }$/;"	f
err	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/Main.scala	/^      var err = false$/;"	v
erred	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^                  case e: Elem if e.label == "node" && e.prefix == "lift_deferred" =>$/;"	f
erred	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^      val theNode = <lift_deferred:node id={nodeId}\/>$/;"	f
erredSnippetFailure	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val deferredSnippetFailure: FactoryMaker[Failure => NodeSeq] =$/;"	f
erredSnippetTimeout	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val deferredSnippetTimeout: FactoryMaker[NodeSeq] =$/;"	f
error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def error(msg: => AnyRef): Unit = ()$/;"	f
error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def error(msg: => AnyRef, t: => Throwable): Unit = ()$/;"	f
error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def error(msg: => AnyRef) = if (isErrorEnabled) logger.error(msg)$/;"	f
error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def error(msg: => AnyRef) = rootLogger.error(msg)$/;"	f
error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def error(msg: => AnyRef, t: => Throwable) = if (isErrorEnabled) logger.error(msg, t)$/;"	f
error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def error(msg: => AnyRef, t: => Throwable) = rootLogger.error(msg, t)$/;"	f
error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  override def error(msg: => AnyRef) = if (isErrorEnabled) logger.error(String.valueOf(msg))$/;"	f
error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  override def error(msg: => AnyRef, t: => Throwable) = if (isErrorEnabled) logger.error(String.valueOf(msg), t)$/;"	f
error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    override def error(msg: => AnyRef): Unit = logger.error(msg)$/;"	f
error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    override def error(msg: => AnyRef, t: => Throwable): Unit = logger.error(msg, t)$/;"	f
error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def error(id: String, n: NodeSeq) {notices += ((NoticeType.Error, n, Full(id)))}$/;"	f
error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def error(id: String, n: String) {error(id, Text(n))}$/;"	f
error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def error(n: NodeSeq) {notices += ((NoticeType.Error, n, Empty))}$/;"	f
error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def error(n: String) {error(Text(n))}$/;"	f
error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def error(id: String, n: NodeSeq) {p_notice.is += ((NoticeType.Error, n, Full(id)))}$/;"	f
error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def error(id: String, n: String) {error(id, Text(n))}$/;"	f
error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def error(n: NodeSeq) {p_notice.is += ((NoticeType.Error, n, Empty))}$/;"	f
error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def error(n: String) {error(Text(n))}$/;"	f
error	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def error(vi: List[FieldError]) {p_notice ++= vi.map {i => (NoticeType.Error, i.msg, i.field.uniqueFieldId)}}$/;"	f
error	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^	def error: NodeSeq = field.uniqueFieldId match {$/;"	f
error	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def error(message: String): Nothing = throw new RuntimeException(message)$/;"	f
error	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/CharInputStreamIterator.scala	/^  private var error: IOException = null$/;"	v
error	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  override def error(ex: SAXParseException): Unit =$/;"	f
errorRet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^    val errorRet: ListBuffer[FieldError] = new ListBuffer$/;"	V
errorToken	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/Scanners.scala	/^  def errorToken(msg: String): Token$/;"	f
errorToken	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/Scanners.scala	/^  def errorToken(msg: String): Token$/;"	f
errorToken	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/Tokens.scala	/^  def errorToken(msg: String): Token = new ErrorToken(msg)  $/;"	f
errors	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^            val errors: NodeSeq = xs.map(e =>$/;"	V
errors	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def errors: List[(NodeSeq, Box[String])] = List(oldNotices.is, p_notice.is).flatMap(_.filter(_._1 == NoticeType.Error).map(n => (n._2, n._3)))$/;"	f
errors	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^          val errors = x match {$/;"	V
es	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^      private val es: Executor = Executors.newFixedThreadPool(threadPoolSize)$/;"	V
es	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^    new Bench()(Serialization.formats(FullTypeHints(classes)))$/;"	c
es	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^    new Bench()(Serialization.formats(ShortTypeHints(classes)))$/;"	c
es	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  "List of custom classes example" in {$/;"	c
es	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^            List(clz.getMethod(meth, classes : _*))$/;"	c
es	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^            val classes: Array[Class[_]] = ptypes openOr params.map(_.getClass)$/;"	c
es	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^                classes: Box[String],$/;"	c
es	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^        classes.map(cls => ", \\"classes\\": \\"" + cls + "\\"").openOr("") +$/;"	c
es	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^    new Tree(text, Empty, Full(classes), expanded, hasChildren, children)$/;"	c
es	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^    new Tree(text, Full(id), Full(classes), expanded, hasChildren, children)$/;"	c
es	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^  def apply(text:String, classes: String) = new Tree(text, Empty, Full(classes), false, false, Nil)$/;"	c
es	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^  def apply(text:String, classes: String, children: List[Tree]) = new Tree(text, Empty, Full(classes), false, false, children)$/;"	c
es	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^  def apply(text:String, classes: String, expanded: Boolean, hasChildren: Boolean, children: List[Tree]) =$/;"	c
es	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^  def apply(text:String, id: String, classes: String, expanded: Boolean, hasChildren: Boolean, children: List[Tree]) =$/;"	c
es	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^    var es = iterTable(idx).asInstanceOf[Entry]$/;"	v
escCamelUrl	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val escCamelUrl: Parser[CharBlock] =$/;"	V
escChar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^  def escChar(in: Char): String = {$/;"	f
escape	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^  private def escape(str: String, sb: StringBuilder) {$/;"	f
escape	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  private def escape(ch: Char): String = ch match {$/;"	f
escape	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  final def escape(text: String): String =$/;"	f
escape	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  final def escape(text: String, s: StringBuilder): StringBuilder = {$/;"	f
etg	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^          val etg = endTag(node)$/;"	V
eval	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^    def eval(n: Node): NodeSeq = new NodeSeq { val theSeq=Nil}; \/\/ @todo$/;"	f
event	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^			      val event = TimerEvent(TimeSpan(now - stateItem.timedEventAt.is))$/;"	V
eventQueue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  private val eventQueue = new Queue[Meta#Event]$/;"	V
events	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/History.scala	/^  def events: Iterator[A] = log.elements.map { case (_, e) => e }$/;"	f
everywhere	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def everywhere(f: Mapper)(implicit c: T => Mappable[T]): T =$/;"	f
ex	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^    val ex = new ConsoleChatActor(u, p)$/;"	V
ex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^        val ex = new UnavailableResourceException("Unresolvable URL " + url$/;"	V
example	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  val example =$/;"	V
example1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlBugs.scala	/^    val example1 = <word term="example" self="http:\/\/localhost:8080\/word\/example" available="true">content<\/word>$/;"	V
example2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlBugs.scala	/^    val example2 = <word term="example" self="http:\/\/localhost:8080\/word\/example" available="true"><\/word>$/;"	V
exc	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^  var exc: List[ValidationException] = Nil$/;"	v
exception	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^				 override val exception: Box[Throwable],$/;"	V
exception	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ControlHelpersSpec.scala	/^    val exception = new RuntimeException("ko")$/;"	V
exception	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^class CompleteFailure(val serverName: String, val exception: Box[Throwable]) extends Response {$/;"	V
exception	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/SyncVar.scala	/^  private var exception: Option[Throwable] = None$/;"	v
exception	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^    var exception: Throwable = ExceptionHandling.tryCatch(this)$/;"	v
exceptionHandler	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  protected def exceptionHandler: PartialFunction[Throwable, Unit] = {$/;"	f
exceptionHandler	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var exceptionHandler = RulesSeq[ExceptionHandlerPF].append {$/;"	v
exceptionWrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def exceptionWrapper(exc: Throwable) = new runtime.RichException(exc)$/;"	f
exchangeRate	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val exchangeRate = r.param("exchange_rate")$/;"	V
excl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^  @deprecated def excl(keys: A*): Map[A, B] = excl(keys)$/;"	f
excl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^  @deprecated def excl(keys: Iterable[A]): Map[A, B] = {$/;"	f
excl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set.scala	/^  def excl(elems: A*): Set[A] = excl(elems)$/;"	f
excl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set.scala	/^  def excl(that: Iterable[A]): Set[A] =$/;"	f
excl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^  def excl(keys: A*) { this --= keys.elements }$/;"	f
excl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MapProxy.scala	/^  override def excl(keys: A*): Unit = self.excl(keys: _*)$/;"	f
excl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Set.scala	/^  def excl(elems: A*): Unit = --=(elems.elements)$/;"	f
excl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SetProxy.scala	/^  override def excl(elems: A*): Unit = self --= elems$/;"	f
excl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  override def excl(keys: A*): Unit = synchronized {$/;"	f
excl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedSet.scala	/^  override def excl(elems: A*): Unit = synchronized {$/;"	f
excludeBar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/ToHeadUsages.scala	/^      def excludeBar(in: String): Boolean = in.startsWith("\/bar")$/;"	f
excludePathFromContextPathRewriting	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val excludePathFromContextPathRewriting: FactoryMaker[String => Boolean] =$/;"	V
exec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  var exec: ILAExecute = _$/;"	v
exec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/IoHelpers.scala	/^  def exec(cmds: String*): Box[String] = {$/;"	f
exec	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def exec[T](db: SuperConnection, query: String)(f: (ResultSet) => T): T =$/;"	f
exec	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def exec[T](statement: PreparedStatement)(f: (ResultSet) => T): T = {$/;"	f
exec	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Responder.scala	/^  def exec[A](x: => Unit): Boolean = { x; true }$/;"	f
execTranslate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  override protected def execTranslate[R](f: Any => R)(v: Any) = v match {$/;"	f
execTranslate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  protected def execTranslate[R](f: T => R)(v: T): R = f(v)$/;"	f
execute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^      def execute(f: () => Unit): Unit =$/;"	f
execute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  def execute(f: () => Unit) {touch; exec.execute(f)}$/;"	f
execute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  def execute(f: () => Unit): Unit$/;"	f
executedStatements	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^  protected var executedStatements = List[DBLogEntry]()$/;"	v
executionStart	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Application.scala	/^  val executionStart: Long = currentTime$/;"	V
executor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ParserTest.scala	/^    val executor = Executors.newFixedThreadPool(100)$/;"	V
existingSize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ParserTest.scala	/^    val existingSize = JsonParser.Segments.segmentSize$/;"	V
exists	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def exists(func: A => Boolean): Boolean = false$/;"	f
exists	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def exists(func: A => Boolean): Boolean = func(value)$/;"	f
exists	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def exists(p: A => Boolean): Boolean = self exists p$/;"	f
exists	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^    def exists(f: A => Boolean) = e match {$/;"	f
exists	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^    def exists(f: B => Boolean) = e match {$/;"	f
exists	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  def exists(p: Value => Boolean): Boolean = elements exists p$/;"	f
exists	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def exists(p: A => Boolean): Boolean = elements.exists(p)$/;"	f
exists	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def exists(p: A => Boolean) = self exists p$/;"	f
exists	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def exists(p: A => Boolean): Boolean = {$/;"	f
exists	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def exists(p: A => Boolean): Boolean = {$/;"	f
exists	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override final def exists(p: A => Boolean): Boolean = {$/;"	f
exists	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^  override def exists(f : Tuple2[A,B] => Boolean) : Boolean = $/;"	f
exists	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^  override def exists(f: A => Boolean): Boolean = $/;"	f
exists	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableSetAdaptor.scala	/^  override def exists(p: A => Boolean): Boolean = set.exists(p)$/;"	f
exists2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def exists2[A,B](xs: List[A], ys: List[B])(f: (A, B) => Boolean): Boolean = {$/;"	f
exit	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    def exit(act: (MyType, StV, StV, Meta#Event) => Any): Meta#State = {_exit = act :: _exit; this}$/;"	f
exit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def exit(): Nothing = exit(0)$/;"	f
exit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def exit(status: Int): Nothing = {$/;"	f
exit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^      var exit = false;$/;"	v
exit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    var exit = eof$/;"	v
exitComet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] def exitComet(what: AnyActor): Unit = synchronized {$/;"	f
exp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val exp: Parser[Int] = e ~ digits ^^ {case x ~ d => d.mkString.toInt * x}$/;"	V
exp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^        val exp = new Exception$/;"	V
exp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  def exp(exp: JsExp): JsCmd = JsCmds.Run(funcId + "(" + exp.toJsCmd + ");")$/;"	f
exp	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def exp(x: Double): Double = java.lang.Math.exp(x)$/;"	f
expCnt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/LRUSpec.scala	/^      var expCnt = 0$/;"	v
expPart	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Lexer.scala	/^  def expPart = exponent ~ opt(sign) ~ rep1(digit) ^^ { case e ~ s ~ d =>$/;"	f
expandAll	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^    val expandAll = S.attr("expandAll").isDefined$/;"	V
expandAny	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^    val expandAny: Boolean = (for (e <- S.attr("expand")) yield Helpers.toBoolean(e)) openOr true$/;"	V
expandCapacity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  private def expandCapacity(n: Int) {$/;"	f
expected	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val expected = (<link id="css1" rel="stylesheet" type="text\/css" href="style1.css"\/>)$/;"	V
expected	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val expected = (<link rel="stylesheet" type="text\/css" href="style1.css"\/>)$/;"	V
expected	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val expected = (<script type="text\/javascript" >alert("hello");<\/script>)$/;"	V
expected	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val expected = (<script type="text\/javascript" id="sc1" src="foo1.js"><\/script>)$/;"	V
expected	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val expected = (<style id="st1">.foo{{...}}<\/style>)$/;"	V
expected	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val expected = (<style>.foo{{...}}<\/style>)$/;"	V
expected	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val expected = (<title>hello<\/title>)$/;"	V
expected	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val expected = <html xmlns:lift="http:\/\/liftweb.net\/" xmlns="http:\/\/www.w3.org\/1999\/xhtml">$/;"	V
expected	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val expected = <html>$/;"	V
expected	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/XmlParseSpecs.scala	/^      val expected =$/;"	V
expected1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlBugs.scala	/^    val expected1 = """{"word":"content","self":"http:\/\/localhost:8080\/word\/example","term":"example","available":"true"}"""$/;"	V
expected1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^  val expected1 = """{"message":{"expiry_date":"20091126","word":"ant","text":"text","self":"me","stats":{"count":0},"messages":{"href":"https:\/\/domain.com\/message\/ant"}}}"""$/;"	V
expected2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlBugs.scala	/^    val expected2 = """{"word":null,"self":"http:\/\/localhost:8080\/word\/example","term":"example","available":"true"}"""$/;"	V
expected2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^  val expected2 = """{"message":{"expiry_date":"20091126","stats":{"count":0}}}"""$/;"	V
expected2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val expected2 = (<script type="text\/javascript" id="sc1" src="foo1.js"><\/script>)$/;"	V
expectedAdditions	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/DiffExamples.scala	/^    val expectedAdditions = read("\/diff-example-expected-additions.json")$/;"	V
expectedAdditions	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/DiffExamples.scala	/^  val expectedAdditions = parse("""$/;"	V
expectedChanges	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/DiffExamples.scala	/^    val expectedChanges = read("\/diff-example-expected-changes.json")$/;"	V
expectedChanges	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/DiffExamples.scala	/^  val expectedChanges = parse("""$/;"	V
expectedDeletions	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/DiffExamples.scala	/^    val expectedDeletions = read("\/diff-example-expected-deletions.json")$/;"	V
expectedDeletions	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/DiffExamples.scala	/^  val expectedDeletions = parse("""$/;"	V
expectedMergeResult	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/MergeExamples.scala	/^  val expectedMergeResult = parse("""$/;"	V
expiration	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/Facebook.scala	/^    def expiration: Option[Long] = S.param("fb_sig_expires").map[Long](_.toLong)$/;"	f
expiration	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^    def expiration: Option[Long]$/;"	f
expiration	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^    val expiration = (response \\\\ "expires").text$/;"	V
expiration	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^  object expiration extends MappedLong(this) {$/;"	o
expirationColumnName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^  protected def expirationColumnName = "expiration"$/;"	f
expirationTime	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^  def expirationTime: Long = millis + 180.days$/;"	f
expired	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  protected def expired(key: K, value: V) {$/;"	f
explicitlyParsedSuffixes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var explicitlyParsedSuffixes: Set[String] = knownSuffixes$/;"	v
exponent	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Lexer.scala	/^  def exponent = elem("exponent character", d => d == 'e' || d == 'E')$/;"	f
exported	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^  private var exported: Boolean = false$/;"	v
expr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^  lazy val expr = (spaces ~ elem('(') ~ spaces) ~> ( seq1 | seq2 | path ) <~ (spaces <~ elem(')')) ^^ {case s => {$/;"	V
expr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/VCardParser.scala	/^  lazy val expr = (((spaces ~> left ~! elem(':')) ~ repsep(value, ';')) ^^ {case a ~ _ ~ b => VCardEntry(a, b)})+$/;"	V
extID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^        val extID = externalID()$/;"	V
extID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    val extID = if (ch == 'S') {$/;"	V
extID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    var extID: ExternalID = null$/;"	v
extIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  var extIndex = -1$/;"	v
extSubset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def extSubset(): Unit = {$/;"	f
extend	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def extend[a <: NameElement](v : a, x : Scope[a]) = new BinderEnv { $/;"	f
externalID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/DTD.scala	/^  var externalID: ExternalID = null$/;"	v
externalID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def externalID(): ExternalID = ch match {$/;"	f
externalSource	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ExternalSources.scala	/^  def externalSource(systemId: String): Source = {$/;"	f
externalSource	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def externalSource(systemLiteral: String): Source$/;"	f
externalSourceFromURL	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ExternalSources.scala	/^  private def externalSourceFromURL(url: URL): Source = {$/;"	f
extract	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^  def extract[A](json: JValue)(implicit formats: Formats, mf: Manifest[A]): A = $/;"	f
extract	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def extract[A](implicit formats: Formats, mf: scala.reflect.Manifest[A]): A = $/;"	f
extract	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def extract(subst: scala.collection.immutable.Map[NameElement, NameElement]): elementT = cloneElementWithSubst(subst)$/;"	f
extract	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def extract: elementT = cloneElementNoBoundElements$/;"	f
extract0	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^  private def extract0[A](json: JValue, formats: Formats, mf: Manifest[A]): A = {$/;"	f
extractFiles	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def extractFiles: List[ParamHolder]$/;"	f
extractFiles	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def extractFiles: List[ParamHolder] = $/;"	f
extractFiles	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def extractFiles: List[ParamHolder] = (new Iterator[ParamHolder] {$/;"	f
extractFirst	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Queue.scala	/^  private def extractFirst(start: LinkedList[A], p: A => Boolean): Option[LinkedList[A]] = {$/;"	f
extractFirst	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^    def extractFirst(l: T, p: A => Boolean): Option[(A, T)] = {$/;"	f
extractFirst	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^    def extractFirst(l: T, p: A => Boolean): Option[(A, T)] =$/;"	f
extractFirst	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^  def extractFirst(l: T, p: A => Boolean): Option[(A, T)]$/;"	f
extractOpt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^  def extractOpt[A](json: JValue)(implicit formats: Formats, mf: Manifest[A]): Option[A] = $/;"	f
extractOpt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def extractOpt[A](implicit formats: Formats, mf: scala.reflect.Manifest[A]): Option[A] = $/;"	f
extractVersion	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  private def extractVersion(path: List[String]) {$/;"	f
f	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^      val f = dateFormatter$/;"	V
f	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^    val f: B => Iterable[C] = _f andThen Box.box2Iterable[C]$/;"	V
f	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ListHelpersSpec.scala	/^      val f = (i: Int) => i >= 2 match { case true => Full(3) case false => Empty }$/;"	V
f	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msg.scala	/^      val f = messagesById(id) _$/;"	V
f	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msgs.scala	/^    val f = if (showAll) messages _$/;"	V
f	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val f = createInvoker("boot", Class.forName("bootstrap.liftweb.Boot").newInstance.asInstanceOf[AnyRef])$/;"	V
f	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val f = if (ShowAll.get)$/;"	V
f	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^        val f = tmpStatelessHolder.open_!$/;"	V
f	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^    val f = new LAFuture[List[AnswerRender]]$/;"	V
f	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                val f = messageCallback(k)$/;"	V
f	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^              val f = messageCallback(k)$/;"	V
f	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^              val f = toRun.filter(_.owner == w)$/;"	V
f	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^      val f = unmatchedHandler openOr ((who: MyType,state: Meta#State,what: Event) => throw new UnmatchedEventException("Event "+what+" was not matched at state "+who.state, who, what))$/;"	V
f	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^    val f = (ignore: String) => {$/;"	V
f	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarWeekView.scala	/^    val f : (Int, Int) => Int = {$/;"	V
f	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^              val f = otherField.actualField(join)$/;"	V
f	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^          val f = field(join)$/;"	V
f	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^    val f = getField(inst, meth)$/;"	V
f	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^        val f = ??(meth, ret)$/;"	V
f	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^        val f = foreign(e)$/;"	V
f	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^        val f = foreign(u)$/;"	V
f	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^      val f = foreign(e)$/;"	V
f	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^      val f = new File(filePath)$/;"	V
f	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/RollbackIterator.scala	/^    val f = try {$/;"	V
f	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^    var f = first$/;"	v
f	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^      val f = it.next$/;"	V
f	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Xhtml.scala	/^      val f = it.next$/;"	V
f	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^      val f = SAXParserFactory.newInstance()$/;"	V
f2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    val f2: FileParamHolder => Unit = fp =>$/;"	V
fToItem	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^  implicit def fToItem(f: () => Any): Item = Item(f)$/;"	f
facebookClientState	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/Facebook.scala	/^  implicit val facebookClientState: FacebookClient.State = new {$/;"	V
factory	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^  val factory = new ConnectionFactory(params)$/;"	V
factory	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^    val factory = new ConnectionFactory(params)$/;"	V
factory	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^  val factory = new ConnectionFactory(params)$/;"	V
factory	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  val factory = this$/;"	V
factory	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-jpa/src/main/scala/net/liftweb/jpa/RequestVarEM.scala	/^  val factory = this$/;"	V
fadeOutErrors	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/jquery/JqSHtml.scala	/^  def fadeOutErrors(duration: TimeSpan, fadeTime: TimeSpan): JsCmd = {$/;"	f
fadeOutNotices	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/jquery/JqSHtml.scala	/^  def fadeOutNotices(duration: TimeSpan, fadeTime: TimeSpan): JsCmd = {$/;"	f
fadeOutWarnings	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/jquery/JqSHtml.scala	/^  def fadeOutWarnings(duration: TimeSpan, fadeTime: TimeSpan): JsCmd = {$/;"	f
fail	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    def fail(msg: String) = throw new ParseException(msg + "\\nNear: " + buf.near, null)$/;"	f
fail	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  private[json] def fail(msg: String) = throw new MappingException(msg)$/;"	f
fail	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def fail(msg: String): Nothing$/;"	f
fail	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def fail(msg: String) {$/;"	f
fail	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def fail[A](msg: String, expected: A, actual: A) {$/;"	f
fail	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def fail(msg: String) = new UnitParser {$/;"	f
failMsg	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def failMsg(msg: String): Box[A] = ?~(msg)$/;"	f
failed	/Users/Mads/Dev/logicOfScientificDiscovery/src/test/scala/sidewayscoding/AppTest.scala	/^    var failed: List[File] = Nil$/;"	v
failed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    val failed = new ArrayBuffer[A]$/;"	V
failed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    val failed = new ArrayBuffer[A]$/;"	V
failedAsserts	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^    val failedAsserts = res.filter(a => a.isAssert && !a.success)$/;"	V
failedFind	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private def failedFind(in: Failure): NodeSeq =$/;"	f
failedTests	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^    val failedTests = res.filter(a => a.isTest && !a.success)$/;"	V
failure	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BasicTypesHelpersSpec.scala	/^    val failure = Failure(null,null,null)$/;"	V
failure	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^case class JsContext(override val success: Box[String], override val failure: Box[String]) extends AjaxContext(success, failure, AjaxType.JavaScript)$/;"	V
failure	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^case class JsonContext(override val success: Box[String], override val failure: Box[String]) extends AjaxContext(success, failure, AjaxType.JSON)$/;"	V
failure	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def failure(msg: String) = Parser{ in => Failure(msg, in) }$/;"	f
failure	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def failure(msg: String) = new Parser[Nothing] {$/;"	f
failureBlock	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ControlHelpersSpec.scala	/^    def failureBlock = { throw exception; () }$/;"	f
failureCount	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def failureCount() =$/;"	f
failureFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/ScriptRenderer.scala	/^             var failureFunc = function() {$/;"	v
failureFuncs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  @volatile var failureFuncs: List[(scala.actors.Actor, Throwable) => Unit] = logActorFailure _ ::$/;"	v
failures	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def failures() =$/;"	f
fajaxCall	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def fajaxCall[T](jsCalcValue: JsExp, func: String => JsCmd)(f: (String, JsExp) => T): T = {$/;"	f
fancyType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/CSS.scala	/^  def fancyType: NodeSeq = {$/;"	f
fatal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def fatal(msg: AnyRef): Unit = ()$/;"	f
fatal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def fatal(msg: AnyRef, t: Throwable): Unit = ()$/;"	f
fatal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def fatal(msg: AnyRef) = logger.fatal(msg)$/;"	f
fatal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def fatal(msg: AnyRef) = rootLogger.fatal(msg)$/;"	f
fatal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def fatal(msg: AnyRef, t: Throwable) = logger.fatal(msg, t)$/;"	f
fatal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def fatal(msg: AnyRef, t: Throwable) = rootLogger.fatal(msg, t)$/;"	f
fatal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  override def fatal(msg: AnyRef) = error(msg)$/;"	f
fatal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  override def fatal(msg: AnyRef, t: Throwable) = error(msg, t)$/;"	f
fatal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    override def fatal(msg: AnyRef): Unit = logger.fatal(msg)$/;"	f
fatal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    override def fatal(msg: AnyRef, t: Throwable): Unit = logger.fatal(msg, t)$/;"	f
fatalError	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  override def fatalError(ex: SAXParseException): Unit =$/;"	f
favoritePet	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^    val favoritePet = new Screen {$/;"	V
fb	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val fb = Dog2.find(By(Dog2.actualAge, 966)).open_!$/;"	V
fb	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val fb = Mixer.find(By(Mixer.weight, 966)).open_!$/;"	V
feed	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/rssfeed/RSSfeed.scala	/^    val feed = getFeed(feedUrl)$/;"	V
fetch	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^    val fetch = FetchRequest.createFetchRequest()$/;"	V
fetchDirDescriptions	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^    def fetchDirDescriptions (in : Int) = in match {$/;"	f
fetchFromThreadLocal	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^  private def fetchFromThreadLocal: Option[Transaction] = {$/;"	f
field	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^          val field = vals.pop(classOf[JField])$/;"	V
field	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def field: MappedField[FieldType, KMType]$/;"	f
field	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^  val field: MappedField[Boolean, KMType]) extends JxNodeBase with JsonBridge[KeyType, Boolean, KMType] {$/;"	V
field	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^  val field: MappedField[FieldType, KMType]) extends JxNodeBase with JsonBridge[KeyType, FieldType, KMType] {$/;"	V
field	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^  val field: MappedField[String, KMType]) extends JxNodeBase with JsonBridge[KeyType, String, KMType] {$/;"	V
field	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    def field(join: O): MappedForeignKey[K,O, _ <: KeyedMapper[K,T]] =$/;"	f
field	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^        val field = ??(mft.method, toLine)) yield$/;"	V
field	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^        val field: MappedForeignKey[FT, A, _] =$/;"	V
field	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val field = primaryKeyField$/;"	V
field	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def field: BaseMappedField$/;"	f
field	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Util.scala	/^              val field = mapper.fieldByName(f.toString)$/;"	V
field	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Discovery.scala	/^	object field extends MappedLongForeignKey(this, Field)$/;"	o
field	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/FieldSnippet.scala	/^	object field extends RequestVar( defaultField() )$/;"	o
fieldByName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def fieldByName[T](fieldName: String): Box[MappedField[T, A]] = getSingleton.fieldByName[T](fieldName, this)$/;"	f
fieldByName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def fieldByName[T](fieldName: String, actual: A): Box[MappedField[T, A]] =$/;"	f
fieldByName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  def fieldByName(fieldName: String, inst: BaseRecord): Box[OwnedField[BaseRecord]] = {$/;"	f
fieldByName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Record.scala	/^  def fieldByName(fieldName: String): Box[OwnedField[MyType]] = meta.fieldByName(fieldName, this)$/;"	f
fieldCnt	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def fieldCnt = 1$/;"	f
fieldCnt	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    override def fieldCnt = 2$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName + " " + dbType.binaryColumnType + notNullAppender()$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName + " " + dbType.clobColumnType + notNullAppender()$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName + " " + dbType.booleanColumnType + notNullAppender()$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName + " " + dbType.dateColumnType + notNullAppender()$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName + " " + dbType.dateTimeColumnType + notNullAppender()$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = {$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	def fieldCreatorString(dbType: DriverType, colName: String): String = colName + " " + dbType.doubleColumnType + notNullAppender()$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def fieldCreatorString(dbType: DriverType): List[String] = dbColumnNames(name).map{c => fieldCreatorString(dbType, c)}$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def fieldCreatorString(dbType: DriverType): List[String]$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName + " " + dbType.enumColumnType + notNullAppender()$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName + " " + dbType.integerColumnType + notNullAppender()$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  override def fieldCreatorString(dbType: DriverType, colName: String): String = colName + " " + dbType.integerIndexColumnType + notNullAppender()$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName + " " + dbType.enumListColumnType + notNullAppender()$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName + " " + dbType.longColumnType + notNullAppender()$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def fieldCreatorString(dbType: DriverType, colName: String): String = colName + " " + dbType.longForeignKeyColumnType  + notNullAppender()$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def fieldCreatorString(dbType: DriverType, colName: String): String = colName + " " + dbType.longIndexColumnType  + notNullAppender()$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = (if (colName.endsWith("_pw")) colName+" VARCHAR(48)" else colName+" VARCHAR(20)")  + notNullAppender()$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName+" "+dbType.varcharColumnType(maxLen) + notNullAppender()$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName + " " + dbType.timeColumnType + notNullAppender()$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BinaryField.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName + " " + dbType.enumColumnType$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BooleanField.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName + " " + dbType.enumColumnType$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DateTimeField.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName + " " + dbType.enumColumnType$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DecimalField.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = {$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DoubleField.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName + " " + dbType.enumColumnType$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EmailField.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName+" VARCHAR("+maxLength+")"$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EnumField.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName + " " + dbType.enumColumnType$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/IntField.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName + " " + dbType.enumColumnType$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/LocaleField.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName+" VARCHAR("+16+")"$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/LongField.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName + " " + dbType.enumColumnType$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = if (colName.endsWith("_pw")) colName+" VARCHAR(48)" else colName+" VARCHAR(20)"$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PostalCodeField.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName+" VARCHAR("+32+")"$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName+" VARCHAR("+maxLength+")"$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TextareaField.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName+" VARCHAR("+maxLength+")"$/;"	f
fieldCreatorString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TimeZoneField.scala	/^  def fieldCreatorString(dbType: DriverType, colName: String): String = colName+" VARCHAR("+32+")"$/;"	f
fieldFilter	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  val fieldFilter: MappedField[_,T]=>Boolean = (f: MappedField[_,T])=>true$/;"	V
fieldId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  def fieldId: Option[NodeSeq] = None$/;"	f
fieldId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    override val fieldId = Some(Text("txtEmail"))$/;"	V
fieldId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    override val fieldId = Some(Text("txtFirstName"))$/;"	V
fieldId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    override val fieldId = Some(Text("txtLastName"))$/;"	V
fieldId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    override val fieldId = Some(Text("txtLocale"))$/;"	V
fieldId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    override val fieldId = Some(Text("txtTimeZone"))$/;"	V
fieldId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    override val fieldId = Some(Text("txtValidated"))$/;"	V
fieldInfo	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^            val fieldInfo = mappedColumns.get(colName)$/;"	V
fieldList	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  private var fieldList: List[FieldHolder] = Nil$/;"	v
fieldMapperPF	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def fieldMapperPF(transform: (BaseOwnedMappedField[A] => NodeSeq)): FieldPF = {$/;"	f
fieldMapperPF	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def fieldMapperPF(transform: (BaseOwnedMappedField[A] => NodeSeq), actual: A): PartialFunction[String, NodeSeq => NodeSeq] = {$/;"	f
fieldMapping	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^      def fieldMapping(fType: Class[_], genType: Type): Mapping = $/;"	f
fieldMatcher	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  lazy val fieldMatcher: PartialFunction[(A, String), MappedField[Any, A]] = {$/;"	V
fieldName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  private[record] var fieldName: String = _$/;"	v
fieldNameMode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    private[this] var fieldNameMode = true$/;"	v
fieldOptions	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DependencySnippet.scala	/^			val fieldOptions :Seq[(Field,String)] = fields.map{ $/;"	V
fieldOptions	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DiscoverySnippet.scala	/^			val fieldOptions :Seq[(Field,String)] = fields.map{ $/;"	V
fieldOrder	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^  override def fieldOrder: List[BaseOwnedMappedField[ModelType]] = nickname ::$/;"	f
fieldOrder	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def fieldOrder: List[BaseOwnedMappedField[A]] = Nil$/;"	f
fieldOrder	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  override def fieldOrder: List[BaseOwnedMappedField[ModelType]] = firstName :: lastName :: email :: locale :: timezone :: password :: Nil$/;"	f
fieldOrder	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  override def fieldOrder = List(id, firstName, lastName, email,$/;"	f
fieldOrder	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  def fieldOrder: List[OwnedField[BaseRecord]] = Nil$/;"	f
fieldOwner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^abstract class MappedBinary[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Array[Byte], T] {$/;"	V
fieldOwner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^abstract class MappedFakeClob[T<:Mapper[T]](val fieldOwner: T) extends MappedField[String, T] {$/;"	V
fieldOwner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^abstract class MappedText[T<:Mapper[T]](val fieldOwner: T) extends MappedField[String, T] {$/;"	V
fieldOwner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^abstract class MappedBoolean[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Boolean, T] {$/;"	V
fieldOwner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^abstract class MappedDate[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Date, T] {$/;"	V
fieldOwner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^abstract class MappedDateTime[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Date, T] {$/;"	V
fieldOwner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^abstract class MappedDouble[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Double, T] {$/;"	V
fieldOwner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def fieldOwner: OwnerType$/;"	f
fieldOwner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^abstract class MappedInt[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Int, T] {$/;"	V
fieldOwner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^abstract class MappedLong[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Long, T] {$/;"	V
fieldOwner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^abstract class MappedNullableLong[T<:Mapper[T]](val fieldOwner: T) extends MappedNullableField[Long, T] {$/;"	V
fieldOwner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^abstract class MappedPassword[T<:Mapper[T]](val fieldOwner: T)$/;"	V
fieldOwner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^abstract class MappedTime[T<:Mapper[T]](val fieldOwner: T) extends MappedField[Date, T] {$/;"	V
fieldPF	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def fieldPF = fieldPF_i$/;"	f
fieldPF_i	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  private var fieldPF_i: FieldPF = Map.empty$/;"	v
fieldToItem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  implicit def fieldToItem[T](in: MappedField[T, A]): IndexItem[A] = IndexField(in)$/;"	f
fieldValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^    def fieldValue(json: JValue): JValue = json match {$/;"	f
fields	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  private def fields(docs: List[Document]) = fold(punctuate(text(",") :: break, docs))$/;"	f
fields	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^          val fields = Map() ++ clazz.getDeclaredFields.filter(!static_?(_)).map(f => (f.getName, f))$/;"	V
fields	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^          val fields = Map(c.getDeclaredFields.$/;"	V
fields	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  def fields(rec: BaseRecord) : List[OwnedField[BaseRecord]] =$/;"	f
fields	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Record.scala	/^  def fields() = meta.fields(this)$/;"	f
fields	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DependencySnippet.scala	/^			val fields = Field.findAll$/;"	V
fields	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DiscoverySnippet.scala	/^			val fields = Field.findAll$/;"	V
fields	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^    def fields(from: Int): List[Any] =$/;"	f
fieldsForList	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def fieldsForList: List[MappedField[_, CrudType]] = mappedFieldsForModel$/;"	f
file	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^                           override val fileName: String, val file: Array[Byte]) extends$/;"	V
file	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    val file: File = File.createTempFile("lift_mime", "upload")$/;"	V
file	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def file: Array[Byte] = Helpers.readWholeStream(fileStream)$/;"	f
file	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def file: Array[Byte]$/;"	f
file	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^    val file = new File(target + path)$/;"	V
file1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/CachedFileStorage.scala	/^abstract class CachedFileStorage(private val file1: File)$/;"	V
file2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/CachedFileStorage.scala	/^  private val file2 = new File(file1.getParent, file1.getName+"$")$/;"	V
fileName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  val fileName = "lift.props"$/;"	V
fileName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^                               val fileName: String) extends ParamHolder$/;"	V
filePath	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def filePath : String$/;"	f
filePath	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def filePath = "target\/tests_derby_lift"$/;"	f
filePath	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def filePath = "target\/tests_h2_lift"$/;"	f
fileStr	/Users/Mads/Dev/logicOfScientificDiscovery/src/test/scala/sidewayscoding/AppTest.scala	/^      val fileStr = if (numFails == 1) "file" else "files"$/;"	V
fileStr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ExternalSources.scala	/^    var fileStr = input.descr$/;"	v
fileStream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def fileStream: InputStream = new ByteArrayInputStream(file)$/;"	f
fileStream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def fileStream: InputStream = new FileInputStream(localFile)$/;"	f
fileStream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def fileStream: InputStream$/;"	f
fileUpload	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def fileUpload(func: FileParamHolder => Unit): Elem = {$/;"	f
files	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^        val files: List[FileParamHolder] = allInfo.flatMap {case v: FileParamHolder => List(v) case _ => Nil}$/;"	V
fill	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def fill: Box[Boolean] = Empty \/\/ TODO: boolean or number$/;"	f
fill	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^              def fill(sa: Int=>Any) = fillDest(dest.asInstanceOf[Array[Any]], sa)$/;"	f
fill	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^              def fill(sa: Int=>AnyVal) = fillDest(dest.asInstanceOf[Array[AnyVal]], sa)$/;"	f
fill	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    protected def fill(sz : Int) : Seq[A] = if (BufferedIterator.this.hasNext) (BufferedIterator.this.next) :: Nil else Nil$/;"	f
fill	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    protected def fill(sz : Int) : Seq[A]$/;"	f
fill	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CountedIterator.scala	/^    protected def fill(sz : Int) = if (CountedIterator.this.hasNext) (CountedIterator.this.next) :: Nil else Nil$/;"	f
fill	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    override protected def fill(sz : Int) : Seq[A] = $/;"	f
fill	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    protected def fill(sz : Int) = if (Iterator.this.hasNext) (Iterator.this.next) :: Nil else Nil$/;"	f
fill	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    protected override def fill(sz: Int): Seq[A] = {$/;"	f
fill	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/RollbackIterator.scala	/^  protected def fill(sz: Int): Seq[A] =$/;"	f
fillBuffer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BufferedSource.scala	/^  def fillBuffer() = {$/;"	f
fillColor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def fillColor: Box[String] = Empty$/;"	f
fillDest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^            def fillDest[T](da: Array[T], sa: Int=>T) {$/;"	f
fillInStackTrace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/NonLocalReturnException.scala	/^  override def fillInStackTrace(): Throwable = this$/;"	f
fill_align	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val fill_align : Parser[Attribute] = accept("<>") ^^^ Align('f')$/;"	V
filled	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  var filled: Int = 0$/;"	v
filter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def filter(p: A => Boolean): Box[A] = this$/;"	f
filter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def filter(p: A => Boolean): Box[A] = if (p(value)) this else Empty$/;"	f
filter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def filter(p: A => Boolean): Box[A] = this$/;"	f
filter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def filter(p: JValue => Boolean): List[JValue] =$/;"	f
filter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    def filter(f: ChoiceItem[T] => Boolean) = items.filter(f)$/;"	f
filter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^    override def filter(f: TransactionMonad => Boolean): TransactionMonad = this$/;"	f
filter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  def filter(f: TransactionMonad => Boolean): TransactionMonad =$/;"	f
filter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def filter(f: HttpResponse => Unit): HttpResponse = throw (exception openOr new java.io.IOException("HTTP Failure"))$/;"	f
filter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def filter(f: HttpResponse => Unit): HttpResponse = {$/;"	f
filter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def filter(f: HttpResponse => Unit): HttpResponse$/;"	f
filter	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^        def filter(in: Seq[FT]): Seq[FT] =$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  override def filter(p: A => Boolean): Array[A] = throw new Error()$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def filter(p: A => Boolean): Collection[A] = self filter p$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^    def filter[X](p: B => Boolean): Option[Either[X, B]] = e match {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^    def filter[Y](p: A => Boolean): Option[Either[A, Y]] = e match {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  def filter(p: Value => Boolean): Iterator[Value] = elements filter p$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    override def filter(p : A => Boolean) : Projection[A] = new Projection[A] {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def filter(p: A => Boolean): Iterable[A] = {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def filter(p: A => Boolean) = self filter p$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def filter(p: A => Boolean): Iterator[A] = new PredicatedIterator(p)$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  final override def filter(p: A => Boolean): List[A] = {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^  def filter(p: A => Boolean): Option[A] = $/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Responder.scala	/^  def filter(p: A => Boolean) = new Responder[A] {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    override def filter(p : A => Boolean) : Projection[A] = new ComputeSize[A] {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  override def filter(p: A => Boolean): Seq[A] = super.filter(p).asInstanceOf[Seq[A]]$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def filter(p: A => Boolean): Seq[A] = self filter p$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override final def filter(p: A => Boolean): Stream[A] = {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  override def filter(f : ((Int, T)) => Boolean) : IntMap[T] = this match {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  override def filter(f : ((Long, T)) => Boolean) : LongMap[T] = this match {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^  override def filter(p: ((A, B)) => Boolean): Map[A, B] = {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set.scala	/^  override def filter(p: A => Boolean): Set[A] =$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/SortedMap.scala	/^  override def filter(p: Pair[A, B] => Boolean): SortedMap[A, B] = {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  override def filter(f : ((Key, Value)) => Boolean) : AssocMap[Key, Value] = this match {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  override def filter(f : ((Key, Value)) => Boolean) : TreeHashMap[Key, Value]= {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^    override def filter(p : A => Boolean) : MutableIterable.Projection[A] = super.filter(p)$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^    override def filter(p0 : A => Boolean) : MutableIterable.Projection[A] = $/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^    override def filter(pp : A => Boolean) : Projection[A] = new Filter {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterator.scala	/^  override def filter(f : A => Boolean) : MutableIterator[A] = {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^    override def filter(pp : A => Boolean) : Projection[A] = new Filter {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^    override def filter(p : A => Boolean) : Projection[A] = new Filter(p);$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^    override def filter(p : A => Boolean) : Projection[A] = new Filter(p);$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^    override def filter(p0 : A => Boolean) = SortedSet.this.projection.filter(k => p(k) && p0(k));$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  final override def filter(p: Any => Boolean): BoxedArray = {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedBooleanArray.scala	/^  final override def filter(p: Any => Boolean): BoxedArray = {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedByteArray.scala	/^  final override def filter(p: Any => Boolean): BoxedArray = {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedCharArray.scala	/^  final override def filter(p: Any => Boolean): BoxedArray = {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedDoubleArray.scala	/^  final override def filter(p: Any => Boolean): BoxedArray = {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedFloatArray.scala	/^  final override def filter(p: Any => Boolean): BoxedArray = {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedIntArray.scala	/^  final override def filter(p: Any => Boolean): BoxedArray = {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedLongArray.scala	/^  final override def filter(p: Any => Boolean): BoxedArray = {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedObjectArray.scala	/^  final override def filter(p: Any => Boolean): BoxedArray = {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedShortArray.scala	/^  final override def filter(p: Any => Boolean): BoxedArray = {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/Parsers.scala	/^    def filter(pred: A => Boolean) = new Parser[A] {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  override def filter(f: MetaData => Boolean): MetaData = {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^  override def filter(f: Node => Boolean): NodeSeq = {$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  override def filter(f: MetaData => Boolean): MetaData = this$/;"	f
filter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^  private var filter: XIncludeFilter = null$/;"	v
filterKeys	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^  def filterKeys(p: A => Boolean): Map.Projection[A, B] = new Map.Projection[A, B] {$/;"	f
filterKeys	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/MapProxy.scala	/^  override def filterKeys(p: A => Boolean) = self filterKeys p$/;"	f
filterKeys	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    override def filterKeys(p0 : K => Boolean) : Map.Projection[K,E] =$/;"	f
filterKeys	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^  override def filterKeys(p : K => Boolean) : Map.Projection[K,E] = new Filter(p); $/;"	f
filterKeys	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^      override def filterKeys(p0 : K => Boolean) = Range.this.projection.filterKeys(k => p(k) && p0(k));$/;"	f
filterKeys	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    override def filterKeys(p : K => Boolean) : SortedMap.Projection[K,E] = new Filter(p);$/;"	f
filterKeys	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    override def filterKeys(p : K => Boolean) : SortedMap.Projection[K,F] = $/;"	f
filterKeys	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    override def filterKeys(p0 : K => Boolean) : SortedMap.Projection[K,E] = $/;"	f
filterKeys	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^  override def filterKeys(p : K => Boolean) : SortedMap.Projection[K,E] = new Filter(p);$/;"	f
filterMsg	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def filterMsg(msg: String)(p: A => Boolean): Box[A] = filter(p) ?~ msg$/;"	f
filtered	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/Examples.scala	/^    val filtered = json filter {$/;"	V
filteredParameters	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^    val filteredParameters = parameters.filter(_.name != OAuthUtil.OAUTH_SIGNATURE)$/;"	V
filteredtail	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^      val filteredtail = tail.filter(f);$/;"	V
filters	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Publisher.scala	/^  private val filters = new HashMap[Subscriber[A, This],$/;"	V
finalTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^  protected var finalTag: Int = _$/;"	v
finalTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^  final def finalTag(state: Int) = finals(state)$/;"	f
finals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^  protected var finals: immutable.TreeMap[Int, Int] = _     \/\/ final states$/;"	v
finals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/DetWordAutom.scala	/^  val finals: Array[Int]$/;"	V
finals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^  val finals: Array[Int] \/\/ 0 means not final$/;"	V
finals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^      val finals = finalsR$/;"	V
finals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    var finals   = new TreeMap[BitSet, Int]$/;"	v
finals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^          val finals   = finalsArr$/;"	V
finalsArr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^        val finalsArr = new Array[Int](pos)$/;"	V
finalsR	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    val finalsR = new Array[Int](nstatesR)$/;"	V
find	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^    def find(f: MailboxItem => Boolean): Box[MailboxItem] =$/;"	f
find	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^    override def find(f: MailboxItem => Boolean): Box[MailboxItem] = Empty$/;"	f
find	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^      def find(json: JValue): List[JField] = json match {$/;"	f
find	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^      def find(json: JValue): Option[JValue] = {$/;"	f
find	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def find(p: JValue => Boolean): Option[JValue] = {$/;"	f
find	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^    def find(what: NodeSeq) {$/;"	f
find	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  protected final def find(in: List[PValueHolder[Maker[T]]]): Box[T] = in match {$/;"	f
find	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/NamedPartialFunction.scala	/^  def find[A, B](value: A, lst: Seq[PartialFunction[A, B]]):$/;"	f
find	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^    def find(consumerKey: String, token: String, timestamp: Long, nonce: String): Box[OAuthNonce] =$/;"	f
find	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def find(consumerKey: String): Box[OAuthConsumer]$/;"	f
find	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def find(consumerKey: String, token: String, timestamp: Long, nonce: String): Box[OAuthNonce]$/;"	f
find	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def find(token: OAuthUtil.Parameter): Box[OAuthToken]$/;"	f
find	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def find(name: String): Box[Value] = {$/;"	f
find	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def find(by: QueryParam[A]*): Box[A] =$/;"	f
find	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def find(dbId: ConnectionIdentifier, key: String): Box[A] =  dbStringToKey(key) flatMap (realKey =>  findDbByKey(dbId, realKey))$/;"	f
find	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def find(key: Any): Box[A] =$/;"	f
find	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def find(key: String): Box[A] = dbStringToKey(key) flatMap (realKey => findDbByKey(selectDbForKey(realKey), realKey))$/;"	f
find	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def find(p: A => Boolean): Option[A] = self find p$/;"	f
find	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def find(p: A => Boolean): Option[A] = elements.find(p)$/;"	f
find	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def find(p: A => Boolean) = self find p$/;"	f
find	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def find(p: A => Boolean): Option[A] = {$/;"	f
find	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def find(p: A => Boolean): Option[A] = {$/;"	f
find	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^      def find(Key: String): Boolean = {$/;"	f
find	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^    def find(Key:String): AttrDecl = {$/;"	f
findAll	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def findAll(): List[A] =$/;"	f
findAll	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def findAll(by: QueryParam[A]*): List[A] =$/;"	f
findAllByInsecureSql	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def findAllByInsecureSql(query: String, checkedBy: IHaveValidatedThisSQL): List[A] = findAllByInsecureSqlDb(dbDefaultConnectionIdentifier, query, checkedBy)$/;"	f
findAllByInsecureSqlDb	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def findAllByInsecureSqlDb(dbId: ConnectionIdentifier, query: String, checkedBy: IHaveValidatedThisSQL): List[A] =$/;"	f
findAllByPreparedStatement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def findAllByPreparedStatement(dbId: ConnectionIdentifier, stmt: PreparedStatement): List[A] = findAllByPreparedStatementDb(dbId, stmt)(a => Full(a))$/;"	f
findAllByPreparedStatement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def findAllByPreparedStatement(f: SuperConnection => PreparedStatement): List[A] = {$/;"	f
findAllByPreparedStatementDb	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def findAllByPreparedStatementDb[T](dbId: ConnectionIdentifier, stmt: PreparedStatement)(f: A => Box[T]): List[T] = {$/;"	f
findAllCustom	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^	def findAllCustom = $/;"	f
findAllDb	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def findAllDb(dbId: ConnectionIdentifier,by: QueryParam[A]*): List[A] =$/;"	f
findAllDb	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def findAllDb(dbId:ConnectionIdentifier): List[A] =$/;"	f
findAllFields	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def findAllFields(fields: Seq[SelectableField],$/;"	f
findAllFieldsDb	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def findAllFieldsDb(dbId: ConnectionIdentifier,$/;"	f
findAllIn	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^  def findAllIn(source: java.lang.CharSequence) = new Regex.MatchIterator(source, this, groupNames)$/;"	f
findAndMerge	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[liftweb] def findAndMerge(templateName: Box[Seq[Node]], atWhat: Map[String, NodeSeq]): NodeSeq = {$/;"	f
findAndProcessTemplate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def findAndProcessTemplate(name: List[String]): Box[Elem] = {$/;"	f
findAndTestLoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^  def findAndTestLoc(name: String): Box[Loc[_]] =$/;"	f
findAnyTemplate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def findAnyTemplate(places: List[String]): Box[NodeSeq] =$/;"	f
findAnyTemplate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def findAnyTemplate(places: List[String], locale: Locale): Box[NodeSeq] = {$/;"	f
findApplier	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  protected def  findApplier(name: String, inst: AnyRef): Box[((A, AnyRef) => Unit)] = synchronized {$/;"	f
findAttr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    protected def findAttr(key: String): Option[Info] =$/;"	f
findAttr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    protected def findAttr(prefix: String, key: String): Option[Info] =$/;"	f
findAttr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  protected def findAttr(key: String): Option[Info]$/;"	f
findAttr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  protected def findAttr(prefix: String, key: String): Option[Info]$/;"	f
findAttr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    protected def findAttr(key: String): Option[Info] =$/;"	f
findAttr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    protected def findAttr(prefix: String, key: String): Option[Info] =$/;"	f
findAttributeSnippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private def findAttributeSnippet(name: String, rest: MetaData): MetaData = {$/;"	f
findByKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def findByKey(key: Type): Box[A] = findDbByKey(selectDbForKey(key), key)$/;"	f
findByNickname	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^  private[openid] def findByNickname(str: String): List[ModelType] =$/;"	f
findByUsernameAndPassword	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def findByUsernameAndPassword(username: String, password: String): Box[OAuthUser]$/;"	f
findClass	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def findClass(name: String, where: List[String]): Box[Class[AnyRef]] =$/;"	f
findClass	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def findClass(name: String, where: List[String], modifiers: List[String => String]): Box[Class[AnyRef]] =$/;"	f
findClass	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def findClass(where: List[(String, List[String])]): Box[Class[AnyRef]] =$/;"	f
findClass	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def findClass[C <: AnyRef](name: String, where: List[String], modifiers: List[Function1[String, String]], targetType: Class[C]): Box[Class[C]] =$/;"	f
findClass	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def findClass[C <: AnyRef](name: String, where: List[String], targetType: Class[C]): Box[Class[C]] =$/;"	f
findComet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def findComet(theType: String): List[LiftCometActor] = synchronized {$/;"	f
findComet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[liftweb] def findComet(theType: Box[String], name: Box[String],$/;"	f
findCometByType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private def findCometByType(contType: String,$/;"	f
findCookie	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def findCookie(name: String): Box[HTTPCookie] =$/;"	f
findDb	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def findDb(dbId: ConnectionIdentifier, by: QueryParam[A]*): Box[A] =$/;"	f
findDb	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def findDb(dbId: ConnectionIdentifier, fields: Seq[SelectableField],$/;"	f
findDb	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def findDb(dbId: ConnectionIdentifier, key: Any): Box[A] =$/;"	f
findDbByKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def findDbByKey(dbId: ConnectionIdentifier, fields: Seq[SelectableField],$/;"	f
findDbByKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def findDbByKey(dbId: ConnectionIdentifier, key: Type): Box[A] =$/;"	f
findDbByKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala	/^  override def findDbByKey(dbId: ConnectionIdentifier, key: Long): Box[ModelType] = synchronized {$/;"	f
findDirect	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    private def findDirect(xs: List[JValue], p: JValue => Boolean): List[JValue] = xs.flatMap {$/;"	f
findElem	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    def findElem(in: NodeSeq): Box[Elem] =$/;"	f
findElems	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^  def findElems(nodes: NodeSeq)(f: Elem => Boolean): NodeSeq = {$/;"	f
findEntry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/DefaultMapModel.scala	/^  protected def findEntry(key: A): Entry$/;"	f
findEntry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^  def findEntry(elem: A): Option[A] = {$/;"	f
findEntry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^  protected def findEntry(key: A): Entry = {$/;"	f
findFirst	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^     def findFirst[T, U](l: List[T], f: T => U, predicate: U => Boolean): Box[U] = {$/;"	f
findFirstIn	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^  def findFirstIn(source: java.lang.CharSequence): Option[String] = {$/;"	f
findFirstMatchIn	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^  def findFirstMatchIn(source: java.lang.CharSequence): Option[Match] = {$/;"	f
findFor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def findFor(key: KeyType): List[OwnerType]$/;"	f
findFor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def findFor(key: KeyedForeignType): List[OwnerType]$/;"	f
findFor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def findFor(key: KeyType): List[OwnerType] = theOwner.getSingleton.findAll(By(this, key))$/;"	f
findFor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def findFor(key: KeyedForeignType): List[OwnerType] = theOwner.getSingleton.findAll(By(this, key))$/;"	f
findFor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  def findFor(key: KeyType): List[OwnerType] = fieldOwner.getSingleton.findAll(By(this, key))$/;"	f
findFor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  def findFor(key: KeyedForeignType): List[OwnerType] = fieldOwner.getSingleton.findAll(By(this, key))$/;"	f
findForClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      def findForClass(clz: Class[_]): List[Method] = clz match {$/;"	f
findForList	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def findForList(start: Long, count: Int): List[CrudType] =$/;"	f
findForListParams	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def findForListParams: List[QueryParam[CrudType]] =$/;"	f
findForParam	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def findForParam(in: String): Box[CrudType] = find(in)$/;"	f
findFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  protected def findFunc(name: String): Box[T]$/;"	f
findFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    override protected def findFunc(name: String): Box[T] = ScreenVarHandler.get(name)$/;"	f
findFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  override protected def findFunc(name: String): Box[T] = RequestVarHandler.get(name)$/;"	f
findFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  override protected def findFunc(name: String): Box[T] = S.session match {$/;"	f
findFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  override protected def findFunc(name: String): Box[T] = TransientRequestVarHandler.get(name)$/;"	f
findFunc	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    override protected def findFunc(name: String): Box[T] = WizardVarHandler.get(name)$/;"	f
findInElems	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^  def findInElems[T](nodes: NodeSeq)(f: Elem => Iterable[T]): List[T] = {$/;"	f
findInViews	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private def findInViews(whole: List[String], part: List[String],$/;"	f
findIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  private[this] def findIndex(key : Key) : Int = findIndex(key, hashOf(key));$/;"	f
findIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  private[this] def findIndex(key : Key, hash : Int) : Int = {$/;"	f
findIndexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def findIndexOf(p: A => Boolean): Int = self findIndexOf p$/;"	f
findIndexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  @deprecated def findIndexOf(p: A => Boolean): Int =$/;"	f
findIndexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  @deprecated override def findIndexOf(p: A => Boolean) = self findIndexOf p$/;"	f
findIndexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def findIndexOf(p: A => Boolean): Int = {$/;"	f
findIndexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  override def findIndexOf(p: A => Boolean): Int =$/;"	f
findIndexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def findIndexOf(p: A => Boolean): Int = self findIndexOf p$/;"	f
findIt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^    def findIt(base: MetaData, what: MetaData): MetaData = (base, what) match {$/;"	f
findKids	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^  def findKids(in: NodeSeq, prefix: String, label: String): NodeSeq =$/;"	f
findKids	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^          def findKids(cur: Seq[MenuItem], depth: Int): Seq[MenuItem] = if (depth == 0) cur$/;"	f
findLoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Menu.scala	/^  def findLoc(req: Req): Box[Loc[_]] =$/;"	f
findLoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^  def findLoc(name: String): Box[Loc[_]] = Box(locs.get(name))$/;"	f
findLoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^  def findLoc(name: String): Box[Loc[_]] = for (sm <- LiftRules.siteMap; loc <- sm.findLoc(name)) yield loc$/;"	f
findLoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^  def findLoc(req: Req): Box[Loc[_]] = first(kids)(_.findLoc(req))$/;"	f
findMagicFields	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    def findMagicFields(onMagic: Mapper[A], staringClass: Class[_]): List[Method] = {$/;"	f
findMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def findMap[A, B](s: Iterable[A])(f: A => Option[B]): Option[B] =$/;"	f
findMap	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def findMap[T](by: QueryParam[A]*)(f: A => Box[T]) =$/;"	f
findMapByInsecureSql	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def findMapByInsecureSql[T](query: String, checkedBy: IHaveValidatedThisSQL)$/;"	f
findMapByInsecureSqlDb	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def findMapByInsecureSqlDb[T](dbId: ConnectionIdentifier, query: String, checkedBy: IHaveValidatedThisSQL)(f: A => Box[T]): List[T] = {$/;"	f
findMapDb	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def findMapDb[T](dbId: ConnectionIdentifier,$/;"	f
findMapFieldDb	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def findMapFieldDb[T](dbId: ConnectionIdentifier, fields: Seq[SelectableField],$/;"	f
findNSAttr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private final def findNSAttr(attrs: MetaData, prefix: String, key: String): Option[Seq[Node]] =$/;"	f
findNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^     def findNext: Unit = {$/;"	f
findNode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def findNode(in: Elem, nodes: NodeSeq): Box[Elem] = nodes match {$/;"	f
findOrAddId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^  def findOrAddId(in: Elem): (Elem, String) = (in \\ "@id").toList match {$/;"	f
findOrCreate	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^  def findOrCreate(openId: String): ModelType =$/;"	f
findOrCreate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala	/^  def findOrCreate(ntag: String): ModelType = synchronized {$/;"	f
findPos	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    def findPos(in: AnyRef): Box[Int] = {$/;"	f
findPos	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^    def findPos(in: AnyRef): Box[Int] = {$/;"	f
findPrefixMatchOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^  def findPrefixMatchOf(source: java.lang.CharSequence): Option[Match] = {$/;"	f
findPrefixOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^  def findPrefixOf(source: java.lang.CharSequence): Option[String] = {$/;"	f
findRefs	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def findRefs(in : List[Textile]) : List[Pair[String,String]] = in match {$/;"	f
findResourceInClasspath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResourceServer.scala	/^  def findResourceInClasspath(request: Req, uri: List[String])(): Box[LiftResponse] =$/;"	f
findRoot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^          def findRoot(e : Throwable) { if (e.getCause == null || e.getCause == e) throw e else findRoot(e.getCause) }$/;"	f
findScope	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/BindingParsers.scala	/^  protected def findScope[bt <: NameElement](x: bt): Option[Scope[bt]] = binderEnv(x)$/;"	f
findSnippetClass	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private def findSnippetClass(name: String): Box[Class[AnyRef]] = {$/;"	f
findSnippetInstance	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private def findSnippetInstance(cls: String): Box[AnyRef] =$/;"	f
findTemplate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[liftweb] def findTemplate(name: String): Box[NodeSeq] = {$/;"	f
findTheFile	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^    def findTheFile: Box[(_root_.java.net.URL, String)] = (first(Props.toTry.flatMap(f => List(f()+"log4j.props", f()+"log4j.xml")))$/;"	f
findType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def findType[C <: AnyRef](name: String, where: List[String])(implicit m: Manifest[C]): Box[Class[C]] =$/;"	f
findType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def findType[C <: AnyRef](name: String, where: List[String], modifiers: List[String => String])(implicit m: Manifest[C]): Box[Class[C]] =$/;"	f
findType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def findType[C <: AnyRef](where: List[(String, List[String])])(implicit m: Manifest[C]): Box[Class[C]] =$/;"	f
findValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  protected def findValue(key: A): Option[B] =$/;"	f
findValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^    override protected def findValue (k: A): UnbalancedTreeMap[A, B] = $/;"	f
findValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^  protected def findValue (key: A): UnbalancedTreeMap[A, B] = this$/;"	f
findVisibleTemplate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private def findVisibleTemplate(path: ParsePath, session: Req): Box[NodeSeq] = {$/;"	f
finder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    def finder(in: List[F => Box[T]]): Box[T] = in match {$/;"	f
finish	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  protected def finish(): Unit$/;"	f
finish	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  protected def finish(): Unit$/;"	f
finishButton	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    val finishButton = theScreen.finishButton % ("onclick" -> ("document.getElementById(" + finishId.encJs + ").submit()"))$/;"	V
finishButton	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  def finishButton: Elem = <button>{S.??("Finish")}<\/button>$/;"	f
finishButton	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    override def finishButton: Elem = Wizard.this.finishButton$/;"	f
finishButton	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  def finishButton: Elem = <button>{S.??("Finish")}<\/button>$/;"	f
finishId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    val finishId = Helpers.nextFuncName$/;"	V
first	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^  def first[B,C](in: Seq[B])(_f : B => Box[C]): Box[C] = {$/;"	f
first	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val first: Option[List[FormBuilderLocator[_]]] = requestForms.is.get(name) orElse sessionForms.is.get(name)$/;"	V
first	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/ToHeadUsages.scala	/^      val first = net.liftweb.http.Req.fixHtml("\/wombat",$/;"	V
first	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/snippet/DeferredSnippet.scala	/^  def first:NodeSeq = {$/;"	f
first	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^   var first = true$/;"	v
first	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^      val first = S.param("first").map(toLong) openOr 0L$/;"	V
first	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val first = (pk.name, JE.Str(f.obscure(self, pk.is)))$/;"	V
first	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Paginator.scala	/^  var first = 0L$/;"	v
first	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  def first: A =$/;"	f
first	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def first = self.first$/;"	f
first	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^        val first  = target(targetOffset)$/;"	V
first	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def first : A$/;"	f
first	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def first = if (left .isEmpty) key else left.first$/;"	f
first	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def first = throw new NoSuchElementException("empty map")$/;"	f
first	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^        var first = emptySet$/;"	v
first	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^    var first = emptySet$/;"	v
first	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/Scanners.scala	/^    def first = tok$/;"	f
first	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/Scanners.scala	/^    def first = tok$/;"	f
first	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/CharSequenceReader.scala	/^  def first = $/;"	f
first	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/PagedSeqReader.scala	/^  def first = $/;"	f
first	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/Reader.scala	/^  def first: T$/;"	f
first0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MutableList.scala	/^  protected var first0: LinkedList[A] = null$/;"	v
firstByteMark	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^    val firstByteMark = List[Byte](0x00.asInstanceOf[Byte], 0x00.asInstanceOf[Byte], 0xC0.asInstanceOf[Byte], 0xE0.asInstanceOf[Byte], 0xF0.asInstanceOf[Byte], 0xF8.asInstanceOf[Byte], 0xFC.asInstanceOf[Byte])$/;"	V
firstDot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^        val firstDot = last.indexOf(".")$/;"	V
firstFull	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def firstFull(param: F): Box[T] = {$/;"	f
firstKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Ranged.scala	/^  def firstKey: K$/;"	f
firstKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedMap.scala	/^  override def firstKey : K = elements.next._1;$/;"	f
firstKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedSet.scala	/^  override def firstKey: A = {$/;"	f
firstKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  final def firstKey : Int = this match {$/;"	f
firstKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^  override def firstKey = t.first$/;"	f
firstKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^   override def firstKey = tree.first$/;"	f
firstKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  override def firstKey = 0;$/;"	f
firstKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    override def firstKey = SortedMap.this.firstKey;$/;"	f
firstKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^  override def firstKey : K = elements.next._1;$/;"	f
firstKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMapWrapper.scala	/^  override def firstKey = underlying.firstKey.asInstanceOf[K];$/;"	f
firstKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^  override def firstKey : A = {$/;"	f
firstKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSetWrapper.scala	/^  override def firstKey = underlying.first.asInstanceOf[A];$/;"	f
firstName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val firstName = r.param("first_name")$/;"	V
firstName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  object firstName extends MappedString(this, 32) {$/;"	o
firstName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  object firstName extends MappedString(this, 32)$/;"	o
firstNameDisplayName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def firstNameDisplayName = ??("First Name")$/;"	f
firstOption	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  def firstOption: Option[A] = if (isEmpty) None else Some(apply(0))$/;"	f
firstOption	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def firstOption = self.firstOption$/;"	f
firstRow	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^            val firstRow = rs.next$/;"	V
firstScreen	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^                       private val firstScreen: Boolean) {$/;"	V
first_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^  def first_? [B](in: Seq[B])(f: => B => Boolean): Box[B] =$/;"	f
first_paraAttrs	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val first_paraAttrs : Parser[TableDef] = beginlS ~> 'p' ~> rep(para_attribute) <~ '.' ^^ TableDef$/;"	V
fits	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^    def fits(w: Int, state: List[FmtState]): Boolean = state match {$/;"	f
fits	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  protected def fits(test: String) =$/;"	f
fitsFlat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^        val fitsFlat = fits(width - k, (i, false, d) :: z)$/;"	V
fixAttrs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^    def fixAttrs(original: MetaData, toFix: String, attrs: MetaData, fixURL: Boolean): MetaData = attrs match {$/;"	f
fixAttrs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    def fixAttrs(toFix: String, attrs: MetaData, fixURL: Boolean): MetaData = {$/;"	f
fixBadWindows	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  private def fixBadWindows(in: String): String = {$/;"	f
fixCSS	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^  def fixCSS(in: Reader, rootPrefix: String): (Box[String], String) = {$/;"	f
fixCSS	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^  def fixCSS(in: String): Box[String] = phrase(in) match {$/;"	f
fixCSS	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def fixCSS(path: List[String], prefix: Box[String]) {$/;"	f
fixDown	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^  protected def fixDown(as: Array[AnyRef], m: Int, n: Int): Unit = {$/;"	f
fixEndScriptTag	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    private def fixEndScriptTag(in: String): String =$/;"	f
fixHeaders	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^    def fixHeaders(headers: List[(String, String)]) = headers map ((v) => v match {$/;"	f
fixHref	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^    val fixHref = Req.fixHref$/;"	V
fixHref	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  var fixHref = _fixHref _$/;"	v
fixHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def fixHtml(in: NodeSeq): NodeSeq = Req.fixHtml(contextPath, in)$/;"	f
fixHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def fixHtml(contextPath: String, in: NodeSeq): NodeSeq = {$/;"	f
fixHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def fixHtml(in: NodeSeq): NodeSeq = Req.fixHtml(contextPath, in)$/;"	f
fixHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  protected def fixHtml(uid: String, content: NodeSeq): String =$/;"	f
fixRefs	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def fixRefs(in : List[Textile], refs: HashMap[String, String]): Unit = in match {$/;"	f
fixSessionTime	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] def fixSessionTime(): Unit = synchronized {$/;"	f
fixTableName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def fixTableName(name: String) = clean(name.toLowerCase) match {$/;"	f
fixText	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^  private def fixText(in: String): String = (in, in.trim) match {$/;"	f
fixURI	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  private def fixURI(uri: String) = uri indexOf ";jsessionid" match {$/;"	f
fixUp	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^  protected def fixUp(as: Array[AnyRef], m: Int): Unit = {$/;"	f
fixedHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^      val fixedHtml = _fixHtml(xhtml, false, false, false, false, false, false, false, false)$/;"	V
fixedList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def fixedList[a](pa: SPU[a])(n: Int): SPU[List[a]] = {$/;"	f
fixedRender	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def fixedRender: Box[NodeSeq] = Empty$/;"	f
fixedXhtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  val fixedXhtml = _fixedXhtml.flatMap(content => S.session.map(s => s.processSurroundAndInclude("JS SetHTML id: " + id, content)))$/;"	V
fjsonCall	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def fjsonCall[T](jsCalcValue: JsExp, jsonContext: JsonContext, func: String => JsObj)(f: (String, JsExp) => T): T = {$/;"	f
fk	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def fk[InnerMapper <: Mapper[InnerMapper], JoinTypeA,$/;"	f
fkName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^            val fkName = rs.getString(8)$/;"	V
flatMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def flatMap[B](f: A => Box[B]): Box[B] = Empty$/;"	f
flatMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def flatMap[B](f: A => Box[B]): Box[B] = f(value)$/;"	f
flatMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def flatMap[B](f: A => Box[B]): Box[B] = this$/;"	f
flatMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    def flatMap[A](f: ChoiceItem[T] => Iterable[A]) = items.flatMap(f)$/;"	f
flatMap	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^    def flatMap[T](f: TransactionMonad => T): T =    f(this)$/;"	f
flatMap	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^    def flatMap[T](f: TransactionMonad => T): T =    withTxMandatory { f(this) }$/;"	f
flatMap	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^    def flatMap[T](f: TransactionMonad => T): T =    withTxNever { f(this) }$/;"	f
flatMap	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^    def flatMap[T](f: TransactionMonad => T): T =    withTxRequired { f(this) }$/;"	f
flatMap	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^    def flatMap[T](f: TransactionMonad => T): T =    withTxRequiresNew { f(this) }$/;"	f
flatMap	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^    def flatMap[T](f: TransactionMonad => T): T =    withTxSupports { f(this) }$/;"	f
flatMap	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  def flatMap[T](f: TransactionMonad => T): T$/;"	f
flatMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  override def flatMap[B](f: A => Iterable[B]): Array[B] = throw new Error()$/;"	f
flatMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def flatMap[B](f: A => Collection[B]): Collection[B] = self flatMap f$/;"	f
flatMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^    def flatMap[AA >: A, Y](f: B => Either[AA, Y]) = e match {$/;"	f
flatMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^    def flatMap[BB >: B, X](f: A => Either[X, BB]) = e match {$/;"	f
flatMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  def flatMap[B](f: Value => Iterator[B]): Iterator[B] = elements flatMap f$/;"	f
flatMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    override def flatMap[B](f: A => Iterable[B]) : Projection[B] = new Projection[B] {$/;"	f
flatMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def flatMap[B](f: A => Iterable[B]): Iterable[B] = {$/;"	f
flatMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def flatMap[B](f: A => Iterable[B]) = self flatMap f$/;"	f
flatMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def flatMap[B](f: A => Iterator[B]): Iterator[B] = new Iterator[B] {$/;"	f
flatMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  final override def flatMap[B](f: A => Iterable[B]): List[B] = {$/;"	f
flatMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^  def flatMap[B](f: A => Option[B]): Option[B] = $/;"	f
flatMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Responder.scala	/^  def flatMap[B](f: A => Responder[B]) = new Responder[B] {$/;"	f
flatMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    override def flatMap[B](f: A => Iterable[B]): Projection[B] = new Projection[B] {$/;"	f
flatMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  override def flatMap[B](f: A => Iterable[B]): Seq[B] = {$/;"	f
flatMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def flatMap[B](f: A => Iterable[B]) = self flatMap f$/;"	f
flatMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override def flatMap[B](f: A => Iterable[B]): Stream[B] = {$/;"	f
flatMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set.scala	/^  override def flatMap[B](f: A => Iterable[B]): Set[B] =$/;"	f
flatMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  final override def flatMap[b](f: Any => Iterable[b]): Array[b] = {$/;"	f
flatMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/Parsers.scala	/^    def flatMap[B](f: A => Parser[B]) = new Parser[B] {$/;"	f
flatMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def flatMap[U](f: T => Parser[U]): Parser[U]$/;"	f
flatMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^  def flatMap(f: Node => NodeSeq): NodeSeq = {$/;"	f
flatMapFieldTitleForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def flatMapFieldTitleForm[T](toMap: A,$/;"	f
flatMapFieldTitleForm2	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def flatMapFieldTitleForm2[T](toMap: A,$/;"	f
flatMapWithNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def flatMapWithNext[U](f: Nothing => Input => ParseResult[U]): ParseResult[U] $/;"	f
flatMapWithNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def flatMapWithNext[U](f: T => Input => ParseResult[U]): ParseResult[U]     $/;"	f
flatMapWithNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def flatMapWithNext[U](f: T => Input => ParseResult[U]): ParseResult[U] $/;"	f
flatten	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  private def flatten(in: List[Any]): List[Any] = in match {$/;"	f
flatten	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def flatten[T](its: Iterator[Iterator[T]]): Iterator[T] = new Iterator[T] {$/;"	f
flatten	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def flatten[A](xss: List[List[A]]): List[A] = concat(xss: _*)$/;"	f
flatten	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def flatten[B](implicit f : A => Iterable[B]) : List[B] = {$/;"	f
flatten2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/ImplicitConversions.scala	/^  implicit def flatten2[A, B, C]         (f: (A, B) => C) = $/;"	f
flatten2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/ImplicitConversions.scala	/^  implicit def flatten2[A, B, C]         (f: (A, B) => C) = $/;"	f
flatten3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/ImplicitConversions.scala	/^  implicit def flatten3[A, B, C, D]      (f: (A, B, C) => D) = $/;"	f
flatten3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/ImplicitConversions.scala	/^  implicit def flatten3[A, B, C, D]      (f: (A, B, C) => D) = $/;"	f
flatten4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/ImplicitConversions.scala	/^  implicit def flatten4[A, B, C, D, E]   (f: (A, B, C, D) => E) = $/;"	f
flatten4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/ImplicitConversions.scala	/^  implicit def flatten4[A, B, C, D, E]   (f: (A, B, C, D) => E) = $/;"	f
flatten5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/ImplicitConversions.scala	/^  implicit def flatten5[A, B, C, D, E, F](f: (A, B, C, D, E) => F) = $/;"	f
flatten5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/ImplicitConversions.scala	/^  implicit def flatten5[A, B, C, D, E, F](f: (A, B, C, D, E) => F) = $/;"	f
flattenAndDropLastEOL	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  private def flattenAndDropLastEOL(elems : List[Textile]) = ((elems match {case Nil => Nil case x => (x.last match { case EOL => elems.init case _ => elems})})).flatMap{e => e.toHtml.toList}$/;"	f
flattenArray	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^    def flattenArray(nums: List[JValue]) = JString(nums.map(_.values).mkString(","))$/;"	f
fld	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^       mappedFieldList.foldRight[MetaData](Null) {(p, md) => val fld = ??(p.method, what)$/;"	V
flipBit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def flipBit (n: Int): BigInt  = new BigInt(this.bigInteger.flipBit(n))$/;"	f
flipDocTypeForIE6	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def flipDocTypeForIE6 = false$/;"	f
flipDocTypeForIE6	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  override def flipDocTypeForIE6 = LiftRules.flipDocTypeForIE6$/;"	f
flipDocTypeForIE6	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var flipDocTypeForIE6 = true$/;"	v
float	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  @deprecated type float   = scala.Float$/;"	T
float2Float	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def float2Float(x: Float) = new java.lang.Float(x)$/;"	f
float2double	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def float2double(x: Float): Double = x.toDouble$/;"	f
floatValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^        def floatValue = amount.floatValue$/;"	f
floatValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  def floatValue  = this.bigDecimal.floatValue$/;"	f
floatValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def floatValue  = this.bigInteger.floatValue$/;"	f
floatWrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def floatWrapper(x: Float)   = new runtime.RichFloat(x)$/;"	f
floatingPointNumber	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/JavaTokenParsers.scala	/^  def floatingPointNumber: Parser[String] = $/;"	f
floats	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^    val floats = Array($/;"	V
floor	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def floor(x: Double): Double = java.lang.Math.floor(x)$/;"	f
floor	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichDouble.scala	/^  def floor: Double = Math.floor(x)$/;"	f
floor	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichFloat.scala	/^  def floor: Float = Math.floor(x).toFloat$/;"	f
flotShow	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotAjax.scala	/^    val flotShow = Flot.renderFlotShow (idPlaceholder, datas, new FlotOptions{}, Noop).toJsCmd$/;"	V
flush	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/CachedFileStorage.scala	/^  def flush = { $/;"	f
flushFrom	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    protected[this] def flushFrom[B <% Seq[A]](i : Default[B]) = $/;"	f
fmap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Tests.scala	/^    val fmap : SortedMap[String,Integer] = rmap.projection.filterKeys(k => k.length == 2);$/;"	V
fmapFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def fmapFunc[T](in: AFuncHolder)(f: String => T): T = {$/;"	f
fmt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^    def fmt(k: Int, state: List[FmtState]): Unit = state match {$/;"	f
fn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^      val fn = columns.map(_.field._dbColumnNameLC.toLowerCase).sort(_ < _)$/;"	V
fol	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^    var fol = emptySet$/;"	v
fol	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^    var fol = fol1$/;"	v
fol	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^      val fol = this.follow(j)$/;"	V
fold	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def fold[A](z: A)(f: (A, JValue) => A): A = {$/;"	f
fold	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  private def fold(docs: List[Document]) = docs.foldLeft[Document](empty)(_ :: _)$/;"	f
fold	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^  def fold[X](fa: A => X, fb: B => X) = this match {$/;"	f
fold	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def fold(z: B): B = if (hasNext) op(next, fold(z)) else z$/;"	f
foldLeft	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def foldLeft[B](z: B)(op: (B, A) => B): B = (self foldLeft z)(op)$/;"	f
foldLeft	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def foldLeft[B](z: B)(op: (B, A) => B): B = elements.foldLeft(z)(op)$/;"	f
foldLeft	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def foldLeft[B](z: B)(op: (B, A) => B) = (self foldLeft z)(op)$/;"	f
foldLeft	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def foldLeft[B](z: B)(op: (B, A) => B): B = {$/;"	f
foldLeft	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def foldLeft[B](z: B)(f: (B, A) => B): B = {$/;"	f
foldLeft	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override final def foldLeft[B](z: B)(f: (B, A) => B): B = {$/;"	f
foldRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def foldRight[B](z: B)(op: (A, B) => B): B = (self foldRight z)(op)$/;"	f
foldRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def foldRight[B](z: B)(op: (A, B) => B): B = elements.foldRight(z)(op)$/;"	f
foldRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def foldRight[B](z: B)(op: (A, B) => B) = (self foldRight z)(op)$/;"	f
foldRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def foldRight[B](z: B)(op: (A, B) => B): B = {$/;"	f
foldRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def foldRight[B](z: B)(f: (A, B) => B): B = this match {$/;"	f
foldRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override def foldRight[B](z: B)(f: (A, B) => B): B =$/;"	f
follow	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^  protected var follow: mutable.HashMap[Int, immutable.Set[Int]] = _$/;"	v
footnote	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val footnote : Parser[Textile] = (beginl ~> accept("fn") ~> num) ~ rep(para_attribute) ~ (accept(". ") ~> rep1(not_blank_line) <~ blankLine) ^^ {$/;"	V
footnote_def	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val footnote_def: Parser[Textile] = '[' ~> num <~ ']' ^^ FootnoteDef$/;"	V
forAuction	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val forAuction = r.param("for_auction")$/;"	V
forDB	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Currency.scala	/^  def forDB: String = Helpers.urlEncode(symbol)+"&"+amount+"&"+decimals$/;"	f
forall	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def forall(p: A => Boolean): Boolean = self forall p$/;"	f
forall	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^    def forall(f: A => Boolean) = e match {$/;"	f
forall	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^    def forall(f: B => Boolean) = e match {$/;"	f
forall	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  def forall(p: Value => Boolean): Boolean = elements forall p$/;"	f
forall	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def forall(p: A => Boolean): Boolean = elements.forall(p)$/;"	f
forall	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def forall(p: A => Boolean) = self forall p$/;"	f
forall	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def forall(p: A => Boolean): Boolean = {$/;"	f
forall	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def forall(p: A => Boolean): Boolean = {$/;"	f
forall	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override final def forall(p: A => Boolean): Boolean = {$/;"	f
forall	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^  override def forall(f : Tuple2[A,B] => Boolean) : Boolean = $/;"	f
forall	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^  override def forall(f: A => Boolean): Boolean = $/;"	f
forall2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def forall2[A,B](xs: List[A], ys: List[B])(f: (A, B) => Boolean): Boolean = {$/;"	f
force	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^     def force : Array[A]$/;"	f
force	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^     override def force : Array[A] = toArray$/;"	f
force	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^     override def force = asInstanceOf[Array[A]]$/;"	f
force	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    def force : Iterable[A] = toList$/;"	f
force	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    override def force = Iterable.this$/;"	f
force	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    override def force : List[A] = List.this$/;"	f
force	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      override def force : Mutable[A] = Mutable.this$/;"	f
force	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def force : Mutable[A] = toArray$/;"	f
force	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def force : RandomAccessSeq[A] = toArray$/;"	f
force	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def force = this$/;"	f
force	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    override def force : Seq[A] = toList$/;"	f
force	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    override def force: Seq[A] = Seq.this$/;"	f
force	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override def force : List[A] = toList$/;"	f
force	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def force: this.type = { starts; ends; this } $/;"	f
forceArrayProjection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def forceArrayProjection[A](x: Array.Projection[A]): Array[A] = x.force$/;"	f
forceBoxedArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  def forceBoxedArray[A <: Any](xs: Seq[A]): Array[A] = {$/;"	f
forceRandomAccessCharSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def forceRandomAccessCharSeq(x: runtime.RichString): String = x.mkString$/;"	f
foreach	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def foreach(f: A => Any): Unit = {}$/;"	f
foreach	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def foreach(f: A => Any): Unit = f(value)$/;"	f
foreach	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^  def foreach(func: (String, List[String]) => Unit): Unit = {$/;"	f
foreach	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^    def foreach(f: TransactionMonad => Unit): Unit = f(this)$/;"	f
foreach	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^    def foreach(f: TransactionMonad => Unit): Unit = withTxMandatory { f(this) }$/;"	f
foreach	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^    def foreach(f: TransactionMonad => Unit): Unit = withTxNever { f(this) }$/;"	f
foreach	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^    def foreach(f: TransactionMonad => Unit): Unit = withTxRequired { f(this) }$/;"	f
foreach	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^    def foreach(f: TransactionMonad => Unit): Unit = withTxRequiresNew { f(this) }$/;"	f
foreach	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^    def foreach(f: TransactionMonad => Unit): Unit = withTxSupports { f(this) }$/;"	f
foreach	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  def foreach(f: TransactionMonad => Unit): Unit$/;"	f
foreach	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def foreach(f: HttpResponse => Unit): Unit = f(this)$/;"	f
foreach	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def foreach(f: HttpResponse => Unit): Unit = throw (exception openOr new java.io.IOException("HTTP Failure"))$/;"	f
foreach	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def foreach(f: HttpResponse => Unit): Unit$/;"	f
foreach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def foreach(f: A => Unit): Unit = self foreach f$/;"	f
foreach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^    def foreach(f: A => Unit) = e match {$/;"	f
foreach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^    def foreach(f: B => Unit) = e match {$/;"	f
foreach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  def foreach(f: Value => Unit): Unit = elements foreach f$/;"	f
foreach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def foreach(f: A => Unit): Unit = elements.foreach(f)$/;"	f
foreach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def foreach(f: A => Unit) = self foreach f$/;"	f
foreach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def foreach(f: A => Unit) { while (hasNext) f(next) }$/;"	f
foreach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  final override def foreach(f: A => Unit) {$/;"	f
foreach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^  def foreach(f: A => Unit) {$/;"	f
foreach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Range.scala	/^  override def foreach(f: Int => Unit) {$/;"	f
foreach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Responder.scala	/^  def foreach(k: A => Unit) { respond(k) }$/;"	f
foreach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override final def foreach(f: A => Unit) {$/;"	f
foreach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  override final def foreach(f : ((Int, T)) => Unit) : Unit = this match {$/;"	f
foreach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  override final def foreach(f : ((Long, T)) => Unit) : Unit = this match {$/;"	f
foreach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  override def foreach(f : ((Key, Value)) => Unit) = underlying.foreachValue(_.foreach(f));     $/;"	f
foreach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  override final def foreach(f : ((Key, Value)) => Unit) = this match {$/;"	f
foreach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^  override def foreach(f : Tuple2[A,B] => Unit) : Unit = $/;"	f
foreach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^  override def foreach(f: A => Unit) {$/;"	f
foreach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^  override def foreach(f : T => Unit){$/;"	f
foreach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableSetAdaptor.scala	/^  override def foreach(f: A => Unit): Unit = set.foreach(f)$/;"	f
foreach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  override def foreach(f : ((Key, Value)) => Unit){$/;"	f
foreach	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedSet.scala	/^  override def foreach(f: A => Unit) = synchronized {$/;"	f
foreachCallback	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  protected def foreachCallback(inst: BaseRecord, f: LifecycleCallbacks => Any) {$/;"	f
foreachKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  final def foreachKey(f : Int => Unit) : Unit = this match {$/;"	f
foreachKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  final def foreachKey(f : Long => Unit) : Unit = this match {$/;"	f
foreachUndeletedEntry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  private[this] def foreachUndeletedEntry(f : Entry[Key, Value] => Unit){$/;"	f
foreachValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  final def foreachValue(f : T => Unit) : Unit = this match {$/;"	f
foreachValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  final def foreachValue(f : T => Unit) : Unit = this match {$/;"	f
foreign	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^                                      val foreign: O => MappedForeignKey[K,_,T]) extends scala.collection.mutable.Buffer[O] {$/;"	V
foreign	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^  def foreign = obj \/\/_foreign$/;"	f
foreignKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^  implicit def foreignKey[K, O<:Mapper[O], T<:KeyedMapper[K,T]](field: MappedForeignKey[K,O,T]): O=>MappedForeignKey[K,O,T] =$/;"	f
forget	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    private[BufferedIterator] def forget : List[A] = {$/;"	f
fork	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def fork(cnt: Int)(f: Int => Any) {$/;"	f
forkCnt	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^class Item(val name: String, val resetDB: Boolean, val func: Box[() => Any], val forkCnt: Int, forkFunc: Box[Int => Any]) {$/;"	V
formAttrs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val formAttrs: FactoryMaker[List[String]] = new FactoryMaker(() => List("class", "id", "target", "style", "onsubmit")) {}$/;"	V
formAttrs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  protected def formAttrs: MetaData = scala.xml.Null$/;"	f
formAttrs	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  protected def formAttrs: MetaData = scala.xml.Null$/;"	f
formData	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^      val formData : NodeSeq =$/;"	V
formEncode	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  def formEncode(parameters: List[OAuthUtil.Parameter]) = {$/;"	f
formFields	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def formFields: List[MappedField[_, A]] =$/;"	f
formFields	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def formFields(toMap: A): List[MappedField[_, A]] =$/;"	f
formFuncName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def formFuncName: String = if (Props.testMode) {$/;"	f
formGroup	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def formGroup[T](group: Int)(f: => T): T = {$/;"	f
formItemNumber	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private object formItemNumber extends TransientRequestVar[Int](0)$/;"	o
formTemplate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  var formTemplate: Box[NodeSeq] = Empty$/;"	v
formToJSON	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JSArtifacts.scala	/^  def formToJSON(formId: String): JsExp$/;"	f
formToJSON	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JQueryArtifacts.scala	/^  def formToJSON(formId: String): JsExp = new JsExp() {$/;"	f
formToJSON	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^  def formToJSON(formId: String): JsExp = new JsExp() {$/;"	f
format	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^    def format(d: Date) = formatter.format(d)$/;"	f
format	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  def format(d: Date): String$/;"	f
format	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^        def format(currencySymbol: String, numberOfFractionDigits: Int): String = {$/;"	f
format	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^        def format(fd: Int): String = format(currencySymbol, fd)$/;"	f
format	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^        def format: String = format(currencySymbol, numberOfFractionDigits)$/;"	f
format	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    def format(millis: Long): String = {$/;"	f
format	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  @deprecated def format(text: String, args: Any*) {$/;"	f
format	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def format(text: String, xs: Any*) = Console.format(text, xs: _*)$/;"	f
format	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  def format(args : Any*) : String = {$/;"	f
format	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^  def format(width: Int, writer: Writer) {$/;"	f
format	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  def format(n: Node): String = format(n, null) \/\/Utility.defaultPrefixes(n))$/;"	f
format	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  def format(n: Node, pscope: NamespaceBinding): String = {$/;"	f
format	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  def format(n: Node, pscope: NamespaceBinding, sb: StringBuilder): Unit = { \/\/ entry point$/;"	f
format	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  def format(n: Node, sb: StringBuilder ): Unit = \/\/ entry point$/;"	f
formatAmount	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^      def formatAmount(amountUnit: (Long, String)) = amountUnit match {$/;"	f
formatDate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var formatDate: Date => String = date => date match {case null => LiftRules.formatDate(new Date(0L)) case s => toInternetDate(s)}$/;"	v
formatFormElement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  var formatFormElement: (NodeSeq, NodeSeq) => NodeSeq =$/;"	v
formatFormLine	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def formatFormLine(displayName: NodeSeq, form: NodeSeq): NodeSeq =$/;"	f
formatNodes	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  def formatNodes(nodes: Seq[Node]): String =$/;"	f
formatNodes	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  def formatNodes(nodes: Seq[Node], pscope: NamespaceBinding): String = {$/;"	f
formatNodes	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  def formatNodes(nodes: Seq[Node], pscope: NamespaceBinding, sb: StringBuilder): Unit =$/;"	f
formats	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Serialization.scala	/^  def formats(hints: TypeHints) = new Formats {$/;"	f
formats	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^  implicit val formats = DefaultFormats$/;"	V
formats	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/LottoExample.scala	/^  implicit val formats = DefaultFormats$/;"	V
formats	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  implicit val formats = Serialization.formats(FullTypeHints(classOf[Animal] :: Nil))$/;"	V
formats	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  implicit val formats = Serialization.formats(NoTypeHints)$/;"	V
formats	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  implicit val formats = Serialization.formats(ShortTypeHints(classOf[Fish] :: classOf[Dog] :: Nil))$/;"	V
formats	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  implicit val formats = Serialization.formats(hints)$/;"	V
formats	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  implicit val formats: Formats$/;"	V
formatted	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/StringAdd.scala	/^  def formatted(fmtstr: String): String = fmtstr format self$/;"	f
formattedDateNow	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def formattedDateNow = dateFormatter.format(now)$/;"	f
formattedLineElem	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def formattedLineElem[Q <% Parser[Any]](m: Q):$/;"	f
formattedLineElem	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def formattedLineElem[Q <% Parser[Any]](m: Q, p: Parser[List[Attribute]]):$/;"	f
formattedTimeNow	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def formattedTimeNow = timeFormatter.format(now)$/;"	f
formatter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^    private def formatter = {$/;"	f
forwardMessageTo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  protected final def forwardMessageTo(msg: Any, forwardTo: TypedActor[Any, Any]) {$/;"	f
forwardMessageTo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/SimpleActor.scala	/^  protected def forwardMessageTo(msg: From,$/;"	f
fos	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    val fos = new FileOutputStream(file)$/;"	V
fos	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^    var fos: FileOutputStream = null$/;"	v
fos	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/CachedFileStorage.scala	/^    val fos = new FileOutputStream(theFile)$/;"	V
found	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/Examples.scala	/^    val found = json find {$/;"	V
found	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^            var found = false$/;"	v
found	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val found = for ($/;"	V
found	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    var found = false$/;"	v
found	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    var found = false$/;"	v
found	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Marshal.scala	/^    val found = in.readObject.asInstanceOf[Manifest[_]]$/;"	V
foundIt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^        var foundIt = false$/;"	v
fr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^    val fr = "f" + Helpers.nextFuncName$/;"	V
frac	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val frac: Parser[String] = '.' ~> digits ^^ {digits => digits.mkString}$/;"	V
fracPart	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Lexer.scala	/^  def fracPart = '.' ~> rep(digit) ^^ { _ mkString "" }$/;"	f
freeze	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^  protected def freeze(nb: NodeBuffer): Seq[Node] = {$/;"	f
frog	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val frog = SampleModel.find(By(SampleModel.firstName, "Frog")).open_!$/;"	V
from	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    "provide a time function creating a new Date object from a number of millis" in {$/;"	o
from	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    def from(f: Boolean => Any): List[String] => Boolean = (in: List[String]) => {$/;"	f
from	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^            val from = referer$/;"	V
from	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^    val from = referer$/;"	V
from	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private var from: Map[String, Map[String, Any]] = Map.empty$/;"	v
from	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^       override def from = from0$/;"	f
from	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def from(start: Int): Iterator[Int] = from(start, 1)$/;"	f
from	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def from(start: Int, step: Int => Int): Iterator[Int] = new Iterator[Int] {$/;"	f
from	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def from(start: Int, step: Int): Iterator[Int] = from(start, {x:Int => x + step})$/;"	f
from	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      def from = from0$/;"	f
from	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      val from = (if (this.from < 0) 0 else this.from)$/;"	V
from	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      val from = if (this.from < 0) 0 else this.from$/;"	V
from	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    def from = from0$/;"	f
from	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def from = from0$/;"	f
from	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    protected def from  : Int$/;"	f
from	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    protected def from : Int$/;"	f
from	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  def from(start: Int): Stream[Int] = from(start, 1)$/;"	f
from	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  def from(start: Int, step: Int): Stream[Int] =$/;"	f
from	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Ranged.scala	/^  def from(from: K) = rangeImpl(Some(from), None)$/;"	f
from	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Sorted.scala	/^  override def from(from: K) = rangeImpl(Some(from), None)$/;"	f
from	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedMap.scala	/^  override def from(from: K) = rangeImpl(Some(from), None);$/;"	f
from	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedSet.scala	/^  override def from(from: A) = rangeImpl(Some(from), None)$/;"	f
from	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/SortedMap.scala	/^  override def from(from: A) = rangeImpl(Some(from), None)$/;"	f
from	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Ranged.scala	/^  override final def from(from: K): SortedSelf = rangeImpl(Some(from), None);$/;"	f
from0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^        val from0 = if (from < 0) 0 else from$/;"	V
fromAccessToken	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthAccessor.scala	/^  def fromAccessToken(message: OAuthMessage): Box[OAuthAccessor] = Empty \/* {$/;"	f
fromArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def fromArray[a](xs: Array[a]): Iterator[a] =$/;"	f
fromArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def fromArray[a](xs: Array[a], start: Int, length: Int): Iterator[a] =$/;"	f
fromArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def fromArray[A](arr: Array[A]): List[A] = fromArray(arr, 0, arr.length)$/;"	f
fromArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def fromArray[A](arr: Array[A], start: Int, len: Int): List[A] = {$/;"	f
fromAuthToken	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def fromAuthToken(authToken: String) : Option[FacebookClient] = {$/;"	f
fromAuthToken	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def fromAuthToken(authToken: String): Option[FacebookSession] = {$/;"	f
fromAuthorizedRequestToken	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthAccessor.scala	/^  def fromAuthorizedRequestToken(message: OAuthMessage): Box[OAuthAccessor] = Empty \/* {$/;"	f
fromBytes	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def fromBytes(bytes: Array[Byte]): Source =$/;"	f
fromBytes	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def fromBytes(bytes: Array[Byte], enc: String): Source =$/;"	f
fromCaseClass	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def fromCaseClass(n: Product) = fromProduct(n)$/;"	f
fromChar	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def fromChar(c: Char): Source = {$/;"	f
fromChars	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def fromChars(chars: Array[Char]): Source = {$/;"	f
fromEnum	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def fromEnum(n: Int) = if (n == 0) false else true$/;"	f
fromFile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  def fromFile(source: File): PagedSeq[Char] = $/;"	f
fromFile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  def fromFile(source: String): PagedSeq[Char] = $/;"	f
fromFile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def fromFile(file: File): Source =$/;"	f
fromFile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def fromFile(file: File, enc: String): Source = $/;"	f
fromFile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def fromFile(file: File, enc: String, bufferSize: Int): Source = {$/;"	f
fromFile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def fromFile(name: String): Source =$/;"	f
fromFile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def fromFile(name: String, enc: String): Source =$/;"	f
fromFile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def fromFile(uri: URI): Source =$/;"	f
fromFile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def fromFile(uri: URI, enc: String): Source =$/;"	f
fromFile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingParser.scala	/^  def fromFile(inp: File, preserveWS: Boolean) = {$/;"	f
fromFixedAttribute	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ValidationException.scala	/^  def fromFixedAttribute(k: String, value: String, actual: String) =$/;"	f
fromFunction	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def fromFunction[A](f: (Int, Int) => A)(n1: Int, n2: Int): Array[Array[A]] =$/;"	f
fromFunction	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def fromFunction[A](f: (Int, Int, Int) => A)(n1: Int, n2: Int, n3: Int): Array[Array[Array[A]]] = $/;"	f
fromFunction	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def fromFunction[A](f: (Int, Int, Int, Int) => A)(n1: Int, n2: Int, n3: Int, n4: Int): Array[Array[Array[Array[A]]]] = $/;"	f
fromFunction	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def fromFunction[A](f: (Int, Int, Int, Int, Int) => A)(n1: Int, n2: Int, n3: Int, n4: Int, n5: Int): Array[Array[Array[Array[Array[A]]]]] = $/;"	f
fromFunction	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def fromFunction[A](f: Int => A)(n: Int): Array[A] = {$/;"	f
fromInputStream	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BufferedSource.scala	/^  def fromInputStream(inpStream: InputStream, charSet: Charset, buffer_size: Int, do_reset: () => Source): BufferedSource =$/;"	f
fromInputStream	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BufferedSource.scala	/^  def fromInputStream(inpStream: InputStream, decoder: CharsetDecoder, buffer_size: Int, do_reset: () => Source): BufferedSource = {$/;"	f
fromInputStream	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BufferedSource.scala	/^  def fromInputStream(inpStream: InputStream, enc: String, buffer_size: Int, do_reset: () => Source): BufferedSource =$/;"	f
fromInputStream	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  @deprecated def fromInputStream(istream: InputStream, enc: String, maxlen: Option[Int]): Source = {$/;"	f
fromInputStream	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def fromInputStream(is: InputStream): Source = $/;"	f
fromInputStream	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def fromInputStream(is: InputStream, enc: String): Source = $/;"	f
fromInt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def fromInt(in: Int): ENUM#Value = enum(in)$/;"	f
fromInt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EnumField.scala	/^  def fromInt(in: Int): ENUM#Value = enum(in)$/;"	f
fromIterable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  def fromIterable[T](source: Iterable[T]): PagedSeq[T] = $/;"	f
fromIterable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  def fromIterable[Key, Value](elems : Iterable[(Key, Value)]) : TreeHashMap[Key, Value] =$/;"	f
fromIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def fromIterator[A](it: Iterator[A]): List[A] = it.toList$/;"	f
fromIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  def fromIterator[A](it: Iterator[A]): Stream[A] =$/;"	f
fromIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  def fromIterator[T](source: Iterator[T]): PagedSeq[T] = $/;"	f
fromJSON	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  def fromJSON(inst: BaseRecord, json: String): Box[BaseRecord] = {$/;"	f
fromJSON	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Record.scala	/^  def fromJSON(json: String): Box[MyType] = {$/;"	f
fromLines	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  def fromLines(source: Iterable[String]): PagedSeq[Char] =$/;"	f
fromLines	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  def fromLines(source: Iterator[String]): PagedSeq[Char] = {$/;"	f
fromList	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^      def fromList(st : List[Pair[String,String]]) : MetaData = {$/;"	f
fromLong	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def fromLong(in: Long): Seq[ENUM#Value] = enum.Set64(in).toList$/;"	f
fromMissingAttribute	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ValidationException.scala	/^  def fromMissingAttribute(allKeys: scala.collection.Set[String]) = {$/;"	f
fromMissingAttribute	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ValidationException.scala	/^  def fromMissingAttribute(key: String, tpe: String) =$/;"	f
fromNonEmptyElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ValidationException.scala	/^  def fromNonEmptyElement() =$/;"	f
fromProduct	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def fromProduct(n: Product): Iterator[Any] = new Iterator[Any] {$/;"	f
fromReader	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  def fromReader(source: Reader): PagedSeq[Char] =$/;"	f
fromReq	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  def fromReq(r: Req): BaseRecord = {$/;"	f
fromSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^  def fromSeq(s: Seq[Node]): NodeSeq = new NodeSeq {$/;"	f
fromSession	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def fromSession(session: FacebookSession) : FacebookClient = {$/;"	f
fromSource	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  def fromSource(source: io.Source) = $/;"	f
fromSource	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingParser.scala	/^  def fromSource(inp: Source, preserveWS: Boolean) = {$/;"	f
fromState	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def fromState(implicit state: State) : Option[FacebookClient] = {$/;"	f
fromString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  @deprecated def fromString(str: String): Iterator[Char] =$/;"	f
fromString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  @deprecated def fromString(str: String): List[Char] =$/;"	f
fromString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def fromString(str: String, separator: Char): List[String] = {$/;"	f
fromString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def fromString(s: String): Source = {$/;"	f
fromString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/TextBuffer.scala	/^  def fromString(str: String): TextBuffer = new TextBuffer().append(str)$/;"	f
fromStrings	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  def fromStrings(source: Iterable[String]): PagedSeq[Char] = $/;"	f
fromStrings	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  def fromStrings(source: Iterator[String]): PagedSeq[Char] = {$/;"	f
fromStyle	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def fromStyle(st : List[Attribute]) : MetaData = {$/;"	f
fromURL	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def fromURL(s: String): Source =$/;"	f
fromURL	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def fromURL(s: String, enc:String): Source =$/;"	f
fromURL	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def fromURL(url: URL): Source = {$/;"	f
fromURL	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def fromURL(url: URL, enc:String): Source = $/;"	f
fromValues	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def fromValues[a](xs: a*) = xs.elements$/;"	f
fromi	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^      val fromi = if (from == None) 0 else from.get;$/;"	V
front	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    val front = p1.startsWith("\/")$/;"	V
front	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^  def front: A =$/;"	f
front	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Queue.scala	/^  def front: A = first0.elem$/;"	f
front	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/QueueProxy.scala	/^  override def front: A = self.front$/;"	f
front	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedQueue.scala	/^  override def front: A = synchronized { super.front }$/;"	f
fset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Tests.scala	/^    val fset : SortedSet[String] = rset.projection.filter(_.endsWith("d"));$/;"	V
fset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Tests.scala	/^    val fset = set.projection.filter(s => s.length <= 3);$/;"	V
fst	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def fst(p: (a,b)): a = p._1$/;"	f
fst	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def fst(p: (a,b,c)): a = p._1$/;"	f
fst	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^    val fst = it.next$/;"	V
fullName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^      val fullName = place + "." + mod(name);$/;"	V
fullUrl	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    val fullUrl = url + (params.map(v => urlEncode(v._1) + "=" + urlEncode(v._2)).mkString("&") match {case s if s.length == 0 => ""; case s => "?" + s})$/;"	V
fullname	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^abstract class GlobalSymbol(val fullname: String) extends Symbol {$/;"	V
fullname	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^case class Class(override val fullname: String) extends GlobalSymbol(fullname) {$/;"	V
fullname	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^case class Field(override val fullname: String, tpe: Type) extends GlobalSymbol(fullname)$/;"	V
fullname	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^case class Method(override val fullname: String, tpe: Type) extends GlobalSymbol(fullname)$/;"	V
fullname	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^case class TypeField(override val fullname: String, tpe: Type) extends GlobalSymbol(fullname)$/;"	V
func	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^class REDoer[T](val pattern: String, val func: Box[PartialFunction[(T, List[String]), T]]) extends Function2[T, String, Box[T]] {$/;"	V
func	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^    val func = contextFuncBuilder(() => {$/;"	V
func	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val func: (() => List[NodeSeq], String, MetaData) => NodeSeq = (f, title, attr) => f() map (e => <li>{e}<\/li>) match {$/;"	V
func	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^      val func: Box[(ValueType, ValueType => Unit) => NodeSeq] =$/;"	V
func	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^              val func: String = LiftSession.this.synchronized {$/;"	V
func	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^      val func: PartialFunction[String, NodeSeq => NodeSeq] = singles match {$/;"	V
funcHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  private val funcHolder = new ThreadGlobal[(String) => String]$/;"	V
funcName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                val funcName = Helpers.nextFuncName$/;"	V
funcName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    val funcName = "Z" + Helpers.nextFuncName$/;"	V
funcName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def funcName: String = "filter"$/;"	f
funcName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def funcName: String = "flatMap"$/;"	f
funcName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def funcName: String = "foreach"$/;"	f
funcName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def funcName: String = "map"$/;"	f
funcName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def funcName: String = "sort"$/;"	f
funcName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def funcName: String$/;"	f
funcToVender	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  implicit def funcToVender[T](f: () => T): Vendor[T] = apply(f)$/;"	f
functionLifespan	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def functionLifespan[T](span: Boolean)(f: => T): T =$/;"	f
functionLifespan_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def functionLifespan_? : Boolean = _lifeTime.box openOr false$/;"	f
functionMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def functionMap: Map[String, AFuncHolder] =$/;"	f
functionName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/NamedPartialFunction.scala	/^  def functionName: String$/;"	f
functionName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/NamedPartialFunction.scala	/^  val functionName = name$/;"	V
functionName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^      def functionName = "Default CSS Fixer"$/;"	f
functionName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^      def functionName = "default css fixer"$/;"	f
functionName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^      def functionName = rw match {$/;"	f
functionName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def functionName = "Paypal"$/;"	f
future	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^    val future = new LAFuture[Any]$/;"	V
future	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ActorPing.scala	/^      val future = service.scheduleAtFixedRate(new _root_.java.lang.Runnable {$/;"	V
future	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/ops.scala	/^  def future[A](p: => A): () => A = {$/;"	f
g	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val g = S.idMessages _$/;"	V
g	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-imaging/src/main/scala/net/liftweb/imaging/ImageHelpers.scala	/^      val g = dst.createGraphics $/;"	V
g	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/RollbackIterator.scala	/^    var g : Option[T] = None$/;"	v
gcd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def gcd (that: BigInt): BigInt = new BigInt(this.bigInteger.gcd(that.bigInteger))$/;"	f
genArray	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JValueGen.scala	/^  def genArray: Gen[JValue] = for (l <- genList) yield JArray(l)$/;"	f
genBox	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxUnit.scala	/^  implicit def genBox[T](implicit a: Arbitrary[T]): Arbitrary[Box[T]] = Arbitrary[Box[T]] {$/;"	f
genElem	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JValueGen.scala	/^  def genElem = for {$/;"	f
genFailureBox	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxUnit.scala	/^  def genFailureBox: Gen[Failure] = for {$/;"	f
genField	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JValueGen.scala	/^  def genField = for (name <- identifier; value <- genJValue; id <- choose(0, 1000000)) yield JField(name+id, value)$/;"	f
genFieldList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JValueGen.scala	/^  def genFieldList = Gen.containerOfN[List, JField](listSize, genField)$/;"	f
genId	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    private[Binders] def genId = return_(currentId) andDo {currentId=currentId+1}$/;"	f
genJValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JValueGen.scala	/^  def genJValue: Gen[JValue] = frequency((5, genSimple), (1, wrap(genArray)), (1, wrap(genObject)))$/;"	f
genJValueClass	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JValueGen.scala	/^  def genJValueClass: Gen[Class[_ <: JValue]] = oneOf($/;"	f
genKeyDescriptions	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^    def genKeyDescriptions (in : Int) = in match {$/;"	f
genList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JValueGen.scala	/^  def genList = Gen.containerOfN[List, JValue](listSize, genJValue)$/;"	f
genName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JValueGen.scala	/^  def genName = frequency((2, identifier), (1, value("const")))$/;"	f
genNode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JValueGen.scala	/^  def genNode = for {$/;"	f
genObject	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JValueGen.scala	/^  def genObject: Gen[JObject] = for (l <- genFieldList) yield JObject(l)$/;"	f
genSignature	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def genSignature(allParams: List[(String, Any)], secret: String): String = {$/;"	f
genSimple	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JValueGen.scala	/^  def genSimple: Gen[JValue] = oneOf($/;"	f
genString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^  implicit def genString: Arbitrary[String] = Arbitrary {$/;"	f
genThrowable	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxUnit.scala	/^  implicit def genThrowable: Arbitrary[Throwable] = Arbitrary[Throwable] {$/;"	f
genWhite	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^  def genWhite = for (len <- choose(1, 4);$/;"	f
genWhiteString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^  implicit def genWhiteString: Arbitrary[String] = Arbitrary {$/;"	f
genXml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JValueGen.scala	/^  def genXml: Gen[Node] = frequency((2, wrap(genNode)), (3, genElem))$/;"	f
generateSnapshotRestorer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  final def generateSnapshotRestorer[T](): Function1[Function0[T], T] = RequestVarHandler.generateSnapshotRestorer()$/;"	f
generateSnapshotRestorer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  final def generateSnapshotRestorer[T](): Function1[Function0[T], T] = {$/;"	f
generatedColumns	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^              val generatedColumns = (mappedColumnInfo.filter(_._2.dbAutogenerated_?).map(_._1)).toList$/;"	V
genericCheck	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^  private def genericCheck(zip: String): List[FieldError] = {$/;"	f
genericCheck	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PostalCodeField.scala	/^  private def genericCheck(zip: String): Box[Node] = {$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LAFuture.scala	/^  def get(timeout: Long): Box[T] = synchronized {$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LAFuture.scala	/^  def get: T = synchronized {$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  def get(key: K): Box[V] = localMap.get(key) match {$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  def get(key: K): Box[V] = coreVar.doSync {$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  def get(key: K, dflt: => V): V = coreVar.doSync {$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  def get: T = is$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^        def get(numberOfFractionDigits: Int): String = {$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^        def get: String = get(numberOfFractionDigits)$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^  def get: T = synchronized {$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^  def get: TheType = {$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^  lazy val get = f$/;"	V
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LRU.scala	/^  def get(k: KeyType): Box[ValueType] =$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  def get(name: String): Box[String] = Box(props.get(name))$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TemplateCache.scala	/^  def get(key: K): Box[V];$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TemplateCache.scala	/^  def get(key: T): Box[NodeSeq] = Empty$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TemplateCache.scala	/^  def get(key: T): Box[NodeSeq] = {$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ThreadGlobal.scala	/^  def get = is$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ValueHolder.scala	/^  def get: ValueType$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ValueHolder.scala	/^  implicit def tToVHT[T](in: T): PValueHolder[T] = new PValueHolder[T] {def is = in; def get = is}$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ValueHolder.scala	/^  implicit def tToVHT[T](in: T): ValueHolder = new PValueHolder[T] {def is = in; def get = is}$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Factory.scala	/^      def get = value$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    def get = is$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    def get[T](name: String): Box[T] =$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def get: String = ver.is$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[liftweb] def get[T](name: String): Box[T] = sessionVarSync.synchronized {$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def get(what: String): Box[String] = session.flatMap(_.get[String](what))$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SimpleController.scala	/^  def get(name: String): Box[String] =$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  private[http] def get[T](name: String): Box[T] =$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def get(url: String, httpClient: HttpClient,$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def get(url: String, params: (String, Any)*): Response =$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    def get[T](name: String): Box[T] =$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/HasManyThrough.scala	/^  def get: List[To] = this()$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def get: FieldType = is$/;"	f
get	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/FormProcessor.scala	/^  def get: Unit$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^    def get = e match {$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^  def get = throw new NoSuchElementException("None.get")$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^  def get = x$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^  def get: A$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^    override def get(key: A) = Map.this.get(key).map(f)$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^    override def get(key: A) = if (!p(key)) None else Map.this.get(key)$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^    override def get(key: A): Option[B] = Map.this.get(key)$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^  def get(key: A): Option[B]$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/MapProxy.scala	/^  override def get(key: A) = self.get(key)$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/EmptyMap.scala	/^  def get(key: A): Option[B] = None$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^  def get(key: A): Option[B] = synchronized {$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  final def get(key : Int) : Option[T] = this match {$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^    override def get(k: A): Option[B1] =$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^  def get(key: A): Option[B] = None$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  final def get(key : Long) : Option[T] = this match {$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^    def get(key: A) = Map.this.get(key)$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map1.scala	/^  def get(key: A): Option[B] = $/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map2.scala	/^  def get(key: A): Option[B] = $/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map3.scala	/^  def get(key: A): Option[B] = $/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map4.scala	/^  def get(key: A): Option[B] = $/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def get(_key: A) = None$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def get(key: A): Option[B]$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def get(sKey: A): Option[B] =$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  def get(key : Key) = underlying.get(hash(key)).flatMap(_.get(key));$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  final def get(key : Key) : Option[Value] = this match {$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^  override def get(key: A): Option[B] = tree.lookup(key) match {$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^  override def get(key: A): Option[B] = {$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    override def get(k : K) = Map.this.get(k)$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    override def get(key : K) = Map.this.get(key).map(f);$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    override def get(key : K) = {$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^  override def get(key : K) = elements.find(p => p._1 == key).map(_._2);$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^  override def get(key : K) : Option[E] = {$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    override def get(k : K) = SortedMap.this.get(k)$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    override def get(key : K) = if (!contains0(key)) None else SortedMap.this.get(key);$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/DefaultMapModel.scala	/^  def get(key: A): Option[B] = {$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableMapAdaptor.scala	/^  def get(key: A): Option[B] = imap.get(key)$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^  def get(key: A): Option[B] =$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^    override def get(key: A) = Map.this.get(key)$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MutableList.scala	/^  def get(n: Int): Option[A] = first0.get(n)$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  def get(key : Key) : Option[Value] = {$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SingleLinkedList.scala	/^  def get(n: Int): Option[A] =$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  abstract override def get(key: A): Option[B] = synchronized {$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/SyncVar.scala	/^  def get = synchronized {$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/Reference.scala	/^  def get : Option[T]$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/ReferenceWrapper.scala	/^  override def get = {$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def get: Nothing = error("No result when parsing failed")$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def get: T = result$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def get: T$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def get: Nothing = error("No result when parsing failed")$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def get: T = result$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def get: T$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  final def get(key: String): Option[Seq[Node]] = apply(key) match {$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  final def get(uri: String, owner: Node, key: String): Option[Seq[Node]] =$/;"	f
get	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  final def get(uri: String, scope: NamespaceBinding, key: String): Option[Seq[Node]] =$/;"	f
getActualBaseField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def getActualBaseField(actual: A, protoField: BaseOwnedMappedField[A]): BaseOwnedMappedField[A] =$/;"	f
getActualField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def getActualField[T](actual: A, protoField: MappedField[T, A]): MappedField[T, A] =$/;"	f
getAllNotices	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def getAllNotices: List[(NoticeType.Value, NodeSeq, Box[String])] = p_notice.toList ++ oldNotices.is$/;"	f
getAllSupers	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^          def getAllSupers(clz: Class[_]): List[Class[_]] = clz match {$/;"	f
getAndClearEvent	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^  def getAndClearEvent: XMLEvent = synchronized {$/;"	f
getAsyncComponent	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def getAsyncComponent(id: String): Box[LiftCometActor] = synchronized(asyncById.get(id))$/;"	f
getAttribute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty7AsyncProvider.scala	/^      val getAttribute = cci.getMethod("getAttribute", classOf[String])$/;"	V
getAttribute	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getAttribute(key: String) = attr(key).asInstanceOf[Object]$/;"	f
getAttribute	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getAttribute(f: String) = null$/;"	f
getAttribute	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getAttribute(key: String) = attr.get(key) match {$/;"	f
getAttributeNames	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getAttributeNames = new Vector[ZZ](attr.underlying.keySet.asInstanceOf[_root_.java.util.Set[ZZ]]).elements$/;"	f
getAttributeNames	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getAttributeNames = new Vector[AnyRef]().elements$/;"	f
getAttributeNames	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getAttributeNames = new Vector[AnyRef](attr.underlying.keySet).elements$/;"	f
getAuthType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getAuthType = authType$/;"	f
getBaseString	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^  def getBaseString(message: OAuthMessage): String =$/;"	f
getBool	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  def getBool(name: String): Box[Boolean] = props.get(name).map(toBoolean) \/\/ (props.get(name))$/;"	f
getBufferSize	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def getBufferSize = bufferSize$/;"	f
getCause	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^    override def getCause() = exception openOr null$/;"	f
getCharacterEncoding	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getCharacterEncoding = charEncoding$/;"	f
getCharacterEncoding	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def getCharacterEncoding = charEncoding$/;"	f
getChildRoles	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/Role.scala	/^  def getChildRoles = childs$/;"	f
getClassForName	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/compat/Platform.scala	/^  def getClassForName(name: String): Class[_] = java.lang.Class.forName(name)$/;"	f
getConnection	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private def getConnection(name: ConnectionIdentifier): SuperConnection = {$/;"	f
getConsumer	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  protected def getConsumer(requestMessage: OAuthMessage): Box[OAuthConsumer] =$/;"	f
getConsumerKey	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthMessage.scala	/^  def getConsumerKey = getParameter(OAuthUtil.OAUTH_CONSUMER_KEY)$/;"	f
getConsumerSecret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^  def getConsumerSecret: String = accessor.consumerSecret$/;"	f
getContentLength	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^      def getContentLength() = bytes.length$/;"	f
getContentLength	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getContentLength = contentLength$/;"	f
getContentModel	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^  def getContentModel = contentModel$/;"	f
getContentType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^                                def getContentType = i.mimeType$/;"	f
getContentType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^      def getContentType() = "text\/xml; charset=utf-8"$/;"	f
getContentType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^      def getContentType() = contentType$/;"	f
getContentType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getContentType = contentType$/;"	f
getContentType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def getContentType = contentType$/;"	f
getContext	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  def getContext: HTTPContext = servletContext$/;"	f
getContext	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getContext(path: String) = this$/;"	f
getContextPath	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getContextPath = contextPath$/;"	f
getContextPath	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getContextPath = null$/;"	f
getCookie	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def getCookie(headers: List[(String, String)],$/;"	f
getCookies	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private def getCookies(request: Box[HTTPRequest]): List[HTTPCookie] =$/;"	f
getCookies	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getCookies = cookies.toArray$/;"	f
getCreationTime	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getCreationTime = creationTime$/;"	f
getDateHeader	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getDateHeader(h: String): Long = {$/;"	f
getDefaultSchemaName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^  def getDefaultSchemaName(connection: SuperConnection): String =$/;"	f
getDocType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def getDocType: (Boolean, Box[String]) = Box.legacyNullTest(_responseHeaders.value).map($/;"	f
getElementFor	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def getElementFor(b: binderType): Element = substitution(b)    $/;"	f
getEntityManager	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  def getEntityManager: EntityManager = TransactionContext.getEntityManager$/;"	f
getEntityManager	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  private def getEntityManager: EntityManager = em$/;"	f
getEntityManager	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  private[transaction] def getEntityManager: EntityManager = current.getEntityManager$/;"	f
getFeed	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/rssfeed/RSSfeed.scala	/^  def getFeed(feedUrl: String): Elem = {$/;"	f
getField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  protected def getField(inst: OwnerType, meth: Method) = meth.invoke(inst).asInstanceOf[MappedField[FieldType,OwnerType]];$/;"	f
getFilterName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getFilterName = "LiftFilter" \/\/ as in lift's default web.xml$/;"	f
getFunc	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^  def getFunc(cnt: Int) = {$/;"	f
getHeader	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def getHeader(name: String): Box[String] = {$/;"	f
getHeader	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getHeader(h: String) = headers.get(h) match {$/;"	f
getHeaderNames	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getHeaderNames = {$/;"	f
getHeaders	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def getHeaders(in: List[(String, String)]): List[(String, String)] = {$/;"	f
getHeaders	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getHeaders = headers$/;"	f
getHeaders	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getHeaders(s: String) = {$/;"	f
getId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getId = null$/;"	f
getInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  def getInfo(req: Req): Box[DigestAuthentication] = header(req).map(auth => {$/;"	f
getInfo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def getInfo(users: Collection[Long], fields: FacebookField*): Node = {$/;"	f
getInitParameter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getInitParameter(f: String) = null$/;"	f
getInitParameter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getInitParameter(key: String) = null$/;"	f
getInitParameterNames	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getInitParameterNames  = new Vector[AnyRef]().elements$/;"	f
getInitParameterNames	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getInitParameterNames = new Vector[AnyRef]().elements$/;"	f
getInputStream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^                                def getInputStream = new _root_.java.io.ByteArrayInputStream(i.bytes)$/;"	f
getInputStream	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getInputStream = inputStream$/;"	f
getInstance	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^    private def getInstance: Box[TableEditorImpl[_]] = S.attr("table").map(TableEditor.map(_))$/;"	f
getInt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  def getInt(name: String): Box[Int] = get(name).map(toInt) \/\/ toInt(props.get(name))$/;"	f
getIntHeader	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getIntHeader(h: String): Int = {$/;"	f
getIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  def getIterator(ns:NodeSeq) = new Iterator[String] {$/;"	f
getIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^  def getIterator(nodes: Seq[Node], skipPCDATA: Boolean): Iterator[ElemName] = $/;"	f
getLabels	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  def getLabels(r: RegExp): scala.collection.Set[String] = {$/;"	f
getLastAccessedTime	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getLastAccessedTime = 0L$/;"	f
getLiftSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var getLiftSession: (Req) => LiftSession = (req) => _getLiftSession(req)$/;"	v
getLiftSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  def getLiftSession(request: Req): LiftSession = LiftRules.getLiftSession(request)$/;"	f
getLine	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def getLine(line: Int): String = { \/\/ faster than getLines.drop(line).next$/;"	f
getLines	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def getLines: Iterator[String] = new Iterator[String] {$/;"	f
getLocalAddr	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getLocalAddr = localAddr$/;"	f
getLocalName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getLocalName = localName$/;"	f
getLocalPort	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getLocalPort = localPort$/;"	f
getLocale	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getLocale = locale$/;"	f
getLocale	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def getLocale: Locale = locale$/;"	f
getLocales	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getLocales = new Vector[ZZ](Arrays.asList(Locale.getAvailableLocales : _*)).elements$/;"	f
getLocation	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^  private def getLocation(): String = {$/;"	f
getLong	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  def getLong(name: String): Box[Long] = props.get(name).flatMap(asLong)$/;"	f
getMD5	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/gravatar/Gravatar.scala	/^  private def getMD5(message: String): String = {$/;"	f
getMOAuthConsumerMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^ def getMOAuthConsumerMeta = TestMOAuthConsumer$/;"	f
getMOAuthConsumerMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    def getMOAuthConsumerMeta: MOAuthConsumerMeta[MOAuthConsumerType] with LongKeyedMetaMapper[MOAuthConsumerType]$/;"	f
getMOAuthTokenMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  def getMOAuthTokenMeta: MOAuthTokenMeta[MOAuthTokenType]$/;"	f
getMOAuthTokenMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^ def getMOAuthTokenMeta = TestMOAuthToken$/;"	f
getMajorVersion	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getMajorVersion = 2$/;"	f
getMaxInactiveInterval	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getMaxInactiveInterval = maxii$/;"	f
getMethod	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getMethod = method$/;"	f
getMethodDescriptors	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/ScalaBeanInfo.scala	/^  override def getMethodDescriptors() = md$/;"	f
getMimeType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^  override def getMimeType(s: String) = context getMimeType s$/;"	f
getMimeType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getMimeType(file: String) = null$/;"	f
getMinorVersion	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getMinorVersion = 3$/;"	f
getMoreResultsDescriptions	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^    def getMoreResultsDescriptions (in : Int) = in match {$/;"	f
getName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^                                def getName = i.name$/;"	f
getName	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def getName(s: String, index: Int): String = {$/;"	f
getNamedDispatcher	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getNamedDispatcher(name: String) = null$/;"	f
getNamespace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def getNamespace(owner: Node): String $/;"	f
getNamespace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  def getNamespace(pre: String): String = if (scope eq null) null else scope.getURI(pre)$/;"	f
getNamespace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  def getNamespace(owner: Node) = null$/;"	f
getNamespace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrefixedAttribute.scala	/^  def getNamespace(owner: Node) = $/;"	f
getNamespace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/UnprefixedAttribute.scala	/^  final def getNamespace(owner: Node): String = $/;"	f
getNotices	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def getNotices: List[(NoticeType.Value, NodeSeq, Box[String])] = p_notice.toList$/;"	f
getObj	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty6AsyncProvider.scala	/^      val getObj = cci.getMethod("getObject")$/;"	V
getOrElse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^    def getOrElse[AA >: A](or: => AA) = e match {$/;"	f
getOrElse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^    def getOrElse[BB >: B](or: => BB) = e match {$/;"	f
getOutputStream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^                                def getOutputStream = throw new _root_.java.io.IOException("Unable to write to item")$/;"	f
getOutputStream	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def getOutputStream = outputStream$/;"	f
getParameter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthMessage.scala	/^  def getParameter(name: String): Box[OAuthUtil.Parameter] = Box(parameters.find(_.name == name)) ?~$/;"	f
getParameter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getParameter(key: String) = parameterMap(key)$/;"	f
getParameterMap	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getParameterMap = parameterMap.underlying$/;"	f
getParameterNames	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getParameterNames = new Vector[ZZ](parameterMap.underlying.keySet.asInstanceOf[_root_.java.util.Set[ZZ]]).elements$/;"	f
getParameterValues	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getParameterValues(key: String) =$/;"	f
getParameters	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthMessage.scala	/^  def getParameters(name: String): List[OAuthUtil.Parameter] = parameters.filter(_.name == name)$/;"	f
getParameters	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthMessage.scala	/^  def getParameters(req: Req): List[OAuthUtil.Parameter] = {$/;"	f
getParent	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/Role.scala	/^  def getParent = parent$/;"	f
getPathInfo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getPathInfo = path$/;"	f
getPathTranslated	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getPathTranslated = path$/;"	f
getPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NamespaceBinding.scala	/^  def getPrefix(_uri: String): String =$/;"	f
getPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/TopScope.scala	/^  override def getPrefix(uri1: String): String =$/;"	f
getPropertyDescriptors	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/ScalaBeanInfo.scala	/^  override def getPropertyDescriptors() = pd$/;"	f
getProtocol	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getProtocol = protocol$/;"	f
getQueryString	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getQueryString = queryString$/;"	f
getReader	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getReader = reader$/;"	f
getRealPath	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getRealPath(s: String) = s$/;"	f
getRealPath	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getRealPath(path: String) = null$/;"	f
getRefDate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  def getRefDate: _root_.java.util.Date = {$/;"	f
getRemoteAddr	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getRemoteAddr = remoteAddr$/;"	f
getRemoteHost	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getRemoteHost = remoteHost$/;"	f
getRemotePort	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getRemotePort = remotePort$/;"	f
getRemoteUser	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getRemoteUser = ""$/;"	f
getRequestDispatcher	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getRequestDispatcher(s: String): RequestDispatcher = null$/;"	f
getRequestDispatcher	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getRequestDispatcher(path: String) = null$/;"	f
getRequestHeader	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def getRequestHeader(name: String): Box[String] =$/;"	f
getRequestURI	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getRequestURI = path$/;"	f
getRequestURL	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getRequestURL = new StringBuffer(path)$/;"	f
getRequestedSessionId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getRequestedSessionId = null$/;"	f
getResource	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  var getResource: String => Box[_root_.java.net.URL] = defaultGetResource _$/;"	v
getResource	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^  override def getResource(s: String) = {$/;"	f
getResource	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getResource(path: String) = null$/;"	f
getResourceAsStream	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getResourceAsStream(path: String) = {$/;"	f
getResourcePaths	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getResourcePaths(path: String) = null$/;"	f
getRoleByName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/Role.scala	/^  def getRoleByName(roleName: String): Box[Role] =$/;"	f
getRootCause	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/XIncludeException.scala	/^  def getRootCause(): Throwable = this.rootCause$/;"	f
getScheme	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getScheme = scheme$/;"	f
getServerInfo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getServerInfo = null$/;"	f
getServerName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getServerName = serverName$/;"	f
getServerPort	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getServerPort = serverPort$/;"	f
getServlet	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getServlet(name: String) = null$/;"	f
getServletContext	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getServletContext = servletContext$/;"	f
getServletContextName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getServletContextName = null$/;"	f
getServletNames	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getServletNames = new Vector[AnyRef]().elements$/;"	f
getServletPath	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getServletPath = ""$/;"	f
getServlets	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getServlets = new Vector[AnyRef]().elements$/;"	f
getSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def getSession(httpSession: => HTTPSession, otherId: Box[String]): Box[LiftSession] =$/;"	f
getSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def getSession(id: String, otherId: Box[String]): Box[LiftSession] = synchronized {$/;"	f
getSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def getSession(req: HTTPRequest, otherId: Box[String]): Box[LiftSession] =$/;"	f
getSession	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getSession = getSession(false)$/;"	f
getSession	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getSession(p: Boolean) = {$/;"	f
getSessionAttribute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def getSessionAttribute(what: String): Box[String] = containerSession.flatMap(_.attribute(what) match {case s: String => Full(s) case _ => Empty})$/;"	f
getSessionContext	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getSessionContext = sessionContext$/;"	f
getSignature	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthMessage.scala	/^  def getSignature = getParameter(OAuthUtil.OAUTH_SIGNATURE)$/;"	f
getSignature	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^  def getSignature(baseString: String): Box[String]$/;"	f
getSignature	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^  override def getSignature(baseString: String) = for {$/;"	f
getSignature	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^  override def getSignature(baseString: String): Box[String] =$/;"	f
getSignatureMethod	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthMessage.scala	/^  def getSignatureMethod = getParameter(OAuthUtil.OAUTH_SIGNATURE_METHOD)$/;"	f
getSingleton	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  def getSingleton: Meta$/;"	f
getSingleton	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^ def getSingleton = MyUser$/;"	f
getSingleton	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^ def getSingleton = TestMOAuthConsumer$/;"	f
getSingleton	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^ def getSingleton = TestMOAuthToken$/;"	f
getSingleton	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^    def getSingleton = MOAuthNonce$/;"	f
getSingleton	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^ override def getSingleton: MetaOpenIDProtoUser[T]$/;"	f
getSingleton	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def getSingleton : MetaMapper[A];$/;"	f
getSingleton	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def getSingleton: KeyedMetaMapper[KeyType, OwnerType];$/;"	f
getSingleton	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala	/^  def getSingleton: MetaProtoTag[MyType]$/;"	f
getSingleton	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^  def getSingleton = Company$/;"	f
getSingleton	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^  def getSingleton = Person  $/;"	f
getSingleton	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^  def getSingleton = PersonCompany$/;"	f
getSingleton	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  def getSingleton = Dog$/;"	f
getSingleton	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  def getSingleton = Dog2$/;"	f
getSingleton	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  def getSingleton = Mixer$/;"	f
getSingleton	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  def getSingleton = SampleModel \/\/ what's the "meta" server$/;"	f
getSingleton	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  def getSingleton = SampleTag \/\/ what's the "meta" server$/;"	f
getSingleton	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  def getSingleton = User \/\/ what's the "meta" server$/;"	f
getSingleton	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Award.scala	/^	def getSingleton = Award$/;"	f
getSingleton	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/AwardSource.scala	/^	def getSingleton = AwardSource$/;"	f
getSingleton	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Discovery.scala	/^	def getSingleton = Discovery$/;"	f
getSingleton	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/DiscoveryDependency.scala	/^	def getSingleton = DiscoveryDependency$/;"	f
getSingleton	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/DiscoverySource.scala	/^	def getSingleton = DiscoverySource$/;"	f
getSingleton	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Field.scala	/^	def getSingleton = Field$/;"	f
getSingleton	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Institution.scala	/^  	def getSingleton = Institution$/;"	f
getSingleton	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^	def getSingleton = Lab$/;"	f
getSingleton	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^	def getSingleton = Scientist$/;"	f
getSource	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^  def getSource = this.src$/;"	f
getStackTraceString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichException.scala	/^  def getStackTraceString: String = {$/;"	f
getThis	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  protected def getThis: This$/;"	f
getToken	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthMessage.scala	/^  def getToken = getParameter(OAuthUtil.OAUTH_TOKEN)$/;"	f
getTokenSecret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^  def getTokenSecret: Box[String] = accessor.tokenSecret$/;"	f
getTransaction	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  def getTransaction: Transaction = TransactionContext.getTransactionManager.getTransaction$/;"	f
getTransaction	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  private[transaction] def getTransaction: Transaction = current.getTransactionManager.getTransaction$/;"	f
getTransactionIdentifier	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/hibernate/LiftTransactionManagerLookup.scala	/^  def getTransactionIdentifier(tx: Transaction) = tx$/;"	f
getTransactionManager	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  private def getTransactionManager: TransactionManager = tm$/;"	f
getTransactionManager	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  private[transaction] def getTransactionManager: TransactionManager = current.getTransactionManager$/;"	f
getTransactionManager	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/hibernate/LiftTransactionManagerLookup.scala	/^  def getTransactionManager(props: _root_.java.util.Properties): TransactionManager = TransactionContext.getTransactionManager$/;"	f
getURI	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NamespaceBinding.scala	/^  def getURI(_prefix: String): String =$/;"	f
getURI	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/TopScope.scala	/^  override def getURI(prefix1: String): String =$/;"	f
getUnderlying	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-jpa/src/main/scala/net/liftweb/jpa/RequestVarEM.scala	/^  def getUnderlying : EntityManager = em$/;"	f
getUniversalKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def getUniversalKey(attrib: MetaData, scope: NamespaceBinding) = attrib match {$/;"	f
getUserMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  def getUserMeta: KeyedMetaMapper[Long, UserType]$/;"	f
getUserMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^ def getUserMeta = MyUser$/;"	f
getUserMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    def getUserMeta: KeyedMetaMapper[Long, UserType]$/;"	f
getUserPrincipal	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def getUserPrincipal = null$/;"	f
getUserTransactionName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/hibernate/LiftTransactionManagerLookup.scala	/^  def getUserTransactionName: String = "java:comp\/UserTransaction"$/;"	f
getValue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getValue(key: String) = values.get(key) match {$/;"	f
getValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^  private def getValue(e: Entry) = $/;"	f
getValueNames	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def getValueNames: Array[String] = values.keySet.toArray$/;"	f
getWriter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def getWriter = writer$/;"	f
get_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def get_? = requestType.get_?$/;"	f
get_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^  def get_? : Boolean = false$/;"	f
get_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^  override def get_? = true$/;"	f
get_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def get_? = request.map(_.get_?).openOr(false)$/;"	f
getter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    val getter = new DeleteMethod(baseUrl + fullUrl)$/;"	V
getter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    val getter = new GetMethod(baseUrl + fullUrl)$/;"	V
globalDefaultSchemaName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  var globalDefaultSchemaName: Box[String] = Empty$/;"	v
globalFirst	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^  protected var globalFirst: immutable.Set[Int] = _$/;"	v
globalForms	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  private val globalForms: CHash[String, List[FormBuilderLocator[_]]] = new CHash$/;"	V
globalNumberParser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/JSON.scala	/^  def globalNumberParser : NumericParser = defaultNumberParser$/;"	f
globalParams	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^  def globalParams: List[Loc.AnyLocParam] = {$/;"	f
globalTransitions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  protected def globalTransitions: List[Meta#ATransition]$/;"	f
gmap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^      def gmap(f: Mapper): List[t] = (for (x <- xs) yield f(x)).toList$/;"	f
gmap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^      def gmap(f: Mapper): Option[t] = (for (x <- xs) yield f(x))$/;"	f
gmap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^      def gmap(f: Mapper): Scope[bt] = { val newScope = new Scope[bt]()$/;"	f
gmap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^      def gmap(f: Mapper): String = f(s) $/;"	f
gmap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^      def gmap(f: Mapper): UnderBinder[bt, st] = UnderBinder(f(ub.scope), f(ub.element))$/;"	f
gmap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def gmap(f: Mapper): NameElement = self match {$/;"	f
gmap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def gmap(f: Mapper): T$/;"	f
gotIt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxSpec.scala	/^      def gotIt = (x: Int) => Full("got it: " + x.toString)$/;"	f
gotQ	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^      var gotQ = true$/;"	v
greater	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^    val greater = sort(md.filter { m => m.key > key })$/;"	V
grid	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def grid: Box[FlotGridOptions] = Empty$/;"	f
group	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^  def group(template: NodeSeq): NodeSeq = {$/;"	f
group	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^  def group(d: Document): Document = DocGroup(d)$/;"	f
group	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def group(i: Int): String =$/;"	f
group	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def group(id: String): String = nameToIndex.get(id) match {$/;"	f
groupCount	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def groupCount = matcher.groupCount     $/;"	f
groupCount	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def groupCount: Int     $/;"	f
groupMessages	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val groupMessages = xml match {$/;"	V
groupNames	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^              val groupNames: Seq[String]) extends MatchData {$/;"	V
groupNames	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    val groupNames: Seq[String]$/;"	V
groupNames	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^  class MatchIterator(val source: java.lang.CharSequence, val regex: Regex, val groupNames: Seq[String]) $/;"	V
groupSet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  private lazy val groupSet: Set[String] =$/;"	V
groupedText	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^  val groupedText =$/;"	V
groupingSeparator	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^            val groupingSeparator = df.getDecimalFormatSymbols.getGroupingSeparator$/;"	V
growArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^  def growArray(x : Array[AnyRef]) = {$/;"	f
growTable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  private[this] def growTable = {$/;"	f
gt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Ordering.scala	/^  override def gt(x: T, y: T): Boolean = compare(x, y) > 0$/;"	f
gt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/PartialOrdering.scala	/^  def gt(x: T, y: T): Boolean = gteq(x, y) && !equiv(x, y)$/;"	f
gteq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Ordering.scala	/^  override def gteq(x: T, y: T): Boolean = compare(x, y) >= 0$/;"	f
gteq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/PartialOrdering.scala	/^  def gteq(x: T, y: T): Boolean = lteq(y, x)$/;"	f
guard	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    def guard(gurd: (MyType, StV, StV, Meta#Event) => Boolean): this.type = {_guard = gurd :: _guard; this}$/;"	f
guid	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def guid: String$/;"	f
h	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-imaging/src/main/scala/net/liftweb/imaging/ImageHelpers.scala	/^      var h = masked.getHeight $/;"	v
h	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-imaging/src/main/scala/net/liftweb/imaging/ImageHelpers.scala	/^    val h = new RenderingHints(null) $/;"	V
h	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^    var h = 0$/;"	v
h	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^    val h = hash(key);$/;"	V
h	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^    var h = key.hashCode;$/;"	v
h	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^    var h = index(elemHashCode(elem))$/;"	v
h	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^    var h: Int = hcode + ~(hcode << 9)$/;"	v
h	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^        val h = index(elemHashCode(e.key))$/;"	V
h	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^    val h = index(elemHashCode(e.key))$/;"	V
h	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^    val h = index(elemHashCode(key))$/;"	V
h	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^    var h: Int = hcode + ~(hcode << 9)$/;"	v
h	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^    var h = key.hashCode;$/;"	v
h	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^        val h = as(k)$/;"	V
h	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ResizableArray.scala	/^    val h = array(a)$/;"	V
h0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^        var h0 = h$/;"	v
h1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^        var h1 = (h0 + 1) % table.length$/;"	v
h2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^          val h2 = index(elemHashCode(table(h1).asInstanceOf[A]))$/;"	V
hStack	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  val hStack      = new Stack[Node]   \/\/ [ element ] contains siblings$/;"	V
ha1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^    val ha1 = hexEncode(md5((clientAuth.userName + ":" + clientAuth.realm + ":" + password).getBytes("UTF-8")))$/;"	V
ha2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^    val ha2 = hexEncode(md5((clientAuth.method + ":" + clientAuth.uri).getBytes("UTF-8")))$/;"	V
handle	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  private val handle: MarkupHandler = this$/;"	V
handleAjax	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  private def handleAjax(liftSession: LiftSession,$/;"	f
handleComet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  private def handleComet(requestState: Req, sessionActor: LiftSession): Box[LiftResponse] = {$/;"	f
handleDelivery	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^  override def handleDelivery(tag: String, env: Envelope, props: AMQP.BasicProperties, body: Array[Byte]) {$/;"	f
handleException	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^  protected def handleException(tm: TransactionManager, e: Exception) = {$/;"	f
handleException	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^   def handleException(e: OAuthProblemException) = {$/;"	f
handleFailure	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  protected def handleFailure(in: Box[LiftResponse]): Box[LiftResponse] = in$/;"	f
handleJson	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def handleJson(in: Any): JsCmd = Noop$/;"	f
handleMimeFile	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var handleMimeFile: (String, String, String, InputStream) => FileParamHolder =$/;"	v
handleNonContinuationComet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  private def handleNonContinuationComet(request: Req, session: LiftSession, actors: List[(LiftCometActor, Long)]): Box[LiftResponse] = {$/;"	f
handleRedirect	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] def handleRedirect(re: ResponseShortcutException, request: Req): LiftResponse = {$/;"	f
handleSecurity	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^  override def handleSecurity(req: HttpServletRequest, res: HttpServletResponse) =$/;"	f
handleWhiteSpace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/RegexParsers.scala	/^  protected def handleWhiteSpace(source: java.lang.CharSequence, offset: Int): Int =$/;"	f
handledXHtml	/Users/Mads/Dev/logicOfScientificDiscovery/src/test/scala/sidewayscoding/AppTest.scala	/^    def handledXHtml(file: String) =$/;"	f
handledXml	/Users/Mads/Dev/logicOfScientificDiscovery/src/test/scala/sidewayscoding/AppTest.scala	/^    def handledXml(file: String) =$/;"	f
handler	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    val handler: PartialFunction[Any, JsCmd] = {$/;"	V
handlers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private def handlers: (JsonCall, JsCmd) =$/;"	f
has	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^    "return false if the class has a method but it is not callable" in {$/;"	c
has	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^    "return true if the class has 'name' as a callable method" in {$/;"	c
has	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^      if the iterable object has elements$/;"	o
has	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/CollectionWrapper.scala	/^  override def has(a : A) = underlying.contains(a);$/;"	f
has	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    override def has(k : K) = Map.this.contains(k);$/;"	f
has	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^  override def has(pair : Tuple2[K,E]) = get(pair._1) match {$/;"	f
has	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^    override def has(e : E) = MapWrapper.this.underlying.containsValue(e)$/;"	f
has	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^    override def has(a : A) = if (!p(a)) false else MutableIterable.this.has(a);$/;"	f
has	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^  def has(t : A ) : Boolean = elements.contains(t);$/;"	f
has	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterator.scala	/^  def has(a: A) = exists(b => a == a);$/;"	f
has	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^    override def has(a : A) : Boolean = Set.this.has(a)$/;"	f
has	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^    override def has(a : A) : Boolean = SortedSet.this.has(a)$/;"	f
has	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^    override def has(elem : A) = contains1(elem) && SortedSet.this.has(elem);$/;"	f
hasAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Sorted.scala	/^  protected def hasAll(j: Iterator[K]): Boolean = {$/;"	f
hasAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Collection.scala	/^  def hasAll(i: Iterable[A]): Boolean = i.forall(elements.has);$/;"	f
hasAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/CollectionWrapper.scala	/^  override def hasAll(that : Iterable[A]) = that match {$/;"	f
hasAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^  override def hasAll(that : Iterable[A]) = super[Sorted].hasAll(that.elements);$/;"	f
hasColumn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^      var hasColumn = 0$/;"	v
hasDefiniteSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def hasDefiniteSize = true$/;"	f
hasDefiniteSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def hasDefiniteSize = self.hasDefiniteSize$/;"	f
hasDefiniteSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^      override def hasDefiniteSize = if (tlDefined) tlVal.hasDefiniteSize else super.hasDefiniteSize$/;"	f
hasDefiniteSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^     override def hasDefiniteSize = true$/;"	f
hasDefiniteSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override def hasDefiniteSize = false$/;"	f
hasExpired_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def hasExpired_? = ttl.getTime < Helpers.millis$/;"	f
hasFuncsForOwner	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] def hasFuncsForOwner(owner: String): Boolean = !messageCallback.find(_._2.owner == owner).isEmpty$/;"	f
hasHtmlHeadAndBody	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^    val hasHtmlHeadAndBody: Boolean = xhtml.find {$/;"	V
hasMatch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def hasMatch(key : Int, prefix : Int, m : Int) = mask(key, m) == prefix;$/;"	f
hasMatch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def hasMatch(key : Long, prefix : Long, m : Long) = mask(key, m) == prefix;$/;"	f
hasNext	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^      def hasNext = set.hasNext$/;"	f
hasNext	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^    def hasNext = what.hasNext$/;"	f
hasNext	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    def hasNext = in.hasNext$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^      override def hasNext: Boolean = Advanced.this.hasNext$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^      override def hasNext: Boolean = PutBack.this.hasNext$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    override def hasNext = !lookahead.isEmpty || super.hasNext$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    override def hasNext = !peekList(1).isEmpty$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^      def hasNext = underlying != 0$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^      def hasNext: Boolean = Iterator.this.synchronized ($/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^      override def hasNext = i < len$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^      override def hasNext: Boolean = i < end$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def hasNext = Iterator.this.hasNext && that.hasNext$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def hasNext = Iterator.this.hasNext || that.hasNext$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def hasNext = Iterator.this.hasNext$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def hasNext = c < cmax$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def hasNext = if (what.hasNext) true$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def hasNext = remaining > 0 && Iterator.this.hasNext$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def hasNext: Boolean = (!up || i < end) && (!down || i > end)$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def hasNext: Boolean = (step <= 0 || i < end) && (step >= 0 || i > end)$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def hasNext: Boolean = Iterator.this.hasNext$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def hasNext: Boolean = false$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def hasNext: Boolean = hasnext$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def hasNext: Boolean = {$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def hasNext: Boolean =$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    override def hasNext: Boolean = true$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def hasNext: Boolean$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    def hasNext: Boolean = !these.isEmpty$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def hasNext = idx < RandomAccessSeq.this.length$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^    def hasNext: Boolean = !current.isEmpty$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^     def hasNext: Boolean = i < capacity$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^    def hasNext = iter.hasNext$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^    def hasNext = cursor.hasNext$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^    def hasNext = false$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^    def hasNext = true$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^  def hasNext: Boolean$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def hasNext = index != 0; $/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^      def hasNext = !self.isEmpty$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^    def hasNext = !that.isEmpty;$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def hasNext = index != 0; $/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^    def hasNext = !that.isEmpty;$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^      def hasNext = !iter.isEmpty$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^    def hasNext = assocIt.hasNext || intIterator.hasNext;$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  def hasNext = it match {$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^      def hasNext = underlying.hasNext &&$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^        def hasNext = i.hasNext$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^    def hasNext = underlying.hasNext$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^	def hasNext = i.hasNext$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterator.scala	/^    def hasNext = MutableIterator.this.hasNext$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterator.scala	/^    def hasNext = underlying.hasNext;$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^      def hasNext : Boolean = seekNext match {$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^    override def hasNext = index < length$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^      def hasNext = underlying.hasNext && okNext(underlying.peekNext);$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^    def hasNext = currentIndex > 0;$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^    def hasNext: Boolean = {$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^    def hasNext = es != null$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^    def hasNext = iter.hasNext()$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaSetAdaptor.scala	/^    def hasNext = iter.hasNext()$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^    def hasNext: Boolean = !start.isEmpty && cursor != last0$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^    def hasNext = {advance; index <= mask; }$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^    def hasNext: Boolean = i > 0$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ResizableArray.scala	/^    def hasNext: Boolean = i < size0$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SingleLinkedList.scala	/^    def hasNext = (elems ne null)$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BufferedSource.scala	/^    def hasNext = { charBuffer.remaining() > 0 || !endOfInput}$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^      def hasNext = {data != -1}$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^    def hasNext = iter.hasNext$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def hasNext = iter.hasNext$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^    def hasNext: Boolean = index < length$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^    def hasNext: Boolean = index < len$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^      def hasNext = self.hasNext$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def hasNext: Boolean = {$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/CharInputStreamIterator.scala	/^  def hasNext: Boolean = {$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/SimpleTokenizer.scala	/^  def hasNext: Boolean = ch != EOI$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^    def hasNext = Null != x$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def hasNext = (Null != next)$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  final override def hasNext = false$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^    def hasNext = jt.hasNext;$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ExternalSources.scala	/^        def hasNext = i < len$/;"	f
hasNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^  def hasNext = true$/;"	f
hasOneRow	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^        def hasOneRow(rs: ResultSet) : Boolean = {$/;"	f
hasOuter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def hasOuter = true$/;"	f
hasOuter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def hasOuter: Boolean$/;"	f
hasPrevious	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^      def hasPrevious = underlying.hasPrevious &&$/;"	f
hasPrevious	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^    def hasPrevious = underlying.hasPrevious;$/;"	f
hasPrevious	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^      def hasPrevious : Boolean = seekPrevious match {$/;"	f
hasPrevious	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^    override def hasPrevious = index > 0$/;"	f
hasPrevious	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SeqIterator.scala	/^    override def hasPrevious = SeqIterator.this.hasPrevious;$/;"	f
hasPrevious	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SeqIterator.scala	/^  def hasPrevious : Boolean;$/;"	f
hasSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^    def hasSession(req: Req): Boolean = {$/;"	f
hasSurrogate	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    var hasSurrogate = false$/;"	v
hasTable	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^      def hasTable(rs: ResultSet): Boolean =$/;"	f
hasTable	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^    val hasTable = hasTable_?(table, connection, actualTableNames)$/;"	V
hasTable_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^  private def hasTable_? (table: BaseMetaMapper, connection: SuperConnection, actualTableNames: HashMap[String, String]): Boolean = {$/;"	f
hasUploadField	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  protected def hasUploadField: Boolean = screenFields.foldLeft(false)(_ | _.uploadField_?)$/;"	f
hash	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def hash(in : Array[Byte]) : Array[Byte] = {$/;"	f
hash	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def hash(in: String) : String = {$/;"	f
hash	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^      val hash = deferredSnippets.is$/;"	V
hash	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  private def hash(key : Key) =  {$/;"	f
hash	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^                                           val hash : Int,$/;"	V
hash	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^    val hash = hashOf(key);$/;"	V
hash	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  private val hash = boxed.hashCode()$/;"	V
hash	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/LoggedNodeFactory.scala	/^    val hash = Utility.hashCode(pre, label, attrSeq.hashCode(), scope.hashCode(), children)$/;"	V
hash	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/NodeFactory.scala	/^    val hash    = Utility.hashCode( pre, name, attrSeq.hashCode(), scpe.hashCode(), children ) ;$/;"	V
hash256	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def hash256(in : Array[Byte]) : Array[Byte] = {$/;"	f
hash256	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def hash256(in : String): String = {$/;"	f
hashCode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^        override def hashCode = (this.designation+format("", scale)).hashCode$/;"	f
hashCode	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  override def hashCode() = jndiName.hashCode()$/;"	f
hashCode	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  override def hashCode(): Int = primaryKeyField.is.hashCode$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  override def hashCode(): Int = this.bigDecimal.hashCode()$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  override def hashCode(): Int = this.bigInteger.hashCode()$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    override def hashCode: Int = id.hashCode$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Proxy.scala	/^  override def hashCode: Int = self.hashCode$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^  override def hashCode(): Int = {$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^  override def hashCode() =$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/MapProxy.scala	/^  override def hashCode() = self.hashCode()$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Set.scala	/^  override def hashCode() =$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^  override def hashCode(): Int =$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^    override def hashCode(): Int = elem.hashCode() + Stack.this.hashCode()$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^  override def hashCode(): Int = 0$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  override def hashCode() = 0$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  override def hashCode() =$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  override def hashCode = underlying.hashCode;$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/CollectionWrapper.scala	/^  override def hashCode = underlying.hashCode;$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^  override def hashCode = underlying.hashCode$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Buffer.scala	/^  override def hashCode(): Int =$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedList.scala	/^  override def hashCode(): Int =$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Message.scala	/^  override def hashCode(): Int =$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^  override def hashCode(): Int =$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Queue.scala	/^  override def hashCode(): Int =$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Stack.scala	/^  override def hashCode(): Int =$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedBuffer.scala	/^  override def hashCode(): Int = synchronized {$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  override def hashCode(): Int = synchronized {$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedPriorityQueue.scala	/^  override def hashCode(): Int = synchronized { super.hashCode() }$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedQueue.scala	/^  override def hashCode(): Int = synchronized { super.hashCode() }$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedStack.scala	/^  override def hashCode(): Int = synchronized { super.hashCode() }$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  override def hashCode(): Int = hash$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedBooleanArray.scala	/^  override def hashCode(): Int = value.hashCode()$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedByteArray.scala	/^  override def hashCode(): Int = value.hashCode();$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedCharArray.scala	/^  override def hashCode(): Int = value.hashCode();$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedDoubleArray.scala	/^  override def hashCode(): Int = value.hashCode()$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedFloatArray.scala	/^  override def hashCode(): Int = value.hashCode()$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedIntArray.scala	/^  override def hashCode(): Int = value.hashCode()$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedLongArray.scala	/^  override def hashCode(): Int = value.hashCode()$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedObjectArray.scala	/^  override def hashCode(): Int = value.hashCode()$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedShortArray.scala	/^  override def hashCode(): Int = value.hashCode()$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedUnit.java	/^    public int hashCode() {$/;"	m	class:BoxedUnit
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Atom.scala	/^  override def hashCode() = $/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Comment.scala	/^  override def hashCode() = commentText.hashCode()$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Elem.scala	/^  override def hashCode(): Int =$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/EntityRef.scala	/^  override def hashCode() = entityName.hashCode()$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  override def hashCode(): Int$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  override def hashCode(): Int = super.hashCode$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  override def hashCode(): Int = 0$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrefixedAttribute.scala	/^  override def hashCode() = $/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/ProcInstr.scala	/^  override def hashCode() = target.hashCode() * 7 + proctext.hashCode()$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/UnprefixedAttribute.scala	/^  override def hashCode() = $/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def hashCode(pre: String, label: String, attribHashCode: Int, scpeHash: Int, children: Seq[Node]) = {$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def hashCode(uri: String, label: String, attribs: scala.collection.mutable.HashMap[(String,String),String], scpe: Int, children: Seq[Node]): Int = {$/;"	f
hashCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/DocType.scala	/^  final override def hashCode() =$/;"	f
hashHex	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def hashHex(in: String) : String = {$/;"	f
hashOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  protected def hashOf(key : Key) = {$/;"	f
hashSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Tests.scala	/^  def hashSet = {$/;"	f
hasnext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    private var hasnext = true$/;"	v
head	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/menu/MenuWidget.scala	/^  def head: NodeSeq = <head>$/;"	f
head	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/uploadprogress/UploadProgress.scala	/^  def head(xhtml: NodeSeq): NodeSeq = {$/;"	f
head	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    def head: A = peek(0)$/;"	f
head	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^  def head : A $/;"	f
head	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    override def head = List.this.head$/;"	f
head	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def head : B = hd$/;"	f
head	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def head: A$/;"	f
head	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def head: Nothing =$/;"	f
head	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def head = RandomAccessSeq.this.apply(0)$/;"	f
head	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^      def head = hd$/;"	f
head	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^    def head: Nothing = throw new NoSuchElementException("head of empty stream")$/;"	f
head	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  def head: A$/;"	f
head0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^        val head0 = ys.head$/;"	V
head1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^        val head1 = f(head0)$/;"	V
headCal	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarMonthView.scala	/^    val headCal = cal.clone().asInstanceOf[Calendar]$/;"	V
headCal	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarWeekView.scala	/^    val headCal = cal.clone().asInstanceOf[Calendar]$/;"	V
headChildren	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^    val headChildren = new ListBuffer[Node]$/;"	V
headInBody	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HeadHelper.scala	/^    val headInBody: NodeSeq =$/;"	V
headOpt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^  def headOpt = if (!hasNext) None else Some(head)$/;"	f
headOption	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  def headOption: Option[A] = firstOption$/;"	f
headOption	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def headOption = self.headOption$/;"	f
headOptionTailToFunList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/ImplicitConversions.scala	/^  implicit def headOptionTailToFunList[A, T] (f: List[A] => T)= $/;"	f
headOptionTailToFunList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/ImplicitConversions.scala	/^  implicit def headOptionTailToFunList[A, T] (f: List[A] => T)= $/;"	f
headOr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^    def headOr(other: => T): T = head(what, other)$/;"	f
headTag	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^    var headTag = <head\/>$/;"	v
head_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^  def head_? : Boolean = false$/;"	f
head_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^  override def head_? = true$/;"	f
head_line	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val head_line : Parser[Textile] = (beginl ~ rep(' ') ~> 'h' ~> elem("1, 2 or 3", {c => c == '1' | c == '2' | c == '3'})) ~$/;"	V
header	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^    val header = insureField(fixHeaders(resp.headers), List(("Content-Type",$/;"	V
header	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def header(name: String): Box[String] = headers(name) match {$/;"	f
header	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  def header(r: Req): Box[String] = r.request.header("Authorization")$/;"	f
header	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def header(name: String): Box[String] =$/;"	f
headerSet	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    val headerSet: List[(String, String)] = for (e <- in.toList) yield (e.getName -> e.getValue)$/;"	V
headers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  var headers: Map[String, String] = Map.empty$/;"	v
headers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def headers = List("Content-Type" -> "application\/atom+xml; charset=utf-8")$/;"	f
headers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def headers = List("Content-Type" -> "application\/opensearchdescription+xml; charset=utf-8")$/;"	f
headers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def headers = List("Content-Type" -> mime)$/;"	f
headers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def headers = Nil$/;"	f
headers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def headers: List[(String, String)]$/;"	f
headers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  val headers = S.getHeaders(Nil)$/;"	V
headers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def headers(name: String): List[String] = headers.filter(_._1.equalsIgnoreCase(name)).map(_._2)$/;"	f
headers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  lazy val headers: List[(String, String)] =$/;"	V
headers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def headers(name: String): List[String]$/;"	f
headers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def headers: List[HTTPParam]$/;"	f
headers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def headers(name: String): List[String] = _headers.filter(_.name == name).map(_.name)$/;"	f
headers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def headers(name: String): List[String] = enumToList[String](req.getHeaders(name).asInstanceOf[_root_.java.util.Enumeration[String]])$/;"	f
headers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def headers: List[HTTPParam] = _headers$/;"	f
headers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  lazy val headers: List[HTTPParam] = enumToList[String](req.getHeaderNames.asInstanceOf[_root_.java.util.Enumeration[String]]).$/;"	V
headers	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^                   override val headers: Map[String, List[String]],$/;"	V
headers	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def headers: Map[String, List[String]] = throw (exception openOr new java.io.IOException("HTTP Failure"))$/;"	f
headers	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def headers: Map[String, List[String]]$/;"	f
headers	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  val headers: _root_.scala.collection.jcl.HashMap[String, String] =$/;"	V
headers	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  val headers: HashMap[String, String] = new HashMap[String, String]$/;"	V
headers	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Paginator.scala	/^                                val headers: (String, MappedField[_, T])*) {$/;"	V
help	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    def help: Box[String] = Empty$/;"	f
helpAsHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  def helpAsHtml: Box[NodeSeq] = Empty$/;"	f
helpAsHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    override def helpAsHtml: Box[NodeSeq] = help.map(Text.apply)$/;"	f
here	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^    var here = this$/;"	v
hex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^    val hex  = (ch() == 'x') && { nextch(); true }$/;"	V
hex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    val hex  = (ch() == 'x') && { nextch(); true };$/;"	V
hexDecode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def hexDecode(str: String): Array[Byte] = {$/;"	f
hexDigest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def hexDigest(in: Array[Byte]): String = {$/;"	f
hexDigest256	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def hexDigest256(in: Array[Byte]): String = {$/;"	f
hexDigit	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val hexDigit = elem("hex digit", c => (c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F'))$/;"	V
hexDigit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Lexer.scala	/^  def hexDigit = elem("hex digit", hexDigits.contains(_))$/;"	f
hexDigits	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Lexer.scala	/^  val hexDigits = Set[Char]() ++ "0123456789abcdefABCDEF".toArray$/;"	V
hexEncode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def hexEncode(in: Array[Byte]): String = {$/;"	f
hi	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^      var hi = index.length - 1$/;"	v
hi	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/OffsetPosition.scala	/^    var hi = index.length - 1$/;"	v
hid	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    val hid = formFuncName$/;"	V
hidden	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def hidden(func: () => Any, attrs: (String, String)*): Elem =$/;"	f
hidden	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def hidden = _hidden$/;"	f
hidden_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def hidden_*(func: AFuncHolder, attrs: (String, String)*): Elem =$/;"	f
hide	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JSArtifacts.scala	/^  def hide(id: String): JsExp$/;"	f
hide	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JQueryArtifacts.scala	/^  def hide(id: String) = JqId(id) ~> new JsMethod {$/;"	f
hide	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^  def hide(id: String) = new JsExp {$/;"	f
hideIfNoKids_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def hideIfNoKids_? = placeHolder_? || _hideIfNoKids_?$/;"	f
highLevelSessionDispatchList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def highLevelSessionDispatchList: List[DispatchHolder] =$/;"	f
highLevelSessionDispatcher	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] var highLevelSessionDispatcher = new HashMap[String, LiftRules.DispatchPF]()$/;"	v
highLevelSessionDispatcher	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def highLevelSessionDispatcher: List[LiftRules.DispatchPF] = highLevelSessionDispatchList.map(_.dispatch)$/;"	f
highPriority	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def highPriority: PartialFunction[Any, Unit] = Map.empty$/;"	f
highPriority	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  protected def highPriority: PartialFunction[Any, Unit] = Map.empty$/;"	f
highQualityHints	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-imaging/src/main/scala/net/liftweb/imaging/ImageHelpers.scala	/^  val highQualityHints = { $/;"	V
highestOneBit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def highestOneBit(j : Int) = {$/;"	f
highestOneBit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def highestOneBit(j : Long) = {$/;"	f
highestOneBit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  private[mutable] def highestOneBit(j : Int) = { \/\/ This should really go somewhere central as we're now code sharing by cut and paste. :($/;"	f
hintFor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  def hintFor(clazz: Class[_]) = clazz.getName$/;"	f
hintFor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  def hintFor(clazz: Class[_]) = clazz.getName.substring(clazz.getName.lastIndexOf(".")+1)$/;"	f
hintFor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  def hintFor(clazz: Class[_]) = error("NoTypeHints does not provide any type hints.")$/;"	f
hintFor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  def hintFor(clazz: Class[_]): String$/;"	f
hints	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  val hints = Nil$/;"	V
hints	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  val hints: List[Class[_]]$/;"	V
hints	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  val hints = new ShortTypeHints(classOf[DateTime] :: Nil) {$/;"	V
hmacSha1	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/test/scala/net/liftweb/oauth/OAuthSignatureMethodSpec.scala	/^  val hmacSha1 = HMAC_SHA1(oauthAccessor)$/;"	V
hmap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^            val hmap =$/;"	V
homePage	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def homePage = "\/"$/;"	f
host	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  def host = hostFunc()$/;"	f
hostAndPath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def hostAndPath: String =$/;"	f
hostFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  var hostFunc: () => String = _host _$/;"	v
hostName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  lazy val hostName: String = (if (inGAE) "GAE" else InetAddress.getLocalHost.getHostName)$/;"	V
hostName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def hostName: String = containerRequest.map(_.serverName) openOr {$/;"	f
hour	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    def hour = hours$/;"	f
hourFormat	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def hourFormat(in: Date): String = hourFormat.format(in)$/;"	f
hourFormat	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  val hourFormat = new SimpleDateFormat("HH:mm:ss")$/;"	V
hours	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    def hours = TimeSpan(outer.hours(len))$/;"	f
hours	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def hours(in: Long): Long = minutes(in) * 60L$/;"	f
howdy	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/snippet/HelloWorld.scala	/^  def howdy = <span>Welcome to webtest1 at {new _root_.java.util.Date}<\/span>$/;"	f
href	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HeadHelper.scala	/^       val href = e.attributes("href")$/;"	V
href	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def href = _href$/;"	f
href	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^        val href = atts.getValue("href")$/;"	V
href_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def href_=(i : String) {_href = i}$/;"	f
hrefs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HeadHelper.scala	/^    var hrefs = new ListBuffer[NodeSeq]$/;"	v
html	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      val html = fixHtml("inline", content);$/;"	V
html	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val html = single_html | multi_html$/;"	V
html	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/gravatar/Gravatar.scala	/^  private def html(in: String): NodeSeq = {$/;"	f
html5	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  val html5 = "<!DOCTYPE html>"$/;"	V
htmlHeaders	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def htmlHeaders: NodeSeq =$/;"	f
htmlKids	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^      val htmlKids = new ListBuffer[Node]$/;"	V
htmlLine	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def htmlLine : NodeSeq = {$/;"	f
htmlTag	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^    var htmlTag = <html xmlns="http:\/\/www.w3.org\/1999\/xhtml" xmlns:lift='http:\/\/liftweb.net'\/>$/;"	v
html_mp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^                        val html_mp = new MimeMultipart("related")$/;"	V
htmlize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    var htmlize: ChoiceItem[_] => NodeSeq = c => (<span>{c.xhtml}&nbsp;{c.key.toString}<br\/> <\/span>)$/;"	v
httpAuthProtectedResource	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val httpAuthProtectedResource = RulesSeq[HttpAuthProtectedResourcePF]$/;"	V
httpCode	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthProblemException.scala	/^  def httpCode = problem._2$/;"	f
httpRequest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SimpleController.scala	/^  def httpRequest: HTTPRequest$/;"	f
httpRequest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/ServletFilterProvider.scala	/^          val httpRequest = new HTTPRequestServlet(httpReq)$/;"	V
httpResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/ServletFilterProvider.scala	/^          val httpResponse = new HTTPResponseServlet(httpRes)$/;"	V
httpSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                  val httpSession: Box[HTTPSession]) extends LiftMerge {$/;"	V
httpStr	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val httpStr =$/;"	V
hv	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    val hv = v.text$/;"	V
i	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Benchmark.scala	/^    var i = 0; while (i < count) {$/;"	v
i	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^        var i = curSegmentIdx$/;"	v
i	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LD.scala	/^        val i = dist.head$/;"	V
i	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^    var i = 1$/;"	v
i	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  for (var i = 0; i < parent.childNodes.length; i++) {$/;"	v
i	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/ScriptRenderer.scala	/^      var i = 0;$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^        var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^      val i = lst.elements$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^      val i = seq.elements$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^    var i: Int = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^    var i: Int = a.length - 1$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^      private var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^      private var i = start$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    private var i = start$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    var i = start$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var i = start + len$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var i = start$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Range.scala	/^      var i = this.start$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^          val i = f(a)$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^        val i = elements$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    val i = elements$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    val i = elements.drop(offset)$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    var i = length$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^        val i = f(s.head)$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^        var i = sourceOffset + inx$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^      var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    var i = min + fromIndex$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^        var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^      var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^     var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/RollbackIterator.scala	/^        val i = rollback.drop(sz).reverse.elements$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Set.scala	/^     val i = elements$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Sorted.scala	/^    val i = keySet.elements;$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Sorted.scala	/^    val i = keySet.from(to).elements;$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedMap.scala	/^    val i = elements;$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedSet.scala	/^    val i = elements$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^    var i = j;$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^    var i = j;$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^      var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    val i = added.elements$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    val i = elements$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    val i = elements; i.seek(idx);$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    val i = elements;$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^      val i = Map.this.elements.filter(e => p(e._1));$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    val i = elements;$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^      val i = MutableIterable.this.elements.filter(p);$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^    val i = elements;$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^    var i = elements;$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^    val i = elements$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Sorted.scala	/^    val i = keySet.from(to).elements;$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    val i = elements;$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^    val i = elements;$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Buffer.scala	/^    val i = indexOf(x)$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Buffer.scala	/^    var i = n$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Buffer.scala	/^    var i = start$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^    private var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^    var i = table.length - 1$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^    var i = oldTable.length - 1$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^    var i = table.length - 1$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^        var i = 1$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^      var i = 1$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Message.scala	/^    var i = 1$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ObservableBuffer.scala	/^    var i = n$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^    var i = j;$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^    var i = size0 - 1$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ResizableArray.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^    var i = 1$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^    var i = from$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/ScalaBeanInfo.scala	/^    var i = 0;$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^          var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^        var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^    def next(): Any = { val i = index; index = i + 1; apply(i) }$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedBooleanArray.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedByteArray.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedCharArray.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedDoubleArray.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedFloatArray.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedIntArray.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedLongArray.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedObjectArray.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedShortArray.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^    var i = self.length - 1$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichStringBuilder.scala	/^    val i = iter.elements$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^      var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/Benchmark.scala	/^      var i = 0; while (i < multiplier) {$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^        var i = off$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^      var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^        val i = posMap( x );$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^        val i = x.pos$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^        var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/RegexParsers.scala	/^      var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/CharArrayPosition.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/StreamReader.scala	/^    var i = off$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^        val i = that.indexOf('}')$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^    val i = sb.length + 1$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^    var i = s.indexOf(' ')$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^    val i = name.indexOf(':'.asInstanceOf[Int])$/;"	V
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^    var i = 0$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^    var i = index;$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^      var  i = 0; while (i < length) {$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^      var i = 0; while (i < atts.getLength()) {$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ExternalSources.scala	/^        var i = -1$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^	var i: Int = offset$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    var i = 0;$/;"	v
i	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^    var i = 0$/;"	v
i0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^      val i0 = i.next$/;"	V
i1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^      val i1 = f(i0)$/;"	V
i1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^              val i1 = it1.next$/;"	V
i2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^              val i2 = it2.next$/;"	V
i_is_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  protected def i_is_! = data.get$/;"	f
i_is_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  protected def i_is_! = data openOr false$/;"	f
i_is_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  protected def i_is_! = data.get$/;"	f
i_is_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  protected def i_is_! = data.get$/;"	f
i_is_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  protected def i_is_! = data$/;"	f
i_is_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	protected def i_is_! = data$/;"	f
i_is_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  protected def i_is_! : FieldType$/;"	f
i_is_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  protected def i_is_! = data$/;"	f
i_is_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  protected def i_is_! = data$/;"	f
i_is_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  protected def i_is_! = MappedPassword.blankPw$/;"	f
i_is_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  protected def i_is_! = data.get$/;"	f
i_is_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  protected def i_is_! = data.get$/;"	f
i_name_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  private[mapper] final def i_name_! = _name$/;"	f
i_obscure_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  protected def i_obscure_!(in : Array[Byte]) : Array[Byte] = {$/;"	f
i_obscure_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  protected def i_obscure_!(in: String): String = ""$/;"	f
i_obscure_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  protected def i_obscure_!(in : Boolean) = false$/;"	f
i_obscure_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  protected def i_obscure_!(in : Date) : Date = {$/;"	f
i_obscure_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  protected def i_obscure_!(in : Date) : Date = {$/;"	f
i_obscure_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  protected def i_obscure_!(in : BigDecimal) = defaultValue$/;"	f
i_obscure_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	protected def i_obscure_!(in : Double) = defaultValue$/;"	f
i_obscure_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  protected def i_obscure_!(in : FieldType): FieldType$/;"	f
i_obscure_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  protected def i_obscure_!(in : ENUM#Value) = defaultValue$/;"	f
i_obscure_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  protected def i_obscure_!(in : Int) = 0$/;"	f
i_obscure_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  protected def i_obscure_!(in : Long) = defaultValue$/;"	f
i_obscure_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  protected def i_obscure_!(in : Seq[ENUM#Value]) = Nil$/;"	f
i_obscure_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  protected def i_obscure_!(in: Box[Long]) = defaultValue$/;"	f
i_obscure_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  protected def i_obscure_!(in : String) : String = in$/;"	f
i_obscure_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  protected def i_obscure_!(in : String) : String = {$/;"	f
i_obscure_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  protected def i_obscure_!(in : Date) : Date = {$/;"	f
i_set_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  protected final def i_set_!(value: FieldType): FieldType = {$/;"	f
i_was_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  protected def i_was_! = orgData.get$/;"	f
i_was_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  protected def i_was_! = orgData openOr false$/;"	f
i_was_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  protected def i_was_! = orgData.get$/;"	f
i_was_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  protected def i_was_! = orgData.get$/;"	f
i_was_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  protected def i_was_! = orgData$/;"	f
i_was_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	protected def i_was_! = orgData$/;"	f
i_was_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  protected def i_was_! : FieldType$/;"	f
i_was_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  protected def i_was_! = orgData$/;"	f
i_was_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  protected def i_was_! = orgData$/;"	f
i_was_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  protected def i_was_! = MappedPassword.blankPw$/;"	f
i_was_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  protected def i_was_! = orgData.get$/;"	f
i_was_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  protected def i_was_! = orgData.get$/;"	f
iant	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val invariant = (<link id="css1" rel="stylesheet" type="text\/css" href="style1.css"\/><link id="css2" rel="stylesheet" type="text\/css" href="style2.css"\/>)$/;"	v
iant	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val invariant = (<link rel="stylesheet" type="text\/css" href="style1.css"\/><link rel="stylesheet" type="text\/css" href="style2.css"\/>)$/;"	v
iant	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val invariant = (<script type="text\/javascript" id="sc1" src="foo1.js"><\/script><script type="text\/javascript" id="sc2" src="foo2.js"><\/script>)$/;"	v
iant	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val invariant = (<style id="st1">.foo{{...}}<\/style><style id="st2">.bar{{...}}<\/style>)$/;"	v
iant	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val invariant = (<style>.foo{{...}}<\/style><style>.bar{{...}}<\/style>)$/;"	v
id	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^        val id = nextFuncName$/;"	V
id	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Form.scala	/^    val id = Helpers.nextFuncName$/;"	V
id	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^    val id = "lazy_"+ Helpers.nextFuncName;$/;"	V
id	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^private[http] class XmlOrJsCmd(val id: String,$/;"	V
id	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val id = Full(act.uniqueId)$/;"	V
id	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  val id = pathParam(0)$/;"	V
id	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    val id = formFuncName$/;"	V
id	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  object id extends MappedLongIndex[MyType](this)$/;"	o
id	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  object id extends MappedLongIndex(this) {$/;"	o
id	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^    object id extends MappedLongIndex(this) {$/;"	o
id	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    object id extends MappedLongIndex(this) {$/;"	o
id	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^      val id = Helpers.nextFuncName$/;"	V
id	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^    val id = Helpers.nextFuncName$/;"	V
id	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  object id extends MappedLongIndex[MapperType](this.asInstanceOf[MapperType])$/;"	o
id	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^  object id extends MappedLongIndex(this)$/;"	o
id	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala	/^  object id extends MappedLongIndex(this)$/;"	o
id	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  object id extends MappedLongIndex(this)$/;"	o
id	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  object id extends MappedLongIndex(this)$/;"	o
id	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^	object id extends MappedLongIndex(this)$/;"	o
id	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/AwardSnippet.scala	/^				val id :Int = Integer.parseInt(awardId)$/;"	V
id	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DependencySnippet.scala	/^				val id :Int = Integer.parseInt(idStr)$/;"	V
id	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DiscoverySnippet.scala	/^				val id :Int = Integer.parseInt(idStr)$/;"	V
id	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/FieldSnippet.scala	/^				val id :Int = Integer.parseInt(fieldId)$/;"	V
id	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/InstitutionSnippet.scala	/^				val id :Int = Integer.parseInt(institutionId)$/;"	V
id	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/SourceSnippet.scala	/^					val id :Int = Integer.parseInt(sourceId)$/;"	V
id	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def id = i$/;"	f
id	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def id: Int$/;"	f
id	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    val id: Int = _Binder.genId$/;"	V
id	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^      var id = ""$/;"	v
idAttributes	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  val validAttributes = List(\/*"class", *\/ "title", \/*"style", "dir",*\/ "lang")$/;"	V
idCache	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala	/^  private val idCache = new LRU[Long, ModelType](cacheSize)$/;"	V
idMessages	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def idMessages(f: => List[(NodeSeq, Box[String])]): List[(String, List[NodeSeq])] = {$/;"	f
idMsg	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^      case _ => {invalidPw = true ; invalidMsg = S.??("password.too.short"); "*"}$/;"	V
idMsg	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^      case _ => {invalidPw = true; invalidMsg = S.??("passwords.do.not.match")}$/;"	V
idMsg	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^    case _ => invalidPw = true; invalidMsg = S.??("passwords.do.not.match"); false$/;"	V
idMsg	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  private var invalidMsg = ""$/;"	V
idMsg	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^  private var invalidMsg : String = ""$/;"	V
idPropertiesFormatException	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^          case _: InvalidPropertiesFormatException =>$/;"	V
idPw	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^      case _ if (value.length > 4) => {invalidPw = false; hash("{"+value+"} salt={"+salt_i.get+"}")}$/;"	V
idPw	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  private var invalidPw = false$/;"	V
idSelectValues	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def validSelectValues: Box[List[(KeyType, String)]] = Empty$/;"	V
idString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/ModelView.scala	/^  def idString = if(entity.saved_?)$/;"	f
idTag	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val validTag =$/;"	V
idate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  def validate: List[FieldError]$/;"	V
idate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    def validate: List[FieldError] = validations.flatMap(_.apply(is))$/;"	V
idate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  def validate: List[FieldError] = screenFields.flatMap(_.validate)$/;"	V
idate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedEmail.scala	/^  override def validate =$/;"	V
idate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def validate: List[FieldError] = {$/;"	V
idate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  override def validate : List[FieldError] = {$/;"	V
idate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def validate : List[FieldError] = {$/;"	V
idate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Record.scala	/^  def validate : List[FieldError] = {$/;"	V
idateUserMenuLoc	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^  override def validateUserMenuLoc: Box[Menu] = Empty$/;"	V
idateUserMenuLoc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def validateUserMenuLoc: Box[Menu] =$/;"	V
idateUserPath	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  lazy val validateUserPath = thePath(validateUserSuffix)$/;"	V
idateUserSuffix	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def validateUserSuffix = "validate_user"$/;"	V
idated	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^case class GenericIndex[A <: Mapper[A]](createFunc : (String,List[String]) => String, validated : IHaveValidatedThisSQL, indexColumns : IndexItem[A]*) extends BaseIndex[A](indexColumns : _*)$/;"	V
idated	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^        case Full(user) if !user.validated =>$/;"	V
idated	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^      case Full(user) if user.validated =>$/;"	V
idated	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    case Full(user) if !user.validated =>$/;"	V
idation	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def validation: List[A => List[FieldError]] = Nil$/;"	V
idationLink	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def signupMailBody(user: ModelType, validationLink: String) = {$/;"	V
idations	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  def validations: List[ValueType => List[FieldError]]$/;"	V
idations	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    def validations: List[ValueType => List[FieldError]] = Nil$/;"	V
idations	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^    override def validations =  valMinLen(1, "Application name is required") _ :: super.validations$/;"	V
idations	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^    override def validations =  valMinLen(1, "Application web site is required") _ :: super.validations$/;"	V
idations	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^    override def validations =  valMinLen(1, "Callback URL is required") _ :: super.validations$/;"	V
idations	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^    override def validations = validText _ :: validateNickname _ :: super.validations$/;"	V
idations	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^        override def validations = minLen(2, S ?? "Name Too Short") ::$/;"	V
idations	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^        override def validations = minVal(5, S ?? "Too young") ::$/;"	V
idations	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def validations: List[FieldType => List[FieldError]] = Nil$/;"	V
idations	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^  override def validations = country.is match {$/;"	V
idations	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  abstract override def validations = valMaxLen(maxLen, defaultErrorMessage) _ :: super.validations$/;"	V
idations	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    override def validations = valUnique(S.??("unique.email.address")) _ :: super.validations$/;"	V
idations	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Award.scala	/^		override def validations = valMinLen(1, "The name cannot be empty") _ :: Nil$/;"	V
idations	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Award.scala	/^		override def validations = validateYear _ :: Nil$/;"	V
idations	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Discovery.scala	/^		override def validations = valMinLen(1, "A description has to contain more than one char") _ :: Nil$/;"	V
idations	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Discovery.scala	/^		override def validations = validateYear _ :: Nil$/;"	V
idations	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Field.scala	/^		override def validations = valMinLen(1, "Come on, one char can't be enough") _ :: Nil$/;"	V
idations	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Institution.scala	/^		override def validations = valMinLen(1, "name has to contain atleast 1 char") _ :: Nil$/;"	V
idations	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Institution.scala	/^		override def validations = valMinLen(1, "nationality has to contain atleast 1 char") _ :: Nil$/;"	V
idations	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^		override def validations = valMinLen(1, "name has to contain atleast 1 char") _ :: Nil$/;"	V
idations	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^		override def validations = validateBirth _ :: Nil$/;"	V
idations	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^		override def validations = validateDeath _ :: Nil$/;"	V
idators	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^    def runValidations(validators: List[FieldType => List[FieldError]]) {$/;"	V
idators	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def validators: List[ValidationFunction] = Nil$/;"	V
idators	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EmailField.scala	/^  override def validators = validateEmail _ :: Nil$/;"	V
idators	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^  override def validators = validatePassword _ :: Nil$/;"	V
idators	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PostalCodeField.scala	/^  override def validators = validate _ :: Nil$/;"	V
idempotencyProp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JsonASTTest.scala	/^    val idempotencyProp = (x: JValue) => (x merge x) == x$/;"	V
ident	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/JavaTokenParsers.scala	/^  def ident: Parser[String] = $/;"	f
ident	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/syntactical/StdTokenParsers.scala	/^  def ident: Parser[String] = $/;"	f
ident	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/testing/RegexTest.scala	/^  val ident: Parser[Any] = """[a-zA-Z_]\\w*""".r ^^ (s => Ident(s))$/;"	V
ident	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/StdTokenParsers.scala	/^  def ident: Parser[String] = $/;"	f
identBegin	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/StdLexical.scala	/^  def identBegin: Parser[Char] = ('_' ^^ '_') | letter$/;"	f
identCont	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/StdLexical.scala	/^  def identCont: Parser[Char] = ('_' ^^ '_') | letter | digit$/;"	f
identity	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HeadHelper.scala	/^  def identity(xml: NodeSeq) : NodeSeq = xml$/;"	f
identity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def identity[A](x: A): A = x$/;"	f
identityProp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JsonASTTest.scala	/^    val identityProp = (json: JValue) => $/;"	V
identityProp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JsonASTTest.scala	/^    val identityProp = (json: JValue) => (json ++ JNothing == json) && (JNothing ++ json == json)$/;"	V
identityProp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JsonASTTest.scala	/^    val identityProp = (json: JValue) => (json merge JNothing) == json && (JNothing merge json) == json$/;"	V
identityProp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JsonASTTest.scala	/^    val identityProp = (json: JValue) => json == (json map identity)$/;"	V
idx	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^      val idx: Int = {$/;"	V
idx	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    var idx = 0$/;"	v
idx	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var idx = 0$/;"	v
idx	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    var idx = 0$/;"	v
idx	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^    var idx = table.length - 1$/;"	v
idx1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Collection.scala	/^    val idx1 = string.lastIndexOf('.' : Int)$/;"	V
idx2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Collection.scala	/^    val idx2 = string.indexOf('$')$/;"	V
ieBadTags	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^  val ieBadTags: Set[String] = Set("br", "hr")$/;"	V
ieExcanvasPackJs	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^    val ieExcanvasPackJs = Unparsed("<!--[if IE]><script language=\\"javascript\\" type=\\"text\/javascript\\" src=\\"" +$/;"	V
ieMode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  object ieMode extends SessionVar[Boolean](LiftRules.calcIEMode())$/;"	o
ieMode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def ieMode: Boolean = session.map(_.ieMode.is) openOr false \/\/ LiftRules.calcIEMode()$/;"	f
ifExpand	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^    def ifExpand(f: => NodeSeq): NodeSeq = if (expandAny) f else NodeSeq.Empty$/;"	f
ifModifiedSince	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  lazy val ifModifiedSince: Box[java.util.Date] =$/;"	V
ignorableWhitespace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^  override def ignorableWhitespace(ch: Array[Char], start: Int, length: Int) {$/;"	f
ignorableWhitespace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^  def  ignorableWhitespace(ch: Array[Char], start: Int , length: Int) {$/;"	f
ignore	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^      val ignore = List(classOf[ClassNotFoundException], classOf[ClassCastException]);$/;"	V
ignore	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/MailerSpec.scala	/^    val ignore = f$/;"	V
ignoreCaseStringParse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^      val ignoreCaseStringParse: Function2[String, String, Boolean] =$/;"	V
ignoreComments	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/NodeFactory.scala	/^  val ignoreComments  = false;$/;"	V
ignoreField_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def ignoreField_? = false$/;"	f
ignoreField_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def ignoreField_? = false$/;"	f
ignoreLogger	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^  private def ignoreLogger(f: => AnyRef): Unit = ()$/;"	f
ignoreLogger	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  private def ignoreLogger(f: => AnyRef): Unit = ()$/;"	f
ignoreProcInstr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/NodeFactory.scala	/^  val ignoreProcInstr = false;$/;"	V
ignore_node	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^    final val ignore_node = <ignore\/>$/;"	V
ilen	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^      val ilen = inpStack.length;$/;"	V
image	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val image : Parser[Textile] =$/;"	V
imap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableMapAdaptor.scala	/^class ImmutableMapAdaptor[A, B](protected var imap: immutable.Map[A, B])$/;"	v
img	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^      val img = XmlElem(null, "img", fromStyle(AnyAttribute("src", url) :: AnyAttribute("alt", alt) :: attrs), TopScope, Nil : _*)$/;"	V
immutableMsg	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def immutableMsg: NodeSeq = Text(?("Can't change"))$/;"	f
improve	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^  protected final def improve(hcode: Int) = {$/;"	f
improve	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^  protected final def improve(hcode: Int) = {$/;"	f
in	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^      var in = in0$/;"	v
in	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^    val in = new ObjectInputStream(new ByteArrayInputStream(body))$/;"	V
in	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  Mapper dependency on Widgets is the wrong order.  There should be a trait in Widgets that's$/;"	t
in	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def in = inVar.value$/;"	f
in	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/RollbackIterator.scala	/^    var in: Seq[A] = Nil$/;"	v
in	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Sorted.scala	/^    var in = i.next;$/;"	v
in	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^      override protected val in = i$/;"	V
in	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^  protected val in: List[A] = Nil$/;"	V
in	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^      val in = url.openStream()$/;"	V
in	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Marshal.scala	/^    val in = new ObjectInputStream(new ByteArrayInputStream(buffer))$/;"	V
in	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    var in = in0$/;"	v
in	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/testing/RegexTest.scala	/^    val in = args mkString " "$/;"	V
in	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      var in = in0$/;"	v
in	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/BindingParsers.scala	/^  def in[scopeT <% Mappable[scopeT], bt <: NameElement ](scopeParser: Parser[scopeT], scope: Scope[bt]) = new Parser[UnderBinder[bt, scopeT]] {$/;"	f
in	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^      val in = new BufferedInputStream(uc.getInputStream())$/;"	V
in	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ExternalSources.scala	/^    val in =$/;"	V
inActor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/snippet/DeferredSnippet.scala	/^     val inActor: Boolean = Thread.currentThread.getStackTrace.$/;"	V
inBody	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^                var inBody = _inBody$/;"	v
inDTD	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^  private var inDTD: Boolean = false$/;"	v
inFuture_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  def inFuture_? = data.get match {$/;"	f
inFuture_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  def inFuture_? = data.get match {$/;"	f
inGAE	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  lazy val inGAE: Boolean = System.getProperty("in.gae.j") != null$/;"	V
inGroup_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def inGroup_?(group: String): Boolean = groupSet.contains(group)$/;"	f
inHead	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^                var inHead = _inHead$/;"	v
inHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^                var inHtml = _inHtml$/;"	v
inInterval	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Range.scala	/^    override protected def inInterval(x: Int) =$/;"	f
inInterval	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Range.scala	/^  protected def inInterval(x: Int): Boolean =$/;"	f
inPast_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  def inPast_? = data.get match {$/;"	f
inPast_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  def inPast_? = data.get match {$/;"	f
inProcess	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  object inProcess extends MappedBoolean[MyType](this)$/;"	o
inS	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private val inS = (new ThreadGlobal[Boolean]).set(false)$/;"	V
inScope	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/BindingParsers.scala	/^  protected def inScope[bt <: NameElement, res](scope: Scope[bt])(block: => res) :res = {$/;"	f
inSpan	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def inSpan: NodeSeq = xml.openOr(Text("")) ++ javaScript.map(s => Script(s)).openOr(Text(""))$/;"	f
inStatefulScope_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def inStatefulScope_? : Boolean = inS.value$/;"	f
inVar	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  private val inVar = new DynamicVariable[BufferedReader]($/;"	V
in_bind	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^      def in_bind(xml: NodeSeq): NodeSeq = {$/;"	f
inactivityLength	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] var inactivityLength: Long = 30 minutes$/;"	v
incl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^  @deprecated def incl[B1 >: B](map: Iterable[(A, B1)]): Map[A, B1] = {$/;"	f
incl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^  @deprecated def incl[B1 >: B](mappings: (A, B1)*): Map[A, B1] = incl(mappings)$/;"	f
incl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set.scala	/^  def incl(elems: A*): Set[A] = incl(elems)$/;"	f
incl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set.scala	/^  def incl(that: Iterable[A]): Set[A] =$/;"	f
incl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^  def incl(mappings: (A, B)*) { this ++= mappings.elements }$/;"	f
incl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MapProxy.scala	/^  override def incl(mappings: (A, B)*): Unit = self.incl(mappings: _*)$/;"	f
incl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Set.scala	/^  def incl(elems: A*): Unit = ++=(elems.elements)$/;"	f
incl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SetProxy.scala	/^  override def incl(elems: A*): Unit = self ++= elems$/;"	f
incl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  override def incl(mappings: (A, B)*): Unit = synchronized {$/;"	f
incl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedSet.scala	/^  override def incl(elems: A*): Unit = synchronized {$/;"	f
include	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    val include = new Array[Boolean](length)$/;"	V
include	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedBooleanArray.scala	/^    val include = new Array[Boolean](value.length)$/;"	V
include	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedByteArray.scala	/^    val include = new Array[Boolean](value.length)$/;"	V
include	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedCharArray.scala	/^    val include = new Array[Boolean](value.length)$/;"	V
include	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedDoubleArray.scala	/^    val include = new Array[Boolean](value.length)$/;"	V
include	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedFloatArray.scala	/^    val include = new Array[Boolean](value.length)$/;"	V
include	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedIntArray.scala	/^    val include = new Array[Boolean](value.length)$/;"	V
include	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedLongArray.scala	/^    val include = new Array[Boolean](value.length)$/;"	V
include	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedObjectArray.scala	/^    val include = new Array[Boolean](value.length)$/;"	V
include	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedShortArray.scala	/^    val include = new Array[Boolean](value.length)$/;"	V
includeTextDocument	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^  private def includeTextDocument(url: String, encoding1: String) {$/;"	f
includeXMLDocument	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^  private def includeXMLDocument(url: String) {$/;"	f
includeXmlVersion	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def includeXmlVersion = true$/;"	f
includeXmlVersion	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  override def includeXmlVersion = _includeXmlVersion$/;"	f
includer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/Main.scala	/^          val includer = new XIncludeFilter();$/;"	V
inclusion	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/Inclusion.scala	/^  def inclusion(dfa1: DetWordAutom[A], dfa2: DetWordAutom[A]) = {$/;"	f
inclusive	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Range.scala	/^  def inclusive = new Range.Inclusive(start,end,step)$/;"	f
indVal	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^            val indVal = indexedField(toDelete)$/;"	V
index	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindPlus.scala	/^    var index = 0$/;"	v
index	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^      val index = authority.lastIndexOf(":")$/;"	V
index	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  var index = 0;$/;"	v
index	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  var index = 0;$/;"	v
index	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^      private var index = 0;$/;"	v
index	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^    protected var index = 0$/;"	v
index	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^                            private var index : Int) extends Collection[T]{$/;"	v
index	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^  protected final def index(hcode: Int) = improve(hcode) & (table.length - 1)$/;"	f
index	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^  protected final def index(hcode: Int) = improve(hcode) & (table.length - 1)$/;"	f
index	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^    val index = findIndex(key);$/;"	V
index	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^    val index = findIndex(key, hash);$/;"	V
index	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^    var index = 0;$/;"	v
index	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^    var index = hash & mask;$/;"	v
index	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^    var index = 0$/;"	v
index	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^      var index = 0$/;"	v
index	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^    var index = 0$/;"	v
index	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/OffsetPosition.scala	/^  private lazy val index: Array[Int] = {$/;"	V
index	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^      val index = systemId.lastIndexOf('\/'.asInstanceOf[Int])$/;"	V
indexColorModel	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-imaging/src/main/scala/net/liftweb/imaging/ImageHelpers.scala	/^      val indexColorModel = sourceColorModel.asInstanceOf[IndexColorModel] $/;"	V
indexDesc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def indexDesc: String = MapperRules.quoteColumnName(field._dbColumnNameLC)$/;"	f
indexDesc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def indexDesc: String = MapperRules.quoteColumnName(field._dbColumnNameLC)+"("+len+")"$/;"	f
indexDesc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def indexDesc: String$/;"	f
indexFor	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def indexFor(b: binderType): Option[Int] = {$/;"	f
indexMap	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private var indexMap: Box[String] = Empty$/;"	v
indexMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    var indexMap    = new TreeMap[BitSet, Int]$/;"	v
indexOf	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    def indexOf(e: T2) =$/;"	f
indexOf	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    override def indexOf[B >: O](e: B): Int =$/;"	f
indexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def indexOf[B >: A](elem: B): Int = self indexOf elem$/;"	f
indexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  @deprecated def indexOf[B >: A](elem: B): Int =$/;"	f
indexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  @deprecated override def indexOf[B >: A](elem: B): Int = self indexOf elem$/;"	f
indexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def indexOf[B >: A](elem: B): Int = {$/;"	f
indexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  def indexOf[B >: A](that: Seq[B]): Int = {$/;"	f
indexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  override def indexOf[B >: A](elem: B): Int =$/;"	f
indexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def indexOf[B >: A](elem: B): Int = self indexOf elem$/;"	f
indexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def indexOf[B >: A](that: Seq[B]) = self indexOf that$/;"	f
indexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def indexOf(str: String): Int = indexOf(str, 0)$/;"	f
indexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def indexOf(str: String, fromIndex: Int): Int =$/;"	f
indexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  private def indexOf(source: Array[Char], sourceOffset: Int, sourceCount: Int,$/;"	f
indexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^  override def indexOf(a : A) = {$/;"	f
indexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^  def indexOf(a : A) = elements.indexOf(a);$/;"	f
indexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SeqIterator.scala	/^  def indexOf(a: A): Option[K] = {$/;"	f
indexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  override def indexOf[B](that: Seq[B]) = that match {$/;"	f
indexedField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def indexedField(toSave: A): Box[MappedField[Any, A]] =$/;"	f
indexedFields	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^    val indexedFields: List[List[String]] = byName.map{case (name, value) => value.sort(_ < _)}.toList$/;"	V
indices	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def indices: Array[Int] = throw new Error()$/;"	f
indices	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def indices: List[Int] = {$/;"	f
indices	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  def indices: Array[Int] = Array.range(0, length)$/;"	f
ine	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxSpec.scala	/^    "define a 'pass' method passing the can to a function and returning itself (alias: $)" in {$/;"	f
ineConnectionManager	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def defineConnectionManager(name: ConnectionIdentifier, mgr: ConnectionManager) {$/;"	f
ined	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^      case bad => throw new Exception("The following required properties are not defined: "+bad.mkString(","))$/;"	f
ined	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^    val jsUpdateTime = ret2.map(ar => "if (lift_toWatch['" + ar.who.uniqueId + "'] !== undefined) lift_toWatch['" + ar.who.uniqueId + "'] = '" + ar.when + "';").mkString("\\n")$/;"	f
ined	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/NotDefinedError.scala	/^final class NotDefinedError(msg: String) extends Error("not defined: " + msg)$/;"	f
inedAttribute	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^          exc = fromUndefinedAttribute( attr.key ) :: exc;$/;"	f
inedAttribute	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ValidationException.scala	/^  def fromUndefinedAttribute(key: String) = $/;"	f
inedElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^          exc = MakeValidationException.fromUndefinedElement(label) :: exc;$/;"	f
inedElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ValidationException.scala	/^  def fromUndefinedElement(label: String) = $/;"	f
ined_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^  def defined_? = synchronized {$/;"	f
ined_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def defined_? : Boolean$/;"	f
ined_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def defined_? = i_is_! != defaultValue$/;"	f
ined_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def defined_? = \/*i_get_! != defaultValue &&*\/ i_is_! > 0L$/;"	f
ined_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def defined_? = i_is_! != defaultValue$/;"	f
ined_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^    if (!data.defined_? || value != data.get) {$/;"	f
ined_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  def defined_? = i_is_! ne null$/;"	f
info	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def info(msg: => AnyRef): Unit = ()$/;"	f
info	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def info(msg: => AnyRef, t: => Throwable): Unit = ()$/;"	f
info	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def info(msg: => AnyRef) = if (isInfoEnabled) logger.info(msg)$/;"	f
info	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def info(msg: => AnyRef) = rootLogger.info(msg)$/;"	f
info	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def info(msg: => AnyRef, t: => Throwable) = if (isInfoEnabled) logger.info(msg, t)$/;"	f
info	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def info(msg: => AnyRef, t: => Throwable) = rootLogger.info(msg, t)$/;"	f
info	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  override def info(msg: => AnyRef) = if (isInfoEnabled) logger.info(String.valueOf(msg))$/;"	f
info	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  override def info(msg: => AnyRef, t: => Throwable) = if (isInfoEnabled) logger.info(String.valueOf(msg), t)$/;"	f
info	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^        override def info(a: => AnyRef) = record {$/;"	f
info	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    override def info(msg: => AnyRef): Unit = logger.info(msg)$/;"	f
info	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    override def info(msg: => AnyRef, t: => Throwable): Unit = logger.info(msg, t)$/;"	f
info	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^    val info = auth.substring(7, auth.length)$/;"	V
info	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/atomikos/AtomikosTransactionService.scala	/^  private val info: TSInitInfo = txService.createTSInitInfo$/;"	V
info	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^      val info: Seq[(String, String)] = pm.keySet.toArray.$/;"	V
info	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  private lazy val info: Map[String, String] =$/;"	V
info	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^    val info: List[Box[(String, JsExp)]] =$/;"	V
info	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^   val info: List[Box[(String, JsExp)]] =$/;"	V
info	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private def info: HashMap[ConnectionIdentifier, ConnectionHolder] = {$/;"	f
infoF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def infoF(msg: => AnyRef) = info(msg)$/;"	f
info_enc	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    var info_enc: Option[String] = None$/;"	v
info_prolog	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    var info_prolog: Tuple3[Option[String], Option[String], Option[Boolean]] = Tuple3(None, None, None);$/;"	v
info_stdl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    var info_stdl: Option[Boolean] = None$/;"	v
info_ver	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    var info_ver: Option[String] = None$/;"	v
init	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  def init = {$/;"	f
init	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def init[B](request: Req, session: LiftSession)(f: => B): B = {$/;"	f
init	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/ServletFilterProvider.scala	/^  def init(config: FilterConfig) {$/;"	f
init	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Menu.scala	/^  private[sitemap] def init(siteMap: SiteMap) {$/;"	f
init	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarMonthView.scala	/^    val init = JsRaw("""$/;"	V
init	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/uploadprogress/UploadProgress.scala	/^  def init = {$/;"	f
init	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def init: List[A] =$/;"	f
init	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  def init: Stream[A] =$/;"	f
initCometActor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  protected def initCometActor(theSession: LiftSession,$/;"	f
initFlot	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^   val initFlot = "jQuery(function () {"$/;"	V
initIfUninitted	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def initIfUninitted[B](session: LiftSession)(f: => B): B = {$/;"	f
initParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPContext.scala	/^  def initParam(name: String): Box[String]$/;"	f
initParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletContext.scala	/^  def initParam(name: String): Box[String] = Box !! ctx.getInitParameter(name)$/;"	f
initParams	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPContext.scala	/^  def initParams: List[(String, String)]$/;"	f
initParams	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletContext.scala	/^  def initParams: List[(String, String)] = enumToList[String](ctx.getInitParameterNames.asInstanceOf[_root_.java.util.Enumeration[String]]).$/;"	f
initRollback	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/RollbackIterator.scala	/^  private def initRollback =$/;"	f
initScanner	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Scanner.scala	/^  final def initScanner(s: String) {$/;"	f
initValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^final class StringBuilder(initCapacity: Int, private val initValue: String)$/;"	V
inited	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    private var inited = false$/;"	v
initedSuffix	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  val initedSuffix = "_inited_?"$/;"	V
initialModCount	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^    val initialModCount = modCount;$/;"	V
initialNodes	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/CachedFileStorage.scala	/^  protected def initialNodes: Iterator[Node] = (file1.exists, file2.exists) match {$/;"	f
initialSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^      override def initialSize = 0$/;"	f
initialSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashSet.scala	/^      override def initialSize = 0$/;"	f
initialSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^  protected def initialSize: Int = 16$/;"	f
initialSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^  protected def initialSize: Int = 16$/;"	f
initialSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ResizableArray.scala	/^  protected def initialSize: Int = 16$/;"	f
initialState	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  def initialState : StV$/;"	f
initialThreshold	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^  protected def initialThreshold: Int = newThreshold(initialSize)$/;"	f
initialValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  override def initialValue = init$/;"	f
initialValue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^    override def initialValue = null$/;"	f
initialValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/DynamicVariable.scala	/^    override def initialValue = init.asInstanceOf[T with AnyRef]$/;"	f
initialValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Parser.scala	/^    override def initialValue() = defaultNumberParser$/;"	f
initialize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^  def initialize = {$/;"	f
initialize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^  protected def initialize(subexpr: Seq[RegExp]): Unit = {$/;"	f
initialize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^  def initialize(src: Source): this.type = {$/;"	f
initializeWith	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  private def initializeWith(elem: Int => Any) = {$/;"	f
initialized	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^    var initialized = false$/;"	v
initials	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^          val initials = initialsArr$/;"	V
initials	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^  protected var initials:immutable.Set[Int] = _$/;"	v
initialsArr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^        val initialsArr = new Array[Int](initials.size)$/;"	V
inject	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  implicit def inject[T](implicit man: Manifest[T]): Box[T] =$/;"	f
inject	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  implicit def inject[T](implicit man: Manifest[T]): Box[T]$/;"	f
inline	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/inline.scala	/^class inline extends StaticAnnotation$/;"	c
inlineTags	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^  val inlineTags: Set[String] = Set("base", "meta", "link", "hr", "br",$/;"	V
innerEdit	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    def innerEdit = bind("user", editXhtml(theUser),$/;"	f
innerField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^            val innerField: MappedField[JoinType, A] = j.field.asInstanceOf[MappedField[JoinType, A]]$/;"	V
innerField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      val innerField: MappedField[JoinType, InnerMapper] = _innerField$/;"	V
innerField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      val innerField: MappedField[JoinType, InnerMapper] = fielda$/;"	V
innerField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def innerField: MappedField[JoinType, InnerType]$/;"	f
innerMeta	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^            val innerMeta: MetaMapper[A] = j.field.fieldOwner.getSingleton$/;"	V
innerMeta	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      val innerMeta: MetaMapper[InnerMapper] = fielda.fieldOwner.getSingleton$/;"	V
innerMeta	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      val innerMeta: MetaMapper[InnerMapper] = innerField.fieldOwner.getSingleton$/;"	V
innerMeta	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def innerMeta: MetaMapper[InnerType]$/;"	f
innerSignup	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    def innerSignup = bind("user",$/;"	f
innerTag	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^    val innerTag: String = S.attr("inner_tag") openOr "li"$/;"	V
inpStack	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  var inpStack: List[Source] = Nil$/;"	v
inpStream	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^    val inpStream = new FileInputStream(file)$/;"	V
input	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^class PCDataXmlParser(val input: Source) extends ConstructingHandler with PCDataMarkupParser[PCDataXmlParser] with ExternalSources  {$/;"	V
input	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BasicTypesHelpersSpec.scala	/^      val input = new ByteArrayInputStream(array)$/;"	V
input	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^    def input[B](c: A => B) =$/;"	f
input	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  val input: Source$/;"	V
input	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/XhtmlParser.scala	/^class XhtmlParser(val input: Source) extends ConstructingHandler with PCDataMarkupParser[XhtmlParser] with ExternalSources  {$/;"	V
input	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^    lazy val input = XMLEventReader.this.getSource$/;"	V
inputLine	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ExternalSources.scala	/^    var inputLine: String = null$/;"	v
inputStream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def inputStream: InputStream$/;"	f
inputStream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def inputStream: InputStream = $/;"	f
inputStream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def inputStream: InputStream = req.getInputStream$/;"	f
inputStream	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var inputStream: ServletInputStream = new MockServletInputStream(sbis)$/;"	v
insert	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val insert : Parser[Textile] = formattedLineElem('+') ^^ flatten4(Special * "ins")$/;"	V
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def insert(at: Int, x: Any): StringBuilder =$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def insert(at: Int, x: Array[Char]): StringBuilder = {$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def insert(at: Int, x: Boolean): StringBuilder =$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def insert(at: Int, x: Byte): StringBuilder =$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def insert(at: Int, x: Char): StringBuilder = {$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def insert(at: Int, x: Double): StringBuilder =$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def insert(at: Int, x: Float): StringBuilder =$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def insert(at: Int, x: Int): StringBuilder =$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def insert(at: Int, x: Long): StringBuilder =$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def insert(at: Int, x: Seq[Char]): StringBuilder =$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def insert(at: Int, x: Short): StringBuilder =$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def insert(at: Int, x: String): StringBuilder = {$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def insert(index: Int, str: Array[Char], offset: Int, len: Int): StringBuilder = {$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def insert(key: A, value: B, s: Int): anInsertTree = {$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def insert(key: A, value: B, size: Int): anInsertTree$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def insert(newKey: A, newValue: B, s: Int): anInsertTree = {$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^  def insert [B1 >: B](key: A, value: B1): TreeMap[A, B1] = {$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^  def insert (elem: A): TreeSet[A] = {$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^  def insert[B1 >: B](key: A, value: B1) = add(key, value)$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Buffer.scala	/^  def insert(n: Int, elems: A*) { insertAll(n, elems) }$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BufferProxy.scala	/^  override def insert(n: Int, elems: A*): Unit = self.insertAll(n, elems)$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/DoubleLinkedList.scala	/^  override def insert(that: This): Unit = if (that ne null) {$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SingleLinkedList.scala	/^  def insert(that: This): Unit = if (that ne null) {$/;"	f
insert	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedBuffer.scala	/^  override def insert(n: Int, elems: A*): Unit = synchronized {$/;"	f
insertAfter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^    def insertAfter(newItem: MailboxItem): MailboxItem = {$/;"	f
insertAll	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    def insertAll(n: Int, iter: Iterable[T2]) {$/;"	f
insertAll	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    def insertAll(n: Int, iter: Iterable[O]) {$/;"	f
insertAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayBuffer.scala	/^  def insertAll(n: Int, iter: Iterable[A]) {$/;"	f
insertAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Buffer.scala	/^  def insertAll(n: Int, iter: Iterable[A]): Unit$/;"	f
insertAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BufferProxy.scala	/^  def insertAll(n: Int, iter: Iterable[A]): Unit = self.insertAll(n, iter)$/;"	f
insertAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^  def insertAll(n: Int, iter: Iterable[A]) {$/;"	f
insertAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ObservableBuffer.scala	/^  abstract override def insertAll(n: Int, iter: Iterable[A]): Unit = {$/;"	f
insertAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedBuffer.scala	/^  abstract override def insertAll(n: Int, iter: Iterable[A]): Unit = synchronized {$/;"	f
insertAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichStringBuilder.scala	/^  override def insertAll(idx: Int, iter: Iterable[Char]): Unit = iter match {$/;"	f
insertBefore	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^    def insertBefore(newItem: MailboxItem): MailboxItem = {$/;"	f
insertLeft	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def insertLeft(k: A, v: B, t: GBTree[A,B]): InsertTree[A,B]$/;"	f
insertLeft	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def insertLeft(key: A, value: B, bigger: GBTree[A,B]) =$/;"	f
insertRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def insertRight(k: A, v: B, t: GBTree[A,B]): InsertTree[A,B]$/;"	f
insertRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def insertRight(key: A, value: B, smaller: GBTree[A,B]) =$/;"	f
insideIncludeElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^  def insideIncludeElement(): Boolean = level != 0$/;"	f
inst	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^    val inst = create.userId(uid.userIdAsString).saveMe$/;"	V
instance	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^  private var instance: JObject = _$/;"	v
instantiate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^      def instantiate(constructor: JConstructor[_], args: List[Any]) = $/;"	f
instantiate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def instantiate[C](clz: Class[C]): Box[C] = tryo { clz.newInstance }$/;"	f
instantiate	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  protected def instantiate: MyType$/;"	f
instantiateOrRedirect	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private def instantiateOrRedirect[T](c: Class[T]): Box[T] = tryo({$/;"	f
institution	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^	object institution extends MappedLongForeignKey(this, Institution)$/;"	o
institution	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/InstitutionSnippet.scala	/^	object institution extends RequestVar[Institution]( defaultInstitution() )$/;"	o
institutions	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/SourceSnippet.scala	/^		val institutions = Institution.findAll$/;"	V
insureField	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^  def insureField(toInsure: List[(String, String)], headers: List[(String, String)]): List[(String, String)] = {$/;"	f
insureField_inner	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^    def insureField_inner(toInsure : List[(String, String)], field : (String, String)): List[(String, String)] =$/;"	f
int	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  @deprecated type int     = scala.Int$/;"	T
int2Integer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def int2Integer(x: Int) = new java.lang.Integer(x)$/;"	f
int2bigDecimal	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  implicit def int2bigDecimal(i: Int): BigDecimal = apply(i)$/;"	f
int2bigInt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  implicit def int2bigInt(i: Int): BigInt = apply(i)$/;"	f
int2double	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def int2double(x: Int): Double = x.toDouble$/;"	f
int2float	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def int2float(x: Int): Float = x.toFloat$/;"	f
int2jvalue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  implicit def int2jvalue(x: Int) = JInt(x)$/;"	f
int2long	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def int2long(x: Int): Long = x.toLong$/;"	f
intCache	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static Integer[] intCache = new Integer[intUpBound - intLowBound + 1];$/;"	f	class:BoxesRunTime	file:
intExp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val intExp = anInt ~ exp ^^ {case i ~ e => ((i.toString+"e"+e).toDouble)}$/;"	V
intFrac	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val intFrac: Parser[Double] = anInt ~ frac ^^ {case i ~ f => ((i.toString+"."+f).toDouble)}$/;"	V
intFracExp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val intFracExp: Parser[Double] = anInt ~ frac ~ exp ^^ {case i ~ f ~ exp => ((i.toString+"."+f+"e"+exp).toDouble)}$/;"	V
intInfo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  private def intInfo(field: SettableValueHolder {type ValueType = Int}) = SHtml.text(field.is.toString, s => Helpers.asInt(s).foreach(field.set _))$/;"	f
intIterator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^    val intIterator = underlying.values;$/;"	V
intList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Lexer.scala	/^  def intList = nonzero ~ rep(digit) ^^ {case x ~ y => (x :: y) mkString ""}$/;"	f
intLowBound	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static int intLowBound = -128;$/;"	f	class:BoxesRunTime	file:
intPart	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Lexer.scala	/^  def intPart = zero | intList$/;"	f
intToTimeSpan	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  implicit def intToTimeSpan(in: Int): TimeSpan = TimeSpan(in)$/;"	f
intToTimeSpanBuilder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  implicit def intToTimeSpanBuilder(in: Int): TimeSpanBuilder = TimeSpanBuilder(in)$/;"	f
intUpBound	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static int intUpBound = 1024;$/;"	f	class:BoxesRunTime	file:
intValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  def intValue    = this.bigDecimal.intValue$/;"	f
intValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def intValue    = this.bigInteger.intValue$/;"	f
intWrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def intWrapper(x: Int)       = new runtime.RichInt(x)$/;"	f
integerColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def integerColumnType = "INT"$/;"	f
integerColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def integerColumnType = "INTEGER"$/;"	f
integerColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def integerColumnType = "NUMBER"$/;"	f
integerColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def integerColumnType: String$/;"	f
integerIndexColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def integerIndexColumnType = "FIXED(10) DEFAULT SERIAL"$/;"	f
integerIndexColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def integerIndexColumnType = "INT IDENTITY NOT NULL"$/;"	f
integerIndexColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def integerIndexColumnType = "INTEGER NOT NULL AUTO_INCREMENT UNIQUE"$/;"	f
integerIndexColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def integerIndexColumnType = "INTEGER NOT NULL AUTO_INCREMENT"$/;"	f
integerIndexColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def integerIndexColumnType = "INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY"$/;"	f
integerIndexColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def integerIndexColumnType = "NUMBER NOT NULL"$/;"	f
integerIndexColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def integerIndexColumnType = "SERIAL"$/;"	f
integerIndexColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def integerIndexColumnType: String$/;"	f
integers	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^    val integers = Array($/;"	V
internal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^    def internal(in: List[T]): List[List[T]] = in match {$/;"	f
internalSel	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOverview.scala	/^     val internalSel: JsCmd =$/;"	V
internalSelection	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOverview.scala	/^     sz.append ("  var internalSelection = false;\\n")$/;"	v
internalTableName_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def internalTableName_$_$ =$/;"	f
internal_dbTableName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private[mapper] lazy val internal_dbTableName = fixTableName(internalTableName_$_$)$/;"	V
internedSymbols	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Symbol.scala	/^private[scala] object internedSymbols extends jcl.WeakHashMap[String, ref.WeakReference[Symbol]]$/;"	o
internetDateFormatter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def internetDateFormatter = {$/;"	f
intersect	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def intersect[B >: A](that: List[B]): List[B] = filter(x => that contains x)$/;"	f
intersect	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set.scala	/^  def intersect(that: collection.Set[A]): Set[A] = filter(that.contains)$/;"	f
intersect	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Set.scala	/^  def intersect(that: Set[A]) { retain(that.contains) }$/;"	f
intersect	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SetProxy.scala	/^  override def intersect(that: Set[A]): Unit = self.intersect(that)$/;"	f
intersect	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedSet.scala	/^  override def intersect(that: Set[A]) = synchronized {$/;"	f
intersection	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                          val intersection = if (Props.devMode) {$/;"	V
intersection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def intersection[R](that : IntMap[R]) : IntMap[T] = this.intersectionWith(that, (key : Int, value : T, value2 : R) => value);$/;"	f
intersection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def intersection[R](that : LongMap[R]) : LongMap[T] = this.intersectionWith(that, (key : Long, value : T, value2 : R) => value);$/;"	f
intersectionType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^  def intersectionType[T](parents: Manifest[_]*): Manifest[T] =$/;"	f
intersectionWith	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def intersectionWith[S, R](that : IntMap[S], f : (Int, T, S) => R) : IntMap[R] = (this, that) match {$/;"	f
intersectionWith	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def intersectionWith[S, R](that : LongMap[S], f : (Long, T, S) => R) : LongMap[R] = (this, that) match {$/;"	f
interval	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/CachedFileStorage.scala	/^  protected val interval = 1000$/;"	V
into	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def into[U](fq: T => Parser[U]): Parser[U] = flatMap(fq)$/;"	f
into	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def into[U](fq: T => Parser[U]): Parser[U] = new Parser[U] {$/;"	f
introspect	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  def introspect(rec: BaseRecord, methods: Array[Method])(f: (Method, OwnedField[BaseRecord]) => Any) = {$/;"	f
ints	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/Examples.scala	/^    val ints = json.fold(JNothing: JValue) { (a, v) => v match {$/;"	V
ints	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val ints = Ints(List(List(1, 2), List(3), List(4, 5)))$/;"	V
invIndexMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    var invIndexMap = new TreeMap[Int, BitSet]$/;"	v
invalidMsg	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  private var invalidMsg = ""$/;"	v
invalidMsg	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^  private var invalidMsg : String = ""$/;"	v
invalidPw	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  private var invalidPw = false$/;"	v
invariant	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val invariant = (<link id="css1" rel="stylesheet" type="text\/css" href="style1.css"\/><link id="css2" rel="stylesheet" type="text\/css" href="style2.css"\/>)$/;"	V
invariant	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val invariant = (<link rel="stylesheet" type="text\/css" href="style1.css"\/><link rel="stylesheet" type="text\/css" href="style2.css"\/>)$/;"	V
invariant	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val invariant = (<script type="text\/javascript" id="sc1" src="foo1.js"><\/script><script type="text\/javascript" id="sc2" src="foo2.js"><\/script>)$/;"	V
invariant	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val invariant = (<style id="st1">.foo{{...}}<\/style><style id="st2">.bar{{...}}<\/style>)$/;"	V
invariant	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ToHeadSpecs.scala	/^       val invariant = (<style>.foo{{...}}<\/style><style>.bar{{...}}<\/style>)$/;"	V
invoice	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val invoice = r.param("invoice")$/;"	V
invoke	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^    def invoke (proxy : Object, method : Method, args : Array[Object]) : Object = method.getName match {$/;"	f
invoke	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^    override def invoke (proxy : Object, method : Method, args : Array[Object]) : Object = {$/;"	f
invokeControllerMethod	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def invokeControllerMethod(clz: Class[_], meth: String) = {$/;"	f
invokeMethod	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def invokeMethod[C](clz: Class[C], inst: AnyRef, meth: String): Box[Any] = invokeMethod(clz, inst, meth, Nil.toArray)$/;"	f
invokeMethod	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def invokeMethod[C](clz: Class[C], inst: AnyRef, meth: String, params: Array[AnyRef]): Box[Any] = {$/;"	f
invokeMethod	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def invokeMethod[C](clz: Class[C], inst: AnyRef, meth: String, params: Array[AnyRef], ptypes: Array[Class[_]]): Box[Any] = {$/;"	f
invokedAs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def invokedAs: String = (currentSnippet or attr("type")) openOr ""$/;"	f
invoker	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^    val invoker = ClassHelpers.createInvoker("boot", clazz.newInstance.asInstanceOf[AnyRef])$/;"	V
inx	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^      val inx = if (fromIndex < 0) 0 else fromIndex$/;"	V
inx	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    val inx = if (fromIndex > rightIndex) rightIndex else fromIndex$/;"	V
ipnPath	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def ipnPath = "ipn"$/;"	f
ipnResponse	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^    val ipnResponse: PaypalIPNPostbackReponse = PaypalIPNPostback(mode, connection, paramsAsPayloadList(request))$/;"	V
ips	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/QueryExamples.scala	/^    val ips = <ips>{ for { JString(ip) <- json \\\\ "ip" } yield <ip>{ ip }<\/ip> }<\/ips>$/;"	V
ips	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/QueryExamples.scala	/^    val ips = for { $/;"	V
ips	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/QueryExamples.scala	/^    val ips = for { JString(ip) <- json \\\\ "ip" } yield ip$/;"	V
is	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  def is: T = doSync {$/;"	f
is	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^      val is = new _root_.java.io.ByteArrayInputStream(defPropBytes)$/;"	V
is	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ThreadGlobal.scala	/^  def is: Box[T] = Box !! threadLocal.get$/;"	f
is	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ValueHolder.scala	/^    def is: ValueType$/;"	f
is	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^    "return a Failure if the class is null" in {$/;"	c
is	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^    "return an Empty can if no class is found given a name and package" in {$/;"	c
is	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^    "return false if the class is null" in {$/;"	c
is	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^    "throw an exception if the class is null" in {$/;"	c
is	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ControlHelpersSpec.scala	/^    "return Empty if the tested block throws an exception whose class is in the ignore list - with 2 elements" in {$/;"	c
is	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ControlHelpersSpec.scala	/^    "return Empty if the tested block throws an exception whose class is in the ignore list - with one element" in {$/;"	c
is	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Factory.scala	/^      def is = get$/;"	f
is	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    def is = _currentValue.is$/;"	f
is	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^  val is = """^[a-z][a-z0-9_]*$""".r$/;"	V
is	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/rssfeed/RSSfeed.scala	/^    val is = con.getInputStream$/;"	V
is	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def is: FieldType = {$/;"	f
isA	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def isA[A, B](in: A, clz: Class[B]): Box[B] =$/;"	f
isA	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def isA[B](cls: Class[B]): Box[B] = Empty$/;"	f
isA	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def isA[B](cls: Class[B]): Box[B] = this$/;"	f
isA	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def isA[B](cls: Class[B]): Box[B] = value match {$/;"	f
isAllowed	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResourceServer.scala	/^  private def isAllowed(path: List[String]) = allowedPaths.isDefinedAt(path) && allowedPaths(path)$/;"	f
isArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  def isArray(x: AnyRef): Boolean = (x != null && x.getClass.isArray) || (x != null && x.isInstanceOf[BoxedArray])$/;"	f
isAsLocale	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^  def isAsLocale: Locale = Locale.getAvailableLocales.filter(_.toString == is).toList match {$/;"	f
isAsLocale	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/LocaleField.scala	/^  def isAsLocale: Locale = Locale.getAvailableLocales.filter(_.toString == value).toList match {$/;"	f
isAsTimeZone	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^  def isAsTimeZone: TimeZone = TimeZone.getTimeZone(is) match {$/;"	f
isAsTimeZone	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TimeZoneField.scala	/^  def isAsTimeZone: TimeZone = TimeZone.getTimeZone(value) match {$/;"	f
isBind	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    val isBind = (node: Elem) => {$/;"	V
isBlack	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def isBlack = false$/;"	f
isBlack	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def isBlack = true$/;"	f
isBlack	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def isBlack: Boolean$/;"	f
isCamelCased	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      val isCamelCased = forAllProp(underscoredStrings) ((name: String) => {$/;"	V
isChildOf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/Role.scala	/^  def isChildOf(roleName: String): Boolean = (this.name == roleName) match {$/;"	f
isCometOrAjax	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^    def isCometOrAjax(req: Req): Boolean = {$/;"	f
isCommitted	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def isCommitted = false$/;"	f
isConstructorName	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^  private def isConstructorName(methName: String) = {$/;"	f
isControl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichChar.scala	/^  def isControl: Boolean = Character.isISOControl(x)$/;"	f
isDebugEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def isDebugEnabled: Boolean = false$/;"	f
isDebugEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def isDebugEnabled = logger.isDebugEnabled$/;"	f
isDebugEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def isDebugEnabled = rootLogger.isDebugEnabled$/;"	f
isDebugEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  override def isDebugEnabled = logger.isDebugEnabled$/;"	f
isDebugEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    override def isDebugEnabled: Boolean = logger.isDebugEnabled$/;"	f
isDefined	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def isDefined: Boolean = !isEmpty$/;"	f
isDefined	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^  def isDefined: Boolean = !isEmpty$/;"	f
isDefined	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/SyncVar.scala	/^  private var isDefined: Boolean = false$/;"	v
isDefinedAt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/NamedPartialFunction.scala	/^  def isDefinedAt[A, B](value: A, lst: Seq[PartialFunction[A, B]]): Boolean =$/;"	f
isDefinedAt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/NamedPartialFunction.scala	/^  override def isDefinedAt(x: A): Boolean = f.isDefinedAt(x)$/;"	f
isDefinedAt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^      def isDefinedAt(in: Any): Boolean =$/;"	f
isDefinedAt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^      def isDefinedAt(r: Req): Boolean = {$/;"	f
isDefinedAt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^          def isDefinedAt(in: Req) = in.path.partPath == loc.link.uriList$/;"	f
isDefinedAt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^        def isDefinedAt(in: (String, Box[T])): Boolean = func.isDefinedAt(in._1)$/;"	f
isDefinedAt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^        def isDefinedAt(s: String) = s == in.name$/;"	f
isDefinedAt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^      def isDefinedAt(in: RewriteRequest) = rw.isDefinedAt(in)$/;"	f
isDefinedAt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    def isDefinedAt(n: String) = dispatch.isDefinedAt(n)$/;"	f
isDefinedAt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    def isDefinedAt(req: Req): Boolean = {$/;"	f
isDefinedAt	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def isDefinedAt(r: Req) = NamedPF.isDefinedAt(r, dispatch)$/;"	f
isDefinedAt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^    def isDefinedAt (in : Int) = false$/;"	f
isDefinedAt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^    def isDefinedAt(in: T): Boolean = f.isDefinedAt(in)$/;"	f
isDefinedAt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^      def isDefinedAt(r: Req): Boolean = func.isDefinedAt(r)$/;"	f
isDefinedAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/PartialFunction.scala	/^    def isDefinedAt(x: A): Boolean = PartialFunction.this.isDefinedAt(x)$/;"	f
isDefinedAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/PartialFunction.scala	/^    def isDefinedAt(x: A1): Boolean = $/;"	f
isDefinedAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/PartialFunction.scala	/^  def isDefinedAt(x: A): Boolean$/;"	f
isDefinedAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    override def isDefinedAt(idx: Int): Boolean = idx == 0$/;"	f
isDefinedAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  def isDefinedAt(x: Int): Boolean = (x >= 0) && (x < length)$/;"	f
isDefinedAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def isDefinedAt(x: Int): Boolean = self isDefinedAt x$/;"	f
isDefinedAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^  def isDefinedAt(key: A) = contains(key)$/;"	f
isDefinedAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/MapProxy.scala	/^  override def isDefinedAt(key: A) = self.isDefinedAt(key)$/;"	f
isDefinedAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  override def isDefinedAt(index: Int) = $/;"	f
isDefinedAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def isDefinedAt(Key: A): Boolean$/;"	f
isDefinedAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def isDefinedAt(key: A) = false$/;"	f
isDefinedAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def isDefinedAt(sKey: A): Boolean =$/;"	f
isDefinedAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableMapAdaptor.scala	/^  override def isDefinedAt(key: A) = imap.isDefinedAt(key)$/;"	f
isDefinedAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^  override def isDefinedAt(key: A) = jmap.containsKey(key)$/;"	f
isDefinedAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  override def isDefinedAt(key: A) = synchronized {$/;"	f
isDefinedAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^    def isDefinedAt(msg: Message) = receiver.isDefinedAt(msg)$/;"	f
isDefinedAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^    def isDefinedAt(msg: Message): Boolean$/;"	f
isDefinedAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  override def isDefinedAt(x: Int): Boolean = 0 <= x && x < length$/;"	f
isDelimiter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^      def isDelimiter(c: Char) = c == ' ' || c == '\\n' || c == ',' || c == '\\r' || c == '\\t' || c == '}' || c == ']'$/;"	f
isDelimiter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/SimpleTokenizer.scala	/^  private def isDelimiter(ch: Int) = ch >= 0 && ch < isdelim.length && isdelim(ch)$/;"	f
isDigit	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^      val isDigit: String => Boolean =$/;"	V
isDigit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichChar.scala	/^  def isDigit: Boolean = Character.isDigit(x)$/;"	f
isDog	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  object isDog extends MappedBoolean(this) {$/;"	o
isEmpty	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def isEmpty: Boolean = false$/;"	f
isEmpty	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def isEmpty: Boolean = true$/;"	f
isEmpty	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def isEmpty: Boolean$/;"	f
isEmpty	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/ScriptRenderer.scala	/^        var isEmpty = function(){for (var i in lift_toWatch) {return false} return true}();$/;"	v
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def isEmpty = !elements.hasNext$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def isEmpty = self.isEmpty$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    override def isEmpty = List.this.isEmpty$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def isEmpty = true$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def isEmpty: Boolean = false$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def isEmpty: Boolean$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^  def isEmpty = false$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^  def isEmpty = true$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^  def isEmpty: Boolean$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def isEmpty = RandomAccessSeq.this.isEmpty$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  override def isEmpty: Boolean = { length == 0 }$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def isEmpty = self.isEmpty$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^      override def isEmpty = false$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^    override def isEmpty = true$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override def isEmpty: Boolean$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^  override def isEmpty: Boolean = size == 0$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/MapProxy.scala	/^  override def isEmpty = self.isEmpty$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Set.scala	/^  override def isEmpty: Boolean = size == 0$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SetProxy.scala	/^  override def isEmpty: Boolean = self.isEmpty$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  override def isEmpty = this == IntMap.Nil;$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^    override def isEmpty: Boolean = false$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^    override def isEmpty: Boolean = false$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^  override def isEmpty: Boolean = true;$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  override def isEmpty = this == LongMap.Nil;$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^  override def isEmpty: Boolean = in.isEmpty && out.isEmpty$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def isEmpty = false$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def isEmpty = true$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def isEmpty: Boolean$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^    override def isEmpty: Boolean = false$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^  override def isEmpty: Boolean = true$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  override def isEmpty = this match {$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  override def isEmpty = underlying.isEmpty;$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^    override def isEmpty = false$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^  override def isEmpty: Boolean = true$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  override def isEmpty = super[MutableSeq].isEmpty;$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/IterableWrapper.scala	/^  override def isEmpty = underlying.isEmpty;$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^  override def isEmpty = super[MutableIterable].isEmpty;$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^  override def isEmpty = underlying.isEmpty$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^  override def isEmpty = super[MutableIterable].isEmpty;$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^  override def isEmpty = super[Collection].isEmpty$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SetWrapper.scala	/^  override def isEmpty = super[CollectionWrapper].isEmpty;$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^  override def isEmpty = index == 0;$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableMapAdaptor.scala	/^  override def isEmpty: Boolean = imap.isEmpty$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableSetAdaptor.scala	/^  override def isEmpty: Boolean = set.isEmpty$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^  override def isEmpty: Boolean = jmap.isEmpty()$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaSetAdaptor.scala	/^  override def isEmpty: Boolean = jset.isEmpty()$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^  override def isEmpty = start.isEmpty$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^  override def isEmpty: Boolean = size0 < 2$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueueProxy.scala	/^  override def isEmpty: Boolean = self.isEmpty$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Queue.scala	/^  override def isEmpty: Boolean = (first0 eq null)$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/QueueProxy.scala	/^  override def isEmpty: Boolean = self.isEmpty$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Stack.scala	/^  override def isEmpty: Boolean = stack.isEmpty$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/StackProxy.scala	/^  override def isEmpty: Boolean = self.isEmpty$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  override def isEmpty: Boolean = synchronized {$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedPriorityQueue.scala	/^  override def isEmpty: Boolean = synchronized { super.isEmpty }$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedQueue.scala	/^  override def isEmpty: Boolean = synchronized { super.isEmpty }$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedSet.scala	/^  override def isEmpty: Boolean = synchronized {$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedStack.scala	/^  override def isEmpty: Boolean = synchronized { super.isEmpty }$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^  final def isEmpty = {$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def isEmpty = !successful$/;"	f
isEmpty	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def isEmpty = !successful$/;"	f
isEnabledFor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def isEnabledFor(level: LiftLogLevels.Value): Boolean = false$/;"	f
isEnabledFor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def isEnabledFor(level: Priority) = logger.isEnabledFor(level)$/;"	f
isEnabledFor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def isEnabledFor(level: LiftLogLevels.Value) = rootLogger.isEnabledFor(level)$/;"	f
isEnabledFor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def isEnabledFor(level: LiftLogLevels.Value): Boolean = logger.isEnabledFor(liftToLog4J(level))$/;"	f
isEnabledFor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  override def isEnabledFor(level: LiftLogLevels.Value): Boolean = level match {$/;"	f
isEnabledFor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    override def isEnabledFor(level: LiftLogLevels.Value): Boolean = logger.isEnabledFor(level)$/;"	f
isEnqueued	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/Reference.scala	/^  def isEnqueued(): Boolean$/;"	f
isEnqueued	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/ReferenceWrapper.scala	/^  def isEnqueued = underlying.isEnqueued$/;"	f
isEof	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def isEof(c: Char): Boolean = c == '\\032'$/;"	f
isEq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^  def isEq(a: Array[Byte], b: Array[Byte]) = {$/;"	f
isErrorEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def isErrorEnabled: Boolean = false$/;"	f
isErrorEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def isErrorEnabled = logger.isEnabledFor(Level.ERROR)$/;"	f
isErrorEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def isErrorEnabled = rootLogger.isEnabledFor(LiftLogLevels.Error)$/;"	f
isErrorEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  override def isErrorEnabled = logger.isErrorEnabled$/;"	f
isErrorEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    override def isErrorEnabled: Boolean = logger.isErrorEnabled$/;"	f
isExperiment	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Discovery.scala	/^	object isExperiment extends MappedBoolean(this)$/;"	o
isField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  private def isField(m: Method) = classOf[Field[_, _]].isAssignableFrom(m.getReturnType)$/;"	f
isFinal	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/DetWordAutom.scala	/^  def isFinal(q: Int) = finals(q) != 0$/;"	f
isFinal	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^  final def isFinal(state: Int) = finals(state) > 0$/;"	f
isFirefox	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  lazy val isFirefox = isFirefox2 || isFirefox3$/;"	V
isFirefox2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  lazy val isFirefox2: Boolean = (userAgent.map(_.indexOf("Firefox\/2") >= 0)) openOr false$/;"	V
isFirefox3	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  lazy val isFirefox3: Boolean = (userAgent.map(_.indexOf("Firefox\/3") >= 0)) openOr false$/;"	V
isFirst	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^    var isFirst = true$/;"	v
isForm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val isForm = !attrs.get("form").toList.isEmpty$/;"	V
isHighSurrogate	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  private def isHighSurrogate(ch: Char): Boolean =$/;"	f
isIE	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  lazy val isIE = isIE6 || isIE7 || isIE8$/;"	V
isIE6	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  val isIE6 = LiftRules.calcIE6ForResponse()$/;"	V
isIE6	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  lazy val isIE6: Boolean = (userAgent.map(_.indexOf("MSIE 6") >= 0)) openOr false$/;"	V
isIE7	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  lazy val isIE7: Boolean = (userAgent.map(_.indexOf("MSIE 7") >= 0)) openOr false$/;"	V
isIE8	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  lazy val isIE8: Boolean = (userAgent.map(_.indexOf("MSIE 8") >= 0)) openOr false$/;"	V
isIPhone	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  lazy val isIPhone = isSafari && (userAgent.map(s => s.indexOf("(iPhone;") >= 0) openOr false)$/;"	V
isIdentChar	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Scanner.scala	/^  final def isIdentChar = ( ('a' <= c && c <= 'z') $/;"	f
isIn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  private val isIn: ThreadGlobal[String] = new ThreadGlobal$/;"	V
isInExistingTransaction	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^  protected def isInExistingTransaction(tm: TransactionManager): Boolean = tm.getStatus != Status.STATUS_NO_TRANSACTION$/;"	f
isInfinity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichDouble.scala	/^  def isInfinity: Boolean = java.lang.Double.isInfinite(x)$/;"	f
isInfinity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichFloat.scala	/^  def isInfinity: Boolean = java.lang.Float.isInfinite(x)$/;"	f
isInfoEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def isInfoEnabled: Boolean = false$/;"	f
isInfoEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def isInfoEnabled = logger.isInfoEnabled$/;"	f
isInfoEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def isInfoEnabled = rootLogger.isInfoEnabled$/;"	f
isInfoEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  override def isInfoEnabled = logger.isInfoEnabled$/;"	f
isInfoEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    override def isInfoEnabled: Boolean = logger.isInfoEnabled$/;"	f
isJoinForChild	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    protected def isJoinForChild(e: T2)(join: O) = otherField.actualField(join).is == e.primaryKeyField.is$/;"	f
isLab	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/AwardSource.scala	/^	object isLab extends MappedBoolean(this) $/;"	o
isLab	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/DiscoverySource.scala	/^	object isLab extends MappedBoolean(this) $/;"	o
isLast	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  var isLast: Boolean = false$/;"	v
isLastScreen	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    def isLastScreen = nextScreen.isEmpty$/;"	f
isLazy	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val isLazy = LiftRules.allowParallelSnippets() &&$/;"	V
isLeft	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^  def isLeft = false  \/\/ Default here, overriden in Left$/;"	f
isLeft	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^final case class Left[+A, +B](a: A) extends Either[A, B] { override def isLeft = true }$/;"	f
isLetter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichChar.scala	/^  def isLetter: Boolean = Character.isLetter(x)$/;"	f
isLetterOrDigit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichChar.scala	/^  def isLetterOrDigit: Boolean = Character.isLetterOrDigit(x)$/;"	f
isLifecycle	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    def isLifecycle(m: Method) = classOf[LifecycleCallbacks].isAssignableFrom(m.getReturnType)$/;"	f
isLifecycle	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  private def isLifecycle(m: Method) = classOf[LifecycleCallbacks].isAssignableFrom(m.getReturnType)$/;"	f
isLiftRequest_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPProvider.scala	/^  protected def isLiftRequest_?(session: Req): Boolean = {$/;"	f
isLineBreak	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  private def isLineBreak(c: Char) = c == LF || c == FF$/;"	f
isLowSurrogate	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  private def isLowSurrogate(ch: Char): Boolean =$/;"	f
isLowerCase	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichChar.scala	/^  def isLowerCase: Boolean = Character.isLowerCase(x)$/;"	f
isMagicObject	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    def isMagicObject(m: Method) = m.getReturnType.getName.endsWith("$"+m.getName+"$") && m.getParameterTypes.length == 0$/;"	f
isMappedField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    def isMappedField(m: Method) = classOf[MappedField[Nothing, A]].isAssignableFrom(m.getReturnType)$/;"	f
isMixed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  def isMixed(cm: ContentModel) = cm.isInstanceOf[MIXED]$/;"	f
isName	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Parsing.scala	/^  def isName(s: String): Boolean =$/;"	f
isName	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/TokenTests.scala	/^  def isName(s: String): Boolean = {$/;"	f
isNameChar	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Parsing.scala	/^  def isNameChar(ch: Char) = isNameStart(ch) || (ch match {$/;"	f
isNameChar	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/TokenTests.scala	/^  def isNameChar(ch: Char) = isNameStart(ch) || (ch match {$/;"	f
isNameStart	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Parsing.scala	/^  def isNameStart(ch: Char) = $/;"	f
isNameStart	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/TokenTests.scala	/^  def isNameStart(ch: Char) = $/;"	f
isNegInfinity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichDouble.scala	/^  def isNegInfinity: Boolean = isInfinity && x < 0.0$/;"	f
isNegInfinity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichFloat.scala	/^  def isNegInfinity: Boolean = isInfinity && x < 0.0f$/;"	f
isNew	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def isNew = false$/;"	f
isNotDoomed	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  def isNotDoomed = !TransactionContext.isRollbackOnly$/;"	f
isNullable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^    final lazy val isNullable = true$/;"	V
isNullable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^    final val isNullable = r1.isNullable$/;"	V
isNullable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^    final val isNullable = {$/;"	V
isNullable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^    val isNullable: Boolean$/;"	V
isNullable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/PointedHedgeExp.scala	/^    final val isNullable = false$/;"	V
isNullable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/PointedHedgeExp.scala	/^    final val isNullable = r1.isNullable && r2.isNullable \/\/?$/;"	V
isNullable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/WordExp.scala	/^    final lazy val isNullable = false$/;"	V
isNum	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def isNum(c: Char): Boolean = Character.isDigit(c)$/;"	f
isOpera	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def isOpera = isOpera9$/;"	f
isOpera9	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  lazy val isOpera9: Boolean = (userAgent.map(s => s.indexOf("Opera\/9.") >= 0) openOr false)$/;"	V
isParameterEntity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    var isParameterEntity = false$/;"	v
isParentOf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/Role.scala	/^  def isParentOf(roleName: String): Boolean = !this.getRoleByName(roleName).isEmpty$/;"	f
isPosInfinity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichDouble.scala	/^  def isPosInfinity: Boolean = isInfinity && x > 0.0$/;"	f
isPosInfinity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichFloat.scala	/^  def isPosInfinity: Boolean = isInfinity && x > 0.0f$/;"	f
isPrefixed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def isPrefixed: Boolean$/;"	f
isPrefixed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  def isPrefixed = false$/;"	f
isPrefixed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrefixedAttribute.scala	/^  final def isPrefixed = true$/;"	f
isPrefixed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/UnprefixedAttribute.scala	/^  final def isPrefixed = false$/;"	f
isProbablePrime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def isProbablePrime(certainty: Int) = this.bigInteger.isProbablePrime(certainty)$/;"	f
isPubIDChar	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Parsing.scala	/^  def isPubIDChar(c: Char) = c match {$/;"	f
isPubIDChar	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/TokenTests.scala	/^  def isPubIDChar(ch: Char): Boolean = {$/;"	f
isRepeatable	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^      def isRepeatable() = true$/;"	f
isRequestedSessionIdFromCookie	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def isRequestedSessionIdFromCookie = false$/;"	f
isRequestedSessionIdFromURL	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def isRequestedSessionIdFromURL = false$/;"	f
isRequestedSessionIdFromUrl	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def isRequestedSessionIdFromUrl = false$/;"	f
isRequestedSessionIdValid	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def isRequestedSessionIdValid = false$/;"	f
isRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^  def isRight = false \/\/ Default here, overriden in Right.$/;"	f
isRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^final case class Right[+A, +B](b: B) extends Either[A, B] { override def isRight = true }$/;"	f
isRollbackOnly	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  def isRollbackOnly = TransactionContext.isRollbackOnly$/;"	f
isRollbackOnly	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  private def isRollbackOnly: Boolean = tm.getStatus == Status.STATUS_MARKED_ROLLBACK$/;"	f
isRollbackOnly	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  private[transaction] def isRollbackOnly = current.isRollbackOnly$/;"	f
isRollbackOnly	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^  protected def isRollbackOnly(tm: TransactionManager): Boolean = tm.getStatus == Status.STATUS_MARKED_ROLLBACK$/;"	f
isRoot_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^  def isRoot_? = false$/;"	f
isSafari	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  lazy val isSafari = isSafari2 || isSafari3$/;"	V
isSafari2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  lazy val isSafari2: Boolean = (userAgent.map(s => s.indexOf("Safari\/") >= 0 &&$/;"	V
isSafari3	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  lazy val isSafari3: Boolean = (userAgent.map(s => s.indexOf("Safari\/") >= 0 &&$/;"	V
isSecure	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def isSecure = false$/;"	f
isSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/SyncVar.scala	/^  def isSet: Boolean = synchronized {$/;"	f
isSmaller	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^  def isSmaller(x: A, y: A): Boolean$/;"	f
isSmaller	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^  def isSmaller(x: A, y: A) = x < y$/;"	f
isSmaller	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^  def isSmaller(x: A, y: A) = x < y$/;"	f
isSpace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Parsing.scala	/^  final def isSpace(ch: Char): Boolean = ch match {$/;"	f
isSpace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Parsing.scala	/^  final def isSpace(cs: Seq[Char]): Boolean = {$/;"	f
isSpace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/TokenTests.scala	/^  final def isSpace( ch:Char ): Boolean = ch match {$/;"	f
isSpace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/TokenTests.scala	/^  final def isSpace(cs: Seq[Char]): Boolean = {$/;"	f
isTest	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^  def isTest = !isAssert$/;"	f
isTickUrlChar	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def isTickUrlChar(c: Char): Boolean = c.isLetter || c.isDigit ||$/;"	f
isToday	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarMonthView.scala	/^            val isToday = today.get(DAY_OF_MONTH) == cal.get(DAY_OF_MONTH) && (month == today.get(MONTH))$/;"	V
isTraceEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def isTraceEnabled: Boolean = false$/;"	f
isTraceEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def isTraceEnabled = logger.isTraceEnabled$/;"	f
isTraceEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def isTraceEnabled = rootLogger.isTraceEnabled$/;"	f
isTraceEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  override def isTraceEnabled = logger.isTraceEnabled$/;"	f
isTraceEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    override def isTraceEnabled: Boolean = logger.isTraceEnabled$/;"	f
isUpperCase	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichChar.scala	/^  def isUpperCase: Boolean = Character.isUpperCase(x)$/;"	f
isUserInRole	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def isUserInRole(user: String): Boolean = false$/;"	f
isValid	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^  def isValid(signature: String, baseString: String): Boolean$/;"	f
isValid	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^  override def isValid(signature: String, baseString: String) = (getSignature(baseString) == signature)$/;"	f
isValid	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^  override def isValid(signature: String, baseString: String) = {$/;"	f
isValid	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/Reference.scala	/^  @deprecated def isValid: Boolean$/;"	f
isValid	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/ReferenceWrapper.scala	/^  @deprecated def isValid = underlying.get != null$/;"	f
isValidIANAEncoding	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/TokenTests.scala	/^  def isValidIANAEncoding(ianaEncoding: Seq[Char]): Boolean = {$/;"	f
isValidTag	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def isValidTag(in : String) = in == "b" || in == "em" || in == "code" || in == "div" || in == "span" || in == "i" || in == "u" || in == "strong"$/;"	f
isValidWizardSession	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  private[wizard] def isValidWizardSession(id: String): Boolean =$/;"	f
isValidating	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^  val isValidating: Boolean = false$/;"	V
isValidating	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^  final override val isValidating = true$/;"	V
isValueClass	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  def isValueClass(clazz: Class[_]) = clazz.isPrimitive()$/;"	f
isValueTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  def isValueTag(tag: String) = tag.charAt(0) == '.'$/;"	f
isVerified	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def isVerified = paymentSuccessful$/;"	f
isVerified	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def isVerified: Boolean = rawHead match {$/;"	f
isVerified	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def isVerified: Boolean$/;"	f
isWarnEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def isWarnEnabled: Boolean = false$/;"	f
isWarnEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def isWarnEnabled = isEnabledFor(Level.WARN)$/;"	f
isWarnEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def isWarnEnabled = rootLogger.isWarnEnabled$/;"	f
isWarnEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  override def isWarnEnabled = logger.isWarnEnabled$/;"	f
isWarnEnabled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    override def isWarnEnabled: Boolean = logger.isWarnEnabled$/;"	f
isWhitespace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichChar.scala	/^  def isWhitespace: Boolean = Character.isWhitespace(x)$/;"	f
isdelim	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/SimpleTokenizer.scala	/^  private val isdelim = delimArray$/;"	V
isfalse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val isfalse: Parser[Boolean] = acceptSeq("false") ^^ {case _ => false}$/;"	V
isnull	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val isnull = acceptSeq("null") ^^ {case _ => Empty}$/;"	V
istrue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val istrue: Parser[Boolean] = acceptSeq("true") ^^ {case _ => true}$/;"	V
it	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^    val it = children.elements$/;"	V
it	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/test/scala/net/lift/textile/TextileSpec.scala	/^      val it = toHtml($/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    private var it = its.next$/;"	v
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^private[collection] class AssocMapIterator[Key, Value](var it : AssocMap[Key, Value]) extends Iterator[(Key, Value)]{$/;"	v
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Message.scala	/^    var it = elements$/;"	v
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ObservableBuffer.scala	/^    val it = iter.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^    val it = new OpenHashMap[Key, Value]$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^    val it = Iterator.single(c)$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^    val it = chars.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^    val it = new Iterator[Char] {$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^    val it = reset$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^    val it = s.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^        val it = x.rs.elements.toList.reverse.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^      val it = r.elements.toList.reverse.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^      val it = x.rs.elements                       \/\/ union$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^      val it = x.rs.elements                      \/\/ union$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^      val it = x.rs.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^      val it = x.rs.elements.toList.reverse.elements       \/\/ union$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^      val it = x.rs.elements;                       \/\/ union$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^    val it = Q.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^      val it = labels.elements; while(it.hasNext) {$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^      val it = trans.keys; while(it.hasNext) {$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    val it = Q.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^        val it = initials.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^      val it = fol.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^    var it = subexpr.elements$/;"	v
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^      val it = rs.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^    if ({ val it = rs.elements; !it.hasNext || {it.next; !it.hasNext }})$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^    if ({ val it = rs.elements; !it.hasNext }) $/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Elem.scala	/^     val it = child.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Group.scala	/^    val it = elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^        val it = this.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^      val it = this.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^    val it = elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Parsing.scala	/^    val it = cs.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^             val it = sq.elements;$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^    val it = n.child.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^      val it = children.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^    val it = nodes.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^    val it = zs.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Xhtml.scala	/^      val it = children.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^      val it = xs.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^    val it = rs.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^      val it = getIterator(nodes, false)$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^      var it = getIterator(nodes, true); while(it.hasNext) {$/;"	v
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^    val it = md.elements; while(it.hasNext) {$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Scanner.scala	/^  private var it: Iterator[Char] = null$/;"	v
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ValidationException.scala	/^    val it = allKeys.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/NodeFactory.scala	/^        val it     = list.elements;$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    val it = s.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    val it = that.elements;$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/TokenTests.scala	/^    val it = cs.elements;$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/TokenTests.scala	/^    val it = ianaEncoding.elements;$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/SetStorage.scala	/^    val it = super.initialNodes$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^    val it = nb.elements; while (it.hasNext) {$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^    val it = ns.elements$/;"	V
it	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/RuleTransformer.scala	/^    val it = rules.elements; while (it.hasNext) {$/;"	V
it1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^      val it1 = a1.elements$/;"	V
it1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^        val it1 = bs.elements$/;"	V
it1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/NodeFactory.scala	/^      val it1 = ch1.elements;$/;"	V
it2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^      val it2 = a2.elements$/;"	V
it2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^        val it2 = that.elements$/;"	V
it2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/NodeFactory.scala	/^      val it2 = ch2.elements;$/;"	V
ita	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    val ita = this.elements$/;"	V
italic	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val italic : Parser[Textile] = formattedLineElem(accept("__")) ^^ flatten4(Special * "i")$/;"	V
itb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    val itb = that.elements$/;"	V
item	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LAFuture.scala	/^  @volatile private[this] var item: T = _$/;"	v
item	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  private class MailboxItem(val item: T) {$/;"	V
item	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^  def item(text: NodeSeq): NodeSeq =$/;"	f
item1	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarDayViewDemo.scala	/^    val item1 = CalendarItem("1234", c1, CalendarType.MEETING) optional ($/;"	V
item1	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarMonthViewDemo.scala	/^    val item1 = CalendarItem("1", c1, CalendarType.MEETING) optional ($/;"	V
item1	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarWeekViewDemo.scala	/^    val item1 = CalendarItem("1234", c1, CalendarType.MEETING) optional ($/;"	V
item2	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarDayViewDemo.scala	/^    val item2 = CalendarItem("2234", c2, CalendarType.MEETING) optional ($/;"	V
item2	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarMonthViewDemo.scala	/^    val item2 = CalendarItem("2", c2, CalendarType.MEETING) optional ($/;"	V
item2	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarWeekViewDemo.scala	/^    val item2 = CalendarItem("2234", c2, CalendarType.MEETING) optional ($/;"	V
item3	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarDayViewDemo.scala	/^    val item3 = CalendarItem("werw", c3, CalendarType.MEETING) optional ($/;"	V
item3	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarMonthViewDemo.scala	/^    val item3 = CalendarItem("4", c3, CalendarType.MEETING) optional ($/;"	V
item3	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarWeekViewDemo.scala	/^    val item3 = CalendarItem("werw", c3, CalendarType.MEETING) optional ($/;"	V
item4	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarDayViewDemo.scala	/^    val item4 = CalendarItem("3453", c4, CalendarType.MEETING) optional ($/;"	V
item4	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarWeekViewDemo.scala	/^    val item4 = CalendarItem("3453", c4, CalendarType.MEETING) optional ($/;"	V
item5	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarDayViewDemo.scala	/^    val item5 = CalendarItem("asdff", c5, CalendarType.MEETING) optional ($/;"	V
item5	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarWeekViewDemo.scala	/^    val item5 = CalendarItem("asdff", c5, CalendarType.MEETING) optional ($/;"	V
itemClick	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarDayViewDemo.scala	/^  def itemClick = Full(AnonFunc("elem, param", JsRaw("alert(CalendarDayView.getItemById(calendars.items, param).subject  + ' - ' + elem.nodeName)")))$/;"	f
itemClick	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarMonthViewDemo.scala	/^  def itemClick = Full(AnonFunc("elem, param", JsRaw("alert(param + ' - ' + elem.nodeName)")))$/;"	f
itemClick	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarWeekViewDemo.scala	/^  def itemClick = Full(AnonFunc("elem, param", JsRaw("alert(CalendarWeekView.getItemById(calendars.items, param).subject + ' - ' + elem.nodeName)")))$/;"	f
itemLink	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^      val itemLink = SiteMap.buildLink(name, text) match {$/;"	V
itemList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^              val itemList = opts.map(v => ChoiceItem(v,$/;"	V
itemName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val itemName = r.param("item_name")$/;"	V
itemNumber	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val itemNumber = r.param("item_number")$/;"	V
items	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarUtils.scala	/^      var items: List[(String, JsExp)] = ("id", Str(c.id)) ::$/;"	v
items	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  def items: ItemsList[T]$/;"	f
items	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  def items: Seq[T] = {$/;"	f
items	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  var items = new ItemsList[T] {$/;"	v
items	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  protected var items: List[Item] = Nil$/;"	v
iter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^    val iter = s.elements$/;"	V
iter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^    val iter = Map.this.elements$/;"	V
iter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^    val iter = keys.elements$/;"	V
iter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^    val iter = map.elements$/;"	V
iter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^      var iter = tree.mk_iter(scala.Nil)$/;"	v
iter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^    val iter = jmap.keySet().iterator()$/;"	V
iter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^    val iter = jmap.values().iterator()$/;"	V
iter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaSetAdaptor.scala	/^    val iter = jset.iterator()$/;"	V
iter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BufferedSource.scala	/^  override val iter = new Iterator[Char] {$/;"	V
iter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^      val iter = it$/;"	V
iter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  protected val iter: Iterator[Char]$/;"	V
iter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^      val iter = elements.counted$/;"	V
iter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ExternalSources.scala	/^      val iter = newIter$/;"	V
iterTable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^    val iterTable = table$/;"	V
iterable2ordered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def iterable2ordered[A <% Ordered[A]](xs: Iterable[A]): Ordered[Iterable[A]] =$/;"	f
iterate	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^    def iterate(md: MetaData, normalized_attribs: MetaData, map: HashSet[String]): MetaData = {$/;"	f
ivyXML	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/project/build/src/LiftJson.scala	/^  override def ivyXML =$/;"	f
ix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    var ix = 0$/;"	v
ix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^    var ix  = tmp.indexOf('%');$/;"	v
iz	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^      val iz = tmp.indexOf(';', ix);$/;"	V
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^      val j = peekList(sz).elements$/;"	V
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^      if (hasNext) { val j = i; i += step; j }$/;"	V
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^      if (hasNext) { val j = i; i = step(i); j }$/;"	V
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def next(): Int = { val j = i; i = step(i); j }$/;"	V
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^            val j = i.elements$/;"	V
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    val j = that.elements$/;"	V
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^            var j = i + 1$/;"	v
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^      var j = i - 1$/;"	v
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    var j = (n-1) >> 1$/;"	v
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^      val j = offset(i)$/;"	V
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^     def next(): Int = { val j = i; i = i + 1; findNext; j }$/;"	V
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    var j = 0$/;"	v
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^    var j = hash;$/;"	v
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^      var j = 2 * k$/;"	v
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^    var j = to$/;"	v
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^          var j = i$/;"	v
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/DetWordAutom.scala	/^    var j = 0; while( j < nstates ) {$/;"	v
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^    var j = 0; while (j < nstates) {$/;"	v
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^    var j = 0; while(r && (j < nstates)) {$/;"	v
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^    var j = 0$/;"	v
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^    var j = 0; while (j < pos) {$/;"	v
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/RegexParsers.scala	/^      var j = start$/;"	v
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^      val j = exc.length$/;"	V
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^    var j = 0;$/;"	v
j	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^    var j = 0; while (j < pos-1) {$/;"	v
jQueryVersion	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var jQueryVersion: JQueryVersion.Value = JQueryVersion.v13$/;"	v
javaScript	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^                               val javaScript: Box[JsCmd],$/;"	V
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def jdbcFriendly(field : String) : Object = is$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def jdbcFriendly(field : String): Object = real_convertToJDBCFriendly(data.get)$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  def jdbcFriendly(field : String) = data.map(v => new _root_.java.lang.Integer(if(v) 1 else 0)) openOr null$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  def jdbcFriendly(field : String) : Object = is match {$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  def jdbcFriendly(field : String) : Object = is match {$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  def jdbcFriendly(field : String) = i_is_!.bigDecimal$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	def jdbcFriendly(field : String) = new _root_.java.lang.Double(i_is_!)$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def jdbcFriendly(field : String) : Object$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def jdbcFriendly(field : String): AnyRef$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def jdbcFriendly: AnyRef$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def jdbcFriendly: Object = jdbcFriendly(_dbColumnNameLC)$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def jdbcFriendly(field : String) = new _root_.java.lang.Integer(is)$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def jdbcFriendly(field: String) = new _root_.java.lang.Integer(toInt)$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  override def jdbcFriendly = new _root_.java.lang.Integer(toInt)$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def jdbcFriendly(field : String) = new _root_.java.lang.Long(i_is_!)$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def jdbcFriendly(field : String) = real_convertToJDBCFriendly(i_is_!)$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def jdbcFriendly(field: String) = new _root_.java.lang.Long(toLong)$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def jdbcFriendly = if (defined_?) new _root_.java.lang.Long(i_is_!) else null$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def jdbcFriendly = new _root_.java.lang.Long(i_is_!)$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def jdbcFriendly = new _root_.java.lang.Long(toLong)$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def jdbcFriendly = real_convertToJDBCFriendly(i_is_!)$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def jdbcFriendly(field : String) = if (defined_?) new _root_.java.lang.Long(i_is_!) else null$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  def jdbcFriendly(columnName : String) = {$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def jdbcFriendly(field : String): String = data.get$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  def jdbcFriendly(field : String) : Object = is match {$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  override def jdbcFriendly = i_is_!$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  override def jdbcFriendly(field: String) = i_is_!$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def jdbcFriendly(field : String) : MyType$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BinaryField.scala	/^  def jdbcFriendly(field : String) : Array[Byte] = value$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BooleanField.scala	/^  def jdbcFriendly(field : String) : Boolean = value$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DateTimeField.scala	/^  def jdbcFriendly(field : String) = value match {$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DecimalField.scala	/^  def jdbcFriendly(field : String) : JBigDecimal = value.bigDecimal$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DoubleField.scala	/^  def jdbcFriendly(field : String) : Double = value$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EmailField.scala	/^  def jdbcFriendly(field : String) : String = value$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EnumField.scala	/^  def jdbcFriendly(field: String) = new _root_.java.lang.Integer(toInt)$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/IntField.scala	/^  def jdbcFriendly(field : String) : Int = value$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/LocaleField.scala	/^  def jdbcFriendly(field : String) : String = value$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/LongField.scala	/^  def jdbcFriendly(field : String) : Long = value$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^  def jdbcFriendly(columnName : String) = {$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PostalCodeField.scala	/^  def jdbcFriendly(field : String) : String = value$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^  def jdbcFriendly(field : String) : String = value$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TextareaField.scala	/^  def jdbcFriendly(field : String) : String = value$/;"	f
jdbcFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TimeZoneField.scala	/^  def jdbcFriendly(field : String) : String = value$/;"	f
jdx	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^        var jdx = 0$/;"	v
jdx	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichStringBuilder.scala	/^    var jdx = idx$/;"	v
jetty6	/Users/Mads/Dev/logicOfScientificDiscovery/project/build/LogicOfScientificDiscovery.scala	/^	val jetty6 = "org.mortbay.jetty" % "jetty" % "6.1.14" % "test" $/;"	V
jitToIt	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  implicit def jitToIt[T](in: JavaIterator[T]): Iterator[T] = new Iterator[T] {$/;"	f
jn	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Sorted.scala	/^      val jn = j.next;$/;"	V
jndiJdbcConnAvailable_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def jndiJdbcConnAvailable_? : Boolean = {$/;"	f
jndiName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  var jndiName: Box[String] = Empty$/;"	v
jndiName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def jndiName: String$/;"	f
jndiName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  var jndiName = "lift"$/;"	v
jndiSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  lazy val jndiSession: Box[Session] =$/;"	V
jobject2assoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  implicit def jobject2assoc(o: JObject) = new JsonListAssoc(o.obj)$/;"	f
join	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^    def join(str: String) = what.mkString(str)$/;"	f
join	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/AwardSource.scala	/^	def join (source :BaseSource, award :Award) {$/;"	f
join	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/DiscoveryDependency.scala	/^	def join (dependent :Discovery, dependency :Discovery) =$/;"	f
join	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/DiscoverySource.scala	/^	def join (source :BaseSource, discovery :Discovery) {$/;"	f
join	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def join[T](p1 : Int, t1 : IntMap[T], p2 : Int, t2 : IntMap[T]) : IntMap[T] = {$/;"	f
join	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def join[T](p1 : Long, t1 : LongMap[T], p2 : Long, t2 : LongMap[T]) : LongMap[T] = {$/;"	f
joinForChild	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    protected def joinForChild(e: T2): Option[O] =$/;"	f
joinLeft	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^  def joinLeft[A, B](es: Either[Either[A, B], B]) =$/;"	f
joinMeta	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    val joinMeta: MetaMapper[O],$/;"	V
joinRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^  def joinRight[A, B](es: Either[A, Either[A, B]]) =$/;"	f
joinTransaction	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^  private def joinTransaction = {$/;"	f
joins	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    def joins = _joins \/\/ read only to the public$/;"	f
jolib	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/jolib.scala	/^@deprecated object jolib {$/;"	o
jqOptions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^      val jqOptions =  ("minChars","0") ::$/;"	V
js	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def js: JsCmd$/;"	f
js	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def js(success: Box[String]) = new JsContext(success, Empty)$/;"	f
js	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def js(success: Box[String], failure: Box[String]) = new JsContext(success, failure)$/;"	f
jsArtifacts	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var jsArtifacts: JSArtifacts = JQueryArtifacts$/;"	v
jsClearLegend	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotAjax.scala	/^    val jsClearLegend: JsCmd =$/;"	V
jsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def jsCmd: JsCmd = handlers._2$/;"	f
jsCmd	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotAjax.scala	/^  lazy val jsCmd: JsCmd =  Flot.renderJs(idPlaceholder, datas, options, Noop)$/;"	V
jsExpToJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  implicit def jsExpToJsCmd(in: JsExp) = in.cmd$/;"	f
jsExpToJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  implicit def jsExpToJsCmd(in: JsExp) = in.cmd$/;"	f
jsRender	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tablesorter/TableSorter.scala	/^  def jsRender(selector: String) : JsExp = JqId(selector) >> new JsRaw("tablesorter({sortList:[[0,0]], widgets:['zebra']})") with JQueryRight$/;"	f
jsSources	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HeadHelper.scala	/^    var jsSources = new ListBuffer[NodeSeq]$/;"	v
jsToXmlOrJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  implicit def jsToXmlOrJsCmd(in: JsCmd): RenderOut = new RenderOut(Empty, Empty, Full(in), Empty, false)$/;"	f
jsUpdateStuff	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^    val jsUpdateStuff = ret2.map {$/;"	V
jsUpdateTime	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^    val jsUpdateTime = ret2.map(ar => "if (lift_toWatch['" + ar.who.uniqueId + "'] !== undefined) lift_toWatch['" + ar.who.uniqueId + "'] = '" + ar.when + "';").mkString("\\n")$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Jsonbench.scala	/^  val json = """$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/Examples.scala	/^    val json = concat(JField("name", "joe"), JField("age", 34)) ++ concat(JField("name", "mazy"), JField("age", 31))$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/Examples.scala	/^    val json = concat(JField("name", JString("joe")), JField("age", JInt(34))) ++ concat(JField("name", JString("mazy")), JField("age", JInt(31)))$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/Examples.scala	/^    val json = parse(lotto)$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/Examples.scala	/^    val json = parse(objArray)$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/Examples.scala	/^    val json = parse(person) remove { _ == JField("name", "Marilyn") }$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/Examples.scala	/^    val json = parse(person)$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/Examples.scala	/^    val json = parse(quoted)$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^    val json = parse("""{ "name": null, "age": 5, "birthdate": null }""")$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^    val json = parse("""{ "name": null, "age": 5, "mother":{"name":"Marilyn"}}""")$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^    val json = parse("""{"name":"e1","timestamp":"2009-09-04T18:06:22Z"}""")$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^    val json = parse(primitives)$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^    val json = parse(testJson)$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^    val json = parse(twoAddresses)$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/LottoExample.scala	/^  val json = $/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ParserTest.scala	/^    val json = Examples.person$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/PullParserExample.scala	/^  val json = """$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/QueryExamples.scala	/^  val json = parse("""$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlBugs.scala	/^    val json = toJson(<tips><group type="Nearby"><tip><id>10<\/id><\/tip><\/group><\/tips>)$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^    val json = a1(a2(toJson(messageXml1)))$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^    val json = toJson(band)$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^    val json = toJson(groupedText)$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^    val json = toJson(users1) $/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^    val json = toJson(users1) map {$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^    val json = toJson(users2) map {$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def json(success: Box[String]) = new JsonContext(success, Empty)$/;"	f
json	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def json(success: Box[String], failure: Box[String]) = new JsonContext(success, failure)$/;"	f
json	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^	  val json = jqOptions.map(t => t._1 + ":" + t._2).mkString("{", ",", "}")$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^      val json = jqOptions.map(t => t._1 + ":" + t._2).mkString("{", ",", "}")$/;"	V
json	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^	  val json = m.encodeAsJson()$/;"	V
json1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/DiffExamples.scala	/^    val json1 = read("\/diff-example-json1.json")$/;"	V
json2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/DiffExamples.scala	/^    val json2 = read("\/diff-example-json2.json")$/;"	V
jsonArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Parser.scala	/^  def jsonArray  = "[" ~> repsep(value, ",") <~ "]"$/;"	f
jsonButton	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def jsonButton(text: NodeSeq, func: () => JsObj, ajaxContext: JsonContext, attrs: (String, String)*): Elem = {$/;"	f
jsonButton	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def jsonButton(text: NodeSeq, jsExp: JsExp, func: Any => JsObj, ajaxContext: JsonContext, attrs: (String, String)*): Elem = {$/;"	f
jsonCall	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def jsonCall: JsonCall$/;"	f
jsonCall	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def jsonCall(jsCalcValue: JsExp, func: Any => JsCmd): (String, JsExp) =$/;"	f
jsonCall	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def jsonCall(jsCalcValue: JsExp, jsContext: JsContext, func: Any => JsCmd): (String, JsExp) =$/;"	f
jsonCall	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def jsonCall(jsCalcValue: JsExp,$/;"	f
jsonCall_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  private def jsonCall_*(jsCalcValue: JsExp, func: AFuncHolder): (String, JsExp) =$/;"	f
jsonCall_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  private def jsonCall_*(jsCalcValue: JsExp,$/;"	f
jsonCallback	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^      def jsonCallback(in: List[String]): JsCmd = {$/;"	f
jsonFmapFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def jsonFmapFunc[T](in: Any => JsObj)(f: String => T): T = \/\/$/;"	f
jsonForm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def jsonForm(jsonHandler: JsonHandler, body: NodeSeq): NodeSeq = jsonForm(jsonHandler, Noop, body)$/;"	f
jsonForm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def jsonForm(jsonHandler: JsonHandler, onSubmit: JsCmd, body: NodeSeq): NodeSeq = {$/;"	f
jsonFuncForCometName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def jsonFuncForCometName(cometName: String, body: String): Box[String] = {$/;"	f
jsonHandlerChain	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private var jsonHandlerChain: PartialFunction[Any, JsCmd] = Map.empty$/;"	v
jsonMenu	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^  def jsonMenu(ignore: NodeSeq): NodeSeq = {$/;"	f
jsonObj	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Parser.scala	/^  def jsonObj    = "{" ~> repsep(objEntry, ",") <~ "}"$/;"	f
jsonObject	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val jsonObject: Parser[Map[String, Any]] = ( spaces ~ '{' ~ spaces ~> members <~ spaces ~ '}' ~ spaces ^^ {case xs =>$/;"	V
jsonOptions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^     val jsonOptions :List[(String,String)] = List()$/;"	V
jsonOptions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^    val jsonOptions :List[(String,String)] = List()$/;"	V
jsonStringify	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JSArtifacts.scala	/^  def jsonStringify(in: JsExp): JsExp$/;"	f
jsonStringify	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JQueryArtifacts.scala	/^  def jsonStringify(in: JsExp): JsExp = new JsExp {$/;"	f
jsonStringify	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^  def jsonStringify(in: JsExp): JsExp = new JsExp {$/;"	f
jsonText	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def jsonText(value: String, cmd: String, json: JsonCall, attrs: (String, String)*): Elem =$/;"	f
jsonText	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def jsonText(value: String, json: JsExp => JsCmd, attrs: (String, String)*): Elem = {$/;"	f
jt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^        val jt = x.child.elements$/;"	V
jt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^        val jt = x.descendant_or_self.elements$/;"	V
jt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^    val jt = ns.elements.buffered;$/;"	V
jt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^    val jt = ns.elements;$/;"	V
jt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^        val jt = branches.elements$/;"	V
jt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^      val jt = adecls.elements; while(j < adecls.length) {$/;"	V
jt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Scanner.scala	/^    val jt = ds.elements$/;"	V
jt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^    var jt = ns.elements$/;"	v
junit	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/project/build/src/LiftJson.scala	/^  val junit      = "junit" % "junit" % "4.5"$/;"	V
junit	/Users/Mads/Dev/logicOfScientificDiscovery/project/build/LogicOfScientificDiscovery.scala	/^	val junit = "junit" % "junit" % "3.8.1" % "test"$/;"	V
justBody	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^                var justBody = false$/;"	v
justHead	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^                var justHead = false$/;"	v
k	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^        val k = set.next$/;"	V
k	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val k: KeyType = key$/;"	V
k	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^            var k = targetOffset + 1$/;"	v
k	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^      var k = strLastIndex - 1$/;"	v
k	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^    var k: Int = m$/;"	v
k	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^          var k = 0; while (k < initials.size) {$/;"	v
k	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^          var k = 0; while (k < pos) {$/;"	v
k	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^          var k = 0; while(k < pos) {$/;"	v
k	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^        val k = it.next$/;"	V
k	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^        val k = that.substring(1)$/;"	V
k	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModelParser.scala	/^    var k = List( p );$/;"	v
k	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModelParser.scala	/^    var k = List(p);$/;"	v
k1	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^        val k1 = OAuthUtil.percentEncode(p1.name) + ' ' + OAuthUtil.percentEncode(p1.value)$/;"	V
k2	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^        val k2 = OAuthUtil.percentEncode(p2.name) + ' ' + OAuthUtil.percentEncode(p2.value)$/;"	V
keepPinging	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^    private var keepPinging = true$/;"	v
key	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^        def key = (clz.getName, meth, params.length)$/;"	f
key	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^          val key = qname.substring(prefix.length+1, qname.length);$/;"	V
key	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^    def key: K = k$/;"	f
key	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/VCardParser.scala	/^  lazy val key = elem("key", {c => c.isLetterOrDigit || c == '-' || c == '_'}).+ ^^ {case list => list.mkString}$/;"	V
key	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/SecurityHelpersSpec.scala	/^      val key = makeBlowfishKey$/;"	V
key	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val key = (locale, places)$/;"	V
key	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^      case (node, id) => val key = id open_!; res += (key -> (res.getOrElseUpdate(key, Nil) ::: List(node)))$/;"	V
key	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^      val key = formFuncName$/;"	V
key	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    val key = formFuncName$/;"	V
key	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^    val key = (response \\\\ "session_key").text$/;"	V
key	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^    val key = new SecretKeySpec(keyBytes, MAC_NAME)$/;"	V
key	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^          val key = f.obscure(fk.dbKeyToTable, fk.is)$/;"	V
key	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^  protected class Node[B1 >: B](override protected val key: A, $/;"	V
key	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^  protected def key: A = throw new NoSuchElementException("empty map")$/;"	f
key	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def key: A$/;"	f
key	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^  case class BlackTree[+B](override val key: A,$/;"	V
key	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^  case class RedTree[+B](override val key: A,$/;"	V
key	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^  protected class Node[+B](override protected val key: A,$/;"	V
key	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^  protected def key: A = throw new NoSuchElementException("empty map")$/;"	f
key	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^  val key: A$/;"	V
key	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^      val key = iter.next().asInstanceOf[A]$/;"	V
key	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  private[mutable] class Entry[Key, Value](val key : Key, $/;"	V
key	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def key: String$/;"	f
key	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  def key = null$/;"	f
key	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrefixedAttribute.scala	/^                        val key: String,$/;"	V
key	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^    val key = md.key$/;"	V
key	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^        val key = qname.substring(colon+1, qname.length())$/;"	V
key	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^          val key = qname.substring(prefix.length+1, qname.length);$/;"	V
keyBytes	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^    val keyBytes = keyString.getBytes(ENCODING)$/;"	V
keySet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^  def keySet: Set[A] = new Set[A] {$/;"	f
keySet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/MapProxy.scala	/^  override def keySet = self.keySet$/;"	f
keySet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Sorted.scala	/^  def keySet: SortedSet[K]$/;"	f
keySet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedMap.scala	/^  override def keySet : SortedSet[K] = new DefaultKeySet;$/;"	f
keySet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedSet.scala	/^  override def keySet = this$/;"	f
keySet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^  override def keySet : Set[K] = new KeySet;$/;"	f
keySet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^  override def keySet: Set.Projection[K] = new KeySet$/;"	f
keySet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Sorted.scala	/^  override def keySet : SortedSet[K];$/;"	f
keySet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^  override def keySet : SortedSet.Projection[K] = new KeySet;$/;"	f
keySet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMapWrapper.scala	/^  override def keySet : SortedSet.Projection[K] = new KeySet;$/;"	f
keySet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^  override def keySet = this;$/;"	f
keySet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableMapAdaptor.scala	/^  override def keySet: collection.Set[A] = imap.keySet$/;"	f
keySet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  override def keySet: collection.Set[A] = synchronized {$/;"	f
keyStore	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^  val keyStore = new KeyObfuscator$/;"	V
keyString	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^    val keyString = OAuthUtil.percentEncode(getConsumerSecret) + '&' + OAuthUtil.percentEncode(ts)$/;"	V
keys	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  def keys: List[K] = elements.toList.map(_._1)$/;"	f
keys	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LRU.scala	/^  def keys: List[KeyType] = map.keySet().toList.map(_.asInstanceOf[KeyType])$/;"	f
keys	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^  def keys = cache.keySet$/;"	f
keys	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^  def keys: Iterator[A] = new Iterator[A] {$/;"	f
keys	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/MapProxy.scala	/^  override def keys = self.keys$/;"	f
keys	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  override def keys : Iterator[Int] = this match {$/;"	f
keys	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  override def keys : Iterator[Long] = this match {$/;"	f
keys	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^  override final def keys = keySet.elements;$/;"	f
keys	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableMapAdaptor.scala	/^  override def keys: Iterator[A] = imap.keys$/;"	f
keys	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^  override def keys: Iterator[A] = new Iterator[A] {$/;"	f
keys	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  override def keys: Iterator[A] = synchronized {$/;"	f
keyword	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/syntactical/StdTokenParsers.scala	/^  implicit def keyword(chars: String): Parser[String] = accept(Keyword(chars)) ^^ (_.chars)$/;"	f
keyword	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/StdTokenParsers.scala	/^  implicit def keyword(chars: String): UnitParser = accept(Keyword(chars))$/;"	f
kids	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^    val kids : List[MenuItem] = if (expandAll) loc.buildKidMenuItems(loc.menu.kids) else Nil$/;"	V
kids	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val kids = if (eagerEval) processSurroundAndInclude(page, passedKids) else passedKids$/;"	V
kids	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Menu.scala	/^    val kids: List[MenuItem] =$/;"	V
kids	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^  def kids: Seq[Menu]$/;"	f
kindaAjax	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^        val kindaAjax = wp.head == LiftRules.ajaxPath$/;"	V
kindaComet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^        val kindaComet = wp.head == LiftRules.cometPath$/;"	V
knownSuffixes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^  val knownSuffixes: Set[String] = Set("json","rss","atom","do","3dm",$/;"	V
ks	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^    val ks = info.keySet$/;"	V
kt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^            val kt = (y \\ that).elements$/;"	V
kt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^    var kt = adecls.elements$/;"	v
l	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^      val l: JValue = left._2$/;"	V
l	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^      val l = c.lastIndexOf("$")$/;"	V
l	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^      val l = new LinkedList[A](null, null)$/;"	V
l	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^          val l = pe.nextLoc()$/;"	V
l	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^          val l = upe.nextLoc$/;"	V
l	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^          var l = off$/;"	v
l	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/CharArrayPosition.scala	/^    var l = 1$/;"	v
l1s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^          val l1s = ms(l1)$/;"	V
l2	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^        val l2: Map[Any, String] = local + ( (key -> ret) )$/;"	V
l2s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^          val l2s = ms(l2)$/;"	V
lab	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/SourceSnippet.scala	/^		object lab extends RequestVar[Lab]( defaultLab() )$/;"	o
labCount	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/Stats.scala	/^		val labCount = Lab.count$/;"	V
label	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^  def label = throw new UnsupportedOperationException("Xml2Js does not have a label")$/;"	f
label	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotSerie.scala	/^  def label: Box[String] = Empty$/;"	f
label	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def label: NodeSeq = uniqueFieldId match {$/;"	f
label	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^        val label = it.next$/;"	V
label	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Atom.scala	/^  def label = "#PCDATA"$/;"	f
label	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Comment.scala	/^  def label = "#REM"$/;"	f
label	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Elem.scala	/^                val label: String,$/;"	V
label	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/EntityRef.scala	/^  def label = "#ENTITY"$/;"	f
label	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Group.scala	/^  final def label =$/;"	f
label	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  def label: String$/;"	f
label	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/ProcInstr.scala	/^  final def label = "#PI"$/;"	f
label	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^        var label = it.next.name;$/;"	v
label	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ExternalID.scala	/^  def label = "#PI"$/;"	f
labelAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^  protected var labelAt: immutable.TreeMap[Int, _labelT] = _ \/\/ new alphabet "gamma"$/;"	v
labelBoxBorderColor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def labelBoxBorderColor: Box[String] = Empty \/\/ color$/;"	f
labelMargin	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def labelMargin: Box[Int] = Empty$/;"	f
labels	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/Inclusion.scala	/^  val labels: Seq[A]$/;"	V
labels	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^  val labels: Seq[T]$/;"	V
labels	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^            val labels = delta1(k).keys$/;"	V
labels	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^          val labels   = WordBerrySethi.this.labels.toList$/;"	V
labels	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^  protected var labels:mutable.HashSet[_labelT] = _$/;"	v
lang	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^  val lang: Base$/;"	V
lang	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^  override val lang: WordExp$/;"	V
lang	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^  val lang      = "lang"$/;"	V
lang	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^    override val lang: ContentModel.this.type = ContentModel.this$/;"	V
last	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^      val last = parts.last$/;"	V
last	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^        val last = places.last$/;"	V
last	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def last: A =$/;"	f
last	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Range.scala	/^    override protected def last(base: Int, step: Int): Int = 1$/;"	f
last	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Range.scala	/^  protected def last(base: Int, step: Int): Int =$/;"	f
last	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  def last: A = length match {$/;"	f
last	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def last = self.last$/;"	f
last	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override final def last: A =$/;"	f
last	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedMap.scala	/^    var last : K = i.next._1;$/;"	v
last	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedSet.scala	/^    var last: A = null.asInstanceOf[A]$/;"	v
last	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def last  = if (right.isEmpty) key else right.last$/;"	f
last	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def last : A$/;"	f
last	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def last = throw new NoSuchElementException("empty map")$/;"	f
last	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    var last : K = i.next._1;$/;"	v
last	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^    var last : A = null.asInstanceOf[A];$/;"	v
last	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MutableList.scala	/^  override def last = last0.elem$/;"	f
last	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^      val last = apply(len - 1)$/;"	V
last	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/Inclusion.scala	/^    var last = current$/;"	v
last	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^    var last: List[Int] = Nil$/;"	v
last0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^  private var last0: ::[A] = _$/;"	v
last0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MutableList.scala	/^  protected var last0: LinkedList[A] = null$/;"	v
last1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^      val last1 = last0$/;"	V
lastAccessedTime	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPSession.scala	/^  def lastAccessedTime: Long$/;"	f
lastAccessedTime	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletSession.scala	/^  def lastAccessedTime: Long = session getLastAccessedTime$/;"	f
lastCal	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarWeekView.scala	/^    val lastCal = cal.clone().asInstanceOf[Calendar]$/;"	V
lastIndexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  def lastIndexOf[B >: A](elem: B): Int = {$/;"	f
lastIndexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def lastIndexOf[B >: A](elem: B): Int = self lastIndexOf elem$/;"	f
lastIndexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def lastIndexOf(str: String): Int = lastIndexOf(str, count)$/;"	f
lastIndexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def lastIndexOf(str: String, fromIndex: Int): Int =$/;"	f
lastIndexOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  private def lastIndexOf(source: Array[Char], sourceOffset: Int, sourceCount: Int,$/;"	f
lastKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Ranged.scala	/^  def lastKey: K$/;"	f
lastKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedMap.scala	/^  override def lastKey : K = {$/;"	f
lastKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedSet.scala	/^  override def lastKey: A = {$/;"	f
lastKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  final def lastKey : Int = this match {$/;"	f
lastKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^  override def lastKey = t.last$/;"	f
lastKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^   override def lastKey = tree.last$/;"	f
lastKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  override def lastKey = size - 1;$/;"	f
lastKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    override def lastKey = SortedMap.this.lastKey;$/;"	f
lastKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^  override def lastKey : K = {$/;"	f
lastKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMapWrapper.scala	/^  override def lastKey = underlying.lastKey.asInstanceOf[K];$/;"	f
lastKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^  override def lastKey : A = {$/;"	f
lastKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSetWrapper.scala	/^  override def lastKey  = underlying.last .asInstanceOf[A];$/;"	f
lastListenTime	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private var lastListenTime = millis$/;"	v
lastMessage	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/MailerSpec.scala	/^  @volatile var lastMessage: Box[MimeMessage] = Empty$/;"	v
lastModCache	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResourceServer.scala	/^  private val lastModCache: CHash[String, Long] = new CHash()$/;"	V
lastName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val lastName = r.param("last_name")$/;"	V
lastName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  object lastName extends MappedString(this, 32) {$/;"	o
lastNameDisplayName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def lastNameDisplayName = ??("Last Name")$/;"	f
lastNoSuccess	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  var lastNoSuccess: NoSuccess = null$/;"	v
lastOption	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  def lastOption: Option[A] = length match {$/;"	f
lastOption	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def lastOption = self.lastOption$/;"	f
lastRenderTime	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private var lastRenderTime = Helpers.nextNum$/;"	v
lastRendering	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private var lastRendering: RenderOut = _$/;"	v
lastSeen	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    override private[http] def lastSeen: Long = proxyTo.lastSeen$/;"	f
lastSeen	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    private[http] def lastSeen = _lastSeen$/;"	f
lastSeen_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    override private[http] def lastSeen_=(when: Long) = proxyTo.lastSeen = when$/;"	f
lastSeen_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    private[http] def lastSeen_=(when: Long) = _lastSeen = when$/;"	f
lastServiceTime	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] var lastServiceTime = millis$/;"	v
lastWritten	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/Channel.scala	/^  private var lastWritten = written       \/\/ aliasing of a linked list$/;"	v
lastwasbreak	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^    var lastwasbreak = false$/;"	v
later	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    def later = TimeSpan(millis + outer.millis).date$/;"	f
later	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^  protected var later: HashMap[A, B] = null$/;"	v
later	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashSet.scala	/^  protected var later: HashSet[A] = null$/;"	v
later	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  var later : Page[T] = this$/;"	v
latest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  final def latest: Page[T] = {$/;"	f
latest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  private def latest = first.latest$/;"	f
layout	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def layout(doc: Document): Unit = doc match {$/;"	f
lazyLoadCount	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^  object lazyLoadCount extends RequestVar(0)$/;"	o
lazySnippetTimeout	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val lazySnippetTimeout: FactoryMaker[TimeSpan] = new FactoryMaker(() => 30 seconds) {}$/;"	V
lazyStreamToConsable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def lazyStreamToConsable[A](xs: => Stream[A]) = new runtime.StreamCons(xs)$/;"	f
lazy_	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  object lazy_:: {$/;"	o
lazy_	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/StreamCons.scala	/^  def lazy_:: (x: T): Stream[T] = Stream.cons(x, xs)$/;"	f
lazy_	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/StreamCons.scala	/^  def lazy_::: (ys: Stream[T]): Stream[T] = ys append xs$/;"	f
lb	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val lb = new ListBuffer[Elem]$/;"	V
lb	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^    val lb = new ListBuffer[List[Any]]()$/;"	V
lb	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^    val lb = new ListBuffer[List[String]]()$/;"	V
lcache	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Location.scala	/^  private var lcache: Map[URL, ClassLoader] = new HashMap$/;"	v
le	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^              val le = sl.elements$/;"	V
leafTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  protected def leafTag(n: Node) = {$/;"	f
leaf_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Xml.scala	/^    def leaf_?(node: Node) = {$/;"	f
left	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/VCardParser.scala	/^  lazy val left = (key ~ props) ^^ {case k ~ l => VCardKey(k, l)}$/;"	V
left	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^  def left = Either.LeftProjection(this)$/;"	f
left	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      var left = lst$/;"	v
left	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^                           override val left: Tree[B], $/;"	V
left	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^                         override val left: Tree[B],$/;"	V
left	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^      val left = this.left.visit(input)(f)$/;"	V
left	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def left: Tree[B]$/;"	f
left1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      var left1 = l1$/;"	v
left2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      var left2 = l2$/;"	v
left_align	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val left_align : Parser[Attribute] = elem('<') ^^ Align$/;"	V
lefts	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def lefts[A, B](es: Iterable[Either[A, B]]) = $/;"	f
legacyNullTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def legacyNullTest[T](in: T): Box[T] = in match {$/;"	f
legend	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def legend: Box[FlotLegendOptions] = Empty$/;"	f
len	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^        val len = parts.map(p => p._2 - p._1 - 1).foldLeft(0)(_ + _)$/;"	V
len	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^    var len = 0$/;"	v
len	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/IoHelpers.scala	/^      val len = in.read(ba)$/;"	V
len	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^    val len = str.length$/;"	V
len	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^    val len = in.length$/;"	V
len	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^        val len = what.length$/;"	V
len	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  case class TimeSpanBuilder(val len: Long) {$/;"	V
len	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^        val len = last.length$/;"	V
len	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^      val len = stream.read(buffer)$/;"	V
len	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^            var len = 0$/;"	v
len	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^      val len = wp.length$/;"	V
len	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^    val len = resp.size$/;"	V
len	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    val len = possible.length$/;"	V
len	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    val len = in.length$/;"	V
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^    var len = 0$/;"	v
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^      private val len = str.length()$/;"	V
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var len = 0$/;"	v
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^    var len = 0$/;"	v
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^      val len = sb.length$/;"	V
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    val len = end0 - start$/;"	V
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    val len = str.length$/;"	V
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    val len = str.length()$/;"	V
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    val len = x.length$/;"	V
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^        var len = memsize(Math.min(this.capacity, that.capacity))$/;"	v
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^    val len = memsize(this.capacity)$/;"	V
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^    val len = out.length$/;"	V
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayBuffer.scala	/^    val len = xs.length$/;"	V
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MutableList.scala	/^  protected var len: Int = 0$/;"	v
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^    val len = encode(s, dst, 0)$/;"	V
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    var len = 0$/;"	v
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^    val len = length$/;"	V
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^    val len = this.length min that.length$/;"	V
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedBooleanArray.scala	/^    var len = 0$/;"	v
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedByteArray.scala	/^    var len = 0$/;"	v
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedCharArray.scala	/^    var len = 0$/;"	v
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedDoubleArray.scala	/^    var len = 0$/;"	v
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedFloatArray.scala	/^    var len = 0$/;"	v
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedIntArray.scala	/^    var len = 0$/;"	v
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedLongArray.scala	/^    var len = 0$/;"	v
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedObjectArray.scala	/^    var len = 0$/;"	v
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedShortArray.scala	/^    var len = 0$/;"	v
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^      val len = line.length$/;"	V
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^    val len = self.length$/;"	V
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/TextBuffer.scala	/^    var len = sb.length \/* invariant *\/$/;"	v
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^    val len: Int = exc.length;$/;"	V
len	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ExternalSources.scala	/^        private val len = str.length-1$/;"	V
length	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    var length = -1$/;"	v
length	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    def length = children.length$/;"	f
length	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    def length = delegate.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^       def length = Projection.this.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def length: Int = throw new Error()$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def length: Int = {$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^    def length: Int = xs.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^        def length = Projection.this.length + that0.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      def length = Mutable.this.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      override def length = RandomAccessSeq.this.length - idx$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    def length = 0$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    def length = RandomAccessSeq.this.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    def length = original.length + patch.length - replaced$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    def length = {$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Range.scala	/^  lazy val length: Int = {$/;"	V
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^          def length = Projection.this.length + that.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^          val length = i.asInstanceOf[Collection[B]].size$/;"	V
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^      def length = Projection.this.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^      def length = {$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^      override def length: Int = {$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    def length = Seq.this.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    override def length = 1$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  def length: Int$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def length: Int = self.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override def length: Int = {$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    def length: Int = sb.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def length: Int = count$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^     val length = memsize(capacity)$/;"	V
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^    val length = memsize(capacity)$/;"	V
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  def length: Int = {$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^  def length = in.length + out.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^    override def length: Int = Stack.this.length + 1$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^  def length: Int = 0$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    override def length = Buffer.this.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    override def length = {$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^  override def length = underlying.size;$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^    override def length = MutableSeq.this.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^  override def length = {$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BufferProxy.scala	/^  def length: Int = self.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^  def length: Int = start.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MutableList.scala	/^  def length: Int = len$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueueProxy.scala	/^  override def length: Int = self.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/QueueProxy.scala	/^  override def length: Int = self.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ResizableArray.scala	/^  def length: Int = size0$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SingleLinkedList.scala	/^  def length: Int = 1 + (if (next eq null) 0 else next.length)$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Stack.scala	/^  override def length = stack.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/StackProxy.scala	/^  override def length: Int = self.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedBuffer.scala	/^  abstract override def length: Int = synchronized {$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^final class BoxedAnyArray(val length: Int) extends BoxedArray {$/;"	V
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^    def length = BoxedArray.this.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  def length: Int$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedBooleanArray.scala	/^  def length: Int = value.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedByteArray.scala	/^  def length: Int = value.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedCharArray.scala	/^  def length: Int = value.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedDoubleArray.scala	/^  def length: Int = value.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedFloatArray.scala	/^  def length: Int = value.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedIntArray.scala	/^  def length: Int = value.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedLongArray.scala	/^  def length: Int = value.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedObjectArray.scala	/^  def length: Int = value.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedShortArray.scala	/^  def length: Int = value.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichChar.scala	/^        def length = limit - x$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  override def length = self.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichStringBuilder.scala	/^  override def length = self.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def length(i: Int): Int = next.length(i + 1)$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def length: Int = length(0)$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^  def length = theSeq.length$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  final override def length = 0$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  final override def length(i: Int) = i$/;"	f
length	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/EncodingHeuristics.scala	/^        val length = in.read(data, 4, 1020) + 4;$/;"	V
length0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      val length0 = underlying.length$/;"	V
lengthCompare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def lengthCompare(l: Int) = {$/;"	f
lengthCompare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  def lengthCompare(l: Int): Int = length - l$/;"	f
lengthCompare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def lengthCompare(l: Int) = self lengthCompare l$/;"	f
lengthCompare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  final override def lengthCompare(l: Int) = {$/;"	f
length_	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def length_=(n: Int) { setLength(n) }$/;"	f
lense	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    override def lense[G](f0 : F => G, g0 : G => F) : jcl.Map.Projection[K,G] = $/;"	f
lense	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^  def lense[F](f : E => F, g : F => E) : jcl.Map.Projection[K,F] = new Lense[F](f,g);$/;"	f
lense	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    override def lense[G](f0 : F => G, g0 : G => F) : jcl.SortedMap.Projection[K,G] = $/;"	f
lense	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^  override def lense[F](f : E => F, g : F => E) : jcl.SortedMap.Projection[K,F] = new Lense[F](f,g);$/;"	f
letter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/Lexical.scala	/^  def letter = elem("letter", _.isLetter)$/;"	f
letter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/Lexical.scala	/^  def letter = elem("letter", _.isLetter)$/;"	f
level	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def level: LiftLogLevels.Value = LiftLogLevels.Off$/;"	f
level	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def level = logger.getLevel match {$/;"	f
level	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def level = rootLogger.level$/;"	f
level	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  override def level = LiftLogLevels.All$/;"	f
level	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    override def level: LiftLogLevels.Value = LiftLogLevels.Off$/;"	f
level	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^    val level: Box[Int] = for (lvs <- S.attr("level"); i <- Helpers.asInt(lvs)) yield i$/;"	V
level	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^  private var level = 0$/;"	v
level_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def level_=(level: LiftLogLevels.Value): Unit = ()$/;"	f
level_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def level_=(level: LiftLogLevels.Value) = logger.setLevel(liftToLog4J(level) )$/;"	f
level_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def level_=(level: LiftLogLevels.Value) = rootLogger.level = level$/;"	f
level_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    override def level_=(level: LiftLogLevels.Value): Unit = logger.level = level$/;"	f
lexical	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/syntactical/StandardTokenParsers.scala	/^  val lexical = new StdLexical$/;"	V
lexical	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/syntactical/TokenParsers.scala	/^  val lexical: Tokens$/;"	V
lexical	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/testing/Tester.scala	/^  val syntactic: TokenParsers { val lexical: Lexical }$/;"	V
lexical	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/TokenParsers.scala	/^  val lexical: Tokens$/;"	V
lexical	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/testing/Tester.scala	/^  val syntactic: TokenParsers { val lexical: Lexical }$/;"	V
lexical	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Parser.scala	/^  val lexical = new Tokens$/;"	V
lf	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^        val lf: Map[String, Any] = from.getOrElse(theType._dbTableNameLC, Map.empty) + ( (ret -> key))$/;"	V
lf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^    val lf = loadFactor$/;"	V
li	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^        val li = S.mapToAttrs(liMap)$/;"	V
li	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    val li = loggedIn_?$/;"	V
liMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^        val liMap = S.prefixedAttrsToMap("li")$/;"	V
lifecycleCallbacks	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  private var lifecycleCallbacks: List[(String, Method)] = Nil$/;"	v
lifespan	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^  override def lifespan: Box[TimeSpan] = Full(90 seconds)$/;"	f
lifespan	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def lifespan: Box[TimeSpan] = Empty$/;"	f
lift	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def lift[t](x: t): SPU[t] = new SPU[t] {$/;"	f
lift	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Code.scala	/^  def lift[A](tree: A): Code[A] =$/;"	f
lift	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/StdLexical.scala	/^  private def lift[T](f: String => T)(xs: List[Char]): T = f(xs.mkString("", "", ""))$/;"	f
lift	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/StdLexical.scala	/^  private def lift[T](f: String => T)(xs: List[Char]): T = f(xs.mkString("", "", ""))$/;"	f
lift2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/StdLexical.scala	/^  private def lift2[T](f: String => T)(p: ~[Char, List[Char]]): T = lift(f)(p._1 :: p._2)$/;"	f
lift2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/StdLexical.scala	/^  private def lift2[T](f: String => T)(p: ~[Char, List[Char]]): T = lift(f)(p._1 :: p._2)$/;"	f
liftBuildDate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  lazy val liftBuildDate: Date = {$/;"	V
liftBundles	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^    val liftBundles = LiftBundleObserver.liftBundles.get.toSeq.projection$/;"	V
liftBundles	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^  val liftBundles = new AtomicReference[LiftBundles](Map.empty)$/;"	V
liftCoreResourceBundle	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def liftCoreResourceBundle: Box[ResourceBundle] = _liftCoreResBundle.is$/;"	f
liftCoreResourceName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var liftCoreResourceName = "i18n.lift-core"$/;"	v
liftGCFailureRetryTimeout	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var liftGCFailureRetryTimeout: Long = 15 seconds$/;"	v
liftGCPollingInterval	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var liftGCPollingInterval: Long = 75 seconds$/;"	v
liftHandled	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPProvider.scala	/^  private def liftHandled(in: String): Boolean = (in.indexOf(".") == -1) || in.endsWith(".html") || in.endsWith(".xhtml") ||$/;"	f
liftHttpContext	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^          val liftHttpContext = LiftHttpContext(webContainer.createDefaultHttpContext)$/;"	V
liftReq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val liftReq: LiftRules.LiftRequestPF = new LiftRules.LiftRequestPF {$/;"	V
liftRequest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val liftRequest = RulesSeq[LiftRequestPF]$/;"	V
liftSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^      val liftSession = getLiftSession(req)$/;"	V
liftTagProcessing	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val liftTagProcessing = RulesSeq[LiftTagPF]$/;"	V
liftTagProcessing	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  var liftTagProcessing: List[LiftRules.LiftTagPF] = _$/;"	v
liftToLog4J	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  val liftToLog4J: PartialFunction[LiftLogLevels.Value, Level] = {$/;"	V
liftVersion	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/VersionInfo.scala	/^ private def liftVersion(ignore: NodeSeq): NodeSeq =$/;"	f
liftVersion	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  lazy val liftVersion: String = {$/;"	V
lift_toWatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    "var lift_toWatch = " + vp.map(p => p.guid.encJs + ": " + p.version).mkString("{", " , ", "}") + ";"$/;"	v
liftbind	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BindHelpersSpec.scala	/^      val liftbind = <body>$/;"	V
lightInit	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private[liftweb] def lightInit[B](request: Req,$/;"	f
limit	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^      val limit = S.param("limit").flatMap(asInt).openOr(10)$/;"	V
limit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^    val limit = last0.tail$/;"	V
limit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^    val limit = maxlen match { case Some(i) => i; case None => 0 }$/;"	V
line	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^      var line: String = null;$/;"	v
line	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/IoHelpers.scala	/^          var line = ""$/;"	v
line	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^    val line = Position.line(pos)$/;"	V
line	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val line: Int = {$/;"	V
line	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Position.scala	/^  final def line(pos: Int): Int =$/;"	f
line	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^    val line = Position.line(pos)$/;"	V
line	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/NoPosition.scala	/^  def line = 0$/;"	f
line	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/OffsetPosition.scala	/^  def line: Int = {$/;"	f
line	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/Position.scala	/^  def line: Int$/;"	f
line	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/StreamReader.scala	/^    def line = lnum$/;"	f
line	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^    var line = -1$/;"	v
lineContents	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def lineContents: String =$/;"	f
lineContents	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/CharArrayPosition.scala	/^  protected def lineContents = {$/;"	f
lineContents	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/NoPosition.scala	/^  def lineContents = ""$/;"	f
lineContents	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/OffsetPosition.scala	/^  def lineContents: String =$/;"	f
lineContents	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/Position.scala	/^  protected def lineContents: String$/;"	f
lineContents	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/StreamReader.scala	/^    def lineContents = seq.slice(0, nextEol).toString$/;"	f
lineElem	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val lineElem : Parser[Textile] = {$/;"	V
lineElem_notEmph	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val lineElem_notEmph : Parser[Textile] = {$/;"	V
lineElem_notStrong	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val lineElem_notStrong : Parser[Textile] = {$/;"	V
lineSpace	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def lineSpace = rep(aSpace)$/;"	f
lineStarts	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^        var lineStarts = new ArrayBuffer[Int]$/;"	v
lineStarts	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/OffsetPosition.scala	/^    var lineStarts = new ArrayBuffer[Int]$/;"	v
lineWidth	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def lineWidth: Box[Int] = Empty$/;"	f
lines	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/IoHelpers.scala	/^          val lines = new ListBuffer[String]$/;"	V
lines	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def lines: Box[FlotLinesOptions] = Empty$/;"	f
lines	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotSerie.scala	/^  def lines: Box[FlotLinesOptions] = Empty$/;"	f
lines	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  def lines: Iterator[String] = $/;"	f
linesWithSeparators	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  def linesWithSeparators = new Iterator[String] {$/;"	f
link	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def link(to: String, func: () => Any, body: NodeSeq,$/;"	f
link	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/StatefulSnippet.scala	/^  def link(to: String, func: () => Any, body: NodeSeq): Elem = SHtml.link(to, () => {registerThisSnippet(); func()}, body)$/;"	f
link	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPSession.scala	/^  def link(liftSession: LiftSession)$/;"	f
link	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletSession.scala	/^  def link(liftSession: LiftSession) = session.setAttribute(LiftMagicID, SessionToServletBridge(liftSession.uniqueId))$/;"	f
link	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    override val link: Link[T],$/;"	V
link	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    override val link: Link[Unit],$/;"	V
link	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def link: Loc.Link[T]$/;"	f
link	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/XmlMenu.scala	/^      val link = net.liftweb.util.JSONParser.parse(m \\ "link" text).get.asInstanceOf[List[Any]].map(_.asInstanceOf[String])$/;"	V
link	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^          val link =$/;"	V
link	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^        val link =$/;"	V
linkIfOther	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Paginator.scala	/^    def linkIfOther(newFirst: Long, ns: NodeSeq) = {$/;"	f
linkText	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def linkText(in: T): NodeSeq = text.text(in)$/;"	f
linkText	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def linkText: Box[NodeSeq] = currentValue.map(linkText _)$/;"	f
linkText	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^        val linkText = text match {$/;"	V
list	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^    val list = props.split(",").toList.map(in => {$/;"	V
list	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/VCardParseSpecs.scala	/^      val list = VCardParser.parse(vcard);$/;"	V
list	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarDayViewDemo.scala	/^    val list = item1 :: item2 :: item3 :: item4 :: item5 :: Nil;$/;"	V
list	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarWeekViewDemo.scala	/^    val list = item1 :: item2 :: item3 :: item4 :: item5 :: Nil;$/;"	V
list	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^      val list = findForList(first, 20)$/;"	V
list	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/ModelView.scala	/^  def list(ns: NodeSeq): NodeSeq$/;"	f
list	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^      val list = peekList(0)$/;"	V
list	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^        val list : ::[B] = new ::(a.asInstanceOf[B], Nil)$/;"	V
list	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def list[a](pa: SPU[a]): SPU[List[a]] =$/;"	f
list	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    val list = ts.toList$/;"	V
list2jvalue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  implicit def list2jvalue(l: List[JField]) = JObject(l)$/;"	f
list2ordered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  implicit def list2ordered[a <% Ordered[a]](x: List[a]): Ordered[List[a]] = new Ordered[List[a]] {$/;"	f
listElemToResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/rest/XMLApiHelper.scala	/^  implicit def listElemToResponse(in: Seq[Node]): LiftResponse =$/;"	f
listIf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^  def listIf[T](expr: Boolean)(f: => T): List[T] = if (expr) List(f) else Nil$/;"	f
listPath	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  lazy val listPath = Prefix ::: List(ListItems)$/;"	V
listPathString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  lazy val listPathString: String = mp(listPath)$/;"	V
listSize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JValueGen.scala	/^  def listSize = choose(0, 5).sample.get$/;"	f
listToListMapish	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^  implicit def listToListMapish(in: Seq[(String, String)]): ListMapish = new ListMapish(in)$/;"	f
listToPair	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def listToPair(l: List[A]): (A, List[A]) =$/;"	f
listToPair	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def listToPair(l: List[a]): (a,List[a]) =$/;"	f
listenerService	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  protected def listenerService: PartialFunction[Any, Unit] =$/;"	f
listeners	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private var listeners: List[(ListenerId, AnswerRender => Unit)] = Nil$/;"	v
listeners	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private var listeners: List[SimpleActor[Any]] = Nil$/;"	v
listing	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def listing(xhtml : NodeSeq) : NodeSeq =  {$/;"	f
literal	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/RegexParsers.scala	/^  implicit def literal(s: String): Parser[String] = new Parser[String] {$/;"	f
lo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^      var lo = 0$/;"	v
lo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/OffsetPosition.scala	/^    var lo = 0$/;"	v
load	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/ModelView.scala	/^  def load = snippet.load(entity)$/;"	f
load	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/ModelView.scala	/^  def load(entity: T) = view.entity = entity$/;"	f
load	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Marshal.scala	/^  def load[A](buffer: Array[Byte])(implicit expected: Manifest[A]): A = {$/;"	f
load	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^  final def load( is:InputStream ): Elem = $/;"	f
load	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^  final def load(reader: Reader): Elem = $/;"	f
load	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^  final def load(source: InputSource): Elem = $/;"	f
load	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^  final def load(sysID: String): Elem = $/;"	f
load	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  def load(is: InputStream): Node =$/;"	f
load	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  def load(reader: Reader): Node =$/;"	f
load	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  def load(sysID: String): Node =$/;"	f
load	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/CachedFileStorage.scala	/^  private def load: Iterator[Node] = {$/;"	f
loadFactor	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^      override def loadFactor = lv        $/;"	f
loadFactor	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashSet.scala	/^      override def loadFactor = lv$/;"	f
loadFactor	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^  protected def loadFactor: Int = 450$/;"	f
loadFactor	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^  protected def loadFactor: Int = 750 \/\/ corresponds to 75%$/;"	f
loadFactorDenum	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^  protected final def loadFactorDenum = 1000$/;"	f
loadFactorDenum	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^  protected final val loadFactorDenum = 1000;$/;"	V
loadFile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^  final def loadFile(file: File): Elem = $/;"	f
loadFile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^  final def loadFile(fileDesc: FileDescriptor): Elem = $/;"	f
loadFile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^  final def loadFile(fileName: String): Elem = $/;"	f
loadFile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  def loadFile(file: File): Node =$/;"	f
loadFile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  def loadFile(fileDesc: FileDescriptor): Node =$/;"	f
loadFile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  def loadFile(fileName: String): Node =$/;"	f
loadNode	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/TreeViewDemo.scala	/^  def loadNode(id: String): List[Tree] = {$/;"	f
loadResource	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def loadResource(name: String): Box[Array[Byte]] = doWithResource(name) { stream =>$/;"	f
loadResourceAsString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def loadResourceAsString(name: String): Box[String] = loadResource(name).map(s => new String(s, "UTF-8"))$/;"	f
loadResourceAsXml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def loadResourceAsXml(name: String): Box[NodeSeq] = loadResourceAsString(name).flatMap(s => PCDataXmlParser(s))$/;"	f
loadString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^  final def loadString(string: String): Elem = $/;"	f
loadTree	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/TreeViewDemo.scala	/^  def loadTree: List[Tree] = Tree("1. Pre Lunch (120 min)", "folder", false, false,$/;"	f
loadXML	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  def loadXML(source: InputSource): Node = {$/;"	f
loadXML	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/NoBindingFactoryAdapter.scala	/^  override def loadXML( source:InputSource ):Elem = $/;"	f
loader	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Location.scala	/^  private val loader = if (url eq null)$/;"	V
loc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^         val loc = menu.loc;$/;"	V
loc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def loc(str: String): Box[NodeSeq] =$/;"	f
loc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def loc(str: String, dflt: NodeSeq): NodeSeq = loc(str).openOr(dflt)$/;"	f
locForGroup	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Menu.scala	/^  def locForGroup(group: String): Seq[Loc[_]] =$/;"	f
locForGroup	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^  def locForGroup(group: String): Seq[Loc[_]] = {$/;"	f
locSnippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    def locSnippet(snippet: String): Box[NodeSeq] =$/;"	f
locSnippets	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  lazy val locSnippets = new DispatchLocSnippets {$/;"	V
locTemplate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] def locTemplate: Box[NodeSeq] =$/;"	f
local	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val local: Map[Any, String] = to.getOrElse(theType._dbTableNameLC, Map.empty)$/;"	V
localAddr	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var localAddr = null$/;"	v
localFile	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^                            override val fileName: String, val localFile: File) extends$/;"	V
localForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  private def localForm(user: ModelType, ignorePassword: Boolean): NodeSeq = {$/;"	f
localMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  private[this] val localMap = new HashMap[K, LinkedListElem[K, V]](maxSize \/ 4, loadFactor openOr 0.75f)$/;"	V
localName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var localName = null$/;"	v
localName	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^    val localName = if(-1 == colon) qname else qname.substring(colon+1,qname.length())$/;"	V
localName	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^    val localName =$/;"	V
localParams	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    val localParams: Map[String, List[String]] = Map(rewritten.params.toList.map {case (name, value) => name -> List(value)}: _*)$/;"	V
localPort	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var localPort = 0$/;"	v
localSetup	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  protected def localSetup(): Unit = {}$/;"	f
localShutdown	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  protected def localShutdown(): Unit = {$/;"	f
localSnapshot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^          {doFinish(); val localSnapshot = createSnapshot; S.redirectTo(url, () => localSnapshot.restore)}))}<\/form> %$/;"	V
localSnapshot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^      val localSnapshot = createSnapshot$/;"	V
localSnapshot	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^          <form id={prevId} action={url} method="post">{SHtml.hidden(() => {snapshot.restore(); this.prevScreen; val localSnapshot = createSnapshot; S.redirectTo(url, () => localSnapshot.restore)})}<\/form> ++$/;"	V
localSnapshot	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^          {doNext(); val localSnapshot = createSnapshot; S.redirectTo(url, () => localSnapshot.restore)}))}<\/form> %$/;"	V
localSnapshot	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^      val localSnapshot = createSnapshot$/;"	V
locale	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    var locale = Locale.GERMANY \/\/ guess this is why its a var$/;"	v
locale	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    var locale = Locale.UK$/;"	v
locale	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    var locale = Locale.US$/;"	v
locale	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    var locale = new Locale("en", "AU")$/;"	v
locale	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    var locale: Locale$/;"	v
locale	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def locale: Locale = LiftRules.localeCalculator(containerRequest)$/;"	f
locale	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def locale: Box[Locale]$/;"	f
locale	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def locale: Box[Locale] = Box !! req.getLocale$/;"	f
locale	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  val locale: Box[Locale] = req.locale$/;"	V
locale	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var locale = Locale.getDefault$/;"	v
locale	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  var locale: Locale = Locale.getDefault$/;"	v
locale	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  object locale extends MappedLocale[T](this) {$/;"	o
localeCalculator	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var localeCalculator: Box[HTTPRequest] => Locale = defaultLocaleCalculator _$/;"	v
localeDisplayName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def localeDisplayName = ??("Locale")$/;"	f
localeField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def localeField: Box[MappedLocale[A]] = Empty$/;"	f
localeField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Record.scala	/^  def localeField: Box[LocaleField[MyType]] = Empty$/;"	f
localizationLookupFailureNotice	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var localizationLookupFailureNotice: Box[(String, Locale) => Unit] = Empty$/;"	v
localizeStringToXml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var localizeStringToXml: String => NodeSeq = _stringToXml _$/;"	v
locateAndCacheSnippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    def locateAndCacheSnippet(cls: String): Box[AnyRef] = {$/;"	f
locateMappedSnippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def locateMappedSnippet(name: String): Box[NodeSeq => NodeSeq] = _snippetMap.is.get(name)$/;"	f
locateSnippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def locateSnippet(name: String): Box[NodeSeq => NodeSeq] = {$/;"	f
location	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  lazy val location: Box[Loc[_]] = LiftRules.siteMap.flatMap(_.findLoc(this))$/;"	V
location	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def location: Box[sitemap.Loc[_]] = CurrentLocation.is$/;"	f
locationString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^    var locationString = ""$/;"	v
locator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^    val locator = locators.peek().asInstanceOf[Locator]$/;"	V
locators	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^  private val locators = new Stack[Locator]();$/;"	V
lock	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^  private def lock[T](l: Lock)(block: => T): T = {$/;"	f
lock	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private val lock = new ConcurrentLock$/;"	V
lock	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^          case _ => val lock = new AnyRef$/;"	V
lockName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^      val lockName = name + VarConstants.lockSuffix$/;"	V
lockObj	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^      val lockObj = s.synchronized {$/;"	V
lockSuffix	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  val lockSuffix="_lock_dude"$/;"	V
locs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^  private var locs: Map[String, Loc[_]] = Map.empty$/;"	v
log	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^  val log = new ListBuffer[Tracker]$/;"	V
log	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def log(e: Exception, msg: String) {$/;"	f
log	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def log(msg: String) = println("MockServletContext.log: " + msg)$/;"	f
log	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def log(msg: String, t: Throwable) {$/;"	f
log	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def log(x: Double): Double = java.lang.Math.log(x)$/;"	f
log	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/History.scala	/^  protected val log: Queue[(B, A)] = new Queue[(B, A)]$/;"	V
log	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^    var log = (x: Any) => ()$/;"	v
log	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/logging/ConsoleLogger.scala	/^  override def log(msg: String): Unit = Console.println(msg)$/;"	f
log	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/logging/Logged.scala	/^  def log(msg: String): Unit = {}$/;"	f
log	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def log[T](p: => Parser[T])(name: String): Parser[T] = Parser{ in =>$/;"	f
log	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def log[Q <% UnitParser](p: => Q)(name: String): UnitParser = new UnitParser {$/;"	f
log	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def log[T](p: => Parser[T])(name: String): Parser[T] = new Parser[T] {$/;"	f
log	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingParser.scala	/^  override def log(msg: String): Unit = {}$/;"	f
log	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^  override def log(msg: String) {}$/;"	f
log4jIsConfigured	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^    def log4jIsConfigured = LogManager.getLoggerRepository.getCurrentLoggers.hasMoreElements$/;"	f
logActorFailure	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private def logActorFailure(actor: scala.actors.Actor, why: Throwable) {$/;"	f
logComment	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/LoggedNodeFactory.scala	/^  val logComment   = false$/;"	V
logCompressLevel	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/LoggedNodeFactory.scala	/^  val logCompressLevel  = 1$/;"	V
logDBStuff	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^   private def logDBStuff(log: DBLog, len: Long) {$/;"	f
logFile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/Benchmark.scala	/^      val logFile = new java.io.FileWriter(args(1), true) \/\/ append, not overwrite$/;"	V
logFuncs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private var logFuncs: List[LogFunc] = Nil$/;"	v
logIfDump	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  private def logIfDump(request: Req, response: BasicResponse) {$/;"	f
logLimit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^  private def logLimit: Int = Math.sqrt(table.length).toInt$/;"	f
logLimit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashSet.scala	/^  private def logLimit: Int = Math.sqrt(table.length).toInt$/;"	f
logMeta	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^  protected def logMeta[T](description : String)(f : => T) : T = logMeta({ignore : T => description})(f)$/;"	f
logMeta	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^  protected def logMeta[T](description : T => String)(f : => T) : T = Helpers.calcTime(f) match {$/;"	f
logMock	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^      val logMock = new LiftLogger {$/;"	V
logNode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/LoggedNodeFactory.scala	/^  val logNode      = true$/;"	V
logProcInstr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/LoggedNodeFactory.scala	/^  val logProcInstr = false$/;"	V
logQuery	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def logQuery(query: String, time: Long) = p_queryLog.is += ((query, time))$/;"	f
logServiceRequestTiming	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var logServiceRequestTiming = true$/;"	v
logSnippetFailure	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  private def logSnippetFailure(sf: SnippetFailure) = Log.warn("Snippet Failure: " + sf)$/;"	f
logStatement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^  protected def logStatement[T](description : String)(f : => T) : T = logStatement({ignore : T => description})(f)$/;"	f
logStatement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^  protected def logStatement[T](description : T => String)(f : => T) : T = Helpers.calcTime(f) match {$/;"	f
logText	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/LoggedNodeFactory.scala	/^  val logText      = false$/;"	V
logTime	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def logTime[T](msg: String)(f: => T): T = {$/;"	f
logUnreadRequestVars	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var logUnreadRequestVars = true$/;"	v
logUnreadVal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  def logUnreadVal = false$/;"	f
logUnreadVal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  def logUnreadVal = true$/;"	f
logUnreadVal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  def logUnreadVal: Boolean$/;"	f
logUserIdIn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^  def logUserIdIn(uid: String): Unit$/;"	f
logUserIdIn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def logUserIdIn(id: String) {$/;"	f
logUserIn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def logUserIn(who: ModelType) {$/;"	f
logUserOut	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  def logUserOut(): Unit$/;"	f
loggedIn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/TestCond.scala	/^  def loggedIn(xhtml: NodeSeq): NodeSeq =$/;"	f
loggedInTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var loggedInTest: Box[() => Boolean] = Empty$/;"	v
loggedIn_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def loggedIn_? : Boolean = LiftRules.loggedInTest.map(_.apply()) openOr false$/;"	f
loggedIn_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/Facebook.scala	/^  def loggedIn_? : Boolean = S.param("fb_sig_user") match {$/;"	f
loggedIn_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def loggedIn_? = {$/;"	f
loggedOut	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/TestCond.scala	/^  def loggedOut(xhtml: NodeSeq): NodeSeq =$/;"	f
logger	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^class Log4JLogger(val logger: Logger) extends LiftLogger {$/;"	V
logger	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^class Slf4jLogger(val logger: Logger) extends LiftLogger {$/;"	V
logger	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^  case class LoggerDelegate(var logger: LiftLogger) extends LiftLogger {$/;"	v
loggerByClass	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  var loggerByClass: Class[AnyRef] => LiftLogger = _loggerCls _$/;"	v
loggerByName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  var loggerByName: String => LiftLogger = _logger$/;"	v
loggerSetup	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  var loggerSetup: () => Boolean = _log4JSetup _$/;"	v
loggingEnabled_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def loggingEnabled_? = !logFuncs.isEmpty$/;"	f
login	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^  override def login = {$/;"	f
login	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^  def login(conn: XMPPConnection) = conn.login(username, password)$/;"	f
login	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^class XMPPDispatcher(val connf: () => ConnectionConfiguration, val login: XMPPConnection => Unit) extends LiftActor {$/;"	V
login	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def login = {$/;"	f
loginAndRedirect	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  def loginAndRedirect(openId: String, onComplete: (Box[Identifier], Box[VerificationResult], Box[Exception]) => LiftResponse) {$/;"	f
loginFirst	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def loginFirst = If($/;"	f
loginForm	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  def loginForm: NodeSeq = <form method="post" action={"\/"+PathRoot+"\/"+LoginPath}>$/;"	f
loginMenuLoc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def loginMenuLoc: Box[Menu] = {$/;"	f
loginPageURL	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def loginPageURL = loginPath.mkString("\/","\/", "")$/;"	f
loginPath	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  lazy val loginPath = thePath(loginSuffix)$/;"	V
loginRedirect	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  object loginRedirect extends SessionVar[Box[String]](Empty)$/;"	o
loginSuffix	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def loginSuffix = "login"$/;"	f
loginUrl	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/Facebook.scala	/^  def loginUrl: String = "http:\/\/www.facebook.com\/login.php?api_key=" + FacebookRestApi.apiKey + "&v=1.0"$/;"	f
loginXhtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^  override def loginXhtml =$/;"	f
loginXhtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def loginXhtml = {$/;"	f
logout	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def logout = {$/;"	f
logoutCurrentUser	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def logoutCurrentUser = logUserOut()$/;"	f
logoutLink	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  def logoutLink: NodeSeq = <xml:group> <a href={"\/"+PathRoot+"\/"+LogOutPath}>Log Out<\/a><\/xml:group>$/;"	f
logoutMenuLoc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def logoutMenuLoc: Box[Menu] =$/;"	f
logoutPath	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  lazy val logoutPath = thePath(logoutSuffix)$/;"	V
logoutSuffix	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def logoutSuffix = "logout"$/;"	f
long	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  @deprecated type long    = scala.Long$/;"	T
long2Long	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def long2Long(x: Long) = new java.lang.Long(x)$/;"	f
long2bigDecimal	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  implicit def long2bigDecimal(l: Long): BigDecimal = apply(l)$/;"	f
long2bigInt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  implicit def long2bigInt(l: Long): BigInt = apply(l)$/;"	f
long2double	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def long2double(x: Long): Double = x.toDouble$/;"	f
long2float	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def long2float(x: Long): Float = x.toFloat$/;"	f
long2jvalue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  implicit def long2jvalue(x: Long) = JInt(x)$/;"	f
longArray	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/JSONSpec.scala	/^      val longArray = "[" + (1 to 100000).map(i => '"'+i.toString+'"').mkString(", ") + "]"$/;"	V
longCache	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static Long[] longCache = new Long[longUpBound - longLowBound + 1];$/;"	f	class:BoxesRunTime	file:
longColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def longColumnType = "BIGINT"$/;"	f
longColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def longColumnType = "FIXED(38)"$/;"	f
longColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def longColumnType = "NUMBER"$/;"	f
longColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def longColumnType: String$/;"	f
longForeignKeyColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def longForeignKeyColumnType = "BIGINT UNSIGNED"$/;"	f
longForeignKeyColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def longForeignKeyColumnType = "BIGINT"$/;"	f
longForeignKeyColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def longForeignKeyColumnType = "FIXED(38)"$/;"	f
longForeignKeyColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def longForeignKeyColumnType = "NUMBER"$/;"	f
longForeignKeyColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def longForeignKeyColumnType: String$/;"	f
longIndexColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def longIndexColumnType = "BIGINT IDENTITY NOT NULL"$/;"	f
longIndexColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def longIndexColumnType = "BIGINT NOT NULL AUTO_INCREMENT"$/;"	f
longIndexColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def longIndexColumnType = "BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY"$/;"	f
longIndexColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def longIndexColumnType = "BIGINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE KEY"$/;"	f
longIndexColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def longIndexColumnType = "BIGSERIAL"$/;"	f
longIndexColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def longIndexColumnType = "FIXED(38) DEFAULT SERIAL"$/;"	f
longIndexColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def longIndexColumnType = "NUMBER NOT NULL"$/;"	f
longIndexColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def longIndexColumnType: String$/;"	f
longJson	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/JSONSpec.scala	/^      val longJson = """{"command":"test","params":{"participants":"","subject":"You have been invited to play the Innovation Game: Buy a Feature","reply-to":"no-reply@innovationgames.com","body":"Dear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\nDear %name%,\\r\\n\\r\\nYou have been invited to play the Innovation Game(r) Buy a Feature to help us better understand what you're looking for in future products and services.\\r\\n\\r\\nTo play the game, click on the link below. This link will open a web site that will present you with a list of features. Each feature costs a certain amount of money. You will be given some money to spend on the features that you want to purchase. Since you probably won't have enough money to purchase everything you want, we encourage you to collaborate with other players to purchase features that you can't afford.\\r\\n\\r\\nHere are the details of the game.\\r\\n\\r\\nDate: %date%\\r\\n\\r\\nTime: %time%\\r\\n\\r\\nClick on this link to get see all of the features that are in this game: %featurelink%\\r\\n\\r\\nClick on this link to play the game: %playlink%\\r\\n\\r\\nHere are some additional tips for playing the game:\\r\\n\\r\\n* Your should enable pop-ups and cookies for the games.\\r\\n\\r\\nSincerely,\\r\\n\\r\\n%sendername%\\r\\n"}}"""$/;"	V
longJson	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/JSONSpec.scala	/^      val longJson =$/;"	V
longLowBound	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static int longLowBound = -128;$/;"	f	class:BoxesRunTime	file:
longString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/NoPosition.scala	/^  override def longString = toString$/;"	f
longString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/Position.scala	/^  def longString = lineContents+"\\n"+(" " * (column - 1))+"^"$/;"	f
longToTimeSpan	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  implicit def longToTimeSpan(in: Long): TimeSpan = TimeSpan(in)$/;"	f
longToTimeSpanBuilder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  implicit def longToTimeSpanBuilder(in: Long): TimeSpanBuilder = TimeSpanBuilder(in)$/;"	f
longUpBound	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static int longUpBound = 1024;$/;"	f	class:BoxesRunTime	file:
longValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  def longValue   = this.bigDecimal.longValue$/;"	f
longValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def longValue   = this.bigInteger.longValue$/;"	f
longWrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def longWrapper(x: Long)     = new runtime.RichLong(x)$/;"	f
look	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val look = (name.toLowerCase, if (clz ne null) Full(clz) else Empty)$/;"	V
lookForClasses	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private def lookForClasses(places: List[String]): Box[NodeSeq] = {$/;"	f
lookahead	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    private[this] val lookahead = new ListBuffer[A]  \/\/ = Nil$/;"	V
lookup	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def lookup(k: A): Tree[B] = $/;"	f
lookup	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def lookup(k: A): Tree[Nothing] = this$/;"	f
lookup	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def lookup(x: A): Tree[B]$/;"	f
lookup	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/NodeFactory.scala	/^        val lookup = it.find { x => nodeEquals(x, pre, name, attrSeq, scpe, children) };$/;"	V
lookup	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^    def lookup(xs:List[Decl]): ElemDecl = xs match {$/;"	f
lookup	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/IndexedStorage.scala	/^  def lookup(n: A): Option[Node] = theMap.get(n)$/;"	f
lookupElemDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^  def lookupElemDecl(Label: String): ElemDecl =  {$/;"	f
loop	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^    def loop(x : List[Char]) : List[Char] = x match {$/;"	f
loop	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^    def loop(x : List[Char]): List[Char] = (x: @unchecked) match {$/;"	f
loop	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^    def loop(html:NodeSeq): NodeSeq = {$/;"	f
loop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    def loop(l: List[A], res: List[B]): List[B] = l match {$/;"	f
loop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    def loop(lead: List[A], lag: List[A]): List[A] = lead match {$/;"	f
loop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    def loop(ys: List[A]): List[A] =$/;"	f
loop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Responder.scala	/^  def loop[A](r: Responder[Unit]): Responder[Nothing] = $/;"	f
loop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^    def loop(lo: Int): Stream[Int] =$/;"	f
loop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^    def loop(s: Stream[A]): Stream[B] = {$/;"	f
loop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^    var loop: Boolean = true$/;"	v
loopWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Responder.scala	/^  def loopWhile[A](cond: => Boolean)(r: Responder[Unit]): Responder[Unit] = $/;"	f
lossless	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  def lossless = new DefaultFormats {$/;"	f
losslessDate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  val losslessDate = new ThreadLocal(new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"))$/;"	V
lostPassword	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def lostPassword = {$/;"	f
lostPasswordMenuLoc	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^  override def lostPasswordMenuLoc: Box[Menu] = Empty$/;"	f
lostPasswordMenuLoc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def lostPasswordMenuLoc: Box[Menu] =$/;"	f
lostPasswordPath	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  lazy val lostPasswordPath = thePath(lostPasswordSuffix)$/;"	V
lostPasswordSuffix	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def lostPasswordSuffix = "lost_password"$/;"	f
lostPasswordXhtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def lostPasswordXhtml = {$/;"	f
lotto	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/Examples.scala	/^  val lotto = """$/;"	V
lotto	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/LottoExample.scala	/^  val lotto = Lotto(5, List(2, 45, 34, 23, 7, 5, 3), winners, None)$/;"	V
lotto	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^    val lotto: JObject = LottoExample.json$/;"	V
lotto1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/MergeExamples.scala	/^  val lotto1 = parse("""$/;"	V
lotto2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/MergeExamples.scala	/^  val lotto2 = parse("""$/;"	V
lowPriority	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^  override def lowPriority : PartialFunction[Any, Unit] = {$/;"	f
lowPriority	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def lowPriority: PartialFunction[Any, Unit] = Map.empty$/;"	f
lowPriority	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  protected def lowPriority: PartialFunction[Any, Unit] = Map.empty$/;"	f
lower	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val lower: Parser[Char] =$/;"	V
lowerOrNumber	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val lowerOrNumber: Parser[Char] =$/;"	V
lowerWord	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val lowerWord: Parser[String] =$/;"	V
lowestSetBit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def lowestSetBit: Int         = this.bigInteger.getLowestSetBit()$/;"	f
lrCache	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val lrCache = LiftRules.templateCache$/;"	V
lru	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/LRUSpec.scala	/^      val lru = new LRUMap[Int, Int](10)$/;"	V
lru	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/LRUSpec.scala	/^      val lru = new LRUMap[Int, Int](10, Empty, (k, v) => {expCnt += 1; k must_== v; k must be > 0; v must be < 11})$/;"	V
lru	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/LRUSpec.scala	/^      val lru = new LRUMap[Int, Int](10, Empty, (k, v) => {expCnt += 1; k must_== v; k must be > 0})$/;"	V
lsb	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^        val lsb = (b & 0x0f)$/;"	V
lst	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    val lst = parser.document(new MyReader(toParse.toCharArray(), 0))$/;"	V
lst	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^        val lst: Set[FT] = Set(filter(ret.map(v => v.getSingleton.getActualField(v, j.field).is.asInstanceOf[FT])) :_*)$/;"	V
lst	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^      val lst = peekList(1)$/;"	V
lst	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^      val lst = peekList(n + 1);$/;"	V
lt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^                        checked(deflt.filter((s: String) => s == v).isDefined)))$/;"	f
lt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^                    deflt: Seq[String],$/;"	f
lt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxSelect(opts: Seq[(String, String)], deflt: Box[String],$/;"	f
lt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def multiSelect(opts: Seq[(String, String)], deflt: Seq[String],$/;"	f
lt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def radio(opts: Seq[String], deflt: Box[String], func: String => Any,$/;"	f
lt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def select(opts: Seq[(String, String)], deflt: Box[String], func: String => Any, attrs: (String, String)*): Elem =$/;"	f
lt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def untrustedSelect(opts: Seq[(String, String)], deflt: Box[String],$/;"	f
lt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Ordering.scala	/^  override def lt(x: T, y: T): Boolean = compare(x, y) < 0$/;"	f
lt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/PartialOrdering.scala	/^  def lt(x: T, y: T): Boolean = lteq(x, y) && !equiv(x, y)$/;"	f
ltable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^    val ltable = last.table$/;"	V
lteq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Ordering.scala	/^  override def lteq(x: T, y: T): Boolean = compare(x, y) <= 0$/;"	f
lteq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/PartialOrdering.scala	/^  def lteq(x: T, y: T): Boolean$/;"	f
lv	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^    val lv = loadFactor$/;"	V
lv	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashSet.scala	/^    val lv = loadFactor$/;"	V
m	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val m = Meeting("The place", new DateTime(1256681210802L))$/;"	V
m	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^     val m = matcher$/;"	V
m	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^    val m = pattern.matcher(msg)$/;"	V
m	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^      val m = millis$/;"	V
m	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  private def m[T](implicit man: Manifest[T]): Manifest[T] = man$/;"	f
m	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    val m = p.matcher(body)$/;"	V
m	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  private def m[T](implicit man: Manifest[T]): Manifest[T] = man$/;"	f
m	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^      val m = representative.getMethod(method.getName, method.getParameterTypes : _*)$/;"	V
m	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^	  val m = SampleModel.find(2).open_!$/;"	V
m	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^	  val m = SampleModel.findAll().head$/;"	V
m	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^      var m = 0$/;"	v
m	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    var m = n$/;"	v
m	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    var m = 0$/;"	v
m	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^    var m = this$/;"	v
m	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashSet.scala	/^    var m = this$/;"	v
m	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^    val m = branchMask(p1, p2);$/;"	V
m	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^      val m = if (contains(k)) this - k else this$/;"	V
m	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^    val m = branchMask(p1, p2);$/;"	V
m	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^      val m = n - len$/;"	V
m	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^    val m =  classOf[String].getDeclaredMethod("format", classOf[String], classOf[Array[Object]])$/;"	V
m	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^        var m = off + (len >> 1)        \/\/ Small arrays, middle element$/;"	v
m	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^      val m = pattern.matcher(s)$/;"	V
m	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    val m = pattern.matcher(source)$/;"	V
m	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    val m = pattern.matcher(target)$/;"	V
m	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^    var m = new HashSet[String]()$/;"	v
m	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^    var m: MetaData = Null$/;"	v
m	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    val m = xName$/;"	V
m	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    var m = xmlProcInstr()$/;"	v
m	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^  val m = tr4( <hello><a\/><e\/><\/hello> );$/;"	V
m	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/RuleTransformer.scala	/^    var m: Seq[Node] = super.transform(n)$/;"	v
m2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val m2 = read[Meeting](ser)$/;"	V
m2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/RuleTransformer.scala	/^      val m2 = rule.transform(m)$/;"	V
ma	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^    val ma = new REMatcher(other, compiled)$/;"	V
mac	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^    val mac = Mac.getInstance(MAC_NAME)$/;"	V
madeline	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val madeline = Mixer.find(By(Mixer.name, "Madeline")).open_!$/;"	V
madeline	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val madeline = SampleModel.find(By(SampleModel.firstName, "Madeline")).open_!$/;"	V
main	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Jsonbench.scala	/^  def main(args: Array[String]) = {$/;"	f
main	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^  def main(args: Array[String]) = {$/;"	f
main	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^    val main = FlotInfo (idPlaceholder, datas, options)$/;"	V
main	/Users/Mads/Dev/logicOfScientificDiscovery/src/test/scala/LiftConsole.scala	/^  def main(args : Array[String]) {$/;"	f
main	/Users/Mads/Dev/logicOfScientificDiscovery/src/test/scala/sidewayscoding/AppTest.scala	/^  def main(args : Array[String]) {$/;"	f
main	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Application.scala	/^  def main(args: Array[String]) = {$/;"	f
main	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Tests.scala	/^  def main(args : Array[String]) : Unit = {$/;"	f
main	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/Benchmark.scala	/^  def main(args: Array[String]) {$/;"	f
main	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def main(args: Array[String]) {$/;"	f
main	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Properties.scala	/^  def main(args: Array[String]) {$/;"	f
main	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^  def main(args: Array[String]) {$/;"	f
main	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/testing/RegexTest.scala	/^  def main(args: Array[String]) = {$/;"	f
main	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/Main.scala	/^    def main(args: Array[String]) {$/;"	f
main	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingParser.scala	/^  def main(args:Array[String]): Unit = {$/;"	f
mainParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Surround.scala	/^      val mainParam = (S.attr.~("at").map(_.text).$/;"	V
make	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    def make(x: BigDecimal) = new Currency{val amount = x; override val _locale = locale}$/;"	f
make	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    def make(x: BigDecimal) = new Currency{val amount = x}$/;"	f
make	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    def make(x: BigDecimal): Currency$/;"	f
make	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^    implicit def make: Box[T] = Full(f())$/;"	f
make	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^    implicit def make: Box[T] = Full(f)$/;"	f
make	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  def apply1[T](box: Box[T]): Maker[T] = new Maker[T]{implicit def make: Box[T] = box}$/;"	f
make	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  def apply2[T](func: Box[() => Box[T]]): Maker[T] = new Maker[T]{implicit def make: Box[T] = func.flatMap(_.apply())}$/;"	f
make	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  def apply3[T](func: () => Box[T]): Maker[T] = new Maker[T]{implicit def make: Box[T] = func.apply()}$/;"	f
make	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  def apply[T](func: Box[() => T]): Maker[T] = new Maker[T]{implicit def make: Box[T] = func.map(_.apply())}$/;"	f
make	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  def apply[T](func:() => T): Maker[T] = new Maker[T]{implicit def make: Box[T] = Full(func())}$/;"	f
make	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  def apply[T](value: T): Maker[T] = new Maker[T]{implicit def make: Box[T] = Full(value)}$/;"	f
make	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  implicit def make: Box[T] = find(stack)$/;"	f
make	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  implicit def make: Box[T]$/;"	f
make	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  override implicit def make: Box[T] = super.make or find(_sub)$/;"	f
make	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Factory.scala	/^    override implicit def make: Box[T] = super.make or find(_sub) or Full(default.is.apply())$/;"	f
make	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def make[A](n: Int, elem: A): Array[A] = {$/;"	f
make	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def make[A](n: Int, elem: A): List[A] = {$/;"	f
make	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  def make[A](n: Int, elem: A): Stream[A] = $/;"	f
make	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^    def make: T = Nil$/;"	f
make	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^    def make: T = {$/;"	f
make	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^  def make: T$/;"	f
makeAjaxCall	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def makeAjaxCall(in: JsExp): JsExp = new JsExp {$/;"	f
makeAjaxCall	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def makeAjaxCall(in: JsExp, context: AjaxContext): JsExp = new JsExp {$/;"	f
makeBlowfishKey	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def makeBlowfishKey: Array[Byte] = KeyGenerator.getInstance("blowfish").generateKey.getEncoded$/;"	f
makeBox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  protected def makeBox(ind: Int, s: String) = {$/;"	f
makeBreak	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  protected def makeBreak() = { \/\/ using wrapping here...$/;"	f
makeCals	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarMonthViewDemo.scala	/^  private def makeCals = {$/;"	f
makeCells	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarMonthView.scala	/^    def makeCells(calendar: Calendar): NodeSeq = {$/;"	f
makeComment	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/LoggedNodeFactory.scala	/^  override def makeComment(s: String): Seq[Comment] = {$/;"	f
makeComment	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/NodeFactory.scala	/^  def makeComment(s: String): Seq[Comment] = $/;"	f
makeCopy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^  private def makeCopy(last: HashMap[A, B]) {$/;"	f
makeCopy	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashSet.scala	/^  private def makeCopy(last: HashSet[A]) {$/;"	f
makeField	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Xml.scala	/^    def makeField(name: String, value: String) = JField(name, JString(value))$/;"	f
makeFormElement	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  private def makeFormElement(name: String, func: AFuncHolder,$/;"	f
makeFunc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  private def makeFunc(func: PartialFunction[Req, BaseRecord => Box[LiftResponse]]) = new PartialFunction[Req, () => Box[LiftResponse]] {$/;"	f
makeHead	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarDayView.scala	/^  def makeHead(headCal: Calendar) = <tr><td><\/td>{$/;"	f
makeHead	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarMonthView.scala	/^    def makeHead(headCal: Calendar) = <tr><td><\/td>{$/;"	f
makeHead	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarWeekView.scala	/^  def makeHead(headCal: Calendar) = <tr><td><\/td>{$/;"	f
makeKeyJDBCFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def makeKeyJDBCFriendly(in: O): AnyRef$/;"	f
makeKeyJDBCFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def makeKeyJDBCFriendly(in : Int) = new _root_.java.lang.Integer(in)$/;"	f
makeKeyJDBCFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def makeKeyJDBCFriendly(in: Long) = new _root_.java.lang.Long(in)$/;"	f
makeKeyJDBCFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  def makeKeyJDBCFriendly(in: String) = in$/;"	f
makeMenuItem	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Menu.scala	/^  def makeMenuItem(path: List[Loc[_]]): Box[MenuItem] =$/;"	f
makeNode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/LoggedNodeFactory.scala	/^  override def makeNode(pre: String, label: String, attrSeq: MetaData,$/;"	f
makeNode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/NodeFactory.scala	/^  def makeNode(pre: String, name: String, attrSeq:MetaData, scpe: NamespaceBinding, children:Seq[Node]): A = {$/;"	f
makeObj	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Xml.scala	/^    def makeObj(name: String, f: => List[JValue]) = JObject(f map {$/;"	f
makePara	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  protected def makePara(ind: Int, s: String) = {$/;"	f
makeProcInstr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/LoggedNodeFactory.scala	/^  override def makeProcInstr(t: String, s: String): Seq[ProcInstr] = {$/;"	f
makeProcInstr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/NodeFactory.scala	/^  def makeProcInstr(t: String, s: String): Seq[ProcInstr] = $/;"	f
makeSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MultiMap.scala	/^  protected def makeSet: Set[B] = new HashSet[B]$/;"	f
makeText	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/LoggedNodeFactory.scala	/^  override def makeText(s: String) = {$/;"	f
makeText	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/NodeFactory.scala	/^  def makeText(s: String) = $/;"	f
makeTitle	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msgs.scala	/^    val makeTitle: (String) => String = {text =>$/;"	V
makeTransition	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^  protected def makeTransition(src: Int, dest: Int, label: _labelT ) {$/;"	f
makeTreeView	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^  def makeTreeView(id: String, jsObj: JsObj, loadTree : () => List[Tree], loadNode: (String) => List[Tree]): (String, JsExp) = {$/;"	f
makeTripleDESKey	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def makeTripleDESKey: Array[Byte] = KeyGenerator.getInstance("DESede").generateKey.getEncoded$/;"	f
makeUtf8	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/bootstrap/liftweb/Boot.scala	/^  private def makeUtf8(req: HTTPRequest) {$/;"	f
manager	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  val manager = new ConsumerManager$/;"	V
manifest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^case class FormBuilderLocator[T](func: (T, T => Unit) => NodeSeq)(implicit val manifest: Manifest[T])$/;"	V
manifest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    implicit def manifest: Manifest[ValueType]$/;"	f
manifest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  lazy val manifest = buildIt[Boolean]$/;"	V
manifest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  lazy val manifest = buildIt[Int]$/;"	V
manifest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  lazy val manifest = buildIt[String]$/;"	V
manyCharInt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val manyCharInt: Parser[Double] = (digit19 ~ digits ^^ {case x ~ xs => (x :: xs).mkString.toDouble}) |$/;"	V
manyToManyFields	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^  private var manyToManyFields: List[MappedManyToMany[_,_,_]] = Nil$/;"	v
map	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def map[B](f: A => B): Box[B] = Empty$/;"	f
map	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def map[B](f: A => B): Box[B] = Full(f(value))$/;"	f
map	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def map[B](f: A => B): Box[B] = this$/;"	f
map	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Diff.scala	/^  def map(f: JValue => JValue): Diff = {$/;"	f
map	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def map(f: JValue => JValue): JValue = {$/;"	f
map	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^      val map: _root_.scala.collection.immutable.Map[String, BindParam] = _root_.scala.collection.immutable.HashMap.empty ++ params.map(p => (p.name, p))$/;"	V
map	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LRU.scala	/^  private val map = loadFactor match {$/;"	V
map	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^  def map[T](f : (String) => T): List[T] = synchronized {$/;"	f
map	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^    val map: Map[String, String] = Map.empty$/;"	V
map	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BindHelpersSpec.scala	/^      val map = Map("hello" -> <h1><\/h1>, "world" -> <b><\/b>)$/;"	V
map	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    def map[A](f: ChoiceItem[T] => A) = items.map(f)$/;"	f
map	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^    def map[T](f: TransactionMonad => T): T =        f(this)$/;"	f
map	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^    def map[T](f: TransactionMonad => T): T =        withTxMandatory { f(this) }$/;"	f
map	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^    def map[T](f: TransactionMonad => T): T =        withTxNever { f(this) }$/;"	f
map	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^    def map[T](f: TransactionMonad => T): T =        withTxRequired { f(this) }$/;"	f
map	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^    def map[T](f: TransactionMonad => T): T =        withTxRequiresNew { f(this) }$/;"	f
map	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^    def map[T](f: TransactionMonad => T): T =        withTxSupports { f(this) }$/;"	f
map	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  def map[T](f: TransactionMonad => T): T$/;"	f
map	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      val map: Map[FT, MT] =$/;"	V
map	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  private[view] val map = new scala.collection.mutable.HashMap[String, TableEditorImpl[_]]$/;"	V
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  override def map[B](f: A => B): Array[B] = throw new Error()$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def map[B](f: A => B): Collection[B] = self map f$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^    def map[X](f: A => X) = e match {$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^    def map[Y](f: B => Y) = e match {$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  def map[B](f: Value => B): Iterator[B] = elements map f$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    override def map[B](f: A => B) : Projection[B] = new Projection[B] {$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def map[B](f: A => B): Iterable[B] = {$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def map[B](f: A => B) = self map f$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def map[B](f: A => B): Iterator[B] = new Iterator[B] {$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  final override def map[B](f: A => B): List[B] = {$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^  def map[B](f: A => B): Option[B] = $/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def map[B](f: A => B) : Projection[B] = new MapProjection[B](f)$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Responder.scala	/^  def map[B](f: A => B) = new Responder[B] {$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    override def map[B](f: A => B) : Projection[B] = new MapProjection(f)$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  override def map[B](f: A => B): Seq[B] = {$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def map[B](f: A => B): Seq[B] = self map f$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override def map[B](f: A => B): Stream[B] =$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedMap.scala	/^      val map = SortedMap.this.rangeImpl(from,until);$/;"	V
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set.scala	/^  override def map[B](f: A => B): Set[B] =$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    override def map[B](f: A => B) : Projection0[B] = new MapProjection[B](f)$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    override def map[B](f : ((K,E)) => B) : MutableIterable.Projection[B] = super[MutableIterableProjection].map(f);$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^    override def map[B](f : A => B) : Projection[B] = new Map[B](f);$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterator.scala	/^  override def map[B](f: A => B) : MutableIterator[B] = new Map(f);$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^    override def map[B](f : A => B) : Projection[B] = new Map[B](f);$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SeqIterator.scala	/^    override def map[C](g : B => C) : SeqIterator[K,C] = $/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SeqIterator.scala	/^  override def map[B](f: A => B) : SeqIterator[K,B] = new Map[B](f);$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Tests.scala	/^    val map = new TreeMap[String,Integer];$/;"	V
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  final override def map[b](f: Any => b): Array[b] = {$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/DetWordAutom.scala	/^    var map = new scala.collection.immutable.ListMap[Int,Int]$/;"	v
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^    var map = new scala.collection.immutable.ListMap[Int,Int]$/;"	v
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/Parsers.scala	/^    def map[B](f: A => B) = new Parser[B] {$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def map[U](f: Nothing => U) = this$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def map[U](f: T => U) = Success(f(result), next)$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def map[U](f: T => U): ParseResult[U]$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def map[U](f: T => U): Parser[U] \/\/= flatMap{x => success(f(x))}$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def map[U](f: Nothing => U) = this$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def map[U](f: T => U) = Success(f(result), next)$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def map[U](f: T => U): ParseResult[U]$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def map(f: MetaData => Text): List[Text] = f(this)::(next map f)$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^  def map(f: Node => NodeSeq): NodeSeq = flatMap(f)$/;"	f
map	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  override def map(f: MetaData => Text): List[Text] = Nil$/;"	f
map2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def map2[A,B,C](xs: List[A], ys: List[B])(f: (A, B) => C): List[C] = {$/;"	f
map3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def map3[A,B,C,D](xs: List[A], ys: List[B], zs: List[C])(f: (A, B, C) => D): List[D] = {$/;"	f
mapBack	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^        val mapBack: HashMap[String, KeyType] = new HashMap$/;"	V
mapConserve	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def mapConserve[A <: AnyRef](xs: List[A])(f: A => A): List[A] = {$/;"	f
mapElements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^  def mapElements[C](f: B => C) : Map.Projection[A,C] = new Map.Projection[A,C] {$/;"	f
mapElements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/MapProxy.scala	/^  override def mapElements[C](f: B => C) = self mapElements f$/;"	f
mapFieldTitleForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def mapFieldTitleForm[T](func: (NodeSeq, Box[NodeSeq], NodeSeq) => T): List[T] =$/;"	f
mapFieldTitleForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def mapFieldTitleForm[T](toMap: A,$/;"	f
mapFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def mapFunc(in: AFuncHolder): String = {$/;"	f
mapFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def mapFunc(name: String, inf: AFuncHolder): String = {$/;"	f
mapFuncToURI	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def mapFuncToURI(uri: String, f: () => Unit): String = {$/;"	f
mapPartial	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def mapPartial[U](f: PartialFunction[Nothing, U], error: Nothing => String): ParseResult[U] = this$/;"	f
mapPartial	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def mapPartial[U](f: PartialFunction[T, U], error: T => String): ParseResult[U]   $/;"	f
mapPartial	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def mapPartial[U](f: PartialFunction[T, U], error: T => String): ParseResult[U] $/;"	f
mapPartial	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def mapPartial[U](f: PartialFunction[Nothing, U], error: Nothing => String): ParseResult[U] = this$/;"	f
mapPartial	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def mapPartial[U](f: PartialFunction[T, U], error: T => String): ParseResult[U]   $/;"	f
mapPartial	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def mapPartial[U](f: PartialFunction[T, U], error: T => String): ParseResult[U] $/;"	f
mapResource	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^  def mapResource(s: String) = ("\/webapp\/" + s).replaceAll("\/\/", "\/")$/;"	f
mapSnippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def mapSnippet(name: String, func: NodeSeq => NodeSeq) {_snippetMap.set(_snippetMap.is.update(name, func))}$/;"	f
mapToAttrs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def mapToAttrs(in: Map[String, String]): MetaData =$/;"	f
mapToType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  implicit def mapToType[T, A<:Mapper[A]](in : MappedField[T, A]): T = in.is$/;"	f
mappedAppliers	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private val mappedAppliers = new HashMap[(String, Box[Class[(C forSome {type C})]]), (A, AnyRef) => Unit];$/;"	V
mappedCallbacks	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private var mappedCallbacks: List[(String, Method)] = Nil$/;"	v
mappedColumnInfo	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private var mappedColumnInfo: SortedMap[String, MappedField[AnyRef, A]] = TreeMap()$/;"	v
mappedColumns	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private var mappedColumns: SortedMap[String, Method] = TreeMap()$/;"	v
mappedFieldList	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private[mapper] var mappedFieldList: List[FieldHolder] = Nil; \/\/ new Array[Triple[String, Method, MappedField[Any,Any]]]();$/;"	v
mappedFields	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def mappedFields: Seq[BaseMappedField];$/;"	f
mappedFields	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  lazy val mappedFields: Seq[BaseMappedField] = mappedFieldList.map(f => f.field)$/;"	V
mappedFieldsForModel	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  lazy val mappedFieldsForModel: List[MappedField[_, A]] = mappedFieldList.map(_.field)$/;"	V
mapper	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Jsonbench.scala	/^    val mapper = new ObjectMapper$/;"	V
mapper	/Users/Mads/Dev/logicOfScientificDiscovery/project/build/LogicOfScientificDiscovery.scala	/^	val mapper = "net.liftweb" % "lift-mapper" % "2.0-M2" % "compile" $/;"	V
mapperAccessMethods	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val mapperAccessMethods = findMagicFields(this, this.getClass.getSuperclass)$/;"	V
mapping	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^    val mapping = mappingOf(mf.erasure)$/;"	V
mappingOf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  private[json] def mappingOf(clazz: Class[_]) = {$/;"	f
mappingToString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^  @deprecated def mappingToString[B1 >: B](p: (A, B1)) =$/;"	f
mappings	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  private val mappings = new Memo[Class[_], Mapping]$/;"	V
maps	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BindHelpersSpec.scala	/^      val maps = List(Map("hello" -> <h1><\/h1>, "world" -> <b><\/b>))$/;"	V
margin	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def margin: Box[Int] = Empty \/\/ number of pixels$/;"	f
mark	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    def mark = { curMark = cur; curMarkSegment = curSegmentIdx }$/;"	f
mark	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/Inclusion.scala	/^    val mark = new Array[Int](max)$/;"	V
markUpdated	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^  private def markUpdated(key: A, ov: Option[B], delta: Int) { $/;"	f
markUpdated	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashSet.scala	/^  private def markUpdated(elem: A, del: Boolean) { $/;"	f
markedForTermination	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] var markedForTermination = false$/;"	v
markupDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def markupDecl(): Unit = ch match {$/;"	f
markupDecl1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def markupDecl1() = {$/;"	f
mask	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^  protected final def mask(n: Int): Int = 1 << (n & 0x1F)$/;"	f
mask	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def mask(i : Int, mask : Int) = i & (complement(mask - 1) ^ mask)$/;"	f
mask	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def mask(i : Long, mask : Long) = i & (complement(mask - 1) ^ mask)$/;"	f
mask	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  private var mask = actualInitialSize - 1;;$/;"	v
mask32	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def mask32: Int = {$/;"	f
mask64	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def mask64: Long = {$/;"	f
maskToBit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  def maskToBit(n: Long) = {$/;"	f
masked	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-imaging/src/main/scala/net/liftweb/imaging/ImageHelpers.scala	/^      val masked = new BufferedImage(standardColorModel, standardColorModel.createCompatibleWritableRaster(source.getWidth, source.getHeight), standardColorModel.isAlphaPremultiplied, null) $/;"	V
matchData	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def matchData = new Iterator[Match] {$/;"	f
matchResToBoolean	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^  implicit def matchResToBoolean(in: REMatcher): Boolean = {$/;"	f
matchStr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^  lazy val matchStr: Box[String] =$/;"	V
match_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  def match_?(toMatch : String) = {$/;"	f
matched	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    val matched = new ArrayBuffer[A]$/;"	V
matched	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    val matched = new ArrayBuffer[A]$/;"	V
matched	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def matched: String = $/;"	f
matcher	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^  private val matcher = compiled.matcher(str)$/;"	V
matcher	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    private val matcher = regex.pattern.matcher(source)$/;"	V
matches	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^  lazy val matches = matcher.find$/;"	V
matches	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^  private def matches(gs1: List[UGP], gs2: List[UGP]): Option[(() => Unit, () => Any, () => Any)] =$/;"	f
matrix	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LD.scala	/^    def matrix(word: List[Char], pos: Int, dist: List[Int]): List[Int] =$/;"	f
max	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^    val max = str.length \/ 2$/;"	V
max	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthValidator.scala	/^    val max = (currentTimeMsec + MAX_TIMESTAMP_AGE_MSEC + 500) \/ 1000L$/;"	V
max	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def max: Box[Double] = None$/;"	f
max	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val max = omax openOr _root_.java.lang.Long.MAX_VALUE$/;"	V
max	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val max = params.foldRight(Empty.asInstanceOf[Box[Long]]){(a,b) => a match {case MaxRows(n) => Full(n); case _ => b}}$/;"	V
max	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  def max (that: BigDecimal): BigDecimal =$/;"	f
max	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def max (that: BigInt): BigInt = new BigInt(this.bigInteger.max(that.bigInteger))$/;"	f
max	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    var max = xs.next$/;"	v
max	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def max[A <% Ordered[A]](seq: Iterable[A]): A = {$/;"	f
max	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def max(x: Double, y: Double): Double = java.lang.Math.max(x, y)$/;"	f
max	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def max(x: Float, y: Float): Float = java.lang.Math.max(x, y)$/;"	f
max	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def max(x: Int, y: Int): Int = java.lang.Math.max(x, y)$/;"	f
max	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def max(x: Long, y: Long): Long = java.lang.Math.max(x, y)$/;"	f
max	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^        val max = sourceOffset + (sourceCount - targetCount)$/;"	V
max	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^  def max: A = if (size0 > 1) array(1).asInstanceOf[A] else throw new NoSuchElementException("queue is empty")$/;"	f
max	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueueProxy.scala	/^  override def max: A = self.max$/;"	f
max	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedPriorityQueue.scala	/^  override def max: A = synchronized { super.max }$/;"	f
max	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichDouble.scala	/^  def max(y: Double): Double = Math.max(x, y)$/;"	f
max	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichFloat.scala	/^  def max(y: Float) = Math.max(x, y)$/;"	f
max	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichInt.scala	/^  def max(that: Int): Int = if (start > that) start else that$/;"	f
max	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichLong.scala	/^  def max(y: Long): Long = if (x > y) x else y$/;"	f
max	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/Inclusion.scala	/^    val max = 1 + dfa1.nstates * dfa2.nstates$/;"	V
max	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/SimpleTokenizer.scala	/^  private def max(x: Int, y: Char): Int = if (x > y) x else y$/;"	f
maxCached	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  private val maxCached = 512$/;"	V
maxCached	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  private val maxCached = 1024$/;"	V
maxConcurrentRequests	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var maxConcurrentRequests = 2$/;"	v
maxHistory	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/History.scala	/^  val maxHistory: Int = 1000$/;"	V
maxId	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  final def maxId = topId$/;"	f
maxInactive	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^      val maxInactive = httpSession.maxInactiveInterval.toInt$/;"	V
maxInactiveInterval	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPSession.scala	/^  def maxInactiveInterval: Long$/;"	f
maxInactiveInterval	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletSession.scala	/^  def maxInactiveInterval: Long = session getMaxInactiveInterval$/;"	f
maxLen	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  def maxLen(len: Int, msg: => String): String => List[FieldError] = s =>$/;"	f
maxLen	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^abstract class MappedString[T<:Mapper[T]](val fieldOwner: T,val maxLen: Int) extends MappedField[String, T] {$/;"	V
maxLen	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^abstract class MappedStringForeignKey[T<:Mapper[T],O<:KeyedMapper[String, O]](override val fieldOwner: T, foreign: => KeyedMetaMapper[String, O],override val maxLen: Int)$/;"	V
maxLen	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^abstract class MappedStringIndex[T<:Mapper[T]](override val fieldOwner: T, override val maxLen: Int) extends MappedUniqueId[T](fieldOwner, maxLen) with IndexedField[String] {$/;"	V
maxLen	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^abstract class MappedUniqueId[T<:Mapper[T]](override val fieldOwner: T, override val maxLen: Int) extends MappedString[T](fieldOwner, maxLen) {$/;"	V
maxMimeFileSize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var maxMimeFileSize: Long = 7 * 1024 * 1024$/;"	v
maxMimeSize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var maxMimeSize: Long = 8 * 1024 * 1024$/;"	v
maxNumOfSegments	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    private[this] val maxNumOfSegments = 10000$/;"	V
maxPoolSize	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  protected def maxPoolSize = 4$/;"	f
maxSelectLimit	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def maxSelectLimit : String = _root_.java.lang.Long.MAX_VALUE.toString$/;"	f
maxSelectLimit	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  override def maxSelectLimit = "0";$/;"	f
maxSelectLimit	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  override def maxSelectLimit = "ALL"$/;"	f
maxSize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^class LRUMap[K, V](val maxSize: Int, loadFactor: Box[Float], expiredFunc: ((K, V) => Unit)*) extends LinkedListElem[K, V] {$/;"	V
maxVal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  def maxVal(len: Int, msg: => String): Int => List[FieldError] = s =>$/;"	f
maxii	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  var maxii = 0$/;"	v
maybeSuffix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModelParser.scala	/^  def maybeSuffix(s: RegExp) = token match {	$/;"	f
maybeWrite	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^  private def maybeWrite(performWrite: Boolean, logFunc: (=> AnyRef) => Unit, connection: SuperConnection) (makeSql: () => String) : String ={$/;"	f
mcAmount1	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val mcAmount1 = r.param("mc_amount1")$/;"	V
mcAmount2	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val mcAmount2 = r.param("mc_amount2")$/;"	V
mcAmount3	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val mcAmount3 = r.param("mcamount3")$/;"	V
mcCurrency	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val mcCurrency = r.param("mc_currency")$/;"	V
mcFee	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val mcFee = r.param("mc_fee")$/;"	V
mcGross	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val mcGross = r.param("mc_gross")$/;"	V
md	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^    val md = _root_.java.security.MessageDigest.getInstance("MD5")$/;"	V
md	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/gravatar/Gravatar.scala	/^    val md: MessageDigest = MessageDigest.getInstance("MD5")$/;"	V
md	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^  val md = new MessageDispatcher(this)$/;"	V
md	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^    val md = rs.getMetaData$/;"	V
md	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^        val md = connection.getMetaData$/;"	V
md	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^      val md = connection.getMetaData$/;"	V
md	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^    val md = connection.getMetaData$/;"	V
md	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^          val md = conn.getMetaData$/;"	V
md	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/ScalaBeanInfo.scala	/^  private val md = $/;"	V
md5	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def md5(in: Array[Byte]): Array[Byte] = (MessageDigest.getInstance("MD5")).digest(in)$/;"	f
md5	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def md5(in: String): String = new String((new Base64) encode md5(in.getBytes("UTF-8")))$/;"	f
med3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^    def med3(a: Int, b: Int, c: Int) = {$/;"	f
mediumPriority	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def mediumPriority: PartialFunction[Any, Unit] = Map.empty$/;"	f
mediumPriority	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  protected def mediumPriority: PartialFunction[Any, Unit] = Map.empty$/;"	f
members	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val members = rep1sep(pair, spaces ~ ',' ~ spaces)$/;"	V
memo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val memo = r.param("memo")$/;"	V
memoize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^    def memoize(x: A, f: A => R): R = synchronized {$/;"	f
memsize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^  protected final def memsize(n: Int): Int = offset(n + 31)$/;"	f
menu	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def menu = _menu$/;"	f
menu_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  private[sitemap] def menu_=(m: Menu) {$/;"	f
menus	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^  lazy val menus: List[Menu] = locs.values.map(_.menu).toList$/;"	V
menus	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def menus: List[Menu] =$/;"	f
menus	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^def menus: List[Menu] = sitemap \/\/ issue 182$/;"	f
meow	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val meow = SampleTag.find(By(SampleTag.tag, "Meow")).open_!$/;"	V
merge	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Merge.scala	/^    def merge(other: JValue): JValue = Merge.merge(this, other)$/;"	f
merge	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Merge.scala	/^  def merge(val1: JValue, val2: JValue): JValue = (val1, val2) match {$/;"	f
merge	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^  private[http] def merge(xhtml: NodeSeq, req: Req): Node = {$/;"	f
merge	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^  def merge[T](e: Either[T, T]) = e match {$/;"	f
merge	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    def merge(l1: List[A], l2: List[A]): List[A] = {$/;"	f
merge	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def merge(larger: GBTree[A,B]) = larger$/;"	f
merge	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def merge(larger: aNode): GBTree[A,B] = larger match {$/;"	f
merge	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def merge(t: aNode): aNode$/;"	f
merge	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  final def merge[S >: Value](that : AssocMap[Key, S]) : AssocMap[Key, S] = (this, that) match {$/;"	f
mergeBindAttrs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^   private def mergeBindAttrs(in: NodeSeq, nameSpace: String, attrs: MetaData): NodeSeq = attrs match {$/;"	f
mergeFields	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Merge.scala	/^  private def mergeFields(vs1: List[JField], vs2: List[JField]): List[JField] = {$/;"	f
mergeRec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Merge.scala	/^    def mergeRec(xleft: List[JField], yleft: List[JField]): List[JField] = xleft match {$/;"	f
mergeRec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Merge.scala	/^    def mergeRec(xleft: List[JValue], yleft: List[JValue]): List[JValue] = xleft match {$/;"	f
mergeToHtmlHead	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HeadHelper.scala	/^  def mergeToHtmlHead(xhtml: NodeSeq) : NodeSeq = {$/;"	f
mergeVals	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Merge.scala	/^  private def mergeVals(vs1: List[JValue], vs2: List[JValue]): List[JValue] = {$/;"	f
mergedLottoResult	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/MergeExamples.scala	/^  val mergedLottoResult = parse("""$/;"	V
message	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^          val message = new MimeMessage(session)$/;"	V
message	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private[http] def message(msg: NodeSeq, notice: NoticeType.Value) {p_notice += ((notice, msg, Empty))}$/;"	f
message	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private[http] def message(msg: String, notice: NoticeType.Value) {message(Text(msg), notice)}$/;"	f
messageCallback	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private var messageCallback: HashMap[String, S.AFuncHolder] = new HashMap$/;"	v
messageChain	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def messageChain: String = (this :: chainList).map(_.msg).mkString(" <- ")$/;"	f
messageHandler	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  protected def messageHandler: PartialFunction[T, Unit]$/;"	f
messageHandler	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^    protected def messageHandler = {$/;"	f
messageHandler	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ActorPingSpec.scala	/^    protected def messageHandler = {$/;"	f
messageHandler	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^  override def messageHandler = {$/;"	f
messageHandler	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def messageHandler = {$/;"	f
messageHandler	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  protected def messageHandler: PartialFunction[Any, Unit] =$/;"	f
messageHandler	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^    def messageHandler = {$/;"	f
messageHandler	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    protected def messageHandler = {$/;"	f
messageHandler	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  protected def messageHandler = reaction$/;"	f
messageHandler	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^    protected def messageHandler =$/;"	f
messageHandler	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^    protected def messageHandler = {$/;"	f
messageHandler	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^  protected def messageHandler = {$/;"	f
messageHandler	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^  protected def messageHandler = {$/;"	f
messageHandler	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^      protected def messageHandler =$/;"	f
messageHandler	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    protected def messageHandler = $/;"	f
messageHandler	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^    protected def messageHandler =$/;"	f
messageHandler	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^  protected def messageHandler = {$/;"	f
messageQueue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^  private val messageQueue = queueCreate[Message]$/;"	V
messageXml1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^  val messageXml1 = $/;"	V
messageXml2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^  val messageXml2 = $/;"	V
messageXml3	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^  val messageXml3 = <message expiry_date="20091126"><stats count="0"><\/stats><\/message>$/;"	V
messages	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def messages(f: => List[(NodeSeq, Box[String])]): List[NodeSeq] = f map (_._1)$/;"	f
messagesById	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def messagesById(id: String)(f: => List[(NodeSeq, Box[String])]): List[NodeSeq] = f filter (_._2 map (_ equals id) openOr false) map (_._1)$/;"	f
messagesFromList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private[http] def messagesFromList(list: List[(NoticeType.Value, NodeSeq, Box[String])]) {list foreach (p_notice += _)}$/;"	f
meta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarDayView.scala	/^class CalendarDayView(val when: Calendar, val meta: DayViewMeta) {$/;"	V
meta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarMonthView.scala	/^class CalendarMonthView(val when: Calendar, val meta: MonthViewMeta) {$/;"	V
meta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarWeekView.scala	/^class CalendarWeekView(val when: Calendar, val meta: WeekViewMeta) {$/;"	V
meta	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^    val meta = conn.getMetaData$/;"	V
meta	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def meta: KeyedMetaMapper[KeyType, KMType]$/;"	f
meta	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^  abstract class JxBuiltSelect[KeyType, FieldType, KMType <: KeyedMapper[KeyType, KMType]](val meta: KeyedMetaMapper[KeyType, KMType],$/;"	V
meta	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^  abstract class JxSelect[KeyType, FieldType, KMType <: KeyedMapper[KeyType, KMType]](val meta: KeyedMetaMapper[KeyType, KMType],$/;"	V
meta	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^  class JxCheckbox[KeyType, KMType <: KeyedMapper[KeyType, KMType]](val meta: KeyedMetaMapper[KeyType, KMType],$/;"	V
meta	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^  class JxEnumSelect[KeyType, Enum <: Enumeration, KMType <: KeyedMapper[KeyType, KMType]](val meta: KeyedMetaMapper[KeyType, KMType],$/;"	V
meta	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^  class JxTextfield[KeyType, KMType <: KeyedMapper[KeyType, KMType]](val meta: KeyedMetaMapper[KeyType, KMType],$/;"	V
meta	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^              val meta = rs.getMetaData$/;"	V
meta	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val meta = rs.getMetaData$/;"	V
meta	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/DBRecord.scala	/^  def meta: DBMetaRecord[MyType]$/;"	f
meta	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Record.scala	/^  def meta: MetaRecord[MyType]$/;"	f
metaData	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  lazy val metaData = connection.getMetaData$/;"	V
metaData	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^    val metaData = attribStack.pop$/;"	V
metaEntries	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^  def metaEntries : List[DBMetaEntry] = executedStatements.filter(_.isInstanceOf[DBMetaEntry]).reverse.asInstanceOf[List[DBMetaEntry]]$/;"	f
metaFields	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  def metaFields() : List[OwnedField[BaseRecord]] = fieldList.map(fh => fh.field)$/;"	f
metaMapper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^    def metaMapper = meta$/;"	f
metaMapper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  def metaMapper: T with MetaMapper[T]$/;"	f
metaOwner	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    private class TimedEventHandler(val metaOwner: Meta) extends LiftActor {$/;"	V
metaOwner	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  private class TimedEventManager(val metaOwner: Meta) extends LiftActor {$/;"	V
meth	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty6AsyncProvider.scala	/^      val meth = cc.getMethod("getContinuation", classOf[HTTPRequest], classOf[AnyRef])$/;"	V
meth	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty7AsyncProvider.scala	/^      val meth = cc.getMethod("getContinuation", classOf[javax.servlet.ServletRequest])$/;"	V
meth	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^          val meth = that.getClass().getMethod("typeArguments", null)$/;"	V
methCacheLock	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  private val methCacheLock = new ConcurrentLock$/;"	V
methInx	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^    val methInx = methName.lastIndexOf(".")$/;"	V
method	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^  def method = "DELETE"$/;"	f
method	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^  def method = "GET"$/;"	f
method	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^  def method = "HEAD"$/;"	f
method	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^  def method = "POST"$/;"	f
method	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^  def method = "PUT"$/;"	f
method	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^  def method: String$/;"	f
method	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^case class UnknownRequest(val method: String) extends RequestType$/;"	V
method	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def method: String$/;"	f
method	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def method: String = req.getMethod$/;"	f
method	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  val method: String = req.method$/;"	V
method	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var method = "GET"$/;"	v
method	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val method = clazz.getMethod(methName, argTypes : _*)$/;"	V
methodAlts	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                            val methodAlts = List(method, Helpers.camelCase(method),$/;"	V
methodCache	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  private val methodCache: LRU[(String, String, Int), List[Method]] = new LRU(5000)$/;"	V
methodNames	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                            val methodNames = inst.getClass.getMethods().map(_.getName).toList.removeDuplicates$/;"	V
meths	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^          val meths = c.getDeclaredMethods.toList.$/;"	V
mf	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^    def mf(in: Node): NodeSeq = in match {$/;"	f
mi	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^          val mi = buildMapper(rs)$/;"	V
mi	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^        val mi = buildMapper(rs)$/;"	V
mid	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^        val mid = (hi + lo) \/ 2$/;"	V
mid	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/ops.scala	/^      val mid = (start + end) \/ 2$/;"	V
mid	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^      val mid = (lo+hi) \/ 2$/;"	V
mid	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/OffsetPosition.scala	/^      val mid = (hi + lo) \/ 2$/;"	V
middle	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^      val middle = f(left._2, key, value)$/;"	V
millis	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  class TimeSpan(val millis: Long) {$/;"	V
millis	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def millis = System.currentTimeMillis$/;"	f
millisToDays	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def millisToDays(millis: Long): Long = millis \/ (1000L * 60L * 60L * 24L)$/;"	f
mimeType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^abstract class FileParamHolder(val name: String, val mimeType: String,$/;"	V
mimeType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^class InMemFileParamHolder(override val name: String, override val mimeType: String,$/;"	V
mimeType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^class OnDiskFileParamHolder(override val name: String, override val mimeType: String,$/;"	V
mimeType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPContext.scala	/^  def mimeType(path: String): Box[String]$/;"	f
mimeType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletContext.scala	/^  def mimeType(path: String) = Box !! ctx.getMimeType(path)$/;"	f
mimeUpload	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^    val mimeUpload = (new ServletFileUpload)$/;"	V
min	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LD.scala	/^  private def min(a: Int, b: Int): Int = if (a < b) a else b$/;"	f
min	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LD.scala	/^  private def min(a: Int, b: Int, c: Int): Int = min(min(a,b), c)$/;"	f
min	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthValidator.scala	/^    val min = (currentTimeMsec - MAX_TIMESTAMP_AGE_MSEC + 500) \/ 1000L$/;"	V
min	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def min: Box[Double] = None$/;"	f
min	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  def min (that: BigDecimal): BigDecimal =$/;"	f
min	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def min (that: BigInt): BigInt = new BigInt(this.bigInteger.min(that.bigInteger))$/;"	f
min	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    var min = xs.next$/;"	v
min	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def min[A <% Ordered[A]](seq: Iterable[A]): A = {$/;"	f
min	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def min(x: Double, y: Double): Double = java.lang.Math.min(x, y)$/;"	f
min	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def min(x: Float, y: Float): Float  = java.lang.Math.min(x, y)$/;"	f
min	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def min(x: Int, y: Int): Int = java.lang.Math.min(x, y)$/;"	f
min	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def min(x: Long, y: Long): Long  = java.lang.Math.min(x, y)$/;"	f
min	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    val min = sourceOffset + targetCount - 1$/;"	V
min	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Set.scala	/^     val min = Math.min(size, that.size)$/;"	V
min	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    val min = if (length < added.length) length else added.length$/;"	V
min	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichDouble.scala	/^  def min(y: Double): Double = Math.min(x, y)$/;"	f
min	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichFloat.scala	/^  def min(y: Float) = Math.min(x, y)$/;"	f
min	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichInt.scala	/^  def min(that: Int): Int = if (start < that) start else that$/;"	f
min	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichLong.scala	/^  def min(y: Long): Long = if (x < y) x else y$/;"	f
minCached	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  private val minCached = -512$/;"	V
minCached	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  private val minCached = -1024$/;"	V
minLen	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  def minLen(len: Int, msg: => String): String => List[FieldError] = s =>$/;"	f
minLen	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^      val minLen = Math.min(thisLen, thatLen)$/;"	V
minOne	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    val minOne = len - 1$/;"	V
minTimestamp	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthValidator.scala	/^    val minTimestamp = (millis - MAX_TIMESTAMP_AGE_MSEC + 500) \/ 1000$/;"	V
minVal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  def minVal(len: Int, msg: => String): Int => List[FieldError] = s =>$/;"	f
mintag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    var mintag = Math.MAX_INT$/;"	v
minute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    def minute = minutes$/;"	f
minutes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    def minutes = TimeSpan(outer.minutes(len))$/;"	f
minutes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def minutes(in: Long): Long = seconds(in) * 60L$/;"	f
missingChildren	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^  val missingChildren =$/;"	V
mix	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def mix(nodeSeq: NodeSeq): NodeSeq = nodeSeq match {$/;"	f
mixed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModelParser.scala	/^  def mixed = {$/;"	f
mixinAttributes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def mixinAttributes(out: Elem)(in: NodeSeq): NodeSeq = {$/;"	f
mkConn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^      def mkConn = DriverManager.getConnection("jdbc:derby:" + filePath + ";create=true")$/;"	f
mkConn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^      def mkConn = DriverManager.getConnection("jdbc:h2:" + filePath + "\/test.db")$/;"	f
mkConn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^      def mkConn = DriverManager.getConnection("jdbc:h2:mem:lift;DB_CLOSE_DELAY=-1")$/;"	f
mkConn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^      def mkConn = DriverManager.getConnection("jdbc:jtds:sqlserver:\/\/localhost\/lift", "lift", "lift")$/;"	f
mkConn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^      def mkConn = DriverManager.getConnection("jdbc:oracle:thin:lift\/lift@\/\/localhost:1521\/lift")$/;"	f
mkConn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^      def mkConn = DriverManager.getConnection("jdbc:postgresql:\/\/localhost\/lift", "lift", "lift")$/;"	f
mkConn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^      def mkConn = DriverManager.getConnection("jdbc:sapdb:\/\/localhost:7210\/lift?user=lift&password=lift")$/;"	f
mkConn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^      def mkConn = {$/;"	f
mkConn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def mkConn : Connection$/;"	f
mkContainer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^      def mkContainer(t: Type, k: Kind, valueTypeIndex: Int, factory: Mapping => Mapping) = $/;"	f
mkList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def mkList[T] = (_: ~[T, List[T]]) match { case x ~ xs => x :: xs }$/;"	f
mkObject	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^    def mkObject(clazz: Class[_], fields: List[JField]) = formats.typeHints.containsHint_?(clazz) match {$/;"	f
mkQueue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^  protected def mkQueue[A](i: List[A], o: List[A]): Queue[A] =$/;"	f
mkSequ	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^  final def mkSequ(rs: _regexpT *): RegExp =$/;"	f
mkString	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    private def mkString(cs: List[Any]) = cs.mkString("")$/;"	f
mkString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def mkString(start: String, sep: String, end: String): String = self.mkString(start, sep, end)$/;"	f
mkString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def mkString = {$/;"	f
mkString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def mkString(sep: String): String = this.mkString("", sep, "")$/;"	f
mkString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def mkString(start: String, sep: String, end: String): String = {$/;"	f
mkString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def mkString = self.mkString$/;"	f
mkString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def mkString(sep: String) = self.mkString(sep)$/;"	f
mkString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def mkString(start: String, sep: String, end: String) = self.mkString(start, sep, end)$/;"	f
mkString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def mkString(sep: String): String = this.mkString("", sep, "")$/;"	f
mkString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def mkString(start: String, sep: String, end: String): String = {$/;"	f
mkString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def mkString: String =$/;"	f
mkString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  override def mkString = self$/;"	f
mkString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichStringBuilder.scala	/^  override def mkString = self.toString$/;"	f
mkTilde	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/$tilde.scala	/^object mkTilde { def apply[a, b](_1: a, _2: b) = scala.util.parsing.combinatorold.~(_1, _2) }$/;"	o
mkTree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^  private def mkTree[B](isBlack: Boolean, k: A, v: B, l: Tree[B], r: Tree[B]) = $/;"	f
mkWithTypeHint	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^      def mkWithTypeHint(typeHint: String, fields: List[JField]) = {$/;"	f
mk_iter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def mk_iter(iter_tail: List[GBTree[A,B]]) = iter_tail$/;"	f
mk_iter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def mk_iter(iter_tail: List[aNode]): List[aNode]$/;"	f
mk_iter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def mk_iter(iter_tail:List[aNode]):List[aNode] =$/;"	f
mm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val mm = SampleTag.findAll(Like(SampleTag.tag, "M%"))$/;"	V
mod	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def mod (that: BigInt): BigInt = new BigInt(this.bigInteger.mod(that.bigInteger))$/;"	f
modCount	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  private[this] var modCount = 0;$/;"	v
modInverse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def modInverse (m: BigInt): BigInt = new BigInt(this.bigInteger.modInverse(m.bigInteger))$/;"	f
modPow	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def modPow (exp: BigInt, m: BigInt): BigInt =$/;"	f
modSnippet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def modSnippet(xhtml: NodeSeq, obj: A, cleanup: (A => Unit)): NodeSeq = {$/;"	f
modTime	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val modTime = ajaxScriptUpdateTime(liftSession)$/;"	V
modTime	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val modTime = cometScriptUpdateTime(liftSession)$/;"	V
mode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  lazy val mode = {$/;"	V
mode	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  lazy val mode: PaypalMode = Props.mode match {$/;"	V
mode	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def mode: Box[String] = Empty$/;"	f
modeName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  lazy val modeName = mode match {$/;"	V
modeSelection	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def modeSelection: Box[String] = Empty$/;"	f
model	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  object model extends MappedLongForeignKey(this, SampleModel)$/;"	o
modifyOrRemove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def modifyOrRemove[S](f : (Int, T) => Option[S]) : IntMap[S] = this match {$/;"	f
modifyOrRemove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def modifyOrRemove[S](f : (Long, T) => Option[S]) : LongMap[S] = this match {$/;"	f
monadic2Bool	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/MonadicConversions.scala	/^  implicit def monadic2Bool(cond: MonadicCondition): Boolean = cond match {$/;"	f
moneyValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^            val moneyValue = amount match {$/;"	V
month	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def month(in: Date): Int = {$/;"	f
month	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarMonthView.scala	/^            val month = cal.get(MONTH)$/;"	V
moose	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  object moose extends MappedNullableLong(this)$/;"	o
more	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^    def more(data: Array[Char], start: Int, len: Int): Int =$/;"	f
morePulling	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    def morePulling(e: JavaMap.Entry[String, CRK]): (String, List[String]) = {$/;"	f
mp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  private def mp(in: List[String]) = in.mkString("\/", "\/", "")$/;"	f
mr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/EnumWithDescriptionSpec.scala	/^    val mr = Value("MR", "Mr")$/;"	V
mrs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/EnumWithDescriptionSpec.scala	/^    val mrs = Value("MRS", "Mrs")$/;"	V
ms	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    def ms(lst: List[A]): List[A] =$/;"	f
msb	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^        val msb = (b & 0xf0) >> 4$/;"	V
msg	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^final case class ParamFailure[T](override val msg: String,$/;"	V
msg	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/MailerSpec.scala	/^      val msg = doNewMessage {$/;"	V
msg	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                  val msg = xmlb.asInstanceOf[Failure].msg$/;"	V
msg	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^                   val code: Int, val msg: String,$/;"	V
msg	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^        val msg = new Message(to, Message.Type.chat)$/;"	V
msg	/Users/Mads/Dev/logicOfScientificDiscovery/src/test/scala/sidewayscoding/AppTest.scala	/^      val msg = "Malformed XML in " + numFails + " " + fileStr + ": " + failed.mkString(", ")$/;"	V
msg	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^    var msg: Message = null$/;"	v
msg0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    private val msg0 = if (stackTrace) {$/;"	V
msgAttrName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/rest/XMLApiHelper.scala	/^  def msgAttrName = "msg"$/;"	f
msgList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  @volatile private[this] var msgList: List[T] = Nil$/;"	v
msgSender	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  protected lazy val msgSender = new MsgSender$/;"	V
msgXml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^        val msgXml = passwordResetMailBody(user, resetLink)$/;"	V
msgXml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    val msgXml = signupMailBody(user, resetLink)$/;"	V
msgs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msg.scala	/^    val msgs: (String) => NodeSeq = (id) => {$/;"	V
msgs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msgs.scala	/^    val msgs = List((f(S.errors),$/;"	V
msgs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class MessageState(override val msgs: (String, NoticeType.Value)*) extends RedirectState(Empty, msgs: _*)$/;"	V
multiDimensionalArrays	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^  val multiDimensionalArrays =$/;"	V
multiLineSep	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/VCardParser.scala	/^  lazy val multiLineSep = opt(elem('\\n') ~ elem(' '))$/;"	V
multiPart	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^              val multiPart = new MimeMultipart("alternative")$/;"	V
multiSelect_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def multiSelect_*(opts: Seq[(String, String)],$/;"	f
multi_html	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val multi_html: Parser[Textile] = ('<' ~> validTag) >> { tag =>$/;"	V
multipartContent_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def multipartContent_? : Boolean$/;"	f
multipartContent_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def multipartContent_? = ServletFileUpload.isMultipartContent(req)$/;"	f
multiplier	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/Benchmark.scala	/^  var multiplier = 1$/;"	v
multiply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object multiply(Object arg1, Object arg2) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
mutable_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  def mutable_? = true$/;"	f
myAttr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  val myAttr = S.attr("name", "Fred")$/;"	V
myAttr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  val myAttr = S.attr("test") openOr "Not found"$/;"	V
myMillis	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^      val myMillis = millis$/;"	V
myNotices	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^            val myNotices = notices.filter(fi => fi._3.isDefined && fi._3 == f.field.uniqueFieldId)$/;"	V
myNotices	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^            val myNotices = notices.filter(fi => fi._3.isDefined && fi._3 == f.field.uniqueFieldId)$/;"	V
myOptions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/AutoCompleteDemo.scala	/^    val myOptions :List[(String,String)] = ("'width'","300") :: Nil$/;"	V
myPf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^    val myPf: PartialFunction[Any, Unit] = new PartialFunction[Any, Unit] {$/;"	V
myScreenNum	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    val myScreenNum = screens.length$/;"	V
mySessionThing	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^    val mySessionThing = sessionThing.value$/;"	V
mySize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^    val mySize = sSize + bSize + 1$/;"	V
myTable	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^        val myTable = actualTableNames(table._dbTableNameLC)$/;"	V
myTrace	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^      val myTrace = (try{throw new Exception("")} catch {case e => e}).getStackTrace.toList.tail.head$/;"	V
myVals	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^    val myVals = vals.value$/;"	V
myVariables	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private var myVariables: Map[String, Any] = Map.empty$/;"	v
myWrapper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^  private object myWrapper extends LoanWrapper {$/;"	o
myresume	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^  def myresume = synchronized {$/;"	f
mysql	/Users/Mads/Dev/logicOfScientificDiscovery/project/build/LogicOfScientificDiscovery.scala	/^	val mysql = "mysql" % "mysql-connector-java" % "5.0.8" % "compile"$/;"	V
n	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^    val n = name.trim.toLowerCase$/;"	V
n	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^      var n = cache(offset)$/;"	v
n	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^      var n = cache(offset)$/;"	v
n	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    val n = count - 1$/;"	V
n	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Sorted.scala	/^        val n = compare(jn, in);$/;"	V
n	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^          var n = off + len - 1$/;"	v
n	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^        val n = off + len$/;"	V
n	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^          val n = getName(value, i+1)$/;"	V
n	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^        val n = tmp.substring(ix, iz);$/;"	V
n	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^                val n = xName$/;"	V
n	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^      val n = cbuf.toString().intern()$/;"	V
n	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    val n = xName$/;"	V
n	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    var n = 0$/;"	v
n	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^        val n = it.next$/;"	V
n	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^  val n = tr( <hello><world\/><\/hello> );$/;"	V
n2	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^          val n2 = joins.indexOf(join)$/;"	V
n2	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^      val n2 = joins.findIndexOf(isJoinForChild(children(n)))$/;"	V
n2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^        val n2 = transform(n)$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  protected lazy val name = VarConstants.varPrefix+getClass.getName+"_"+__nameSalt$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def name: String$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  class BindParamAssoc(val name: String) {$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/EnumWithDescription.scala	/^                def name = inName$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/EnumWithDescription.scala	/^    def name: String$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  def name: String$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def name: String = "Null"$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def name = logger.getName$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def name = rootLogger.name$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  override def name = logger.getName$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    override def name: String = "LoggerDelegate"$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Comet.scala	/^       val name: Box[String] = S.attr.~("name").map(_.text)$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/WithParam.scala	/^       val name = S.attr.~("name").map(_.text).getOrElse("main")$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def name = _name$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def name: Box[String]$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^      val name = builder.manifest.toString$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val name = builder.manifest.toString$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val name = man.toString$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                val name = pls + p + (if (s.length > 0) "." + s else "")$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val name = templateName.map(s => if (s.text.startsWith("\/")) s.text else "\/" + s.text).openOr("\/templates-hidden\/default")$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def name: String$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^      val name = formFuncName$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    val name = formFuncName$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private val name = "_lift_json_" + getClass.getName$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/Role.scala	/^    def name = n$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/Role.scala	/^    def name = roleName$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/Role.scala	/^  def name: String$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    override val name: String,$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def name: String$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^    val name = in.name$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/XmlMenu.scala	/^      val name = m \\ "@name" text$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^class FacebookField(val name: String)$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^          val name = metaOwner.nextTransitionAt.dbColumnName$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def name(which : Int) : String = "lang"$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def name(which : Int) : String = "style"$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def name(which : Int) : String = name$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def name(which : Int) : String = {$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def name(which : Int) : String$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^        def name = S ? "Age"$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^        def name = S ? "First Name"$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^        def name = S ? "Mom or Dad's name"$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^        def name = S ? "Pet's name"$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^      val name = new Field with StringField {$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^          def name = "Delete "+Prefix$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^          def name = "Edit "+Prefix$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^        def name = "View "+Prefix$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^abstract class DriverType(val name : String) {$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^    val name = dbColumnName$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  final def name = synchronized {$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val name = dbTableName$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val name = internal_dbTableName$/;"	V
name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala	/^  object name extends MappedPoliteString(this, 256) {$/;"	o
name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def name = "Derby"$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def name = "H2 in memory"$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def name = "H2"$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def name = "Microsoft SQL Server"$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def name = "MySql"$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def name = "Oracle"$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def name = "PostgreSql"$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def name = "SAP MaxDB"$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def name: String$/;"	f
name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^  object name extends MappedString(this, 10)$/;"	o
name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  object name extends MappedPoliteString(this, 128) {$/;"	o
name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  object name extends MappedPoliteString(this, 128)$/;"	o
name	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def name: String = fieldName$/;"	f
name	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Award.scala	/^	object name extends MappedPoliteString(this, 128) {$/;"	o
name	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Field.scala	/^	object name extends MappedPoliteString(this, 128) {$/;"	o
name	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Institution.scala	/^  	object name extends MappedPoliteString(this, 128){$/;"	o
name	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^	object name extends MappedPoliteString(this, 256) {$/;"	o
name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  def name = {$/;"	f
name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Symbol.scala	/^final class Symbol private (val name: String) {$/;"	V
name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/BeanDisplayName.scala	/^class BeanDisplayName(val name: String) extends Annotation$/;"	V
name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^  val name = "<root>"$/;"	V
name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^  val name = null$/;"	V
name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^  val name: String =$/;"	V
name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^  val name: String$/;"	V
name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^case class LabelSymbol(val name: String) extends Symbol {$/;"	V
name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^  abstract class TestCase(val name: String) extends Test with Assert {$/;"	V
name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/AbstractSyntax.scala	/^    def name: String$/;"	f
name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def name = el.name+"@??"$/;"	f
name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def name = self.asInstanceOf[NameElement].name \/\/ TODO: this is only safe when substituted to a NameElement, which certainly isn't required -- I want dynamic inheritance! :)$/;"	f
name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    private var name: String = ""$/;"	v
name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Scanner.scala	/^  final def name = {$/;"	f
name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    val name = cbuf.toString()$/;"	V
name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^    final override val name = "A rule";$/;"	V
name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^    final override val name = "E rule";$/;"	V
name	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/RewriteRule.scala	/^  val name = this.toString()$/;"	V
nameAndAge	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^    val nameAndAge = new Screen {$/;"	V
nameDescriptionList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/EnumWithDescription.scala	/^    def nameDescriptionList = values map(x => (x.name, x.description) )$/;"	f
nameModifiers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  private val nameModifiers = List[String => String](camelCase _, n => n)$/;"	V
nameOf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Xml.scala	/^    def nameOf(n: Node) = (if (n.prefix ne null) n.prefix + ":" else "") + n.label$/;"	f
nameSerie	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotAjax.scala	/^        val nameSerie = "data_" + idPlaceholder + "_" + (num + 1)$/;"	V
nameToIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    private lazy val nameToIndex: Map[String, Int] = Map() ++ ("" :: groupNames.toList).zipWithIndex$/;"	V
nameToString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  def nameToString(sb: StringBuilder): StringBuilder = {$/;"	f
named	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    def named(n: String): this.type = {name=n; this}$/;"	f
names	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^          val names = paranamer.lookupParameterNames(x)$/;"	V
names	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^        val names: List[String] = params.map(_._1).removeDuplicates$/;"	V
names	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/StatefulSnippet.scala	/^  def names: Set[String] = synchronized {$/;"	f
namespace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Group.scala	/^  final override def namespace =$/;"	f
namespace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  def namespace = getNamespace(this.prefix)$/;"	f
namespace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/SpecialNode.scala	/^  final override def namespace = null$/;"	f
namespace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^  val namespace = "http:\/\/www.w3.org\/XML\/1998\/namespace"$/;"	V
nanoEnd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^          val nanoEnd: Long,$/;"	V
nanoStart	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^          val nanoStart: Long,$/;"	V
nat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def nat: SPU[Int] = new SPU[Int] {$/;"	f
nat2Bytes	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def nat2Bytes(x: Int): Array[Byte] = {$/;"	f
nationality	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Institution.scala	/^	object nationality extends MappedPoliteString(this, 128) {$/;"	o
nationality	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^	object nationality extends MappedPoliteString(this, 128) {$/;"	o
native	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/native.scala	/^class native extends StaticAnnotation {}$/;"	c
nb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^    val nb = new NodeBuffer()$/;"	V
nb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^        val nb = buffer(i, ns)$/;"	V
nb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^    val nb = new NodeBuffer()$/;"	V
nbits	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^  protected final def nbits(n: Int): Int = n << 5$/;"	f
nbuf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^            val nbuf = new StringBuilder()$/;"	V
nch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^      val nch = transform(ch)$/;"	V
ncurrent	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/Inclusion.scala	/^      val ncurrent = mark(current)$/;"	V
near	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    def near = new String(segment, (cur-20) max 0, (cur+20) min length)$/;"	f
needsDefault	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  private[record] var needsDefault = true$/;"	v
negate	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object negate(Object arg) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
nerrors	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  var nerrors = 0$/;"	v
nest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^  def nest(i: Int, d: Document): Document = DocNest(i, d)$/;"	f
nested	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^      val nested = break :: fields(trimObj(obj).map(f => text("\\"" + f.name + "\\":") :: render(f.value)))$/;"	V
nested	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def nested: Scope[binderType] = this \/\/ TODO$/;"	f
nested	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/BindingParsers.scala	/^  def nested[T <: NameElement](s: Scope[T]) = success(s.nested)$/;"	f
never	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def never(msg: => AnyRef) {}$/;"	f
never	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def never(msg: => AnyRef, t: => Throwable) {}$/;"	f
neverF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def neverF(msg: => AnyRef) {}$/;"	f
newAcc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^        val newAcc = f(acc, v)$/;"	V
newArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^       override protected def newArray[B >: A](length : Int, elements : Iterator[A]) =$/;"	f
newArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^       override protected def newArray[B >: A](length: Int, elements: Iterator[A]) =$/;"	f
newArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^     protected def newArray[B >: A](length : Int, elements : Iterator[A]) : Array[B]$/;"	f
newArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  override protected def newArray(length : Int, elements : Iterator[Any]) = {$/;"	f
newArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^    protected def newArray[B >: Any](length : Int, elements : Iterator[Any]) = $/;"	f
newArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  protected def newArray(length : Int, elements : Iterator[Any]) : BoxedArray$/;"	f
newArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedBooleanArray.scala	/^  override protected def newArray(length : Int, elements : Iterator[Any]) = {$/;"	f
newArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedByteArray.scala	/^  override protected def newArray(length : Int, elements : Iterator[Any]) = {$/;"	f
newArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedCharArray.scala	/^  override protected def newArray(length : Int, elements : Iterator[Any]) = {$/;"	f
newArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedDoubleArray.scala	/^  override protected def newArray(length : Int, elements : Iterator[Any]) = {$/;"	f
newArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedFloatArray.scala	/^  override protected def newArray(length : Int, elements : Iterator[Any]) = {$/;"	f
newArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedIntArray.scala	/^  override protected def newArray(length : Int, elements : Iterator[Any]) = {$/;"	f
newArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedLongArray.scala	/^  override protected def newArray(length : Int, elements : Iterator[Any]) = {$/;"	f
newArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedObjectArray.scala	/^  override protected def newArray(length: Int, elements: Iterator[Any]) = {$/;"	f
newArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedShortArray.scala	/^  override protected def newArray(length : Int, elements : Iterator[Any]) = {$/;"	f
newAttr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def newAttr: String$/;"	f
newCapacity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    val newCapacity = (value.length + 1) * 2$/;"	V
newConnection	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ConnectionManager.scala	/^  def newConnection(name: ConnectionIdentifier): Box[Connection]$/;"	f
newConnection	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def newConnection(name: ConnectionIdentifier): Box[Connection] =$/;"	f
newConnection	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private def newConnection(name: ConnectionIdentifier): SuperConnection = {$/;"	f
newConnection	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def newConnection(name: ConnectionIdentifier): Box[Connection] = {$/;"	f
newConnection	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/bootstrap/liftweb/Boot.scala	/^ def newConnection(name : ConnectionIdentifier) = {$/;"	f
newCount	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^      val newCount = count + 4$/;"	V
newCount	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^      val newCount = count + 5$/;"	V
newCount	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^      val newCount = count + len$/;"	V
newCount	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    val newCount = count + 1$/;"	V
newCount	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    val newCount = count + len - (end0 - start)$/;"	V
newCount	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    val newCount = count + len$/;"	V
newElem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^          val newElem = new scala.:: (elems.head, cursor.tail)$/;"	V
newElem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^          val newElem = new scala.:: (elems.head, start)$/;"	V
newElem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^        val newElem = new scala.:: (x, cursor.tail.tail)$/;"	V
newElem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^        val newElem = new scala.:: (x, start.tail);$/;"	V
newElem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^    val newElem = new scala.:: (x, start)$/;"	V
newField	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^          val newField = JField(f.name, v)$/;"	V
newField	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^          val newField = JField(field.name, v)$/;"	V
newFunc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^        val newFunc = createApplier(name, inst)$/;"	V
newInstance	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^    def newInstance(targetType: Class[_], args: List[Arg], json: JValue) = {$/;"	f
newInstance	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  def newInstance(firstEvent: Meta#Event): MyType = createNewInstance(firstEvent, Empty)$/;"	f
newInt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BitSet.scala	/^    val newInt = oldInt & ~mask(i)$/;"	V
newInt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BitSet.scala	/^    val newInt = oldInt | mask(i)$/;"	V
newIter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ExternalSources.scala	/^      def newIter = new Iterator[Char] {$/;"	f
newJoin	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^              val newJoin = joinMeta.create$/;"	V
newKeys	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/HasManyThrough.scala	/^    val newKeys = new HashSet[ThroughType];$/;"	V
newLeft	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^      val newLeft = left.range(from, None)$/;"	V
newMap	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^    val newMap = mgrs.foldLeft(threadLocalConnectionManagers.box openOr Map())(_ + _)$/;"	V
newMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^  private def newMap[B](s: Int, t: RedBlack[A]#Tree[B]) = new TreeMap[A, B](s, t)$/;"	f
newOrEdit	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/ModelView.scala	/^  def newOrEdit(xhtml: NodeSeq) =$/;"	f
newPassword	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    var newPassword: List[String] = Nil$/;"	v
newPos	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^          var newPos = curPos$/;"	v
newPos	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^        val newPos = in.innerMeta.setStatementFields(st, in.queryParams,$/;"	V
newPrev	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^      val newPrev = prev$/;"	V
newPrimitive	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^    def newPrimitive(elementType: Class[_], elem: JValue) = convert(elem, elementType, formats)$/;"	f
newReq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPProvider.scala	/^    val newReq = Req(req, LiftRules.statelessRewrite.toList, System.nanoTime)$/;"	V
newRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^      val newRight = right.range(None, until)$/;"	V
newScope	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^      def gmap(f: Mapper): Scope[bt] = { val newScope = new Scope[bt]()$/;"	V
newScope	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/BindingParsers.scala	/^  def newScope[T <: NameElement] = success(new Scope[T])$/;"	f
newSegment	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^        val newSegment = Segments.apply()$/;"	V
newSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^  private def newSet(s: Int, t: RedBlack[A]#Tree[Unit]) = new TreeSet[A](s, t)$/;"	f
newSigner	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^  def newSigner(message: OAuthMessage, accessor: OAuthAccessor): Box[OAuthSignatureMethod] = {$/;"	f
newSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^    val newSize = size + 1$/;"	V
newSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^    val newSize = 4 * oldSize;$/;"	V
newSuperConnection	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ConnectionManager.scala	/^  def newSuperConnection(name: ConnectionIdentifier): Box[SuperConnection] = Empty$/;"	f
newThread	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LAPinger.scala	/^  def newThread(r: Runnable) : Thread = {$/;"	f
newThread	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ActorPing.scala	/^  def newThread(r: Runnable) : Thread = {$/;"	f
newThreshold	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^  private def newThreshold(size: Int) = {$/;"	f
newThreshold	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^  private def newThreshold(size: Int) =$/;"	f
newUrl	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^      val newUrl = new _root_.java.net.URL(url.toExternalForm.split("!")(0) + "!" + "\/META-INF\/MANIFEST.MF")$/;"	V
newValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    def newValue(v: JValue) {$/;"	f
newValuePush	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotAjax.scala	/^    val newValuePush: String = newDatas.zipWithIndex.map$/;"	V
newar	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ResizableArray.scala	/^      val newar: Array[AnyRef] = new Array(newsize)$/;"	V
newarr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^     val newarr = new Array[Int](length)$/;"	V
newarr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^    val newarr = new Array[Int](length)$/;"	V
newarr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BitSet.scala	/^        val newarr = new Array[Int](newsize)$/;"	V
newleft	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^        val newleft = left.modifyOrRemove(f);$/;"	V
newleft	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^        val newleft = left.modifyOrRemove(f);$/;"	V
newn	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BitSet.scala	/^        val newn = memsize(n)$/;"	V
newright	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^        val newright = right.modifyOrRemove(f);$/;"	V
newright	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^        val newright = right.modifyOrRemove(f);$/;"	V
newsize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^    val newsize = if (tree.lookup(key).isEmpty) size + 1 else size$/;"	V
newsize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^    val newsize = if (tree.lookup(elem).isEmpty) size + 1 else size$/;"	V
newsize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BitSet.scala	/^        var newsize = if (arr.length == 0) newn else arr.length * 2$/;"	v
newsize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ResizableArray.scala	/^      var newsize = array.length * 2$/;"	v
newtable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^        val newtable = table - key;$/;"	V
newtable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^        val newtable = x.filter(f);$/;"	V
newtail	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^        val newtail = tail - key;$/;"	V
newtail	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^      val newtail = tail.transform(f);$/;"	V
newunderlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^    val newunderlying = underlying.modifyOrRemove($/;"	V
newunderlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^    val newunderlying = underlying.transform($/;"	V
newval	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^      val newval = f(key, value);$/;"	V
next	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^    var next: MailboxItem = _$/;"	v
next	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^      def next: (K, V) = {$/;"	f
next	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    def next: Char = {$/;"	f
next	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^      val next = enum.nextElement$/;"	V
next	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^    def next = what.next match {$/;"	f
next	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    def next: T = in.next$/;"	f
next	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^      def next(in: NodeSeq) = if (list.length < 20) <xml:group>&nbsp;<\/xml:group>$/;"	f
next	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Safe.scala	/^  def next = rand.nextLong$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^        val next = fill(sz - sz0)$/;"	V
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^      override def next: A = { cnt += 1; Advanced.this.next }$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^      override def next: A = { cnt += 1; PutBack.this.next }$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    override def next : A = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^      def next = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^      def next = { val c = str charAt i; i += 1; c }$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^      def next(): A = Iterator.this.synchronized {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^      def next(): a =$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def next = (Iterator.this.next, that.next)$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def next = { hasNext; what.next }$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def next = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def next() = f(Iterator.this.next)$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def next() = if (Iterator.this.hasNext) Iterator.this.next else that.next$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def next() = { val a = n productElement c; c += 1; a }$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def next(): A = { cnt += 1; Iterator.this.next }$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def next(): A =$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def next(): B = $/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def next(): Int = { val j = i; i = step(i); j }$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def next(): Int =$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def next(): Nothing = throw new NoSuchElementException("next on empty iterator")$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def next(): T = $/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    def next(): a =$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def next(): A$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      val next = step(i)$/;"	V
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      var next = tail$/;"	v
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      var next = this.tail$/;"	v
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    def next: A =$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    def next = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^    def next: A = { val result = current.head; current = current.tail; result }$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^     def next(): Int = { val j = i; i = i + 1; findNext; j }$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^    def next = iter.next._1$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^    def next = iter.next._2$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/RollbackIterator.scala	/^  override def next: A = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Sorted.scala	/^    val next = i.next;$/;"	V
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^    def next = Tuple2(item, right())$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^    def next = throw new NoSuchElementException$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^    def next = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^  def next: Tuple2[A,ImmutableIterator[A]]$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  final def next : T = $/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^      def next: (A,B) =$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^    override protected def next: ListMap[A,B1] = ListMap.this$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^  protected def next: ListMap[A, B] = throw new NoSuchElementException("empty map")$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^    def next: A =$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^    override protected def next: ListSet[A] = ListSet.this$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^  protected def next: ListSet[A] = throw new NoSuchElementException("Next of an empty set");$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  final def next : T = $/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  var next  : Page[T] = null$/;"	v
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^    def next =$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^      def next = iter match {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^    def next = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  def next = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^      def next = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^        def next = i.next$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^      val next = underlying.next.asInstanceOf[java.util.Map.Entry[K,E]]$/;"	V
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^    def next = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^	def next = i.next$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterator.scala	/^    def next = f(MutableIterator.this.next)$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterator.scala	/^    def next = underlying.next.asInstanceOf[A];$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^          val next = underlying.next;$/;"	V
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^      def next = seekNext match {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^    override def next = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Sorted.scala	/^    val next = i.next;$/;"	V
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^      def next = underlying.seekNext(okNext) match {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^    def next = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^    def next(): A =$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^    def next = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^  var next: E = _$/;"	v
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^    def next = iter.next().asInstanceOf[A]$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^    def next = iter.next().asInstanceOf[B]$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^    def next = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaSetAdaptor.scala	/^    def next = iter.next().asInstanceOf[A]$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedList.scala	/^class LinkedList[A](var elem: A, var next: LinkedList[A])$/;"	v
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^    def next(): A =$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^    def next = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^    def next(): A = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ResizableArray.scala	/^    def next(): A = { i = i + 1; array(i - 1).asInstanceOf[A] }$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SingleLinkedList.scala	/^    def next = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SingleLinkedList.scala	/^  var next: This$/;"	v
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/Channel.scala	/^    var next: LinkedList[a] = null$/;"	v
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BufferedSource.scala	/^    def next = { $/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^      def next = {val x = data.asInstanceOf[Char]; data = bufIn.read(); x}$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^    def next = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def next = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^    def next(): Any = { val i = index; index = i + 1; apply(i) }$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^    def next(): String = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/DetWordAutom.scala	/^  def next(q: Int, label: T) = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^  def next(Q: immutable.BitSet, a: T): immutable.BitSet = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^  def next(q: Int, a: T): immutable.BitSet = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^      def next = { self.next; new Match(source, matcher, groupNames).force }$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def next: String = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/CharInputStreamIterator.scala	/^  def next(): Char = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/SimpleTokenizer.scala	/^  def next(): String = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    val next: Input$/;"	V
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  case class Error(override val msg: String, override val next: Input) extends NoSuccess(msg, next) {$/;"	V
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  case class Failure(override val msg: String, override val next: Input) extends NoSuccess(msg, next) {$/;"	V
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  case class Success[+T](result: T, override val next: Input) extends ParseResult[T] {$/;"	V
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  sealed abstract class NoSuccess(val msg: String, override val next: Input) extends ParseResult[Nothing] { \/\/ when we don't care about the difference between Failure and Error$/;"	V
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    val next: Input$/;"	V
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  case class Error(override val msg: String, override val next: Input) extends NoSuccess(msg, next) {$/;"	V
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  case class Failure(override val msg: String, override val next: Input) extends NoSuccess(msg, next) {$/;"	V
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  case class Success[+T](result: T, override val next: Input) extends ParseResult[T] {$/;"	V
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  sealed abstract class NoSuccess(val msg: String, override val next: Input) extends ParseResult[Nothing] { \/\/ when we don't care about the difference between Failure and Error$/;"	V
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^    def next = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def next: MetaData$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  def next = null$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrefixedAttribute.scala	/^                        val next: MetaData) extends MetaData {$/;"	V
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/UnprefixedAttribute.scala	/^  val next = if (value ne null) next1 else next1.remove(key)$/;"	V
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^    def next = {$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Scanner.scala	/^  final def next = if (it.hasNext) c = it.next else c = ENDCH$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ExternalSources.scala	/^        def next = { i += 1; str.charAt(i) }$/;"	f
next	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^  def next: XMLEvent = {$/;"	f
nextBoolean	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Random.scala	/^  def nextBoolean(): Boolean = self.nextBoolean()$/;"	f
nextBoolean	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Random.scala	/^  def nextBoolean(): Boolean = self.nextBoolean()$/;"	f
nextButton	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    def nextButton: Elem = Wizard.this.nextButton$/;"	f
nextButton	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  def nextButton: Elem = <button>{S.??("Next")}<\/button>$/;"	f
nextBytes	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Random.scala	/^  def nextBytes(bytes: Array[Byte]) { self.nextBytes(bytes) }$/;"	f
nextBytes	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Random.scala	/^  def nextBytes(bytes: Array[Byte]) { self.nextBytes(bytes) }$/;"	f
nextChar	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/SimpleTokenizer.scala	/^  private def nextChar(): Int = if (in.hasNext) in.next else EOI$/;"	f
nextDefault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^  def nextDefault(Q: immutable.BitSet): immutable.BitSet = {$/;"	f
nextDouble	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Random.scala	/^  def nextDouble(): Double = self.nextDouble()$/;"	f
nextDouble	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Random.scala	/^  def nextDouble(): Double = self.nextDouble()$/;"	f
nextEol	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/StreamReader.scala	/^  private def nextEol = {$/;"	f
nextFloat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Random.scala	/^  def nextFloat(): Float = self.nextFloat()$/;"	f
nextFloat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Random.scala	/^  def nextFloat(): Float = self.nextFloat()$/;"	f
nextFuncName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^  def nextFuncName(seed: Long): String = {$/;"	f
nextFuncName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^  def nextFuncName: String = nextFuncName(0)$/;"	f
nextId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    val nextId = Helpers.nextFuncName$/;"	V
nextId	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  protected var nextId = initial$/;"	v
nextIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^      def nextIndex = {$/;"	f
nextIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^    def nextIndex = underlying.nextIndex;$/;"	f
nextIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^      def nextIndex = index;$/;"	f
nextIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^    override def nextIndex = index$/;"	f
nextIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SeqIterator.scala	/^    override def nextIndex = SeqIterator.this.nextIndex;$/;"	f
nextIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SeqIterator.scala	/^  def nextIndex: K;$/;"	f
nextInt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Random.scala	/^  def nextInt(): Int = self.nextInt()$/;"	f
nextInt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Random.scala	/^  def nextInt(n: Int): Int = self.nextInt(n)$/;"	f
nextInt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Random.scala	/^  def nextInt(): Int = self.nextInt()$/;"	f
nextInt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Random.scala	/^  def nextInt(n: Int): Int = self.nextInt(n)$/;"	f
nextLoc	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def nextLoc() = { cnt += 1; cnt }$/;"	f
nextLong	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Random.scala	/^  def nextLong(): Long = self.nextLong()$/;"	f
nextLong	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Random.scala	/^  def nextLong(): Long = self.nextLong()$/;"	f
nextName	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  protected var nextName = names.elements$/;"	v
nextNum	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^  def nextNum = serial.incrementAndGet$/;"	f
nextPowerOfTwo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  private[mutable] def nextPowerOfTwo(i : Int) = highestOneBit(i) << 1; $/;"	f
nextScreen	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^          val nextScreen = screen.nextScreen$/;"	V
nextScreen	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    def nextScreen: Box[Screen] = calcScreenAfter(this)$/;"	f
nextScreen	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^      override def nextScreen = if (age.is < 18) parentName else favoritePet$/;"	f
nextSeen	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    private var nextSeen = false$/;"	v
nextToken	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    def nextToken: Token = {$/;"	f
nextTransitionAt	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  object nextTransitionAt extends MappedLong[MyType](this) with LifecycleCallbacks {$/;"	o
nextWord	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def nextWord = S.??("Next")$/;"	f
nextXml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Paginator.scala	/^    val nextXml = Text(?(">"))$/;"	V
nf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^            val nf = NumberFormat.getNumberInstance(_locale)$/;"	V
nf	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^    val nf: LiftRules.DispatchPF = NamedPF("Default PDT") {$/;"	V
nf	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^    val nf: LiftRules.DispatchPF = NamedPF("Default PaypalIPN") {$/;"	V
nfa	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^class SubsetConstruction[T <: AnyRef](val nfa: NondetWordAutom[T]) {$/;"	V
nfa	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^      val nfa = ContentModel.Translator.automatonFrom(r, 1);$/;"	V
nfa	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^        val nfa = ContentModel.Translator.automatonFrom(r, 1)$/;"	V
ngurl	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  protected def ngurl: String$/;"	f
ngurl	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val ngurl = "http:\/\/www.w3.org\/2002\/08\/xhtml\/xhtml1-strict.xsd"$/;"	V
ngurl	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val ngurl = "http:\/\/www.w3.org\/2002\/08\/xhtml\/xhtml1-transitional.xsd"$/;"	V
nh	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^              val nh = head %$/;"	V
niceName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^  override def niceName: String = nickname$/;"	f
niceName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def niceName: String = (firstName.is, lastName.is, email.is) match {$/;"	f
niceNameWEmailLink	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def niceNameWEmailLink = <a href={"mailto:"+email.is}>{niceName}<\/a>$/;"	f
nickname	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^  object nickname extends MappedPoliteString(this, 64) {$/;"	o
nil	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def nil = new Req(NilPath, "", GetRequest, Empty, null,$/;"	f
nl	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^      val nl = Text("\\n")$/;"	V
noCatCamelUrl	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val noCatCamelUrl: Parser[Textile] =$/;"	V
noColumns	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def noColumns: Box[Int] = Empty \/\/ number$/;"	f
noCometSessionPage	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var noCometSessionPage = "\/"$/;"	v
noHtmlTag	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^  def noHtmlTag(in: NodeSeq): Boolean = findElems(in)(_.label == "html").length != 1$/;"	f
noIdMessages	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def noIdMessages(f: => List[(NodeSeq, Box[String])]): List[NodeSeq] = f filter (_._2 isEmpty) map (_._1)$/;"	f
noTime	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    def noTime = { c.setTime(c.getTime.noTime); c }$/;"	f
noTime	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    def noTime = {$/;"	f
noValueErrorMessage	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def noValueErrorMessage : String = ""$/;"	f
noValueErrorMessage	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/NumericField.scala	/^  override def noValueErrorMessage = S.??("number.required")$/;"	f
node	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    var node = parent.childNodes[i];$/;"	v
node	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def node = t$/;"	f
node	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def node = t1$/;"	f
node	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def node: GBTree[A,B]$/;"	f
nodeContainsText	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  def nodeContainsText(localName: String): Boolean \/\/ abstract$/;"	f
nodeContainsText	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/NoBindingFactoryAdapter.scala	/^  def nodeContainsText( label:java.lang.String ): Boolean = true;$/;"	f
nodeEquals	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/NodeFactory.scala	/^  def nodeEquals(n: Node, pre: String, name: String, attrSeq:MetaData, scope: NamespaceBinding, children:Seq[Node]) = ($/;"	f
nodeId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^      val nodeId = randomString(20)$/;"	V
nodeSeqToBindable	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindPlus.scala	/^  implicit def nodeSeqToBindable(ns: NodeSeq): BindableNodeSeq = new BindableNodeSeq(ns)$/;"	f
nodeSeqToFull	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  implicit def nodeSeqToFull(in: NodeSeq): Box[NodeSeq] = Full(in)$/;"	f
nodeSeqToLinkText	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  implicit def nodeSeqToLinkText[T](in: => NodeSeq): LinkText[T] = LinkText[T](T => in)$/;"	f
nodeSeqToOptionString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^  implicit def nodeSeqToOptionString(in: NodeSeq): Box[String] = if (in.length == 0) Empty else Full(in.text)$/;"	f
nodeSeqToResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/rest/XMLApiHelper.scala	/^  implicit def nodeSeqToResponse(in: NodeSeq): LiftResponse =$/;"	f
nodes	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Group.scala	/^case class Group(val nodes: Seq[Node]) extends Node {$/;"	V
nodes	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/CachedFileStorage.scala	/^  def nodes: Iterator[Node]  $/;"	f
nodes	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/IndexedStorage.scala	/^  def nodes: Iterator[Node] = synchronized { $/;"	f
nodes	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/SetStorage.scala	/^  def nodes = synchronized { theSet.elements }$/;"	f
noinline	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/noinline.scala	/^class noinline extends StaticAnnotation$/;"	c
nonce	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^    val nonce = randomString(64);$/;"	V
nonce	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^    def nonce = _nonce.is$/;"	f
nonce	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def nonce: String$/;"	f
nonceCreationTime	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^              val nonceCreationTime: Long = nonceMap.getOrElse(auth.nonce, -1)$/;"	V
nonceMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  private val nonceMap = new HashMap[String, Long]$/;"	V
nonceValidityPeriod	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  def nonceValidityPeriod: Long = 30 seconds$/;"	f
nonces	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^      val nonces: List[(String, String)] = secure.map {case (obj, nonce, txt) => (nonce, txt)}.toList$/;"	V
nonces	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    val nonces = secure.map {case (obj, nonce, txt) => (nonce, txt)}$/;"	V
nonces	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^    val nonces = secure.map{case (obj, nonce, txt) => (nonce, txt)}$/;"	V
nonzero	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Lexer.scala	/^  def nonzero = elem("nonzero digit", d => d.isDigit && d != '0')$/;"	f
normPara	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val normPara : Parser[Textile] = opt(first_paraAttrs) ~ rep1(bullet(0, false) | bullet(0, true) | not_blank_line) ~ blankLine ^^ {$/;"	V
normal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^        val normal: List[NormalParamHolder] = allInfo.flatMap {case v: NormalParamHolder => List(v) case _ => Nil}$/;"	V
normalize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def normalize(attribs: MetaData, scope: NamespaceBinding): MetaData = {$/;"	f
normalizeAttributeValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def normalizeAttributeValue(attval: String): String = {$/;"	f
normalizeParameters	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^  private def normalizeParameters(parameters: List[OAuthUtil.Parameter]) = {$/;"	f
normalizeUrl	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^  private[oauth] def normalizeUrl(url: String) = {$/;"	f
normalizeWhitespace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  val normalizeWhitespace = false$/;"	V
not	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/Parsers.scala	/^  def not[A](p: Parser[A]) = new Parser[Unit] {$/;"	f
not	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def not[T](p: => Parser[T]): Parser[Unit] = Parser { in =>$/;"	f
not	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def not[Q <% UnitParser](p: => Q) = new UnitParser {$/;"	f
notEOF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def notEOF: Parser[Elem] = (not(accept('\\032')) ~> anyChar)$/;"	f
notEOL	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def notEOL: Parser[Elem] = (not(EOL) ~> anyChar)$/;"	f
notEof	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def notEof(c: Char): Boolean = !isEof(c)$/;"	f
notEq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^  def notEq(a: Array[Byte], b: Array[Byte]) = !isEq(a,b)$/;"	f
notFoundOrIgnore	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  private[http] def notFoundOrIgnore(requestState: Req, session: Box[LiftSession]): Box[LiftResponse] = {$/;"	f
notLiftOrScala	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private def notLiftOrScala(in: StackTraceElement): Boolean =$/;"	f
notLoggedIn_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def notLoggedIn_? = !loggedIn_?$/;"	f
notNull	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  final def notNull(in: String): String = in match {$/;"	f
notNull	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val notNull = SampleModel.find(By(SampleModel.firstName, "NotNull")).open_!$/;"	V
notNull	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  object notNull extends MappedString(this, 32) {$/;"	o
notNull	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^  final def notNull(in: String): String = in match {$/;"	f
notNullAppender	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def notNullAppender() = if (dbNotNull_?) " NOT NULL " else ""$/;"	f
notNum	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def notNum(c: Char): Boolean = !isNum(c)$/;"	f
not_blank_line	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val not_blank_line : Parser[Textile] = not(blankLine) ~> lineElem$/;"	V
notat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^            val notat = xName$/;"	V
notat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    val notat = xName$/;"	V
notationDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^  def notationDecl(notat: String, extID: ExternalID): Unit = ()$/;"	f
notationDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^  final override def notationDecl(notat: String, extID: ExternalID) {$/;"	f
notations	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Document.scala	/^  def notations: Seq[scala.xml.dtd.NotationDecl] = $/;"	f
notations	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/DTD.scala	/^  def notations: Seq[NotationDecl] = Nil$/;"	f
notice	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def notice(id: String, n: NodeSeq) {notices += ((NoticeType.Notice, n, Full(id)))}$/;"	f
notice	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def notice(id: String, n: String) {notice(id, Text(n))}$/;"	f
notice	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def notice(n: NodeSeq) {notices += ((NoticeType.Notice, n, Empty))}$/;"	f
notice	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def notice(n: String) {notice(Text(n))}$/;"	f
notice	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def notice(id: String, n: NodeSeq) {p_notice.is += ((NoticeType.Notice, n, Full(id)))}$/;"	f
notice	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def notice(id: String, n: String) {notice(id, Text(n))}$/;"	f
notice	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def notice(n: NodeSeq) {p_notice.is += ((NoticeType.Notice, n, Empty))}$/;"	f
notice	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def notice(n: String) {notice(Text(n))}$/;"	f
notices	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private val notices = new ListBuffer[(NoticeType.Value, NodeSeq, Box[String])]$/;"	V
notices	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    val notices: List[(NoticeType.Value, NodeSeq, Box[String])] = S.getAllNotices$/;"	V
notices	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] var notices: Seq[(NoticeType.Value, NodeSeq, Box[String])] = Nil$/;"	v
notices	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def notices: List[(NodeSeq, Box[String])] = List(oldNotices.is, p_notice.is).flatMap(_.filter(_._1 == NoticeType.Notice).map(n => (n._2, n._3)))$/;"	f
notices	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    val notices: List[(NoticeType.Value, NodeSeq, Box[String])] = S.getAllNotices$/;"	V
noticesContainerId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val noticesContainerId = "lift__noticesContainer__"$/;"	V
noticesToJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var noticesToJsCmd: () => JsCmd = () => {$/;"	v
noticesToJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private[http] def noticesToJsCmd: JsCmd = LiftRules.noticesToJsCmd()$/;"	f
notify	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/History.scala	/^  def notify(pub: B, event: A): Unit = {$/;"	f
notify	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Subscriber.scala	/^  def notify(pub: B, event: A): Unit$/;"	f
notifyVersion	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val notifyVersion = r.param("notify_version")$/;"	V
now	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def now  = new Date$/;"	f
now	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^      val now = millis$/;"	V
now	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/ScriptRenderer.scala	/^                 var now = (new Date()).getTime();$/;"	v
now	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/ScriptRenderer.scala	/^           var now = (new Date()).getTime();$/;"	v
now	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^          val now = System.currentTimeMillis$/;"	V
nowAsInternetDate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def nowAsInternetDate: String = toInternetDate(millis)$/;"	f
np	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    val np = props ::: other.props$/;"	V
np	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    val np = re.eachFound.foldLeft(Map(old: _*))((a, b) => a + ((b(1), b(2))))$/;"	V
nreaders	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/Channel.scala	/^  private var nreaders = 0$/;"	v
ns	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  implicit def ns(in: List[Elem]): String = in.mkString("").trim$/;"	f
ns	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^    case Full(sq: Seq[_]) if sq.forall(_.isInstanceOf[Node])=> val ns: NodeSeq = sq.asInstanceOf[Seq[Node]]$/;"	V
ns	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^    case Some(sq: Seq[_]) if sq.forall(_.isInstanceOf[Node])=> val ns: NodeSeq = sq.asInstanceOf[Seq[Node]]$/;"	V
ns	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^    case sq: Seq[_] if sq.forall(_.isInstanceOf[Node])=> val ns: NodeSeq = sq.asInstanceOf[Seq[Node]]$/;"	V
nsToCns	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  implicit def nsToCns(in: NodeSeq): Box[NodeSeq] = Box.legacyNullTest(in)$/;"	f
nstates	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/DetWordAutom.scala	/^  val nstates: Int$/;"	V
nstates	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^  val nstates: Int$/;"	V
nstates	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^      val nstates = nstatesR$/;"	V
nstates	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^          val nstates  = pos$/;"	V
nstatesR	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    val nstatesR = states.size$/;"	V
ntrans	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^      val ntrans = new mutable.HashMap[T,Int]()$/;"	V
ntree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^    val ntree = tree.range(from,until)$/;"	V
nullString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val nullString: String = null$/;"	V
nulls	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/Examples.scala	/^  val nulls = ("f1" -> null) ~ ("f2" -> List(null, "s"))$/;"	V
num	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    val num: Int = formItemNumber.is$/;"	V
num	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val num = rep1(elem("digit", Character.isDigit)) ^^ mkString$/;"	V
num	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Paginator.scala	/^  var num = 20$/;"	v
num	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^private class Page[T](val num: Int) {$/;"	V
num	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^      var num = 0$/;"	v
numCartItems	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val numCartItems = r.param("num_cart_items")$/;"	V
numFails	/Users/Mads/Dev/logicOfScientificDiscovery/src/test/scala/sidewayscoding/AppTest.scala	/^    val numFails = failed.size$/;"	V
numPages	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Paginator.scala	/^  def numPages =$/;"	f
numToJsExp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  implicit def numToJsExp(in: Double): JsExp = Num(in)$/;"	f
numToJsExp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  implicit def numToJsExp(in: Float): JsExp = Num(in)$/;"	f
numToJsExp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  implicit def numToJsExp(in: Int): JsExp = Num(in)$/;"	f
numToJsExp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  implicit def numToJsExp(in: Long): JsExp = Num(in)$/;"	f
num_bytes	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BufferedSource.scala	/^    var num_bytes = byteChannel.read(byteBuffer)$/;"	v
number	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val number: Parser[Double] =$/;"	V
number	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^      val number: String => Boolean =$/;"	V
number	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/testing/RegexTest.scala	/^  val number: Parser[Any] = """\\d\\d*""".r ^^ (s => Number(s.toInt))$/;"	V
number	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Lexer.scala	/^  def number = intPart ~ opt(fracPart) ~ opt(expPart) ^^ { case i ~ f ~ e =>$/;"	f
number	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Parser.scala	/^  def number     = accept("number", { case lexical.NumericLit(n) => numberParser.get.apply(n)} )$/;"	f
numberFormat	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^            val numberFormat = NumberFormat.getCurrencyInstance(_locale);$/;"	V
numberOfFractionDigits	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^        val numberOfFractionDigits: Int$/;"	V
numberOfFractionDigits	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    val numberOfFractionDigits = 2$/;"	V
numberParser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Parser.scala	/^  protected val numberParser = new ThreadLocal[NumericParser]() {$/;"	V
numericLit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/syntactical/StdTokenParsers.scala	/^  def numericLit: Parser[String] = $/;"	f
numericLit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/StdTokenParsers.scala	/^  def numericLit: Parser[String] = $/;"	f
nvp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^        val nvp: Map[String, List[String]] = params.foldLeft(Map[String, List[String]]()) {$/;"	V
nwarnings	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  var nwarnings = 0$/;"	v
o	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^          val o = otherField.actualField(join)$/;"	V
o	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^        val o = getInstance.open_!$/;"	V
o2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^      val o2 = options.toList$/;"	V
oathPathPrefix	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  def oathPathPrefix: List[String]$/;"	f
oauthAccessor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/test/scala/net/liftweb/oauth/OAuthSignatureMethodSpec.scala	/^  val oauthAccessor = OAuthAccessor(FakeConsumer("dpf43f3p2l4k3l03","kd94hf93k423kf44"), Full("pfkkdhi9sl3r4s00"), Empty)$/;"	V
oauthAccessorMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  protected def oauthAccessorMeta: OAuthAccessorMeta$/;"	f
oauthConsumerMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  protected def oauthConsumerMeta: OAuthConsumerMeta$/;"	f
oauthMessage	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/test/scala/net/liftweb/oauth/OAuthSignatureMethodSpec.scala	/^      val oauthMessage = new OAuthMessage(GetRequest, "http:\/\/photos.example.net\/photos", List($/;"	V
oauthNonceMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthValidator.scala	/^  protected def oauthNonceMeta: OAuthNonceMeta$/;"	f
oauthTokenMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  protected def oauthTokenMeta: OAuthTokenMeta$/;"	f
oauthTokenMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthAccessor.scala	/^  protected def oauthTokenMeta: OAuthTokenMeta$/;"	f
oauthUserMeta	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  protected def oauthUserMeta: OAuthUserMeta$/;"	f
oauthValidator	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  protected def oauthValidator: OAuthValidator$/;"	f
obj	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^        val obj = JObject(fields)$/;"	V
obj	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^          val obj = vals.peek(classOf[JObject])$/;"	V
obj	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Xml.scala	/^          val obj = makeObj(nameOf(n), buildAttrs(n) ::: build(directChildren(n), Some(nameOf(n)), Nil))$/;"	V
obj	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^     val obj: JsObj = JsObj(("url" -> Str(url)) :: jsObj.props:_*)$/;"	V
obj	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def obj: Box[Other] = synchronized {$/;"	f
obj	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val obj: A = viewSnippetSetup$/;"	V
obj	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/AwardSource.scala	/^		def obj = if(isLab) Lab.find(is) else Scientist.find(is) $/;"	f
obj	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/AwardSource.scala	/^		def obj(s: BaseSource) = s match { $/;"	f
obj	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/DiscoverySource.scala	/^		def obj = if(isLab) Lab.find(is) else Scientist.find(is) $/;"	f
obj	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/DiscoverySource.scala	/^		def obj(s: BaseSource) = s match { $/;"	f
obj	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      var obj: JObject = null$/;"	v
objArray	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/Examples.scala	/^  val objArray = $/;"	V
objEntry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Parser.scala	/^  def objEntry   = stringVal ~ (":" ~> value) ^^ { case x ~ y => (x, y) }$/;"	f
objFromIndexedParam	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def objFromIndexedParam: Box[A] = {$/;"	f
objMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/JSON.scala	/^    var objMap = Map[String, Any]()$/;"	v
objs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val objs = Objs(Obj(Fish(1.2)) :: Obj(Dog("pluto")) :: Nil)$/;"	V
obscure	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def obscure[KeyType, MetaType <: KeyedMapper[KeyType, MetaType]](theType:$/;"	f
obscure	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def obscure[KeyType, MetaType <: KeyedMapper[KeyType, MetaType]](what: KeyedMapper[KeyType, MetaType]): String =$/;"	f
obscure	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def obscure(in: MyType): MyType = obscured$/;"	f
obscurePrimaryKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def obscurePrimaryKey(in: CrudType): String = obscurePrimaryKey(in.primaryKeyField.toString)$/;"	f
obscurePrimaryKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def obscurePrimaryKey(in: String): String = in$/;"	f
obscured	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  private[record] var obscured: MyType = _$/;"	v
offset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^      val offset = i - minCached$/;"	V
offset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^      val offset = i - minCached$/;"	V
offset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^  protected final def offset(n: Int): Int = n >>> 5$/;"	f
offset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/RegexParsers.scala	/^      val offset = in.offset$/;"	V
offset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/Scanners.scala	/^    override def offset: Int = in.offset$/;"	f
offset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/Scanners.scala	/^    override def offset: Int = in.offset$/;"	f
offset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/CharSequenceReader.scala	/^                         override val offset: Int) extends Reader[Char] {$/;"	V
offset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/PagedSeqReader.scala	/^                     override val offset: Int) extends Reader[Char] {$/;"	V
offset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/Reader.scala	/^  def offset: Int =$/;"	f
oid	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^    val oid = OpenIdObject.is$/;"	V
ok	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^    var ok = new scala.collection.mutable.BitSet(adecls.length);$/;"	v
okNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^      private def okNext(a : A) =$/;"	f
ol	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      val ol: List[MT] = if (!j.deterministic) {$/;"	V
old	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^    val old = findFunc(name)$/;"	V
old	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^    val old = value.value$/;"	V
old	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^    val old = _stack.get()$/;"	V
old	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^      val old: Boolean = ScreenVarHandler.get(bn) openOr false$/;"	V
old	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    val old = _currentSnippet.is$/;"	V
old	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^    val old: Boolean = RequestVarHandler.get(bn) openOr false$/;"	V
old	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^    val old: Boolean = S.session.flatMap(_.get(bn)) openOr false$/;"	V
old	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^    val old: Boolean = TransientRequestVarHandler.get(bn) openOr false$/;"	V
old	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/snippet/DeferredSnippet.scala	/^    val old = MyNumber.is$/;"	V
old	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^      val old = who.state$/;"	V
old	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^    val old = liftBundles.get$/;"	V
old	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^      val old: Boolean = WizardVarHandler.get(bn) openOr false$/;"	V
old	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/History.scala	/^      val old = log.dequeue;$/;"	V
old	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^    var old = start.head;$/;"	v
old	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/RevertableHistory.scala	/^    val old = log.toList.reverse$/;"	V
old	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/Binder.scala	/^      val old = result$/;"	V
oldAttrs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    val oldAttrs = _currentAttrs.is$/;"	V
oldEnv	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/BindingParsers.scala	/^    val oldEnv = binderEnv \/\/ save old environment$/;"	V
oldIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^    val oldIndex = index;$/;"	V
oldInt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BitSet.scala	/^    val oldInt = arr(offset(i))$/;"	V
oldKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^  protected var oldKey: A = _$/;"	v
oldKeys	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/HasManyThrough.scala	/^    val oldKeys = new HashSet[ThroughType];$/;"	V
oldLength	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/RollbackIterator.scala	/^    val oldLength = initRollback$/;"	V
oldNotices	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private[http] object oldNotices extends$/;"	o
oldPassword	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    var oldPassword = ""$/;"	v
oldSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^    val oldSize = mask + 1;$/;"	V
oldTable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^    val oldTable = Utils.clone(table);$/;"	V
oldTable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^    val oldTable = table$/;"	V
oldTable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^    val oldTable = table;$/;"	V
oldValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^  protected var oldValue: Option[B] = _$/;"	v
oldelement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ObservableBuffer.scala	/^    val oldelement = apply(n)$/;"	V
oldtable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^    val oldtable = table$/;"	V
oldval	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/DynamicVariable.scala	/^    val oldval = value$/;"	V
on	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  abstract class ATransition(val to: StV,val on: PartialFunction[Meta#Event, Any]) {$/;"	V
onAboutToShutdownSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  var onAboutToShutdownSession: List[LiftSession => Unit] = Nil$/;"	v
onBeginServicing	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val onBeginServicing = RulesSeq[Req => Unit]$/;"	V
onBeginServicing	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  var onBeginServicing: List[(LiftSession, Req) => Unit] = Nil$/;"	v
onBlurCmd	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def onBlurCmd: JsCmd = theCall(JsRaw("this.value"))$/;"	f
onChangeCmd	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def onChangeCmd: JsCmd = theCall(JsRaw("this.options[this.selectedIndex].value")) & JsRaw("this.blur()")$/;"	f
onComplete	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  var onComplete: Box[(Box[Identifier], Box[VerificationResult], Box[Exception]) => LiftResponse] = Empty$/;"	v
onConfirm_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^      def onConfirm_? = Screen.this.onConfirm_?$/;"	f
onConfirm_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    def onConfirm_? = Wizard.this.onConfirm_?$/;"	f
onConfirm_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  def onConfirm_? = true$/;"	f
onCreate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    def onCreate(loc: Loc[_]){$/;"	f
onCreate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    override def onCreate(loc: Loc[_]) {$/;"	f
onEndServicing	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val onEndServicing = RulesSeq[(Req, Box[LiftResponse]) => Unit]$/;"	V
onEndServicing	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  var onEndServicing: List[(LiftSession, Req, Box[LiftResponse]) => Unit] = Nil$/;"	v
onErrorFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^      val onErrorFunc: String =$/;"	V
onErrorParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^      val onErrorParam = onError.map(f => "onError_" + key) openOr "null"$/;"	V
onInsert	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  def onInsert: Unit = items.add$/;"	f
onJsonError	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def onJsonError: Box[JsCmd] = Empty$/;"	f
onLoad	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JSArtifacts.scala	/^  def onLoad(cmd: JsCmd): JsCmd$/;"	f
onLoad	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JQueryArtifacts.scala	/^  def onLoad(cmd: JsCmd): JsCmd = JqJsCmds.JqOnLoad(cmd)$/;"	f
onLoad	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^  def onLoad(cmd: JsCmd): JsCmd = new JsCmd {$/;"	f
onLoad	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^      val onLoad = JsRaw("""$/;"	V
onLoad	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/sparklines/Sparklines.scala	/^  def onLoad(id: String, graphStyle: SparklineStyle.Value, data: JsArray, opts: JsObj) : NodeSeq = {$/;"	f
onLoad	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tablesorter/TableSorter.scala	/^    val onLoad ="""jQuery(function($){$/;"	V
onLoad	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^  def onLoad(id: String, jsObj: JsObj) : NodeSeq = {$/;"	f
onLoadAsync	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^  def onLoadAsync(id: String, jsObj: JsObj, loadTree : () => List[Tree], loadNode: (String) => List[Tree]): NodeSeq = {$/;"	f
onLogIn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  var onLogIn: List[ModelType => Unit] = Nil$/;"	v
onLogOut	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  var onLogOut: List[Box[ModelType] => Unit] = Nil$/;"	v
onRemove	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  def onRemove(item: T): Unit = items.remove(item)$/;"	f
onSameThread	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  var onSameThread = false$/;"	v
onSave	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/ModelView.scala	/^  var onSave = (view: MV[T])=> {$/;"	v
onSessionActivate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  var onSessionActivate: List[LiftSession => Unit] = Nil$/;"	v
onSessionEnd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private var onSessionEnd: List[LiftSession => Unit] = Nil$/;"	v
onSessionPassivate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  var onSessionPassivate: List[LiftSession => Unit] = Nil$/;"	v
onSetupSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  var onSetupSession: List[LiftSession => Unit] = Nil$/;"	v
onShutdown	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  protected def onShutdown(session: CleanUpParam): Unit = {}$/;"	f
onShutdownSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  var onShutdownSession: List[LiftSession => Unit] = Nil$/;"	v
onSubmit	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  def onSubmit: Unit = items.save$/;"	f
oneBullet	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^      val oneBullet = if (numbered) accept('#') else accept('*')$/;"	V
oneToManyFields	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^  private var oneToManyFields: List[MappedOneToManyBase[_]] = Nil$/;"	v
oo	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^            val oo = SampleTag.findAll(OrderBy(SampleTag.tag, Ascending),$/;"	V
oo	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val oo = SampleTag.findAll(By(SampleTag.tag, "Meow"),$/;"	V
oo	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val oo = SampleTag.findAll(Like(SampleTag.tag, "%oo%"))$/;"	V
oo	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val oo = SampleTag.findAll(OrderBy(SampleTag.tag, Ascending),$/;"	V
oos	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^      val oos = new ObjectOutputStream(baos)$/;"	V
openEM	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  def openEM: javax.persistence.EntityManager = em$/;"	f
openIDVendor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^  def openIDVendor: OpenIdVendor$/;"	f
openId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^  object openId extends MappedString(this, 512) {$/;"	o
open_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def open_!  = throw new NullPointerException("Trying to open an empty Box")$/;"	f
open_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def open_! : A = value$/;"	f
open_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def open_! : A$/;"	f
open_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def open_! = throw new NullPointerException("Trying to open a Failure Box: " + msg) {$/;"	f
operation	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/rest/XMLApiHelper.scala	/^  protected def operation: Option[NodeSeq] =$/;"	f
operationAttrName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/rest/XMLApiHelper.scala	/^  def operationAttrName = "operation"$/;"	f
operators	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  private val operators = Map($/;"	V
opos	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^        val opos = pos;$/;"	V
ops	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/ops.scala	/^object ops {$/;"	o
opt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/Parsers.scala	/^  def opt[A](p: Parser[A]): Parser[List[A]] =$/;"	f
opt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def opt[T](p: => Parser[T]): Parser[Option[T]] = $/;"	f
opt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def opt[Q <% UnitParser](q: => Q): Parser[Boolean] = q ^^ true | success(false) $/;"	f
opt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def opt[T](p: => Parser[T]): Parser[Option[T]] = $/;"	f
optFunc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      val optFunc = columnNameToMappee.get(colName) match {$/;"	V
optString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Lexer.scala	/^  private def optString[A](pre: String, a: Option[A]) = a match {$/;"	f
option2Box	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  implicit def option2Box[T](in: Option[T]): Box[T] = Box(in)$/;"	f
option2Iterable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^  implicit def option2Iterable[A](xo: Option[A]): Iterable[A] = xo.toList$/;"	f
option2jvalue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  implicit def option2jvalue[A <% JValue](opt: Option[A]): JValue = opt match {$/;"	f
optionName1	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val optionName1 = r.param("option_name1")$/;"	V
optionName2	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val optionName2 = r.param("option_name2")$/;"	V
optionSelection1	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val optionSelection1 = r.param("option_selection1")$/;"	V
optionSelection2	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val optionSelection2 = r.param("option_selection2")$/;"	V
optionToJsE	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  implicit def optionToJsE(in: BaseFlotOptions): JsExp = in.asJsObj$/;"	f
optional	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarItem.scala	/^  def optional(f: (CalendarItem) => CalendarItem*): CalendarItem = {$/;"	f
options	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BindHelpersSpec.scala	/^      def options(xhtml: NodeSeq): NodeSeq = {$/;"	f
options	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^    val options = for {$/;"	V
options	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/SourceSnippet.scala	/^		val options :Seq[(Institution,String)] = institutions.map{ inst => (inst,inst.name.is) }$/;"	V
opts	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/SparklinesDemo.scala	/^    val opts = JsObj(("percentage_lines" -> JsArray(0.5, 0.75)),$/;"	V
or	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def or[B >: A](alternative: => Box[B]): Box[B] = alternative$/;"	f
or	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def or[B >: A](alternative: => Box[B]): Box[B] = alternative$/;"	f
or	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def or[B >: A](alternative: => Box[B]): Box[B] = this$/;"	f
or	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^      if (x == null) parser.fail("expected object or array")$/;"	o
or	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    root.getOrElse(throw new ParseException("expected object or array", null))$/;"	o
or	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^    def or(other: => List[T]): List[T] = if (!what.isEmpty) what else other$/;"	f
orElse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^  def orElse[B >: A](alternative: => Option[B]): Option[B] = $/;"	f
orElse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/PartialFunction.scala	/^  def orElse[A1 <: A, B1 >: B](that: PartialFunction[A1, B1]) : PartialFunction[A1, B1] = $/;"	f
ordered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashMap.scala	/^  private var ordered = List[Entry]()$/;"	v
ordered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashSet.scala	/^  private var ordered = List[A]()$/;"	v
orderedConstructorArgs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^    def orderedConstructorArgs(clazz: Class[_]): Iterable[Field] = {$/;"	f
orgData	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  private val orgData: FatLazy[Array[Byte]] = FatLazy(defaultValue)$/;"	V
orgData	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  private val orgData: FatLazy[String] = FatLazy(defaultValue)$/;"	V
orgData	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  private var orgData: Box[Boolean] = Full(defaultValue)$/;"	v
orgData	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  private val orgData = FatLazy(defaultValue)$/;"	V
orgData	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  private val orgData = FatLazy(defaultValue)$/;"	V
orgData	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  private var orgData : BigDecimal = defaultValue$/;"	v
orgData	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	private var orgData: Double = defaultValue$/;"	v
orgData	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  private var orgData: ENUM#Value = defaultValue$/;"	v
orgData	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  private var orgData: Int = defaultValue$/;"	v
orgData	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  private var orgData: Box[Long] = defaultValue$/;"	v
orgData	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  private var orgData: Long = defaultValue$/;"	v
orgData	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  private var orgData: Seq[ENUM#Value] = defaultValue$/;"	v
orgData	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  private val orgData: FatLazy[String] =  FatLazy(defaultValue) \/\/ defaultValue$/;"	V
orgData	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  private val orgData = FatLazy(defaultValue)$/;"	V
orgLst	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    val orgLst = p1.replaceAll("\/$", "\/index").split("\/").$/;"	V
original	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ThreadGlobal.scala	/^    val original = threadLocal.get$/;"	V
original	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ThreadGlobal.scala	/^    val original = value$/;"	V
original	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def original = RandomAccessSeq.this$/;"	f
original	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    protected def original : RandomAccessSeq[A]$/;"	f
os	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^            val os = response.outputStream$/;"	V
other	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^        val other = field.dbKeyToTable$/;"	V
otherField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    val otherField: MappedForeignKey[K2, O, T2],$/;"	V
otherFuncVendors	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    protected def otherFuncVendors(what: Manifest[ValueType]): Box[(ValueType, ValueType => Unit) => NodeSeq] = Empty$/;"	f
otherFuncVendors	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^      override protected def otherFuncVendors(what: Manifest[ValueType]):$/;"	f
otherMeta	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    val otherMeta: MetaMapper[T2],$/;"	V
otherPackages	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  private var otherPackages: List[String] = Nil$/;"	v
otherTable	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^        val otherTable = actualTableNames(other._dbTableNameLC)$/;"	V
others	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^      val others = getSingleton.findByNickname(str).$/;"	V
others	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/HasManyThrough.scala	/^  private val others = FatLazy[List[To]] {$/;"	V
out	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def out = xml$/;"	f
out	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def out: Node$/;"	f
out	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val out = new ByteArrayOutputStream$/;"	V
out	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^        val out = new DataOutputStream(conn.getOutputStream())$/;"	V
out	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def out = outVar.value$/;"	f
out	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^      override protected val out = o$/;"	V
out	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^  protected val out: List[A] = elem.elements.toList$/;"	V
out	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Marshal.scala	/^    val out = new ObjectOutputStream(ba)$/;"	V
out	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^  var out = new OutputStreamWriter(outs, encoding)$/;"	v
out	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingParser.scala	/^    val out = ppr.format(ele);$/;"	V
outSpan	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def outSpan: NodeSeq = Script(Run("var destroy_" + id + " = function() {" + (destroy.openOr(JsCmds.Noop).toJsCmd) + "}")) ++$/;"	f
outVar	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  private val outVar = new DynamicVariable[PrintStream](java.lang.System.out)$/;"	V
outer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  private val outer = this$/;"	V
outerField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^            val outerField: MappedField[JoinType, A] =$/;"	V
outerField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      val outerField: MappedField[JoinType, OuterMapper] = _outerField$/;"	V
outerField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      val outerField: MappedField[JoinType, OuterMapper] = fielda.dbKeyToTable.primaryKeyField$/;"	V
outerField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def outerField: MappedField[JoinType, OuterType]$/;"	f
outerTag	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^    val outerTag: String = S.attr("outer_tag") openOr "ul"$/;"	V
outerWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^      var outerWhile = false$/;"	v
output	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^    def output[B](v: A, c: () => B) =$/;"	f
outputStream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPResponse.scala	/^  def outputStream: OutputStream$/;"	f
outputStream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPResponseServlet.scala	/^  def outputStream: OutputStream = resp getOutputStream$/;"	f
outputStream	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^class MockHttpServletResponse(var writer: PrintWriter, var outputStream: ServletOutputStream)$/;"	v
overrideSnippetForClass	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def overrideSnippetForClass(cls: String, inst: StatefulSnippet): Unit = {$/;"	f
overrideValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def overrideValue: Box[T] = Empty$/;"	f
overrodeDocType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  def overrodeDocType = _setDocType$/;"	f
overview	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotAjax.scala	/^    val overview = new FlotOverview (idOverview, optionsOverview)$/;"	V
overwrittenReponseHeaders	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val overwrittenReponseHeaders: FactoryMaker[List[String]] = new FactoryMaker(() => List("expires")) {}$/;"	V
own	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    protected def own(e: T2) = {$/;"	f
own	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    override def own(e: O) = {$/;"	f
own	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    protected def own(e: O) = {$/;"	f
ownedJoins	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^      val ownedJoins = iter map own$/;"	V
owner	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def owner: Box[String] = _owner or proxyTo.owner$/;"	f
owner	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def owner: Box[String]$/;"	f
owner	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private final class BinFuncHolder(val func: FileParamHolder => Any, val owner: Box[String]) extends AFuncHolder {$/;"	V
owner	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private final class LFuncHolder(val func: List[String] => Any, val owner: Box[String]) extends AFuncHolder {$/;"	V
owner	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private final class NFuncHolder(val func: () => Any, val owner: Box[String]) extends AFuncHolder {$/;"	V
owner	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private final class SFuncHolder(val func: String => Any, val owner: Box[String]) extends AFuncHolder {$/;"	V
owner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  object owner extends MappedLongForeignKey(this,User)$/;"	o
owner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def owner: OwnerType$/;"	f
owner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BinaryField.scala	/^  def owner = rec$/;"	f
owner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BooleanField.scala	/^  def owner = rec$/;"	f
owner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DateTimeField.scala	/^  def owner = rec$/;"	f
owner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DecimalField.scala	/^  def owner = rec$/;"	f
owner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DoubleField.scala	/^  def owner = rec$/;"	f
owner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EnumField.scala	/^  def owner = rec$/;"	f
owner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/IntField.scala	/^  def owner = rec$/;"	f
owner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/LongField.scala	/^  def owner = rec$/;"	f
owner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^  def owner = rec$/;"	f
owner	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^  def owner = rec$/;"	f
owner	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^  val owner = NoSymbol$/;"	V
owner	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^  val owner = null$/;"	V
owner	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^  val owner: Symbol =$/;"	V
owner	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^  val owner: Symbol$/;"	V
p	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^      val p = (json: JValue) => json match {$/;"	V
p	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val p = PersonWithAddresses("joe", Map("address1" -> Address("Bulevard", "Helsinki"),$/;"	V
p	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^    val p = System.getProperties.clone.asInstanceOf[Properties]$/;"	V
p	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^    val p = properties.clone.asInstanceOf[Properties]$/;"	V
p	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^    def p(in: List[Char]) = in.takeWhile(isDigit).foldLeft(0L)((acc,c) => (acc * 10L) + cToL(c))$/;"	f
p	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                val p = le.next$/;"	V
p	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^    val p: PostMethod = new PostMethod(url)$/;"	V
p	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    val p = Pattern.compile("""JSON Func """ + cometName + """ \\$\\$ ([Ff][^ ]*)""")$/;"	V
p	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    val p = Pattern.compile("""lift_toWatch[ ]*\\=[ ]*\\{([^}]*)\\}""")$/;"	V
p	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    val p = Pattern.compile("""lift_toWatch\\[\\'([^\\']*)\\'] \\= \\'([0-9]*)""")$/;"	V
p	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^        val p = st.partition {a => a._1 == "style"}$/;"	V
p	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^    val p = mask(p1, m);$/;"	V
p	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^    val p = mask(p1, m);$/;"	V
p	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^      val p = page(index + start); index + start < p.end$/;"	V
p	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^      def p(a : A) = pp(a)$/;"	f
p	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^    protected def p(a : A) : Boolean$/;"	f
p	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^      override def p(a : A) = pp(a)$/;"	f
p	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^    protected def p(a : A) : Boolean$/;"	f
p	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^    override def p(a : A) = pp(a)$/;"	f
p	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^    override def p(a : A) = pp(a)$/;"	f
p	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val p     = boxValue(_0)$/;"	V
p	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^          val p = it.next$/;"	V
p	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^        val p = it.next$/;"	V
p	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^        val p = indexMap(trans(label))$/;"	V
p	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModelParser.scala	/^    val p = particle;$/;"	V
p	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingParser.scala	/^    val p = new ConstructingParser(Source.fromFile(inp), preserveWS)$/;"	V
p	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingParser.scala	/^    val p = new ConstructingParser(inp, preserveWS)$/;"	V
p	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/XhtmlParser.scala	/^    val p = new XhtmlParser(source)$/;"	V
p0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val p0    = boxValue(_0)$/;"	V
p1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    val p1 = fixURI((in match {case null => "\/"; case s if s.length == 0 => "\/"; case s => s}).replaceAll("\/+", "\/"))$/;"	V
p1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val p1    = boxValue(_1)$/;"	V
p2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/JSONSpec.scala	/^      val p2 = JSONParser.parse("-51.348484")$/;"	V
p2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/JSONSpec.scala	/^      val p2 = JSONParser.parse("-517272833222")$/;"	V
p2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/JSONSpec.scala	/^      val p2 = JSONParser.parse("51.348484")$/;"	V
p2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/JSONSpec.scala	/^      val p2 = JSONParser.parse($/;"	V
p2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/JSONSpec.scala	/^      val p2 = JSONParser.parse(longArray)$/;"	V
p2	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    val p2 = Pattern.compile("""'([^']*)'\\: ([0-9]*)""")$/;"	V
p2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val p2    = boxValue(_2)$/;"	V
p3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val p3    = boxValue(_3)$/;"	V
p4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val p4    = boxValue(_4)$/;"	V
p5	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val p5    = boxValue(_5)$/;"	V
p6	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val p6    = boxValue(_6)$/;"	V
p7	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val p7    = boxValue(_7)$/;"	V
p8	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val p8    = boxValue(_8)$/;"	V
p_notice	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private object p_notice extends TransientRequestVar(new ListBuffer[(NoticeType.Value, NodeSeq, Box[String])])$/;"	o
p_queryLog	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private object p_queryLog extends TransientRequestVar(new ListBuffer[(String, Long)])$/;"	o
page	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Paginator.scala	/^  def page = meta.findAll(constantParams ++ Seq(sort, MaxRows(num), StartAt(first)): _*)$/;"	f
page	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  private def page(absindex: Int) = {$/;"	f
pageLinks	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Paginator.scala	/^    def pageLinks(pages: Seq[Int], sep: NodeSeq) = NodeSeq.fromSeq($/;"	f
pageSize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  val pageSize = S.attr("count", _.toInt) openOr 20$/;"	V
pageWrapper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def pageWrapper(body: NodeSeq): NodeSeq =$/;"	f
pages	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Paginator.scala	/^        val pages = List(curPage - 1020, curPage - 120, curPage - 20) ++$/;"	V
paginate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Paginator.scala	/^  def paginate(xhtml: NodeSeq) = {$/;"	f
paginator	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Paginator.scala	/^  val paginator: Paginator[T]$/;"	V
pair	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val pair: Parser[(String, Any)] = (string | pairId) ~ spaces ~ ':' ~ spaces ~ theValue ^^ {case s ~ _ ~ _ ~ _ ~ v => (s,v)}$/;"	V
pair	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^      val pair = in.roboSplit("=")$/;"	V
pair	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def pair[a,b](pa: SPU[a], pb: SPU[b]): SPU[(a,b)] = {$/;"	f
pair2Assoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  implicit def pair2Assoc[A <% JValue](t: (String, A)) = new JsonAssoc(t)$/;"	f
pair2jvalue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  implicit def pair2jvalue[A <% JValue](t: (String, A)) = JObject(List(JField(t._1, t._2)))$/;"	f
pairChar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  def pairChar(in: Char): Boolean = in.isLetter || in.isDigit || in == '_'$/;"	f
pairFromRequest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^    def pairFromRequest(in: Box[Req]): (Box[Req], Box[String]) = {$/;"	f
pairId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val pairId: Parser[String] = rep1(elem("pairChar", pairChar)) ^^ {case s => s.mkString}$/;"	V
pairToList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def pairToList(p: (A, List[A])): List[A] =$/;"	f
pairToList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def pairToList(p: (a,List[a])): List[a] =$/;"	f
pairToPair	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  implicit def pairToPair(in: (String, Any)): (String, NodeSeq) = (in._1, Text(in._2 match {case null => "null" case s => s.toString}))$/;"	f
pairToResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/rest/XMLApiHelper.scala	/^  implicit def pairToResponse(in: (Boolean, String)): LiftResponse =$/;"	f
pairToUnprefixed	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^  implicit def pairToUnprefixed(in: (String, Any)): MetaData = {$/;"	f
pairs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^    val pairs = splitNameValuePairs(info)$/;"	V
par	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^      val par : NodeSeq = XmlElem(null, "p", Null, TopScope, flattenAndDropLastEOL(elems) : _*) ++ Text("\\n")$/;"	V
par	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/ops.scala	/^  def par[A, B](xp: => A, yp: => B): (A, B) = {$/;"	f
parMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/ops.scala	/^  def parMap[a,b](f: a => b, xs: Array[a]): Array[b] = {$/;"	f
paraFixer	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  def paraFixer(in: NodeSeq): NodeSeq = in match {$/;"	f
para_attribute	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val para_attribute = attribute | fill_align | left_align |$/;"	V
paragraph	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val paragraph : Parser[Textile] =$/;"	V
param	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  def param(name: String): Box[String]$/;"	f
param	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def param(n: String): Box[String] =$/;"	f
param	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def param(n: String): Box[String] = request.flatMap(r => Box(r.param(n)))$/;"	f
param	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SimpleController.scala	/^  def param(name: String): Box[String] = {$/;"	f
param	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def param(name: String): List[String]$/;"	f
param	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def param(name: String): List[String] = _params.filter(_.name == name).map(_.name)$/;"	f
param	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def param(name: String): List[String] = req.getParameterValues(name) match {case null => Nil case x => x.toList}$/;"	f
param	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def param(name: String): Box[String] = Box(info.get(name))$/;"	f
paramByte	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    val paramByte = body.toString.getBytes("UTF-8")$/;"	V
paramCalc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    val paramCalc = paramCalculator()$/;"	V
paramCalculator	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^          private[http] val paramCalculator: () => ParamCalcInfo,$/;"	V
paramCalculator	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    val paramCalculator = () => {$/;"	V
paramMap	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^    val paramMap = new java.util.HashMap[String, String]$/;"	V
paramMap	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^    private var paramMap = Map.empty[Int,Any]$/;"	v
paramNames	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def paramNames: List[String]$/;"	f
paramNames	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def paramNames: List[String] = _params.map(_.name)$/;"	f
paramNames	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  lazy val paramNames: List[String] = params map (_.name)$/;"	V
paramTemplate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def paramTemplate: Box[NodeSeq] =$/;"	f
paramTitle	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  lazy val paramTitle: Box[T => NodeSeq] =$/;"	V
parameterEntityDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^  def parameterEntityDecl(name: String, edef: EntityDef) {$/;"	f
parameterMap	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var parameterMap: _root_.scala.collection.jcl.HashMap[String, String] =$/;"	v
parameters	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthMessage.scala	/^class OAuthMessage(val method: RequestType, val uri: String, val parameters: List[OAuthUtil.Parameter]) {$/;"	V
paramified	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^    private def paramified : String = {$/;"	f
params	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/JSONSpec.scala	/^      val params = p2.open_!.asInstanceOf[Map[String, Map[String, Any]]].apply("params")$/;"	V
params	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^        val params = localParams ++ (request.params.sort {(s1, s2) => s1.name < s2.name}).map(n => (n.name, n.values))$/;"	V
params	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^        val params = normal.foldLeft(eMap)((a, b) =>$/;"	V
params	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^        val params: List[(String, String)] =$/;"	V
params	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  lazy val params: Map[String, List[String]] = addlParams.foldLeft(_params){$/;"	V
params	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def params(n: String): List[String] = request.flatMap(_.params.get(n)).openOr(Nil)$/;"	f
params	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def params: List[HTTPParam]$/;"	f
params	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def params: List[HTTPParam] = _params$/;"	f
params	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  lazy val params: List[HTTPParam] = enumToList[String](req.getParameterNames.asInstanceOf[_root_.java.util.Enumeration[String]]).$/;"	V
params	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    override val params = xparams.toList$/;"	V
params	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    override val params: List[LocParam[Unit]]$/;"	V
params	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def params: List[Loc.LocParam[T]]$/;"	f
params	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^  val params = new ConnectionParameters$/;"	V
params	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^    val params = new ConnectionParameters$/;"	V
params	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^  val params = new ConnectionParameters$/;"	V
params	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^class FacebookMethod(val name: String, attachment: Boolean, val params: FacebookParam*) {$/;"	V
params	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^class SessionlessFacebookMethod(override val name: String, override val params: FacebookParam*) extends FacebookMethod(name, false, params: _*) {$/;"	V
params	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthProblemException.scala	/^final class OAuthProblem(val problem: (String, Int),val params: List[(String, String)]) {$/;"	V
params	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    val params = faux_params.toList.map(x => (x._1, x._2.toString))$/;"	V
params	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^          def params = deleteMenuLocParams$/;"	f
params	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^          def params = editMenuLocParams$/;"	f
params	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^        def params = viewMenuLocParams$/;"	f
paramsAsPayloadList	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  private def paramsAsPayloadList(request: Req): Seq[(String, String)] =$/;"	f
paramsMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Surround.scala	/^      val paramsMap = WithParamVar.get + mainParam$/;"	V
paramsToUrlParams	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^  def paramsToUrlParams(params: List[(String, String)]): String = params.map {$/;"	f
paranamer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/project/build/src/LiftJson.scala	/^  val paranamer  = "com.thoughtworks.paranamer" % "paranamer" % "2.0" % "compile->default"$/;"	V
paranamer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  private val paranamer = new CachingParanamer(new BytecodeReadingParanamer)$/;"	V
parent	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/Role.scala	/^  private var parent: Box[Role] = Empty$/;"	v
parent	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  var parent = document.getElementById(""" + id.encJs + """);$/;"	v
parent	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NamespaceBinding.scala	/^                       val parent: NamespaceBinding) extends AnyRef {$/;"	V
parentBase	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^      val parentBase = bases.peek().asInstanceOf[URL]$/;"	V
parentName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^      val parentName = new Field with StringField {$/;"	V
parentName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^    val parentName = new Screen {$/;"	V
parentTag	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def parentTag = <div style="display: inline"\/>$/;"	f
parentTag	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def parentTag: Elem$/;"	f
parentTxnId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val parentTxnId  = r.param("parent_txn_id")$/;"	V
parse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^    def parse(s: String) = try {$/;"	f
parse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  def parse(s: String): Option[Date]$/;"	f
parse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  def parse(s: Reader): JValue = parse(new Buffer(s))$/;"	f
parse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  def parse(s: String): JValue = parse(new Buffer(new StringReader(s)))$/;"	f
parse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  def parse[A](s: Reader, p: Parser => A): A = p(new Parser(new Buffer(s)))$/;"	f
parse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  def parse[A](s: String, p: Parser => A): A = parse(new StringReader(s), p)$/;"	f
parse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  private def parse(buf: Buffer): JValue = {$/;"	f
parse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/PrintingTest.scala	/^  private def parse(json: String) = scala.util.parsing.json.JSON.parse(json)$/;"	f
parse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/PullParserExample.scala	/^      def parse: BigInt = p.nextToken match {$/;"	f
parse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  def parse(in: String): Box[Any] = theValue(in) match {$/;"	f
parse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/VCardParser.scala	/^  def parse(in: String): Either[List[VCardEntry], String] = expr(in) match {$/;"	f
parse	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  def parse(_toParse: String, urlRewrite: Option[RewriteFunc], disableLinks: Boolean): Option[Lst] = {$/;"	f
parse	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  def parse(toParse: String, urlRewrite: Option[RewriteFunc]): Option[Lst] =$/;"	f
parse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/RegexParsers.scala	/^  def parse[T](p: Parser[T], in: Reader[Char]): ParseResult[T] = $/;"	f
parse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/RegexParsers.scala	/^  def parse[T](p: Parser[T], in: java.io.Reader): ParseResult[T] =$/;"	f
parse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/RegexParsers.scala	/^  def parse[T](p: Parser[T], in: java.lang.CharSequence): ParseResult[T] = $/;"	f
parse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/JSON.scala	/^  def parse(input: String): Option[List[Any]] =$/;"	f
parse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  def parse(s: String): ContentModel = ContentModelParser.parse(s)$/;"	f
parse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModelParser.scala	/^  def parse(s: String): ContentModel = { initScanner(s); contentspec }$/;"	f
parse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^        var parse = atts.getValue("parse")$/;"	v
parseAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/RegexParsers.scala	/^  def parseAll[T](p: Parser[T], in: Reader[Char]): ParseResult[T] =$/;"	f
parseAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/RegexParsers.scala	/^  def parseAll[T](p: Parser[T], in: java.io.Reader): ParseResult[T] =$/;"	f
parseAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/RegexParsers.scala	/^  def parseAll[T](p: Parser[T], in: java.lang.CharSequence): ParseResult[T] = $/;"	f
parseAttributeValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def parseAttributeValue(value: String): Seq[Node] = {$/;"	f
parseBoolean	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  private def parseBoolean(s: String): Boolean =$/;"	f
parseCharRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def parseCharRef(ch: () => Char, nextch: () => Unit, reportSyntaxError: String => Unit): String = {$/;"	f
parseDTD	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def parseDTD(): Unit = { \/\/ dirty but fast$/;"	f
parseDate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var parseDate: String => Box[Date] = str => str match {$/;"	v
parseDelim	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/StdLexical.scala	/^      def parseDelim(s: String): Parser[Token] = accept(s.toList) ^^ { x => Keyword(s) }$/;"	f
parseDelim	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/StdLexical.scala	/^      def parseDelim(s: String): Parser[Token] = accept(s.toList) ^^ Keyword(s)$/;"	f
parseEscapedString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^      def parseEscapedString(base: String): String = {$/;"	f
parseFieldName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^      def parseFieldName: String = {$/;"	f
parseFromURL	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingParser.scala	/^object parseFromURL {$/;"	o
parseFull	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/JSON.scala	/^  def parseFull(input: String): Option[Any] =$/;"	f
parseInternetDate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def parseInternetDate(dateString: String): Date = tryo {$/;"	f
parseNumber	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^  def parseNumber(tin: String): Long = {$/;"	f
parseOpt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  def parseOpt(s: Reader): Option[JValue] = try { Some(parse(s)) } catch { case e => None }$/;"	f
parseOpt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  def parseOpt(s: String): Option[JValue] = try { Some(parse(s)) } catch { case e => None }$/;"	f
parsePath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def parsePath(in: String): ParsePath = {$/;"	f
parseString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^      def parseString: String = {$/;"	f
parseVal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ParserTest.scala	/^  private def parseVal(json: JValue, bufSize: Int) = {$/;"	f
parseValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^      def parseValue(first: Char) = {$/;"	f
parsed	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/JSONSpec.scala	/^      val parsed = JSONParser.parse(longJson)$/;"	V
parsed	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/XmlParseSpecs.scala	/^      val parsed = PCDataXmlParser(bis).open_!$/;"	V
parsed	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^                  val parsed = JSONParser.parse(s.trim).toList$/;"	V
parsedEntityDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^  def parsedEntityDecl(name: String, edef: EntityDef): Unit = edef match {$/;"	f
parser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/PullParserExample.scala	/^    val parser = (p: Parser) => {$/;"	V
parser	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    val parser = new TextileParsers(urlRewrite, disableLinks)$/;"	V
parser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/testing/RegexTest.scala	/^  val parser = (ident | number | string)*$/;"	V
parser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/testing/Tester.scala	/^  val parser: syntactic.Parser[Any]$/;"	V
parser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/testing/Tester.scala	/^  val parser: syntactic.Parser[Any]$/;"	V
parser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/Main.scala	/^      var parser: XMLReader = null$/;"	v
parser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^      var parser: XMLReader = null$/;"	v
parser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^    val parser: SAXParser = try {$/;"	V
parserA	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^    val parserA = elem("a", (c: Char) => c == 'a')$/;"	V
parserB	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^    val parserB = elem("b", (c: Char) => c == 'b')$/;"	V
parserC	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^    val parserC = elem("c", (c: Char) => c == 'c')$/;"	V
parserD	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^    val parserD = elem("d", (c: Char) => c == 'd')$/;"	V
parserThread	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^  var parserThread: Thread = null$/;"	v
parsing	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ParserTest.scala	/^    val parsing = (json: JValue) => { parse(Printer.pretty(render(json))); true }$/;"	V
parsing	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ParserTest.scala	/^    val parsing = (x: JValue, s1: Int, s2: Int) => { parseVal(x, s1) == parseVal(x, s2) }$/;"	V
part	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^        val part = places.dropRight(1)$/;"	V
partLen	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^          val partLen = end-start-1$/;"	V
partialUpdate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  protected def partialUpdate(cmd: => JsCmd) {$/;"	f
particle	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModelParser.scala	/^  def particle = token match {$/;"	f
partition	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def partition(p: A => Boolean): (Iterable[A], Iterable[A]) = {$/;"	f
partition	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def partition(p: A => Boolean) = self partition p$/;"	f
partition	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def partition(p: A => Boolean): (List[A], List[A]) = {$/;"	f
partition	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^  override def partition(p: A => Boolean): (RandomAccessSeq[A], RandomAccessSeq[A]) = {$/;"	f
partition	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeqProxy.scala	/^  override def partition(p: A => Boolean): (RandomAccessSeq[A], RandomAccessSeq[A]) =$/;"	f
parts	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^        var parts: List[(Int, Int, Array[Char])] = Nil$/;"	v
pass	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def pass(f: Box[A] => Unit): Box[A] = {f(this) ; this}$/;"	f
passNotFoundToChain	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var passNotFoundToChain = false$/;"	v
password	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def password(value: String, func: String => Any, attrs: (String, String)*): Elem =$/;"	f
password	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val password = r.param("password")$/;"	V
password	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^class ConsoleChatActor(val username: String, val password: String) extends LiftActor {$/;"	V
password	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  private var password = FatLazy(defaultValue)$/;"	v
password	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  object password extends MappedPassword[T](this) {$/;"	o
passwordDisplayName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def passwordDisplayName = ??("Password")$/;"	f
passwordReset	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def passwordReset(id: String) =$/;"	f
passwordResetEmailSubject	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def passwordResetEmailSubject = S.??("reset.password.request")$/;"	f
passwordResetMailBody	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def passwordResetMailBody(user: ModelType, resetLink: String) = {$/;"	f
passwordResetPath	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  lazy val passwordResetPath = thePath(passwordResetSuffix)$/;"	V
passwordResetSuffix	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def passwordResetSuffix = "reset_password"$/;"	f
passwordResetXhtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def passwordResetXhtml = {$/;"	f
password_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def password_*(value: String, func: AFuncHolder, attrs: (String, String)*): Elem =$/;"	f
patch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def patch = patch0$/;"	f
patch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    protected def patch : RandomAccessSeq[A]$/;"	f
patch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^  def patch[B >: A](from0: Int, patch0: RandomAccessSeq[B], replaced0: Int): RandomAccessSeq.Projection[B] = new RandomAccessSeq.Patch[B] {$/;"	f
patch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeqProxy.scala	/^  override def patch[B >: A](from0: Int, patch0: RandomAccessSeq[B], replaced0: Int) =$/;"	f
path	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^  lazy val path = elem("path", c => c.isLetterOrDigit ||$/;"	V
path	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var resourceServerPath = "classpath"$/;"	c
path	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def path(n: Int): String = head(path.wholePath.drop(n), null)$/;"	f
path	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^class Req(val path: ParsePath,$/;"	V
path	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPContext.scala	/^  def path: String$/;"	f
path	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletContext.scala	/^  def path: String = ctx.getContextPath$/;"	f
path	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^      val path: List[String] = pathList(value)$/;"	V
path	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^    val path: List[Loc[_]] = current match {$/;"	V
path	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^    var path = uri.getRawPath()$/;"	v
path	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var path = ""$/;"	v
pathList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    def pathList(value: T): List[String] = uriList$/;"	f
pathParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def pathParam(n: Int) = head(path.wholePath.drop(n + 2), "")$/;"	f
pathRewriter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResourceServer.scala	/^  var pathRewriter: PartialFunction[List[String], List[String]] = {$/;"	v
pathStr	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    lazy val pathStr: String = path.mkString("\/", "\/", "")$/;"	V
pattern	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^    val pattern = Pattern.compile("\\\\<\\\\%\\\\=([^\\\\%]*)\\\\%\\\\>")$/;"	V
pattern	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^  val pattern = Pattern.compile(regex)$/;"	V
payerBusinessName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val payerBusinessName = r.param("payer_business_name")$/;"	V
payerEmail	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val payerEmail = r.param("payer_email")$/;"	V
payerId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val payerId =r.param("payer_id")$/;"	V
payerStatus	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val payerStatus = r.param("payer_status")$/;"	V
payloadArray	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def payloadArray(paramaters: Seq[(String, String)]) = List("cmd" -> "_notify-validate") ++ paramaters$/;"	f
payloadArray	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  private def payloadArray(authToken: String, transactionToken: String) =$/;"	f
paymentCurrency	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val paymentCurrency = r.param("mc_currency")$/;"	V
paymentDate	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val paymentDate = r.param("payment_date")$/;"	V
paymentFee	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val paymentFee = r.param("payment_fee")$/;"	V
paymentGross	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val paymentGross = r.param("payment_gross")$/;"	V
paymentStatus	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val paymentStatus: Box[PaypalTransactionStatus.Value] = r.param("payment_status").flatMap(PaypalTransactionStatus.find)$/;"	V
paymentSuccessful	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def paymentSuccessful: Boolean = rawHead match {$/;"	f
paymentType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val paymentType = r.param("payment_type")$/;"	V
paypalAuthToken	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def paypalAuthToken: String$/;"	f
paypalAuthToken	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val paypalAuthToken = "123"$/;"	V
paypalInfo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  lazy val paypalInfo: Box[PayPalInfo] =$/;"	V
pb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^      val pb = k(a)$/;"	V
pd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/ScalaBeanInfo.scala	/^  private val pd = new Array[PropertyDescriptor](props.length \/ 3)$/;"	V
pdtPath	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def pdtPath = "pdt"$/;"	f
pdtResponse	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def pdtResponse = {$/;"	f
pdtResponse	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def pdtResponse:  PartialFunction[(PayPalInfo, Req), LiftResponse]$/;"	f
pe	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^      val pe = state.dict$/;"	V
peReference	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^  def peReference(name: String) { decls = PEReference(name) :: decls }$/;"	f
peReference	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^  final override def peReference(name: String) {$/;"	f
peek	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    def peek[A <: JValue](expectedType: Class[A]) = convert(stack.peek, expectedType)$/;"	f
peek	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def peek[T](p: Parser[T]): Parser[T] = Parser { in =>$/;"	f
peek	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    def peek(n : Int) : A = {$/;"	f
peek	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^  def peek = table(index - 1).asInstanceOf[T]$/;"	f
peekList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^      override def peekList(sz : Int) : Seq[A] = Advanced.this.peekList(sz)$/;"	f
peekList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^      override def peekList(sz : Int) : Seq[A] = PutBack.this.peekList(sz)$/;"	f
peekList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    def peekList(sz : Int) : Seq[A]$/;"	f
peekList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    override def peekList(sz : Int) : Seq[A] = {$/;"	f
peekList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^      override def peekList(sz: Int): Seq[Char] =$/;"	f
peekList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^      override def peekList(sz: Int): Seq[a] = $/;"	f
peekList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def peekList(sz : Int) = new RandomAccessSeq[A] {$/;"	f
peekOption	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    def peekOption = if (stack isEmpty) None else Some(stack.peek)$/;"	f
pendingMsg	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^  val pendingMsg: HashMap[String, List[String]] = new HashMap[String, List[String]]$/;"	V
pendingReads	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/SyncChannel.scala	/^  private var pendingReads  = List[SyncVar[A]]()$/;"	v
pendingReason	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val pendingReason = r.param("pending_reason")$/;"	V
pendingWrites	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/SyncChannel.scala	/^  private var pendingWrites = List[(A, SyncVar[Boolean])]()$/;"	v
perThreadNumberParser	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/JSON.scala	/^   def perThreadNumberParser : NumericParser = numberParser.get()$/;"	f
perThreadNumberParser_	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/JSON.scala	/^   def perThreadNumberParser_=(f : NumericParser) { numberParser.set(f) }$/;"	f
percentEncode	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  def percentEncode(s: String): String = {$/;"	f
percentEncode	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  def percentEncode(strings: Seq[String]): String = {$/;"	f
performAction	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    def performAction(who: MyType, from: StV, to: StV, what: Meta#Event) {$/;"	f
performEntry	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    def performEntry(who: MyType, from: StV, to: StV, why: Meta#Event) {_entry.foreach(e => e(who, from, to, why))}$/;"	f
performExit	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    def performExit(who: MyType, from: StV, to: StV, why: Meta#Event) {_exit.foreach(e => e(who, from, to, why))}$/;"	f
performHeadMerge	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def performHeadMerge(in: NodeSeq, req: Req): Node = merge(in, req)$/;"	f
performInsert	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def performInsert [T](conn : SuperConnection, query : String, setter : PreparedStatement => Unit, tableName : String, genKeyNames : List[String])(handler : Either[ResultSet,Int] => T) : T =$/;"	f
performInsertWithGenKeys	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  override def performInsertWithGenKeys [T](conn : SuperConnection, query : String, setter : PreparedStatement => Unit, tableName : String , genKeyNames : List[String], handler : Either[ResultSet,Int] => T) : T =$/;"	f
performInsertWithGenKeys	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  override def performInsertWithGenKeys [T](conn : SuperConnection, query : String, setter : PreparedStatement => Unit, tableName : String, genKeyNames : List[String], handler : Either[ResultSet,Int] => T) : T = {$/;"	f
performInsertWithGenKeys	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  override def performInsertWithGenKeys [T](conn : SuperConnection, query : String, setter : PreparedStatement => Unit, tableName : String, genKeyNames : List[String], handler : Either[ResultSet,Int] => T) : T =$/;"	f
performInsertWithGenKeys	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  protected def performInsertWithGenKeys [T](conn : SuperConnection, query : String, setter : PreparedStatement => Unit, tableName : String, genKeyNames : List[String], handler : Either[ResultSet,Int] => T) : T =$/;"	f
performLogUserIn	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^    def performLogUserIn(openid: Box[Identifier], fo: Box[VerificationResult], exp: Box[Exception]): LiftResponse = {$/;"	f
performPostCommit	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def performPostCommit(f: => Unit) {$/;"	f
performQuery	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def performQuery(query: String): (List[String], List[List[Any]]) =$/;"	f
performQuery	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def performQuery(query: String, params: List[Any]): (List[String], List[List[Any]]) =$/;"	f
performQuery	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def performQuery(query: String, params: List[Any], connectionIdentifier: ConnectionIdentifier): (List[String], List[List[Any]]) = {$/;"	f
performReRender	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private def performReRender(sendAll: Boolean) {$/;"	f
performSetup	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    def performSetup(who: MyType) = trans.foreach(_.performSetup(who, name))$/;"	f
performSetup	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    def performSetup(who: MyType, to: StV): Unit = _setup.foreach(_(who, to))$/;"	f
performTransform	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def performTransform(in: LiftResponse): LiftResponse = responseTransformers.toList.foldLeft(in) {$/;"	f
performTransportSend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  protected def performTransportSend(msg: MimeMessage) = Transport.send(msg)$/;"	f
performTransportSend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/MailerSpec.scala	/^  protected override def performTransportSend(msg: MimeMessage) = synchronized {$/;"	f
period1	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val period1 = r.param("period1")$/;"	V
period2	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val period2 = r.param("period2")$/;"	V
period3	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val period3 = r.param("period3")$/;"	V
permutationOk	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^      val permutationOk = (s: String) => permuteParsers(s)$/;"	V
permute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def permute[T](func: List[Parser[T]] => List[List[Parser[T]]], p: (Parser[T])*): Parser[List[T]] =$/;"	f
permute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def permute[T](p: (Parser[T])*): Parser[List[T]] = permute((lst : List[Parser[T]]) => lst.permute, p :_*)$/;"	f
permute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^    def permute = permuteList(what)$/;"	f
permuteAll	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def permuteAll[T](p: (Parser[T])*): Parser[List[T]] = permute((lst : List[Parser[T]]) => lst.permuteAll, p :_*)$/;"	f
permuteAll	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^    def permuteAll = permuteWithSublists(what)$/;"	f
permuteAllParsers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^      def permuteAllParsers(s: String) = shouldSucceed(permuteAll(parserA, parserB, parserC, parserD)(s))$/;"	f
permuteList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^  def permuteList[T](in: Seq[T]): List[List[T]] = (in.toList: @unchecked) match {$/;"	f
permuteParsers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^      def permuteParsers(s: String) = shouldSucceed(permute(parserA, parserB, parserC, parserD)(s))$/;"	f
permuteWithSublists	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^  def permuteWithSublists[T](in: Seq[T]): List[List[T]] = {$/;"	f
person	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/Examples.scala	/^  val person = """$/;"	V
person	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^    val person = parse(testJson).extract[Person]$/;"	V
person	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^      val person = createPerson$/;"	V
person	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^    val person = new Person$/;"	V
person	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^  object person extends MappedLongForeignKey(this, Person)$/;"	o
personDSL	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/Examples.scala	/^  val personDSL = $/;"	V
perturb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^    var perturb = index;$/;"	v
petName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^      val petName = new Field with StringField {$/;"	V
pf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^        val pf = messageHandler$/;"	V
pf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^    val pf: PartialFunction[Any, Unit] = {$/;"	V
phrase	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^  lazy val phrase = ((contentParser ~ expr).* ^^ {case l => l.flatMap(f => f._1 + f._2).mkString("")}) ~ contentParser ^^ {case a ~ b => a + b}$/;"	V
phrase	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def phrase[T](p: Parser[T]) = new Parser[T] {$/;"	f
phrase	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/RegexParsers.scala	/^  override def phrase[T](p: Parser[T]): Parser[T] =$/;"	f
phrase	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/TokenParsers.scala	/^  def phrase[t](p: Parser[t]) = new Parser[t] {$/;"	f
pick3Letters	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^      implicit def pick3Letters = abcdStringGen.pickN(3, List("a", "a", "a"))$/;"	f
pick3Letters	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^      implicit def pick3Letters = abcdStringGen.pickN(3, List("a", "b", "c"))$/;"	f
pickN	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^  def pickN(n: Int, elems: List[String]) = Arbitrary {$/;"	f
pickle	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def pickle[T](p: SPU[T], a: T): Array[Byte] =$/;"	f
pilib	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^object pilib {$/;"	o
pingService	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ActorPingUnit.scala	/^  def pingService = {$/;"	f
pinged	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ActorPingSpec.scala	/^    @volatile var pinged = false$/;"	v
pk	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val pk = actual.primaryKeyField$/;"	V
pkDefinedByIndexColumn_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def pkDefinedByIndexColumn_? : Boolean = false$/;"	f
pkDefinedByIndexColumn_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  override def pkDefinedByIndexColumn_? : Boolean = false  \/\/changed to false by nafg$/;"	f
pkName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^            val pkName = rs.getString(4)$/;"	V
pkValueQuery	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^      val pkValueQuery = genKeyNames.map(String.format("currval('%s_%s_seq')", tableName, _)).mkString(", ")$/;"	V
placeHolder_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def placeHolder_? : Boolean = _placeHolder_?$/;"	f
placeholder_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def placeholder_? = _placeholder$/;"	f
plotArea	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOverview.scala	/^     val plotArea: JsCmd =$/;"	V
pls	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^            val pls = places.mkString("\/", "\/", "")$/;"	V
pm	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^      val pm =  authReq.getParameterMap()$/;"	V
pointIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^  private val pointIndex = fullname.lastIndexOf(".")$/;"	V
points	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def points: Box[FlotPointsOptions] = Empty$/;"	f
points	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotSerie.scala	/^  def points: Box[FlotPointsOptions] = Empty$/;"	f
poll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/ReferenceQueue.scala	/^  def poll: Option[Reference[T]] = Wrapper(underlying.poll)$/;"	f
pool	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private var pool: List[Connection] = Nil$/;"	v
poolSize	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private var poolSize = 0$/;"	v
pop	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    def pop[A <: JValue](expectedType: Class[A]) = convert(stack.poll, expectedType)$/;"	f
pop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def pop = {$/;"	f
pop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def pop = {$/;"	f
pop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^    override def pop: Stack[B] = Stack.this$/;"	f
pop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^  def pop: Stack[A] = throw new NoSuchElementException("no element on stack")$/;"	f
pop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^  def pop = {$/;"	f
pop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Stack.scala	/^  def pop(): A = {$/;"	f
pop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/StackProxy.scala	/^  override def pop(): A = self.pop$/;"	f
pop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedStack.scala	/^  override def pop(): A = synchronized { super.pop }$/;"	f
popjs	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotAjax.scala	/^        val popjs = if (pop) {nameSerie + ".shift () ;\\n"} else ""$/;"	V
port	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def port: Int = 80$/;"	f
port	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  override def port: Int = 443$/;"	f
pos	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^        var pos = 0$/;"	v
pos	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^      val pos = this.pos$/;"	V
pos	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^    var pos = 0$/;"	v
pos	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^     var pos = 0$/;"	v
pos	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^    var pos = 0$/;"	v
pos	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^        var pos = 0$/;"	v
pos	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^    val pos = in.indexOf("=")$/;"	V
pos	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    override lazy val pos: Position = new MyOffsetPosition(source, offset, index)$/;"	V
pos	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    var pos = 0$/;"	v
pos	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    var pos = (start openOr 0L) * -1L$/;"	v
pos	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    var pos = 0$/;"	v
pos	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    var pos = 1$/;"	v
pos	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var pos = str.length()$/;"	v
pos	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  var pos = 0$/;"	v
pos	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^  protected var pos = 0$/;"	v
pos	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/Scanners.scala	/^    def pos = rest1.pos$/;"	f
pos	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/Scanners.scala	/^    def pos = rest1.pos$/;"	f
pos	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/CharSequenceReader.scala	/^  def pos: Position = new OffsetPosition(source, offset)$/;"	f
pos	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/PagedSeqReader.scala	/^  def pos: Position = new OffsetPosition(source, offset)$/;"	f
pos	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/Positional.scala	/^  var pos: Position = NoPosition$/;"	v
pos	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/Reader.scala	/^  def pos: Position$/;"	f
pos	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/StreamReader.scala	/^  override def pos: Position = new Position {$/;"	f
pos	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/WordExp.scala	/^    var pos = -1$/;"	v
pos	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^      val pos = this.pos$/;"	V
pos	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    val pos = this.pos$/;"	V
pos	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  var pos: Int = _$/;"	v
pos1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^    val pos1 = pos$/;"	V
pos1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      val pos1 = str.lastIndexOf(separator, pos - 1)$/;"	V
pos1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    val pos1 = pos$/;"	V
pos1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/XhtmlParser.scala	/^    val pos1 = pos$/;"	V
position	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def position: Box[String] = Empty \/\/ "ne" or "nw" or "se" or "sw"$/;"	f
position	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/EncodingHeuristics.scala	/^        var position = declaration.indexOf("encoding") + 8;$/;"	v
positioned	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def positioned[T <: Positional](p: => Parser[T]): Parser[T] = Parser { in =>$/;"	f
positioned	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def positioned[Q <% UnitParser](p: => Q) = new Parser[Position] {$/;"	f
positioned	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def positioned[T <: Positional](p: => Parser[T]): Parser[T] = new Parser[T] {$/;"	f
positive	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object positive(Object arg) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
possibleMethods	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^    def possibleMethods: List[Method] = {$/;"	f
post	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Form.scala	/^    val post = S.attr.~("postsubmit").map("function() { " + _.text + "; }")$/;"	V
post	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Form.scala	/^  def post(kids: NodeSeq): NodeSeq =$/;"	f
post	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def post(url: String, body: Array[Byte], contentType: String): Response =$/;"	f
post	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def post(url: String, httpClient: HttpClient,$/;"	f
post	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def post(url: String, params: (String, Any)*): Response =$/;"	f
post	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def post(url: String, xml: NodeSeq): Response =$/;"	f
postCommit	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private def postCommit: List[() => Unit] =$/;"	f
postCommit_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private def postCommit_=(lst: List[() => Unit]): Unit = _postCommitFuncs.set(lst)$/;"	f
postFuncs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private object postFuncs extends TransientRequestVar(new ListBuffer[() => Unit])$/;"	o
postLogin	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  def postLogin(id: Box[Identifier],res: VerificationResult): Unit = {$/;"	f
postLogin	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  def postLogin(id: Box[Identifier],res: VerificationResult): Unit$/;"	f
postUrl	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  def postUrl = "\/"+ PathRoot + "\/" + LoginPath$/;"	f
post_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def post_? = requestType.post_?$/;"	f
post_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^  def post_? : Boolean = false$/;"	f
post_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^  override def post_? = true$/;"	f
post_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def post_? = request.map(_.post_?).openOr(false)$/;"	f
post_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SimpleController.scala	/^  def post_? : Boolean = request.post_?$/;"	f
postalCode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/PullParserExample.scala	/^    val postalCode = parse(json, parser)$/;"	V
posted	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/AutoCompleteDemo.scala	/^object posted extends RequestVar[Box[String]](Empty)$/;"	o
poster	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    val poster = new PostMethod(baseUrl + url)$/;"	V
poster	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    val poster = new PutMethod(baseUrl + url)$/;"	V
pow	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Currency.scala	/^      val pow = Math.pow(10, decimals)$/;"	V
pow	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def pow (exp: Int): BigInt = new BigInt(this.bigInteger.pow(exp))$/;"	f
pow	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def pow(x: Double, y: Double): Double = java.lang.Math.pow(x, y)$/;"	f
ppr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingParser.scala	/^    val ppr = new scala.xml.PrettyPrinter(80,5);$/;"	V
pre	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Form.scala	/^    val pre = S.attr.~("onsubmit").map(_.text + ";") getOrElse ""$/;"	V
pre	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrefixedAttribute.scala	/^class PrefixedAttribute(val pre: String,$/;"	V
pre	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^        val pre = qname.substring(0, colon)$/;"	V
pre	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^    val pre = if (-1 == colon) null else qname.substring(0, colon)$/;"	V
preBlock	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val preBlock: Parser[Textile] =$/;"	V
preEndOfLine	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val preEndOfLine: Parser[Textile] = (('\\r' ~ '\\n') | '\\n') ^^^ CharBlock("\\n")$/;"	V
precache	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val precache = by.flatMap{case j: PreCache[A] => List(j) case _ => Nil}$/;"	V
precedes	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^    def precedes(i: Int, j: Int) = {$/;"	f
predicate	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarMonthView.scala	/^      def predicate (current: Calendar, c: CalendarItem) = {$/;"	f
prefix	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^          val prefix = qname.substring(6 \/*xmlns:*\/ , qname.length);$/;"	V
prefix	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    val prefix: String = new DecimalFormat("00000000000000000").format(bump + num)$/;"	V
prefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/Benchmark.scala	/^  def prefix: String = getClass().getName()$/;"	f
prefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Elem.scala	/^@serializable class Elem(override val prefix: String,$/;"	V
prefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NamespaceBinding.scala	/^class NamespaceBinding(val prefix: String,$/;"	V
prefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  def prefix: String = null$/;"	f
prefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  final def prefix(name: String): Option[String] = {$/;"	f
prefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^          val prefix = qname.substring(6 \/*xmlns:*\/ , qname.length);$/;"	V
prefix0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      var prefix0 = prefix$/;"	v
prefix0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      var prefix0 = prefix$/;"	v
prefixedAttr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  val prefixedAttr = S.attr("prefix", "name") openOr "Not found"$/;"	V
prefixedAttrsToMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def prefixedAttrsToMap(prefix: String): Map[String, String] =$/;"	f
prefixedAttrsToMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def prefixedAttrsToMap(prefix: String, start: Map[String, String]): Map[String, String] =$/;"	f
prefixedAttrsToMetaData	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def prefixedAttrsToMetaData(prefix: String): MetaData = prefixedAttrsToMetaData(prefix, Map.empty)$/;"	f
prefixedAttrsToMetaData	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def prefixedAttrsToMetaData(prefix: String, start: Map[String, String]): MetaData =$/;"	f
prepStat	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^              def prepStat(st : PreparedStatement) {$/;"	f
prepareStatement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def prepareStatement[T](statement: String, autoColumns: Array[Int], conn: SuperConnection)(f: (PreparedStatement) => T): T = {$/;"	f
prepareStatement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def prepareStatement[T](statement: String, autoColumns: Array[String], conn: SuperConnection)(f: (PreparedStatement) => T): T = {$/;"	f
prepareStatement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def prepareStatement[T](statement: String, autokeys: Int, conn: SuperConnection)(f: (PreparedStatement) => T): T = {$/;"	f
prepareStatement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def prepareStatement[T](statement: String, conn: SuperConnection)(f: (PreparedStatement) => T): T = {$/;"	f
prepareStatement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^  def prepareStatement (conn : Connection, query : String) =$/;"	f
prepareStatement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^  def prepareStatement (conn : Connection, query : String, autoKeys : Array[Int]) =$/;"	f
prepareStatement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^  def prepareStatement (conn : Connection, query : String, autoKeys : Array[String]) =$/;"	f
prepareStatement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^  def prepareStatement (conn : Connection, query : String, autoKeys : Int) =$/;"	f
prepend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def prepend(r: T): RulesSeq[T] = {$/;"	f
prepend	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Buffer.scala	/^  def prepend(elems: A*) { elems ++: this }$/;"	f
prepend	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BufferProxy.scala	/^  override def prepend(elems: A*): Unit = self.prependAll(elems)$/;"	f
prepend	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedBuffer.scala	/^  override def prepend(elems: A*): Unit = synchronized {$/;"	f
prependAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Buffer.scala	/^  def prependAll(iter: Iterable[A]) { iter ++: this }$/;"	f
prependAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BufferProxy.scala	/^  override def prependAll(elems: Iterable[A]): Unit = self.prependAll(elems)$/;"	f
prependAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedBuffer.scala	/^  override def prependAll(elems: Iterable[A]): Unit = synchronized {$/;"	f
prependBuilder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  private def prependBuilder(builder: FormBuilderLocator[_], to: Map[String, List[FormBuilderLocator[_]]]):$/;"	f
prependDispatch	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  def prependDispatch(func: PartialFunction[Req, BaseRecord => Box[LiftResponse]])= {$/;"	f
prependElem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MutableList.scala	/^  protected def prependElem(elem: A): Unit = {$/;"	f
prependField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def prependField(pf: FieldPF) {$/;"	f
prependGlobalFormBuilder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def prependGlobalFormBuilder[T](builder: FormBuilderLocator[T]) {$/;"	f
prependRequestFormBuilder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def prependRequestFormBuilder[T](builder: FormBuilderLocator[T]) {$/;"	f
prependSessionFormBuilder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def prependSessionFormBuilder[T](builder: FormBuilderLocator[T]) {$/;"	f
prependToList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^  def prependToList(xs: List[A]): List[A] =$/;"	f
prependTypeHint	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^    def prependTypeHint(clazz: Class[_], o: JObject) = $/;"	f
pres	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var pres = prefix$/;"	v
presenceChanged	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^      def presenceChanged(p: Presence) {$/;"	f
preserve	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^  val preserve  = "preserve"$/;"	V
preserveWS	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^  val preserveWS = true$/;"	V
preserveWS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/Binder.scala	/^abstract class Binder(val preserveWS: Boolean) extends ValidatingMarkupHandler {$/;"	V
preserveWS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingHandler.scala	/^  val preserveWS: Boolean$/;"	V
preserveWS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingParser.scala	/^class ConstructingParser(val input: Source, val preserveWS: Boolean)$/;"	V
preserveWS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  val preserveWS: Boolean$/;"	V
preserveWS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/XhtmlParser.scala	/^  val preserveWS = true$/;"	V
preserveWS	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^    val preserveWS = true$/;"	V
preserving	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^  def preserving[T](action : => T) = {$/;"	f
pretty	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  def pretty(d: Document): String = pretty(d, new StringWriter).toString$/;"	f
pretty	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  def pretty[A <: Writer](d: Document, out: A): A = {$/;"	f
prev	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^    var prev: MailboxItem = _$/;"	v
prev	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^      def prev(in: NodeSeq) = if (first < 20) <xml:group>&nbsp;<\/xml:group>$/;"	f
prev	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/DoubleLinkedList.scala	/^  var prev: This$/;"	v
prevButton	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    def prevButton: Elem = Wizard.this.prevButton$/;"	f
prevButton	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    val prevButton: Box[Elem] = if (OnFirstScreen) Empty else$/;"	V
prevButton	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  def prevButton: Elem = <button>{S.??("Previous")}<\/button>$/;"	f
prevId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    val prevId = Helpers.nextFuncName$/;"	V
prevXml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Paginator.scala	/^    val prevXml = Text(?("<"))$/;"	V
previous	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^      def previous = {$/;"	f
previous	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^    def previous = underlying.previous.asInstanceOf[A];$/;"	f
previous	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^          val previous = underlying.previous;$/;"	V
previous	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^      def previous = seekPrevious match {$/;"	f
previous	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^    override def previous = {$/;"	f
previous	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SeqIterator.scala	/^    override def previous = f(SeqIterator.this.previous);$/;"	f
previous	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SeqIterator.scala	/^  def previous: A;$/;"	f
previousCharacterIsUnderscore	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      def previousCharacterIsUnderscore(name: String, i: Int) = i > 1 && name.charAt(i - 1) == '_'$/;"	f
previousIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^      def previousIndex = {$/;"	f
previousIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^    def previousIndex = underlying.previousIndex;$/;"	f
previousIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^      def previousIndex = {$/;"	f
previousIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^    override def previousIndex = {$/;"	f
previousIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SeqIterator.scala	/^    override def previousIndex = SeqIterator.this.previousIndex;$/;"	f
previousIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SeqIterator.scala	/^  def previousIndex: K;$/;"	f
previousLevel	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^        val previousLevel = level$/;"	V
previousWord	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def previousWord = S.??("Previous")$/;"	f
primaryConstructorOf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^    def primaryConstructorOf[A](cl: Class[A]): JConstructor[A] = $/;"	f
primaryKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Record.scala	/^  def primaryKey: KeyField[KeyType, MyType]$/;"	f
primaryKeyField	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  override def primaryKeyField = id$/;"	f
primaryKeyField	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  def primaryKeyField = id$/;"	f
primaryKeyField	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^    def primaryKeyField = id$/;"	f
primaryKeyField	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    def primaryKeyField = id$/;"	f
primaryKeyField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def primaryKeyField = id$/;"	f
primaryKeyField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def primaryKeyField: MappedField[KeyType, OwnerType] with IndexedField[KeyType]$/;"	f
primaryKeyField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def primaryKeyField: MappedField[TheKeyType, MapperType] with IndexedField[TheKeyType]$/;"	f
primaryKeyField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^  override def primaryKeyField = id$/;"	f
primaryKeyField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala	/^  def primaryKeyField = id$/;"	f
primaryKeyField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  override def primaryKeyField = id$/;"	f
primaryKeyField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  def primaryKeyField = id$/;"	f
primaryKeyField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  override def primaryKeyField = dog2id$/;"	f
primaryKeyField	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^	override def primaryKeyField = id$/;"	f
primaryKeySetup	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def primaryKeySetup(tableName : String, columnName : String) : List[String] = {$/;"	f
primaryKeySetup	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  override def primaryKeySetup(tableName : String, columnName : String) : List[String] = {$/;"	f
primeObj	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def primeObj(obj: Box[Other]) = synchronized {$/;"	f
primitive2jvalue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^    def primitive2jvalue(a: Any)(implicit formats: Formats) = a match {$/;"	f
primitive_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^    def primitive_?(clazz: Class[_]) = primitives contains clazz$/;"	f
primitives	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^    val primitives = Map[Class[_], Unit]() ++ (List[Class[_]]($/;"	V
primitives	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^  val primitives = $/;"	V
primitives	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val primitives = Primitives(124, 123L, 126.5, 127.5.floatValue, "128", 's, 125, 129.byteValue, true)$/;"	V
print	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def print(obj: Any): Unit =$/;"	f
print	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def print(x: Any) = Console.print(x)$/;"	f
print	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  def print(sep: String) {$/;"	f
printError	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  protected def printError(errtype: String, ex: SAXParseException): Unit =$/;"	f
printer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^    val printer = new scala.xml.PrettyPrinter(100,2)$/;"	V
printf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def printf(text: String, args: Any*) { out.print(text format (args : _*)) }$/;"	f
printf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def printf(text: String, xs: Any*) = Console.printf(text, xs: _*)$/;"	f
println	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def println(): Unit = out.println()$/;"	f
println	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def println(x: Any): Unit = out.println(x)$/;"	f
println	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def println() = Console.println()$/;"	f
println	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def println(x: Any) = Console.println(x)$/;"	f
privateMethod	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      val privateMethod = classOf[_root_.java.util.ArrayList[Object]].getDeclaredMethod("readObject", classOf[_root_.java.io.ObjectInputStream])$/;"	V
probablePrime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def probablePrime(bitLength: Int, rnd: scala.util.Random): BigInt =$/;"	f
proc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/IoHelpers.scala	/^      val proc = Runtime.getRuntime.exec(cmds.toArray)$/;"	V
procInstr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/Binder.scala	/^  final def procInstr(pos: Int, target: String, txt: String) =$/;"	f
procInstr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingHandler.scala	/^  def procInstr(pos: Int, target: String, txt: String) =$/;"	f
procInstr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/DefaultMarkupHandler.scala	/^  def procInstr(pos: Int, target: String, txt: String) = NodeSeq.Empty$/;"	f
procInstr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^  def procInstr(pos: Int, target: String, txt: String): NodeSeq$/;"	f
procInstr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^    def procInstr(pos: Int, target: String, txt: String): NodeSeq = {$/;"	f
process	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def process(in: UpdateType): MyType$/;"	f
process	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^      def process(info: List[String]): Unit = onSubmit(info.flatMap(sm.get))$/;"	f
process	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    def process(nonce: String): JsCmd =$/;"	f
process	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    def process(nonce: String): Unit =$/;"	f
process	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^    def process(nonce: String): Unit = secure.find(_._2 == nonce).map(x => onSubmit(x._1))$/;"	f
processAttributes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private def processAttributes(in: MetaData): MetaData = {$/;"	f
processAwards	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/SourceSnippet.scala	/^		def processAwards(in: List[String]) = selectedAwards(in.map{ name => Award.findAll(By(Award.name,name)).first})$/;"	f
processBind	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def processBind(around: NodeSeq, atWhat: Map[String, NodeSeq]) : NodeSeq = {$/;"	f
processDependencies	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DependencySnippet.scala	/^		def processDependencies(in: List[String]) =$/;"	f
processEvent	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  def processEvent(event: Meta#Event): Unit = {$/;"	f
processEvent	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  protected def processEvent(who: MyType, what: Meta#Event) {$/;"	f
processIdent	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/StdLexical.scala	/^  protected def processIdent(name: String) = $/;"	f
processIdent	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/StdLexical.scala	/^  protected def processIdent(name: String) = $/;"	f
processMailbox	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  private def processMailbox(ignoreProcessing: Boolean) {$/;"	f
processMessage	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^    def processMessage(chat: Chat, msg: Message) {$/;"	f
processOrDefer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private def processOrDefer(node: Elem)(f: => NodeSeq): NodeSeq = {$/;"	f
processPDT	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def processPDT(r: Req)(): Box[LiftResponse] = {$/;"	f
processRequest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] def processRequest(request: Req): Box[LiftResponse] = {$/;"	f
processRewrite	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    def processRewrite(path: ParsePath, params: Map[String, String]): RewriteResponse =$/;"	f
processSnippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private def processSnippet(page: String, snippetName: Box[String],$/;"	f
processSources	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DiscoverySnippet.scala	/^		def processSources(in: List[String]) =  $/;"	f
processString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^  def processString(msg: String, subst: Map[String, String]): String = {$/;"	f
processSubmit	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DependencySnippet.scala	/^	def processSubmit() = {$/;"	f
processSubmit	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DiscoverySnippet.scala	/^	def processSubmit() = {$/;"	f
processSubmit	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/SourceSnippet.scala	/^		def processSubmit() = {$/;"	f
processSurroundAndInclude	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def processSurroundAndInclude(page: String, in: NodeSeq): NodeSeq =$/;"	f
processTemplate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    def processTemplate(loc: Box[NodeSeq], path: ParsePath, code: Int): Box[LiftResponse] =       $/;"	f
processedSnippets	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^    val processedSnippets: Map[String, NodeSeq] = Map(snippetHashs.toList.flatMap {$/;"	V
processing	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  @volatile private[this] var processing = false$/;"	v
processingInstruction	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^  override def processingInstruction(target: String, data: String) {$/;"	f
processingInstruction	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^  def processingInstruction(target: String, data: String) {$/;"	f
processingInstruction	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  override def processingInstruction(target: String, data: String) {$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product.scala	/^  def productArity: Int$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product1.scala	/^  override def productArity = 1$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product10.scala	/^  override def productArity = 10$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product11.scala	/^  override def productArity = 11$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product12.scala	/^  override def productArity = 12$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product13.scala	/^  override def productArity = 13$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product14.scala	/^  override def productArity = 14$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product15.scala	/^  override def productArity = 15$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product16.scala	/^  override def productArity = 16$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^  override def productArity = 17$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^  override def productArity = 18$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  override def productArity = 19$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product2.scala	/^  override def productArity = 2$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  override def productArity = 20$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  override def productArity = 21$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  override def productArity = 22$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product3.scala	/^  override def productArity = 3$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product4.scala	/^  override def productArity = 4$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product5.scala	/^  override def productArity = 5$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product6.scala	/^  override def productArity = 6$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product7.scala	/^  override def productArity = 7$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product8.scala	/^  override def productArity = 8$/;"	f
productArity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product9.scala	/^  override def productArity = 9$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product.scala	/^  def productElement(n: Int): Any$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product1.scala	/^  override def productElement(n: Int) = n match {$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product10.scala	/^  override def productElement(n: Int) = n match {$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product11.scala	/^  override def productElement(n: Int) = n match {$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product12.scala	/^  override def productElement(n: Int) = n match {$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product13.scala	/^  override def productElement(n: Int) = n match {$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product14.scala	/^  override def productElement(n: Int) = n match {$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product15.scala	/^  override def productElement(n: Int) = n match {$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product16.scala	/^  override def productElement(n: Int) = n match {$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^  override def productElement(n: Int) = n match {$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^  override def productElement(n: Int) = n match {$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  override def productElement(n: Int) = n match {$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product2.scala	/^  override def productElement(n: Int) = n match {$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  override def productElement(n: Int) = n match {$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  override def productElement(n: Int) = n match {$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  override def productElement(n: Int) = n match {$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product3.scala	/^  override def productElement(n: Int) = n match {$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product4.scala	/^  override def productElement(n: Int) = n match {$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product5.scala	/^  override def productElement(n: Int) = n match {$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product6.scala	/^  override def productElement(n: Int) = n match {$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product7.scala	/^  override def productElement(n: Int) = n match {$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product8.scala	/^  override def productElement(n: Int) = n match {$/;"	f
productElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product9.scala	/^  override def productElement(n: Int) = n match {$/;"	f
productPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product.scala	/^  def productPrefix = ""$/;"	f
productionMode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  lazy val productionMode: Boolean = mode == RunModes.Production ||$/;"	V
progList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^      lazy val progList: (Long, Long, Int) => Unit = S.session.flatMap(_.progressListener) openOr LiftRules.progressListener$/;"	V
progressJsonResponse	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/uploadprogress/UploadProgress.scala	/^  def progressJsonResponse: Full[LiftResponse] = {$/;"	f
progressListener	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var progressListener: (Long, Long, Int) => Unit = (_, _, _) => ()$/;"	v
progressListener	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  var progressListener: Box[(Long, Long, Int) => Unit] = Empty$/;"	v
project	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^  val project = Project("test", new Date, Some(Language("Scala", 2.75)), List($/;"	V
project	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  val project = Project("test", new Date, Some(Language("Scala", 2.75)), List($/;"	V
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^     override def projection : Projection[A] = throw new Error$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    override def projection = this$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def projection : Iterable.Projection[A] = new Iterable.Projection[A] {$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def projection = self.projection$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def projection = toStream$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def projection : MutableProjection[A] = new MutableProjection[A] {$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def projection : MutableProjection[A] = this$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def projection = this$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^  override def projection : RandomAccessSeq.Projection[A] = new RandomAccessSeq.Projection[A] {$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeqProxy.scala	/^  override def projection = self.projection$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    override def projection = this$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  override def projection: Seq.Projection[A] = new Seq.Projection[A] {$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def projection = self.projection$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^  override def projection: Map.Projection[A,B] = new Map.Projection[A, B] {$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/MapProxy.scala	/^  override def projection = self.projection$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^      override def projection = this$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    override def projection : Buffer.Projection[A] = this$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    override def projection : Projection0[A] = this$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  override def projection : Buffer.Projection[A] = new Buffer.Projection[A] {$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Collection.scala	/^    override def projection = this$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Collection.scala	/^  override def projection : Collection.Projection[A] = new Collection.Projection[A] {$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    override def projection = this$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^  override def projection : Map.Projection[K,E] = new Map.Projection[K,E] {$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^    override def projection = this$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^  override def projection : MutableIterable.Projection[A] = new MutableIterable.Projection[A] {$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^    override def projection = this$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^  override def projection : MutableSeq.Projection[A] = new MutableSeq.Projection[A] {$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^    override def projection = this$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^  override def projection : Set.Projection[A] = new Set.Projection[A] {$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    override def projection = this$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^  override def projection : SortedMap.Projection[K,E] = new SortedMap.Projection[K,E] {$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^    override def projection = this$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^  override def projection : SortedSet.Projection[A] = new SortedSet.Projection[A] {$/;"	f
projection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  override def projection : scala.Array.Projection[Any] = new scala.Array.Projection[Any] {$/;"	f
prolog	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def prolog(): Tuple3[Option[String], Option[String], Option[Boolean]] = {$/;"	f
propFileName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  val propFileName = "lift.props"$/;"	V
propFilename	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Properties.scala	/^  private val propFilename = "\/library.properties"$/;"	V
propName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def propName: String = "derby_local"$/;"	f
propName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def propName: String = "hs_fs"$/;"	f
propName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def propName: String = "hs_mem"$/;"	f
propName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def propName: String = "maxdb_local"$/;"	f
propName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def propName: String = "ms_sqlserver"$/;"	f
propName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def propName: String = "mysql_local"$/;"	f
propName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def propName: String = "oracle_local"$/;"	f
propName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def propName: String = "psql_local"$/;"	f
propName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def propName: String$/;"	f
properties	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  lazy val properties: Properties = {$/;"	V
props	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  lazy val props: Map[String, String] = {$/;"	V
props	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/VCardParser.scala	/^  lazy val props = ((((elem(';') ~> key <~ elem('=')) ~ key) ^^ {case a ~ b => (a, b)}) | ((elem(';') ~> key) ^^ {case a => (a, "")}))*$/;"	V
props	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def props = members.toList$/;"	f
props	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def props = np$/;"	f
props	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  def props: List[(String, JsExp)]$/;"	f
props	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Properties.scala	/^    val props = new java.util.Properties$/;"	V
props	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Properties.scala	/^  private val props = {$/;"	V
propsPrefix	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    lazy val propsPrefix = "mapper.test."+propName+"."$/;"	V
protocol	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def protocol = "http"$/;"	f
protocol	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def protocol = "https"$/;"	f
protocol	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def protocol: String$/;"	f
protocol	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var protocol = "http 1.0"$/;"	v
provider	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/ManyToManySpecs.scala	/^  val provider = DBProviders.H2MemoryProvider$/;"	V
providers	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  def providers = DBProviders.asList$/;"	f
proxyPreparedStatement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^  private def proxyPreparedStatement(stmt : => PreparedStatement, query : String) = {$/;"	f
ptype	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^        val ptype = t.asInstanceOf[ParameterizedType]$/;"	V
pubID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^      val pubID = pubidLiteral()$/;"	V
pubidLiteral	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def pubidLiteral(): String = {$/;"	f
publicID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^    var publicID = ""$/;"	v
publicLiteralToString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def publicLiteralToString(s: String): String = {$/;"	f
publicLiteralToString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def publicLiteralToString(sb: StringBuilder, s: String): StringBuilder = {$/;"	f
publicParameterLess	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      val publicParameterLess = classOf[String].getMethod("length")$/;"	V
publicWithParameters	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      val publicWithParameters = classOf[String].getMethod("indexOf", classOf[String])$/;"	V
publish	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Publisher.scala	/^  protected def publish(event: A): Unit =$/;"	f
punctuate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  private def punctuate(p: Document, docs: List[Document]): List[Document] = docs match {$/;"	f
push	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    def push(v: JValue) = stack.addFirst(v)$/;"	f
push	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def push(x : IntMap[V]) {$/;"	f
push	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def push(x : LongMap[V]) {$/;"	f
push	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^  def push[B >: A](elem1: B, elem2: B, elems: B*): Stack[B] = this.push(elem1).push(elem2) ++ elems$/;"	f
push	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^  def push[B >: A](elem: B): Stack[B] = new Node(elem)$/;"	f
push	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^  def push[B >: A](elems: Iterable[B]): Stack[B] =$/;"	f
push	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^  def push(x : T) = {$/;"	f
push	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Stack.scala	/^  def push(elems: A*): Unit = (this ++= elems)$/;"	f
push	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/StackProxy.scala	/^  override def push(elems: A*): Unit = self ++= elems$/;"	f
push	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedStack.scala	/^  override def push(elems: A*): Unit = synchronized { super.++=(elems) }$/;"	f
push	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def push(entityName: String) {$/;"	f
push	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def push(src:Source) = {$/;"	f
pushExternal	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def pushExternal(systemId: String) {$/;"	f
put	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def put(url: String, body: Array[Byte], contentType: String): Response =$/;"	f
put	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def put(url: String, httpClient: HttpClient,$/;"	f
put	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def put(url: String, xml: NodeSeq): Response =$/;"	f
put	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/FormProcessor.scala	/^  def put: Unit$/;"	f
put	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    override def put(k : K, e : E) = Map.this.put(k, e)$/;"	f
put	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    override def put(key : K, elem : E) = {$/;"	f
put	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    override def put(key : K, elem : F) = Map.this.put(key, g(elem)).map(f);$/;"	f
put	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^  override def put(key : K, elem : E) : Option[E] = throw new java.lang.AbstractMethodError $/;"	f
put	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^  override def put(key: K, elem: E) = {$/;"	f
put	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    override def put(k : K, e : E) = SortedMap.this.put(k, e)$/;"	f
put	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    override def put(key : K, elem : E) = {$/;"	f
put	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashMap.scala	/^  override def put(key: A, value: B): Option[B] = {$/;"	f
put	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^  def put(key: A, elem: B): Option[B] = {$/;"	f
put	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/SyncVar.scala	/^  def put(x: A) = synchronized {$/;"	f
putBack	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^      override protected[this] def putBack(a : A) : Unit = {$/;"	f
putBack	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    override protected[this] def putBack(a : A) : Unit = a +: lookahead$/;"	f
putBack	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    protected[this] def putBack(a : A) : Unit$/;"	f
putChar	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  protected def putChar(c: Char) = cbuf.append(c)$/;"	f
putListIntoMB	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^    def putListIntoMB(): Unit = {$/;"	f
putResponseInBox	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/rest/XMLApiHelper.scala	/^  implicit def putResponseInBox(in: LiftResponse): Box[LiftResponse] = Full(in)$/;"	f
putValue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def putValue(key: String, value: Any) = values += (key -> value)$/;"	f
put_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def put_? = requestType.put_?$/;"	f
put_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^  def put_? : Boolean = false$/;"	f
put_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/RequestType.scala	/^  override def put_? = true$/;"	f
q	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^         val q = new REMatcher(it, p2);$/;"	V
q	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^      val q = S.param("q").openOr("")$/;"	V
q	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^    val q = using(md.getIndexInfo(null, getDefaultSchemaName(connection), actualTableNames(table._dbTableNameLC), false, false)) {rs =>$/;"	V
q	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^      val q: (A,Queue[A]) = dequeue;$/;"	V
q	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^    var q: List[B] = in$/;"	v
q	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^      val q = indexMap(Q)$/;"	V
q	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^    val q = deltaq(src)$/;"	V
q	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModelParser.scala	/^      case CHOICE  => val q = choiceRest( p );accept( RPAREN ); q$/;"	V
q	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModelParser.scala	/^      case COMMA   => val q = seqRest( p );   accept( RPAREN ); q$/;"	V
q	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^      var q = 0$/;"	v
q0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    val q0 = _initialBitSet$/;"	V
q1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/Inclusion.scala	/^    var q1 = 0 \/\/dfa1.initstate; \/\/ == 0$/;"	v
q2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/Inclusion.scala	/^    var q2 = 0 \/\/dfa2.initstate; \/\/ == 0$/;"	v
qCurrent	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^  var qCurrent: Int = -1$/;"	v
qDef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^      val qDef = indexMap(transDef)$/;"	V
qStack	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^  var qStack: List[Int] = Nil$/;"	v
qname	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^      val qname = xName$/;"	V
qname	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^      val qname = attributes.getQName(i)$/;"	V
qname	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^      val qname = xName$/;"	V
qname	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    val qname = xName$/;"	V
qp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    val qp: QueryParam[O]*) extends scala.collection.mutable.Buffer[T2] {$/;"	V
quad	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^      def quad(rs: ResultSet): List[(String, String, Int)] = {$/;"	f
quantity	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val quantity = r.param("quantity")$/;"	V
query	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/test/scala/TransactionMonadSpec.scala	/^        val query = ctx.getEntityManager.createNamedQuery("findUserByName")$/;"	V
query	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/HasManyThrough.scala	/^	val query = "SELECT DISTINCT "+otherSingleton._dbTableNameLC+".* FROM "+otherSingleton._dbTableNameLC+","+$/;"	V
query	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^              val query = "INSERT INTO "+MapperRules.quoteTableName(_dbTableNameLC)+" ("+columnNamesForInsert+") VALUES ("+columnQueriesForInsert+")"$/;"	V
queryLog	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def queryLog: List[(String, Long)] = p_queryLog.is.toList$/;"	f
queryParams	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^            val queryParams: List[QueryParam[A]] = by.toList$/;"	V
queryParams	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      val queryParams: List[QueryParam[InnerMapper]] = {$/;"	V
queryParams	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      val queryParams: List[QueryParam[InnerMapper]] =$/;"	V
queryParams	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def queryParams: List[QueryParam[InnerType]]$/;"	f
queryString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^def queryString: Box[String] =$/;"	f
queryString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def queryString: Box[String]$/;"	f
queryString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  lazy val queryString: Box[String] = Box !! req.getQueryString$/;"	V
queryString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  val queryString: Box[String] = req.queryString$/;"	V
queryString	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^    val queryString = httpReq.queryString openOr ""$/;"	V
queryString	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var queryString: String = ""$/;"	v
queryStringParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^      lazy val queryStringParam:  (List[String], Map[String, List[String]]) = {$/;"	V
queryTimeout	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  var queryTimeout: Box[Int] = Empty$/;"	v
queue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/ScriptRenderer.scala	/^         var queue = liftAjax.lift_ajaxQueue;$/;"	v
queue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/jolib.scala	/^    val queue = new collection.mutable.Queue[C]$/;"	V
queueCreate	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^  def queueCreate[A >: Null <: AnyRef]: QueueModule[A] = new QueueModule[A] {$/;"	f
queueCreate	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^  def queueCreate[A]: QueueModule[A] = new QueueModule[A] {$/;"	f
quickSort	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^  def quickSort(a: Array[Double]) = sort1(a, 0, a.length)$/;"	f
quickSort	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^  def quickSort(a: Array[Float]) = sort1(a, 0, a.length)$/;"	f
quickSort	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^  def quickSort(a: Array[Int]) = sort1(a, 0, a.length)$/;"	f
quickSort	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^  def quickSort[K <% Ordered[K]](a: Array[K]) = sort1(a, 0, a.length)$/;"	f
quote	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  private def quote(s: String) = {$/;"	f
quote	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val quote : Parser[Textile] = formattedLineElem('"', success(Nil)) ^^ flatten4((f, x, y, lst) => Quoted(f, x, lst))$/;"	V
quoteColumnName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  val quoteColumnName: String => String =$/;"	V
quoteTableName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  val quoteTableName: String => String =$/;"	V
quote_ref	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val quote_ref: Parser[Textile] =$/;"	V
quote_url	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val quote_url: Parser[Textile] = ('"' ~> rep(attribute) ~ chrsExcept('"', '\\n')) ~ ('"' ~> ':' ~> httpStr) ^^$/;"	V
quoted	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/Examples.scala	/^  val quoted = """["foo \\" \\n \\t \\r bar"]"""$/;"	V
r	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LAPinger.scala	/^    val r = new Callable[Unit] {$/;"	V
r	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^      val r: JValue = right._2$/;"	V
r	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ActorPing.scala	/^    val r = new _root_.java.util.concurrent.Callable[Unit] {$/;"	V
r	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^    val r =$/;"	V
r	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^    val r = S.request$/;"	V
r	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  private val r = params$/;"	V
r	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarMonthView.scala	/^                val r = <div class="calendarItem"><a href="#">{$/;"	V
r	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^        qp.map{v => val r: QueryParam[InnerMapper] = v; r}.toList$/;"	V
r	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      qp.map{v => val r: QueryParam[InnerMapper] = v; r}.toList$/;"	V
r	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^    val r = new Receiver(f)$/;"	V
r	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  def r: Regex = new Regex(self)$/;"	f
r	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^      val r = new TestResult()$/;"	V
r	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^    var r = true$/;"	v
r	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^      val r = result$/;"	V
r	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    val r = p(in)$/;"	V
r	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    def apply(in: Input) = {println("trying "+name+" at "+in.pos); val r = p(in); println(name+" --> "+r); r }$/;"	V
r	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/Reader.scala	/^    var r: Reader[T] = this$/;"	v
r	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^    def r = r1$/;"	f
r	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^      var r: Node = jt.next;$/;"	v
r	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  def r: ContentModel.RegExp$/;"	f
r	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^    val r = getAndClearEvent$/;"	V
r	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^    val r = xmlEvent$/;"	V
r1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val r1 = Rec(1, Nil)$/;"	V
r1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/Inclusion.scala	/^        val r1 = dfa1.next(q1,letter)$/;"	V
r2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val r2 = Rec(2, Nil)$/;"	V
r2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^        val r2 = q(in)$/;"	V
r2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/Inclusion.scala	/^        val r2 = dfa2.next(q2,letter)$/;"	V
r3	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val r3 = Rec(3, r1 :: r2 :: Nil)$/;"	V
radio_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def radio_*(opts: Seq[String], deflt: Box[String],$/;"	f
radius	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def radius: Box[Int] = Empty \/\/ TODO$/;"	f
ran	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    val ran = "v" + Helpers.nextFuncName$/;"	V
ran	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^    val ran = "v" + Helpers.nextFuncName$/;"	V
rand	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Safe.scala	/^  private val rand = new SecureRandom$/;"	V
randNum	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^        val randNum = if ((pos % 6) == 0) random.nextInt else lastRand$/;"	V
random	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  private val random = new _root_.java.security.SecureRandom$/;"	V
random	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^  private val random = new _root_.java.security.SecureRandom$/;"	V
random	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def random: Double = java.lang.Math.random()$/;"	f
randomInt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def randomInt(mod: Int): Int = Math.abs(random.nextInt) % mod$/;"	f
randomLong	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def randomLong(mod: Long): Long = Math.abs(random.nextLong) % mod$/;"	f
randomString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^  def randomString(size: Int): String = {$/;"	f
randomString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Safe.scala	/^  def randomString(len: Int): String = StringHelpers.randomString(len)$/;"	f
range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def range(start: Int, end: Int): Array[Int] = {$/;"	f
range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def range(start: Int, end: Int): Iterator[Int] = range(start, end, 1)$/;"	f
range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def range(start: Int, end: Int, step: Int => Int) = new Iterator[Int] {$/;"	f
range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def range(start: Int, end: Int, step: Int) = new Iterator[Int] {$/;"	f
range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def range(start: Int, end: Int): List[Int] =$/;"	f
range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def range(start: Int, end: Int, step: Int => Int): List[Int] = {$/;"	f
range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def range(start: Int, end: Int, step: Int): List[Int] = {$/;"	f
range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  def range(start: Int, end: Int): Stream[Int] = $/;"	f
range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  def range(start: Int, end: Int, step: Int => Int): Stream[Int] = {$/;"	f
range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  final def range(start: Int, end: Int, step: Int): Stream[Int] = {$/;"	f
range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Ranged.scala	/^  def range(from: K, until: K) = rangeImpl(Some(from), Some(until))$/;"	f
range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Sorted.scala	/^  override def range(from: K, until: K) = rangeImpl(Some(from),Some(until))$/;"	f
range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedMap.scala	/^  override def range(from: K, until: K) = rangeImpl(Some(from),Some(until));$/;"	f
range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedSet.scala	/^  override def range(from: A, until: A) = rangeImpl(Some(from),Some(until))$/;"	f
range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def range(from : Option[A], until : Option[A]) : Tree[B]$/;"	f
range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def range(from : Option[A], until : Option[A]) = this$/;"	f
range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^   override def range(from : Option[A], until : Option[A]) : Tree[B] = {$/;"	f
range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/SortedMap.scala	/^  override def range(from: A, until: A) = rangeImpl(Some(from),Some(until))$/;"	f
range	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Ranged.scala	/^  override final def range(from: K, until: K) : SortedSelf = rangeImpl(Some(from),Some(until));$/;"	f
rangeImpl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Ranged.scala	/^  def rangeImpl(from: Option[K], until: Option[K]): Ranged[K, A]$/;"	f
rangeImpl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Sorted.scala	/^  override def rangeImpl(from: Option[K], until: Option[K]): Sorted[K,A]$/;"	f
rangeImpl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedMap.scala	/^    override def rangeImpl(from : Option[K], until : Option[K]) : SortedSet[K] = {$/;"	f
rangeImpl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedMap.scala	/^  override def rangeImpl(from : Option[K], until : Option[K]) : SortedMap[K,E];$/;"	f
rangeImpl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedSet.scala	/^  override def rangeImpl(from: Option[A], until: Option[A]): SortedSet[A]$/;"	f
rangeImpl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/SortedMap.scala	/^  override def rangeImpl(from: Option[A], until: Option[A]): SortedMap[A,B]$/;"	f
rangeImpl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^  override def rangeImpl(from : Option[A], until : Option[A]) : SortedMap[A,B] = {$/;"	f
rangeImpl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^   override def rangeImpl(from: Option[A], until: Option[A]): TreeSet[A] = {$/;"	f
rangeImpl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  override def rangeImpl(from : Option[Int], until : Option[Int]) : Buffer[A] = new Range(from, until);$/;"	f
rangeImpl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^  override def rangeImpl(from : Option[Int], until : Option[Int]) : Buffer[A] = new Range(from, until);$/;"	f
rangeImpl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Ranged.scala	/^  def rangeImpl(from: Option[K], until: Option[K]) : SortedSelf;$/;"	f
rangeImpl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Sorted.scala	/^  override def rangeImpl(from: Option[K], until: Option[K]) : SortedSelf;$/;"	f
rangeImpl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^      override def rangeImpl(from : Option[K], until : Option[K]) : SortedMap.Projection[K,E] = $/;"	f
rangeImpl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    override def rangeImpl(from : Option[K], until : Option[K]) : SortedMap.Projection[K,E] = $/;"	f
rangeImpl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    override def rangeImpl(from : Option[K], until : Option[K]) : SortedMap[K,E] = {$/;"	f
rangeImpl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    override def rangeImpl(from : Option[K], until : Option[K]) =$/;"	f
rangeImpl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^  override def rangeImpl(from : Option[K], until : Option[K]) : SortedMap[K,E] = Range(from, until);$/;"	f
rangeImpl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^    override def rangeImpl(from : Option[A], until : Option[A]) : SortedSet[A] = {$/;"	f
rangeImpl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^  override def rangeImpl(from : Option[A], until : Option[A]) : SortedSet[A] = new Range(from, until);$/;"	f
rangeImpl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSetWrapper.scala	/^  override def rangeImpl(from : Option[A], until : Option[A]) : SortedSet[A] = new Range(from,until);$/;"	f
rawHead	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def rawHead: Box[String] = Box(response.firstOption)$/;"	f
rawXml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^        val rawXml: NodeSeq = processSurroundAndInclude(PageName get, xhtml)$/;"	V
rb	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^                val rb = RedirectBackTo.is$/;"	V
rbs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    val rbs = new mutable.BitSet(1)$/;"	V
rc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^      val rc = conn.open_!$/;"	V
rc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      val rc = conn.open_!$/;"	V
rc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^    val rc = table.mappedFields.toList.flatMap {$/;"	V
rcb	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^      def rcb(in: List[Textile]) {$/;"	f
re	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    val re = new REMatcher(body, p)$/;"	V
re	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^    val re = separators.foldLeft("[")(_+escape(_)) + "]"$/;"	V
reRender	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def reRender(sendAll: Boolean) {$/;"	f
reaction	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private val reaction: PartialFunction[Any, Unit] = {$/;"	V
read	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    private[this] def read = {$/;"	f
read	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Serialization.scala	/^  def read[A, R <: Reader](in: Reader)(implicit formats: Formats, mf: Manifest[A]): A =$/;"	f
read	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Serialization.scala	/^  def read[A](json: String)(implicit formats: Formats, mf: Manifest[A]): A =$/;"	f
read	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/DiffExamples.scala	/^  private def read(resource: String) = $/;"	f
read	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ConcurrentLock.scala	/^  def read[T](f: => T): T = {$/;"	f
read	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^final case class StreamingResponse(data: {def read(buf: Array[Byte]): Int}, onEnd: () => Unit, size: Long, headers: List[(String, String)], cookies: List[HTTPCookie], code: Int) extends BasicResponse {$/;"	f
read	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def read = is.read()$/;"	f
read	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    var read = false$/;"	v
read	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/RollbackIterator.scala	/^  def read(f: => Unit): Boolean = remember[Boolean] {$/;"	f
read	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/Channel.scala	/^  def read: a = synchronized {$/;"	f
read	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/SyncChannel.scala	/^  def read: A = {$/;"	f
read	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^    def read = {$/;"	f
readBoolean	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def readBoolean(): Boolean = {$/;"	f
readBoolean	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def readBoolean() = Console.readBoolean()$/;"	f
readByte	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def readByte(): Byte = {$/;"	f
readByte	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def readByte() = Console.readByte()$/;"	f
readChar	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def readChar(): Char = {$/;"	f
readChar	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def readChar() = Console.readChar()$/;"	f
readDouble	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def readDouble(): Double = {$/;"	f
readDouble	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def readDouble() = Console.readDouble()$/;"	f
readEncodingFromStream	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/EncodingHeuristics.scala	/^  def readEncodingFromStream(in: InputStream): String = {$/;"	f
readFloat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def readFloat(): Float = {$/;"	f
readFloat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def readFloat() = Console.readFloat()$/;"	f
readIf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^  def readIf[T](f : PartialFunction[A,T]) : Option[T] = $/;"	f
readIfStartsWith	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    def readIfStartsWith(seq : Seq[Any]) : Boolean = {$/;"	f
readIfStartsWith	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/RollbackIterator.scala	/^  override def readIfStartsWith(seq : Seq[Any]) : Boolean = $/;"	f
readInt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def readInt(): Int = {$/;"	f
readInt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def readInt() = Console.readInt()$/;"	f
readInto	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def readInto[B >: A](xs: Array[B]) {$/;"	f
readInto	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def readInto[B >: A](xs: Array[B], start: Int) {$/;"	f
readInto	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def readInto[B >: A](xs: Array[B], start: Int, sz: Int) {$/;"	f
readLine	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def readLine(): String = in.readLine()$/;"	f
readLine	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def readLine(text: String, args: Any*): String = {$/;"	f
readLine	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def readLine(): String = Console.readLine()$/;"	f
readLine	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def readLine(text: String, args: Any*) = Console.readLine(text, args)$/;"	f
readLock	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^  val readLock = rwl.readLock$/;"	V
readLong	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def readLong(): Long = {$/;"	f
readLong	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def readLong() = Console.readLong()$/;"	f
readNat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^      def readNat: Int = {$/;"	f
readObject	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  private def readObject(in: ObjectInputStream) {$/;"	f
readObject	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  private def readObject(s: java.io.ObjectInputStream ) {$/;"	f
readOnly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    def readOnly = all$/;"	f
readOnly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    def readOnly = all$/;"	f
readOnly	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    def readOnly : RandomAccessSeq[A] = new RandomAccessSeq[A] {$/;"	f
readOnly	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Buffer.scala	/^  def readOnly : Seq[A]$/;"	f
readOnly	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BufferProxy.scala	/^  override def readOnly = self.readOnly$/;"	f
readOnly	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^  override def readOnly : List[A] = start$/;"	f
readOnly	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^  def readOnly: scala.collection.Map[A, B] = new scala.collection.Map[A, B] {$/;"	f
readOnly	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Set.scala	/^  def readOnly : scala.collection.Set[A] = new scala.collection.Set[A] {$/;"	f
readPermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  override def readPermission_? = true$/;"	f
readPermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  override def readPermission_? = true$/;"	f
readPermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  override def readPermission_? = true$/;"	f
readPermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  override def readPermission_? = true$/;"	f
readPermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  override def readPermission_? = true$/;"	f
readPermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	override def readPermission_? = true$/;"	f
readPermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def readPermission_? = false$/;"	f
readPermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  override def readPermission_? = true$/;"	f
readPermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def readPermission_? = true$/;"	f
readPermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  override def readPermission_? = true$/;"	f
readPermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  override def readPermission_? = true$/;"	f
readPermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  override def readPermission_? = true$/;"	f
readReq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/SyncChannel.scala	/^        val readReq  = pendingReads.head$/;"	V
readReq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/SyncChannel.scala	/^    val readReq = new SyncVar[A]$/;"	V
readResolve	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    private def readResolve(): AnyRef =$/;"	f
readResolve	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Symbol.scala	/^  private def readResolve(): Any = Symbol.apply(name)$/;"	f
readShort	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def readShort(): Short = {$/;"	f
readShort	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def readShort() = Console.readShort()$/;"	f
readToken	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Scanner.scala	/^  final def readToken: Int = $/;"	f
readWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^  def readWhile(f : A => Boolean) : Boolean = {$/;"	f
readWholeFile	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/IoHelpers.scala	/^  def readWholeFile(file: File): Array[Byte] = readWholeStream(new FileInputStream(file))$/;"	f
readWholeStream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/IoHelpers.scala	/^  def readWholeStream(in: InputStream): Array[Byte] = {$/;"	f
readWholeThing	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/IoHelpers.scala	/^  def readWholeThing(in: Reader): String = {$/;"	f
reader	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^      val reader = new BufferedReader(in)$/;"	V
reader	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^    val reader: BufferedReader = new BufferedReader(new InputStreamReader(stream))$/;"	V
reader	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var reader: BufferedReader = new BufferedReader(new StringReader(method + " " + path +  "\/\\r\\n\\r\\n"))$/;"	v
reader	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^      val reader = new InputStreamReader(in, encoding)$/;"	V
readf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def readf(format: String): List[Any] = {$/;"	f
readf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def readf(format: String) = Console.readf(format)$/;"	f
readf1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def readf1(format: String): Any = readf(format).head$/;"	f
readf1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def readf1(format: String) = Console.readf1(format)$/;"	f
readf2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def readf2(format: String): (Any, Any) = {$/;"	f
readf2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def readf2(format: String) = Console.readf2(format)$/;"	f
readf3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def readf3(format: String): (Any, Any, Any) = {$/;"	f
readf3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def readf3(format: String) = Console.readf3(format)$/;"	f
realMenuItems	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^        val realMenuItems = level match {$/;"	V
real_convertToJDBCFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def real_convertToJDBCFriendly(value: Array[Byte]): Object = value$/;"	f
real_convertToJDBCFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def real_convertToJDBCFriendly(value: String): Object = value match {$/;"	f
real_convertToJDBCFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  def real_convertToJDBCFriendly(value: Boolean): Object = new _root_.java.lang.Integer(if (value) 1 else 0)$/;"	f
real_convertToJDBCFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  def real_convertToJDBCFriendly(value: Date): Object = if (value == null) null else new _root_.java.sql.Date(value.getTime)$/;"	f
real_convertToJDBCFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  def real_convertToJDBCFriendly(value: Date): Object = if (value == null) null else new _root_.java.sql.Timestamp(value.getTime)$/;"	f
real_convertToJDBCFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  def real_convertToJDBCFriendly(value: BigDecimal): Object = value.bigDecimal$/;"	f
real_convertToJDBCFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	def real_convertToJDBCFriendly(value: Double): Object = new _root_.java.lang.Double(value)$/;"	f
real_convertToJDBCFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  protected def real_convertToJDBCFriendly(value: FieldType): Object$/;"	f
real_convertToJDBCFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def real_convertToJDBCFriendly(value: ENUM#Value): Object = new _root_.java.lang.Integer(value.id)$/;"	f
real_convertToJDBCFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def real_convertToJDBCFriendly(value: Int): Object = new _root_.java.lang.Integer(value)$/;"	f
real_convertToJDBCFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def real_convertToJDBCFriendly(value: Box[Long]): Object = value match {$/;"	f
real_convertToJDBCFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def real_convertToJDBCFriendly(value: Long): Object = new _root_.java.lang.Long(value)$/;"	f
real_convertToJDBCFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def real_convertToJDBCFriendly(value: Seq[ENUM#Value]): Object = new _root_.java.lang.Long(Helpers.toLong(value))$/;"	f
real_convertToJDBCFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  def real_convertToJDBCFriendly(value: String): Object = hash("{"+value+"} salt={"+salt_i.get+"}")$/;"	f
real_convertToJDBCFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def real_convertToJDBCFriendly(value: String): Object = value$/;"	f
real_convertToJDBCFriendly	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  def real_convertToJDBCFriendly(value: Date): Object = if (value == null) null else new _root_.java.sql.Time(value.getTime)$/;"	f
real_i_set_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  protected def real_i_set_!(value : Array[Byte]) : Array[Byte] = {$/;"	f
real_i_set_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  protected def real_i_set_!(value: String): String = {$/;"	f
real_i_set_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  protected def real_i_set_!(value : Boolean) : Boolean = {$/;"	f
real_i_set_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  protected def real_i_set_!(value: Date): Date = {$/;"	f
real_i_set_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  protected def real_i_set_!(value: Date): Date = {$/;"	f
real_i_set_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  protected def real_i_set_!(value : BigDecimal): BigDecimal = {$/;"	f
real_i_set_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	protected def real_i_set_!(value : Double): Double = {$/;"	f
real_i_set_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  protected def real_i_set_!(value: FieldType): FieldType$/;"	f
real_i_set_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  protected def real_i_set_!(value : Int) : Int = {$/;"	f
real_i_set_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  protected def real_i_set_!(value: ENUM#Value): ENUM#Value = {$/;"	f
real_i_set_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  protected def real_i_set_!(value : Long): Long = {$/;"	f
real_i_set_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  protected def real_i_set_!(value: Box[Long]): Box[Long] = {$/;"	f
real_i_set_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  protected def real_i_set_!(value: Seq[ENUM#Value]): Seq[ENUM#Value] = {$/;"	f
real_i_set_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  protected def real_i_set_!(value : String) : String = {$/;"	f
real_i_set_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  protected def real_i_set_!(value : String) : String = {$/;"	f
real_i_set_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  protected def real_i_set_!(value: Date): Date = {$/;"	f
realm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^case class UnauthorizedDigestResponse(override val realm: String, qop: Qop.Value, nonce: String, opaque: String) extends UnauthorizedResponse(realm) {$/;"	V
realm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  def realm: String = ""$/;"	f
realm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  override def realm = realmName$/;"	f
reasonCode	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val reasonCode = r.param("reason_code")$/;"	V
reattempt	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val reattempt = r.param("reattempt")$/;"	V
rebuilt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^	  val rebuilt = SampleModel.buildFromJson(json)$/;"	V
rec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^      def rec(acc: A, v: JValue) = {$/;"	f
rec	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^      def rec(v: JValue): JValue = v match {$/;"	f
rec	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^        val rec = fromReq(r)$/;"	V
rec	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^    val rec = createRecord$/;"	V
rec	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^    val rec: BaseRecord = rootClass.newInstance.asInstanceOf[BaseRecord]$/;"	V
rec_xbind	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def rec_xbind(xml: NodeSeq): NodeSeq = {$/;"	f
recalled	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^	  val recalled = SampleModel.find(2).open_!$/;"	V
receive	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^    def receive(): A = synchronized {$/;"	f
receive	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^  def receive[A](f: PartialFunction[Message, A]): A = {$/;"	f
receiveWithin	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^    def receiveWithin(msec: Long): A = synchronized {$/;"	f
receiveWithin	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^  def receiveWithin[A](msec: Long)(f: PartialFunction[Message, A]): A = {$/;"	f
receivedCookies	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def receivedCookies: List[HTTPCookie] =$/;"	f
receiverEmail	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val receiverEmail = r.param("receiver_email")$/;"	V
receiverId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val receiverId = r.param("receiver_id")$/;"	V
receiverQueue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^  private val receiverQueue = queueCreate[PreReceiver]$/;"	V
receivers	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^  private var receivers = receiverQueue.make$/;"	v
receivingURL	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^    var receivingURL = httpReq.url$/;"	v
recived	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/uploadprogress/UploadProgress.scala	/^    val recived: Double = StatusHolder.is.map(_._1.toDouble).openOr(0D)$/;"	V
reconnectTimer	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^  private val reconnectTimer = new Timer("AMQPReconnectTimer")$/;"	V
record	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^        val record = meta.getActualField(obj, field)(newValue)$/;"	V
recover	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def recover[KeyType, MetaType <: KeyedMapper[KeyType, MetaType]](theType:$/;"	f
recoverUserId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^  def recoverUserId: Box[String]$/;"	f
recurTimes	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val recurTimes = r.param("recur_times")$/;"	V
recurring	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val recurring = r.param("recurring")$/;"	V
recurseMe	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^          def recurseMe(lst: List[ConnectionIdentifier]): T = lst match {$/;"	f
recv	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^    val recv = new ExampleStringAMQPListener()$/;"	V
redir	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^          val redir = loginRedirect.is match {$/;"	V
redirect	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResponseShortcutException.scala	/^  def redirect(to: String): ResponseShortcutException =$/;"	f
redirect	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResponseShortcutException.scala	/^  def redirect(to: String, func: () => Unit): ResponseShortcutException =$/;"	f
redirectAjaxOnSessionLoss	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var redirectAjaxOnSessionLoss = true$/;"	v
redirectOnSave	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/ModelView.scala	/^  var redirectOnSave: Option[String] = Some("list")$/;"	v
redirectTo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def redirectTo[T](where: String): T = throw ResponseShortcutException.redirect(where)$/;"	f
redirectTo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def redirectTo[T](where: String, func: () => Unit): T =$/;"	f
redirectTo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/StatefulSnippet.scala	/^  def redirectTo(where: String) = S.redirectTo(where, registerThisSnippet)$/;"	f
redirectToFailMsg	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  implicit def redirectToFailMsg(in: => RedirectResponse): FailMsg = () => in$/;"	f
reduceCharBlocks	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def reduceCharBlocks(in : List[Textile]) : List[Textile] =$/;"	f
reduceLeft	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def reduceLeft[B >: A](op: (B, B) => B): B = self reduceLeft op$/;"	f
reduceLeft	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def reduceLeft[B >: A](op: (B, A) => B): B = elements.reduceLeft(op)$/;"	f
reduceLeft	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def reduceLeft[B >: A](op: (B, A) => B) = self reduceLeft op$/;"	f
reduceLeft	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def reduceLeft[B >: A](op: (B, A) => B): B = {$/;"	f
reduceLeft	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def reduceLeft[B >: A](f: (B, A) => B): B = this match {$/;"	f
reduceRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def reduceRight[B >: A](op: (B, B) => B): B = self reduceRight op$/;"	f
reduceRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def reduceRight[B >: A](op: (A, B) => B): B = elements.reduceRight(op)$/;"	f
reduceRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def reduceRight[B >: A](op: (A, B) => B) = self reduceRight op$/;"	f
reduceRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def reduceRight[B >: A](op: (A, B) => B): B = {$/;"	f
reduceRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def reduceRight[B >: A](f: (A, B) => B): B = this match {$/;"	f
reduceToSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ResizableArray.scala	/^  def reduceToSize(sz: Int) {$/;"	f
reduceWith	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^  def reduceWith(f : (T, T) => T) = while(size > 1) combine(f)     $/;"	f
ref	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^              val ref = rfb.toString() $/;"	V
refDef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def refDef: PU[RefDef] = new PU[RefDef] {$/;"	f
refQueue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^  private[util] val refQueue = new ReferenceQueue[Any]();$/;"	V
reference	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Discovery.scala	/^	object reference extends MappedPoliteString(this, 128)$/;"	o
referer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def referer: Box[String] = containerRequest.flatMap(_.header("Referer"))$/;"	f
referer	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def referer: String = S.referer openOr listPathString$/;"	f
referrerHost	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    def referrerHost = referrer_host.is$/;"	f
referrerHost	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def referrerHost: String$/;"	f
referrer_host	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    object referrer_host extends MappedString(this, 128) {$/;"	o
refresh	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    def refresh = {$/;"	f
refs	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^      val refs = new HashMap[String,String];$/;"	V
regex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/RegexParsers.scala	/^  implicit def regex(r: Regex): Parser[String] = new Parser[String] {$/;"	f
regexp	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModelParser.scala	/^  def regexp: RegExp = {$/;"	f
registerCleanupFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  override protected def registerCleanupFunc(in: Unit => Unit): Unit = {}$/;"	f
registerCleanupFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  protected def registerCleanupFunc(in: CleanUpParam => Unit): Unit$/;"	f
registerCleanupFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  override protected def registerCleanupFunc(in: Box[LiftSession] => Unit): Unit = {$/;"	f
registerCleanupFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  override protected def registerCleanupFunc(in: Box[LiftSession] => Unit): Unit =$/;"	f
registerCleanupFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  protected override def registerCleanupFunc(in: LiftSession => Unit): Unit =$/;"	f
registerGlobalCleanupFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  protected final def registerGlobalCleanupFunc(in: CleanUpParam => Unit) {$/;"	f
registerInjection	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  def registerInjection[T](f: () => T)(implicit man: Manifest[T]) {$/;"	f
registerTable	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  def registerTable[T<:Mapper[T]](name: String, meta: T with MetaMapper[T], title: String) =$/;"	f
registerThisSnippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/StatefulSnippet.scala	/^  def registerThisSnippet() = names.foreach(n => S.overrideSnippetForClass(n, this))$/;"	f
registerWith	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  protected def registerWith: SimpleActor[Any]$/;"	f
registerWizardSession	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  private[wizard] def registerWizardSession(): String = {$/;"	f
registered	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val registered: Parser[Textile] =$/;"	V
rel_bpi	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^                              val rel_bpi = new MimeBodyPart$/;"	V
release	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    def release = segments.foreach(Segments.release)$/;"	f
release	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    def release(s: Segment) = s match {$/;"	f
release	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/Lock.scala	/^  def release = synchronized {$/;"	f
releaseConnection	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ConnectionManager.scala	/^  def releaseConnection(conn: Connection)$/;"	f
releaseConnection	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def releaseConnection(conn: Connection): Unit = synchronized {$/;"	f
releaseConnection	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private def releaseConnection(conn: SuperConnection): Unit = conn.close$/;"	f
releaseConnection	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def releaseConnection(conn: Connection) {$/;"	f
releaseConnection	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/bootstrap/liftweb/Boot.scala	/^ def releaseConnection(conn: Connection) {conn.close}$/;"	f
releaseConnectionNamed	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private def releaseConnectionNamed(name: ConnectionIdentifier, rollback: Boolean) {$/;"	f
reload	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def reload: OwnerType = getSingleton.find(By(primaryKeyField, primaryKeyField)) openOr this$/;"	f
reloadFunc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^  class MappedOneToManyBase[O <: Mapper[_]](val reloadFunc: ()=>Seq[O],$/;"	V
rem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^      var rem = n$/;"	v
remaining	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    var remaining = n$/;"	v
remember	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/RollbackIterator.scala	/^  def remember[T](g: => (Seq[A] => T)): T = {$/;"	f
remote	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/remote.scala	/^class remote extends StaticAnnotation {}$/;"	c
remoteAddr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def remoteAddr: String = request.remoteAddress$/;"	f
remoteAddr	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var remoteAddr = null$/;"	v
remoteAddress	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def remoteAddress: String$/;"	f
remoteAddress	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def remoteAddress: String = req.getRemoteAddr$/;"	f
remoteAddress	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  val remoteAddress: String = req.remoteAddress$/;"	V
remoteHost	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def remoteHost: String$/;"	f
remoteHost	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def remoteHost: String = req.getRemoteHost$/;"	f
remoteHost	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  val remoteHost: String = req.remoteHost$/;"	V
remoteHost	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var remoteHost = null$/;"	v
remotePort	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def remotePort: Int$/;"	f
remotePort	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def remotePort: Int = req.getRemotePort$/;"	f
remotePort	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  val remotePort: Int = req.remotePort$/;"	V
remotePort	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var remotePort = 0$/;"	v
remove	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  def remove(key: K) {$/;"	f
remove	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def remove(p: JValue => Boolean): JValue = this map {$/;"	f
remove	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  def remove(): Unit = clearFunc(name)$/;"	f
remove	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/KeyedCache.scala	/^  def remove(key: K) = cache.remove(key)$/;"	f
remove	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LRU.scala	/^  def remove(k: KeyType) = map.remove(k)$/;"	f
remove	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^  def remove(key: Any): Box[V] = {$/;"	f
remove	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    def remove(n: Int) = {$/;"	f
remove	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    def remove(n: Int) = {$/;"	f
remove	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/ModelView.scala	/^  def remove =$/;"	f
remove	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  def remove(i: T) {$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def remove(p: A => Boolean): List[A] = filter (x => !p(x))$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^      def remove = {$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    override def remove(idx : Int) = Buffer.this.remove(translate(idx));$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  def remove(idx : Int) = {$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  def remove(idx : Int, length : Int) = {$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^  override def remove(idx : Int) = underlying.remove(idx).asInstanceOf[A];$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/IterableWrapper.scala	/^  override def remove(a: A) = underlying.remove(a);$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^        def remove : Unit = throw new NoSuchMethodException$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^  override def remove(p : (K,E)) = get(p._1) match {$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^    def remove = underlying.remove$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^	def remove : Unit = throw new NoSuchMethodException$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^    override def remove(a : A) = {$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^    override def remove(t : A ) : Boolean = MutableIterable.this.remove(t)$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^  def remove(t : A ) : Boolean = elements.remove(t);$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterator.scala	/^    def remove = MutableIterator.this.remove$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterator.scala	/^    def remove = underlying.remove;$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterator.scala	/^  def remove : Unit;$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterator.scala	/^  def remove(a: A): Boolean = {$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^      def remove = underlying.remove;$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^    def remove = throw new UnsupportedOperationException$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^      def remove = underlying.remove;$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayBuffer.scala	/^  def remove(n: Int): A = {$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Buffer.scala	/^  def remove(n: Int): A$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BufferProxy.scala	/^  def remove(n: Int): A = self.remove(n)$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashMap.scala	/^  def remove(key: A): Option[B] = removeEntry(key) match {$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashSet.scala	/^  def remove(elem: A) : Boolean = removeEntry(elem) match {$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^  def remove(n: Int): A = try {$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MultiMap.scala	/^  def remove(key: A, value: B) = get(key) match {$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ObservableBuffer.scala	/^  abstract override def remove(n: Int): A = {$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedBuffer.scala	/^  abstract override def remove(n: Int): A = synchronized {$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/ReferenceQueue.scala	/^  def remove(timeout: Long): Option[Reference[T]] = Wrapper(underlying.remove(timeout))$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/ReferenceQueue.scala	/^  def remove: Option[Reference[T]] = Wrapper(underlying.remove)$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichStringBuilder.scala	/^  override def remove(idx : Int) = {$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def remove(key:String): MetaData$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def remove(namespace: String, scope: NamespaceBinding, key: String): MetaData$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  final def remove(namespace: String, owner: Node, key: String): MetaData =$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  def remove(key: String) = this$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  def remove(namespace: String, scope: NamespaceBinding, key: String) = this$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrefixedAttribute.scala	/^  def remove(key: String) = $/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrefixedAttribute.scala	/^  def remove(namespace: String, scope: NamespaceBinding, key: String): MetaData =$/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/UnprefixedAttribute.scala	/^  def remove(key: String) = $/;"	f
remove	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/UnprefixedAttribute.scala	/^  def remove(namespace: String, scope: NamespaceBinding, key: String): MetaData =$/;"	f
removeAction	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/ModelView.scala	/^  def removeAction(e: T) = TheBindParam("remove", link("list", ()=>e.delete_!, Text(?("Remove"))))$/;"	f
removeAction	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/ModelView.scala	/^  lazy val removeAction = TheBindParam("remove", snippet.link("list", ()=>remove, Text(?("Remove"))))$/;"	V
removeAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/IterableWrapper.scala	/^  override def removeAll(that: Iterable[A]) = that match {$/;"	f
removeAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^  def removeAll(that : Iterable[A]) : Boolean = {$/;"	f
removeAllProp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JsonASTTest.scala	/^    val removeAllProp = (x: JValue) => (x remove { _ => true }) == JNothing$/;"	V
removeAttribute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPContext.scala	/^  def removeAttribute(name: String): Unit$/;"	f
removeAttribute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPSession.scala	/^  def removeAttribute(name: String): Unit$/;"	f
removeAttribute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletContext.scala	/^  def removeAttribute(name: String) {$/;"	f
removeAttribute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletSession.scala	/^  def removeAttribute(name: String) = session removeAttribute name$/;"	f
removeAttribute	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def removeAttribute(key: String) = attr -= key$/;"	f
removeAttribute	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def removeAttribute(key: String) = attr -= key$/;"	f
removeAttribute	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def removeAttribute(name: String) {}$/;"	f
removeCometActor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] def removeCometActor(act: LiftCometActor): Unit = synchronized {$/;"	f
removeDuplicates	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def removeDuplicates: List[A] = {$/;"	f
removeEldestEntry	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^    override def removeEldestEntry(eldest: Entry[K, SoftValue[K, V]]): Boolean = {$/;"	f
removeEntry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^  def removeEntry(elem: A) : Option[A] = {$/;"	f
removeEntry	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^  protected def removeEntry(key: A) : Option[Entry] = {$/;"	f
removeHighLevelSessionDispatcher	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def removeHighLevelSessionDispatcher(name: String) =$/;"	f
removeHtmlDuplicates	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HeadHelper.scala	/^  def removeHtmlDuplicates(in: NodeSeq): NodeSeq = {$/;"	f
removeKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    override def removeKey(key : K) = Map.this.removeKey(key).map(f);$/;"	f
removeKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^   override def removeKey(key : K) = {$/;"	f
removeKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^  override def removeKey(key : K) : Option[E] = {$/;"	f
removeKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^  override def removeKey(key: K) = {$/;"	f
removeKey	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^  def removeKey(key: A): Option[B] = {$/;"	f
removeKeyValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  private def removeKeyValue(key : Any, value : Any) : Option[AssocMap[Key, Value]] = this match {$/;"	f
removeNothingProp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JsonASTTest.scala	/^    val removeNothingProp = (x: JValue) => (x remove { _ => false }) == x$/;"	V
removeProp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JsonASTTest.scala	/^    val removeProp = (json: JValue, x: Class[_ <: JValue]) => {$/;"	V
removeRegExChars	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  final def removeRegExChars(regEx: String)(in: String): String = in.replaceAll(regEx, "")$/;"	f
removeRoleByName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/Role.scala	/^  def removeRoleByName(roleName: String): Box[Role] = {$/;"	f
removeSessionRewriter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def removeSessionRewriter(name: String) =$/;"	f
removeSubscription	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Publisher.scala	/^  def removeSubscription(sub: Subscriber[A, This]): Unit = filters -= sub$/;"	f
removeValue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def removeValue(key: String) = values -= key$/;"	f
removed	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JsonASTTest.scala	/^      val removed = json remove typePredicate(x)$/;"	V
removed	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    var removed: List[O] = Nil$/;"	v
removed	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  var removed: List[T] = Nil$/;"	v
removedJoins	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    protected var removedJoins: List[O] = Nil$/;"	v
removingEntries	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^  override def removingEntries(bundle: Bundle, entries: JList[ManifestEntry]) {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  def render(value: JValue): Document = value match {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/A.scala	/^  def render(kids: NodeSeq) : NodeSeq = Elem(null, "a", addAjaxHREF(), TopScope, kids :_*)$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Children.scala	/^  def render(kids: NodeSeq): NodeSeq = kids$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Comet.scala	/^  def render(kids: NodeSeq) : NodeSeq = {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Embed.scala	/^  def render(kids: NodeSeq) : NodeSeq =$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Form.scala	/^  def render(kids: NodeSeq) : NodeSeq = Elem(null, "form", addAjaxForm, TopScope, kids : _*)$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/HTML5.scala	/^  def render(xhtml: NodeSeq): NodeSeq = {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Ignore.scala	/^  def render(kids: NodeSeq) : NodeSeq = NodeSeq.Empty$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^  def render(xhtml: NodeSeq): NodeSeq = {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^  def render: RenderOut = {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Loc.scala	/^  def render(kids: NodeSeq) : NodeSeq =$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msg.scala	/^  def render(styles: NodeSeq): NodeSeq = {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msgs.scala	/^  def render(styles: NodeSeq): NodeSeq = {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/SkipDocType.scala	/^  def render(kids: NodeSeq): NodeSeq = {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Surround.scala	/^  def render(kids: NodeSeq) : NodeSeq =$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Tail.scala	/^   def render(xhtml: NodeSeq) : NodeSeq = <tail>xhtml<\/tail>$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/WithParam.scala	/^  def render(kids: NodeSeq) : NodeSeq = {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/XmlGroup.scala	/^  def render(kids: NodeSeq): NodeSeq = kids$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def render = state.render$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def render: NodeSeq$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def render: RenderOut$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def render(xhtml: NodeSeq, httpRequest: HTTPRequest): NodeSeq = {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^   def render(start: String, $/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^  def render(start: String, $/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarDayView.scala	/^  def render(calendars: List[CalendarItem], itemClick: Box[AnonFunc]): NodeSeq = {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarMonthView.scala	/^  def render(calendars: Seq[CalendarItem],$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarWeekView.scala	/^  def render(calendars: List[CalendarItem], itemClick: Box[AnonFunc]): NodeSeq = {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^  def render(idPlaceholder: String,$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotCapability.scala	/^  def render (flotInfo: FlotInfo): JsCmd$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOverview.scala	/^  def render (main: FlotInfo): JsCmd = {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/menu/MenuWidget.scala	/^  def render : NodeSeq = {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/rssfeed/RSSfeed.scala	/^  def render(feedUrl: String): NodeSeq = {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarDayViewDemo.scala	/^  def render(html: Group) : NodeSeq = {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarMonthViewDemo.scala	/^  def render(html: Group) : NodeSeq = {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarWeekViewDemo.scala	/^  def render(html: Group) : NodeSeq = {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/GravatarDemo.scala	/^  def render(xhtml: NodeSeq) :NodeSeq = {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/MenuSnippet.scala	/^  def render(xhtml: NodeSeq) :NodeSeq = {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/RSSFeedDemo.scala	/^  def render(xhtml: NodeSeq) :NodeSeq = {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/TableSorterDemo.scala	/^  def render(xhtml: NodeSeq) :NodeSeq = {$/;"	f
render	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/TreeViewDemo.scala	/^  def render(xhtml: Group): NodeSeq = {$/;"	f
renderAjaxScript	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var renderAjaxScript: LiftSession => JsCmd = session => ScriptRenderer.ajaxScript$/;"	v
renderAll	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  protected def renderAll(screenTop: Box[Elem],$/;"	f
renderAll	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  protected def renderAll(wizardTop: Box[Elem],$/;"	f
renderAsync	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/TreeViewDemo.scala	/^  def renderAsync(xhtml: Group): NodeSeq = {$/;"	f
renderAxis	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^   def renderAxis (axis : String, options : FlotAxisOptions) : String = {$/;"	f
renderAxisOptions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^   def renderAxisOptions (options: FlotAxisOptions): JsObj = {$/;"	f
renderCanvas	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/sparklines/Sparklines.scala	/^  def renderCanvas(id: String, cssClass: String) : NodeSeq = {$/;"	f
renderCapability	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^  def renderCapability (fRender: FlotCapability => JsCmd, caps: FlotCapability *): JsCmd =$/;"	f
renderCometPageContents	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var renderCometPageContents: (LiftSession, Seq[CometVersionPair]) => JsCmd =$/;"	v
renderCometScript	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var renderCometScript: LiftSession => JsCmd = session => ScriptRenderer.cometScript$/;"	v
renderCss	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^  def renderCss (idPlaceholder : String) = {$/;"	f
renderDataSerie	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^  def renderDataSerie(idPlaceholder: String)(data: (FlotSerie, Int)): JsCmd =$/;"	f
renderExp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def renderExp: JsExp = (Jx(buildCheckbox).toJs ~> JsFunc("apply", JsRaw("null"), JsRaw("[it]")))$/;"	f
renderExp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def renderExp: JsExp = Jx(buildInput).toJs ~> JsFunc("apply", JsRaw("null"), JsRaw("[it]"))$/;"	f
renderFlotHide	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^  def renderFlotHide (idPlaceholder: String, caps: FlotCapability *): JsCmd =$/;"	f
renderHead	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^    def renderHead(): NodeSeq = {$/;"	f
renderHide	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotCapability.scala	/^  def renderHide(): JsCmd$/;"	f
renderHide	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOverview.scala	/^     def renderHide(): JsCmd = JsHideId(idOverview)$/;"	f
renderId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^   def renderId (id : String) : String = {$/;"	f
renderInIEMode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^                         override val renderInIEMode: Boolean) extends NodeResponse {$/;"	V
renderInIEMode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def renderInIEMode: Boolean = false$/;"	f
renderJqueryScript	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^   private def renderJqueryScript (jqueryScript: Seq[Node]) : JsCmd = {$/;"	f
renderJs_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  override def renderJs_? = false$/;"	f
renderJs_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def renderJs_? = true$/;"	f
renderJs_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  override def renderJs_? = false$/;"	f
renderOnLoad	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tablesorter/TableSorter.scala	/^  def renderOnLoad(selector: String) = {$/;"	f
renderOnLoad	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/SparklinesDemo.scala	/^  def renderOnLoad(html: NodeSeq): NodeSeq = {$/;"	f
renderOneSerie	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^  def renderOneSerie(data: FlotSerie, idPlaceholder: String, idSerie: Int): JsObj = {$/;"	f
renderOneValue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^  def renderOneValue (one: (Double, Double)) : JsExp =$/;"	f
renderOptions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^   def renderOptions(options: FlotOptions): JsExp = {$/;"	f
renderSeries	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^  def renderSeries(datas: List[FlotSerie], idPlaceholder: String): JsArray =$/;"	f
renderShow	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotCapability.scala	/^  def renderShow(): JsCmd$/;"	f
renderShow	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOverview.scala	/^     def renderShow(): JsCmd = JsShowId(idOverview)$/;"	f
renderValues	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^  def renderValues(values: List[(Double, Double)]): JsExp =$/;"	f
renderVars	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^  def renderVars (idPlaceholder : String,$/;"	f
renderWhat	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^  private def renderWhat(expandAll: Boolean): Seq[MenuItem] =$/;"	f
rendered	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^        val rendered = AnswerRender(new XmlOrJsCmd(spanId, Empty, Empty,$/;"	V
rendered	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^    val rendered: AnswerRender =$/;"	V
renderedLotto	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/Examples.scala	/^    val renderedLotto = compact(render(json))$/;"	V
renderedPerson	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/Examples.scala	/^    val renderedPerson = JsonDSL.pretty(render(json))$/;"	V
rendering	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/PrintingTest.scala	/^    val rendering = (json: Document) => parse(Printer.pretty(json)) == parse(Printer.compact(json))$/;"	V
reorderFields	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JsonASTTest.scala	/^  private def reorderFields(json: JValue) = json map {$/;"	f
reorderProp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JsonASTTest.scala	/^    val reorderProp = (x: JObject) => (x diff reorderFields(x)) == Diff(JNothing, JNothing, JNothing)$/;"	V
rep	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/Parsers.scala	/^  def rep[A](p: Parser[A]): Parser[List[A]] =$/;"	f
rep	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def rep[T](p: => Parser[T]): Parser[List[T]] = rep1(p) | success(List())$/;"	f
rep	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def rep[Q <% UnitParser](p: => Q): UnitParser = rep1(p) | success$/;"	f
rep	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def rep[T](p: => Parser[T]): Parser[List[T]] = rep1(p) | success(List())$/;"	f
rep1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  override def rep1[T](first: => Parser[T], p: => Parser[T]): Parser[List[T]] = new Parser[List[T]] {$/;"	f
rep1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/Parsers.scala	/^  def rep1[A](p: Parser[A]): Parser[List[A]] =$/;"	f
rep1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def rep1[T](first: => Parser[T], p: => Parser[T]): Parser[List[T]] = Parser{ in0 =>$/;"	f
rep1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def rep1[T](p: => Parser[T]): Parser[List[T]] = rep1(p, p)$/;"	f
rep1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def rep1[Q <% UnitParser](p: => Q): UnitParser = $/;"	f
rep1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def rep1[T](first: => Parser[T], p: => Parser[T]): Parser[List[T]] = first ~ rep(p) ^^ { case ~(x, xs) => x :: xs }$/;"	f
rep1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def rep1[T](p: => Parser[T]): Parser[List[T]] = rep1(p, p)$/;"	f
rep1sep	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  override def rep1sep[T](p: => Parser[T], q: => Parser[Any]): Parser[List[T]] =$/;"	f
rep1sep	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def rep1sep[T](p: => Parser[T], q: => Parser[Any]): Parser[List[T]] = $/;"	f
rep1sep	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def rep1sep[T, Q <% UnitParser](first: => Parser[T], p: => Parser[T], q: => Q): Parser[List[T]] = $/;"	f
rep1sep	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def rep1sep[T, Q <% UnitParser](p: => Parser[T], q: => Q): Parser[List[T]] = rep1sep(p, p, q)$/;"	f
repN	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def repN[T](n: Int, p: => Parser[T]): Parser[List[T]] = $/;"	f
repN	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def repN[Q <% UnitParser](n: Int, p: => Q): UnitParser = $/;"	f
repN	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def repN[T](n: Int, p: => Parser[T]): Parser[List[T]] = $/;"	f
repNN	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def repNN[T](n: Int, p: => Parser[T]): Parser[List[T]] = if (n == 0) rep(p) else p ~ repNN(n - 1, p) ^^ {case ~(x, xs) => x :: xs}$/;"	f
repNNParser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^      def repNNParser(s: String) = shouldSucceed(repNN(3, parserA)(s))$/;"	f
repWith	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/Parsers.scala	/^  def repWith[A, B](p: Parser[A], sep: Parser[B]): Parser[List[A]] =$/;"	f
repeat	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Benchmark.scala	/^  def repeat(count: Int)(f: => Any) = {$/;"	f
repl	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^      def repl(pos: Int, withWhat: T, rest: List[T]): List[T] = rest match {$/;"	f
replace	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    def replace[A <: JValue](newTop: JValue) = stack.set(0, newTop)$/;"	f
replace	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^    def replace(pos: Int, withWhat: T): List[T] = {$/;"	f
replace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def replace(start: Int, end: Int, str: String) {$/;"	f
replace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  def replace(from : Int, length : Int, added : Seq[A]) = {$/;"	f
replaceAllIn	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^  def replaceAllIn(target: java.lang.CharSequence, replacement: String): String = {$/;"	f
replaceFirstIn	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^  def replaceFirstIn(target: java.lang.CharSequence, replacement: String): String = {$/;"	f
replaced	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def replaced = replaced0$/;"	f
replaced	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    protected def replaced : Int$/;"	f
replacementText	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^  def replacementText(entityName: String): Source = ent.get(entityName) match {$/;"	f
replicate	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/ops.scala	/^  def replicate(start: Int, end: Int)(p: Int => Unit) {$/;"	f
reply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  protected def reply(v: Any) {$/;"	f
reply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/SimpleActor.scala	/^  protected def reply(msg: To): Unit$/;"	f
report	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^    val report = curInput.descr + ":" + line + ":" + col + ": " + msg$/;"	V
report	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def report(pos: Int, msg: String, out: PrintStream) {$/;"	f
reportError	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def reportError(pos: Int, msg: String) {$/;"	f
reportError	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def reportError(pos: Int, msg: String, out: PrintStream) {$/;"	f
reportSnippetError	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private def reportSnippetError(page: String,$/;"	f
reportSyntaxError	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^  override def reportSyntaxError(pos: Int, msg: String) {$/;"	f
reportSyntaxError	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/Binder.scala	/^  def reportSyntaxError(pos:Int, str:String) = {}$/;"	f
reportSyntaxError	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^  def reportSyntaxError(pos: Int, str: String): Unit$/;"	f
reportSyntaxError	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def reportSyntaxError(pos: Int, str: String) {$/;"	f
reportSyntaxError	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def reportSyntaxError(str: String): Unit = reportSyntaxError(pos, str)$/;"	f
reportValidationError	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def reportValidationError(pos: Int, str: String) {$/;"	f
reportValidationError	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^  def reportValidationError(pos: Int, str: String): Unit$/;"	f
reportWarning	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def reportWarning(pos: Int, msg: String) {$/;"	f
reportWarning	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def reportWarning(pos: Int, msg: String, out: PrintStream) {$/;"	f
representative	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^    val representative : Class[_] = Class.forName(underlyingClassname)$/;"	V
repsep	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def repsep[T](p: => Parser[T], q: => Parser[Any]): Parser[List[T]] = $/;"	f
repsep	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def repsep[T, Q <% UnitParser](p: => Parser[T], q: => Q): Parser[List[T]] = $/;"	f
req	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^    val req = (S.request openOr Req.nil) snapshot$/;"	V
req	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^      val req = S.request$/;"	V
req	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^      val req = Req(httpRequest, LiftRules.statelessRewrite.toList, System.nanoTime)$/;"	V
req	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^class HTTPRequestServlet(val req: HttpServletRequest) extends HTTPRequest {$/;"	V
reqToHander	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  implicit def reqToHander(in: Response): TestHandler = new TestHandler(in)$/;"	f
reqType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    val reqType = RequestType(request)$/;"	V
reqVarCallback	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^      val reqVarCallback = deferredSnippets.generateSnapshotRestorer[NodeSeq]()$/;"	V
request	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Factory.scala	/^    object request extends RequestVar[Maker[T]](Empty)$/;"	o
request	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^          val request: HTTPRequest,$/;"	V
request	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def request: Box[Req] = Box !! _request.value$/;"	f
request	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SimpleController.scala	/^  def request: Req$/;"	f
request	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthMessage.scala	/^    val request = req.request$/;"	V
requestForms	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  private object requestForms extends SessionVar[Map[String, List[FormBuilderLocator[_]]]](Map())$/;"	o
requestLoans	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^  def requestLoans: List[LoanWrapper] = myWrapper :: Nil$/;"	f
requestMemo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/MemoizeTest.scala	/^  object requestMemo extends RequestMemoize[Int, Int]$/;"	o
requestMessage	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^    val requestMessage = new HttpRequestMessage(req)$/;"	V
requestQueue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  protected object requestQueue extends LiftActor {$/;"	o
requestTimedOut	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^ @volatile  var requestTimedOut: Box[(Req, Any) => Box[LiftResponse]] = Empty$/;"	v
requestToken	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  def requestToken(req: Req): Box[LiftResponse] = {$/;"	f
requestType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^          val requestType: RequestType,$/;"	V
requestValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  object requestValue extends RequestVar[Box[T]](Empty) {$/;"	o
requestVarFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val requestVarFunc: Function1[Function0[Any], Any] = RequestVarHandler.generateSnapshotRestorer()$/;"	V
require	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  def require(what: String*) = what.filter(!props.contains(_))$/;"	f
require	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def require(requirement: Boolean) {$/;"	f
require	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  def require(requirement: Boolean, message: Any) {$/;"	f
requireOrDie	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  def requireOrDie(what: String*) {$/;"	f
required_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  def required_? = false$/;"	f
required_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def required_? = Props.getBool(propsPrefix+"required", false)$/;"	f
required_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    override def required_? = true$/;"	f
requiresSession	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def requiresSession: Boolean = true$/;"	f
requiresSession	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  override def requiresSession = false$/;"	f
res	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^      val res = new StringBuilder;$/;"	V
res	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^      var res = first(in)$/;"	v
res	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^      var res = p(in)$/;"	v
res	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/IoHelpers.scala	/^      val res = proc.waitFor$/;"	V
res	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BindHelpersSpec.scala	/^      val res = bind("stats", xhtml, "options" -> options _)$/;"	V
res	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BindHelpersSpec.scala	/^      val res:NodeSeq = bind("ledger", <ledger:entry ledger:id="foo" ledger:class="bar" \/>, "entry" -> <foo\/>)$/;"	V
res	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                        val res = inst.dispatch(method)(kids)$/;"	V
res	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    val res = new HashMap[String, List[NodeSeq]]$/;"	V
res	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/test/scala/net/lift/textile/TextileSpec.scala	/^      val res = toHtml(""""(cms-woof) click here":# """)$/;"	V
res	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/test/scala/net/lift/textile/TextileSpec.scala	/^      val res = toHtml($/;"	V
res	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/test/scala/net/lift/textile/TextileSpec.scala	/^      val res = toHtml(div)$/;"	V
res	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^                        val res = rs.getObject(pos)$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^    val res = new Array[AnyRef](s.length)$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^    val res = readf(format)$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^    var res: List[Any] = Nil$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^          var res = 0$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    var res = true$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    val res = new ListBuffer[A]$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    var res = false$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    var res = true$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    var res: Option[A] = None$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      val res = new ListBuffer[A]$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var res: List[A] = Nil$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^        val res = x._1 compare y._1$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^        var res = 0$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^        else { val res = (self.key, self.value); self = self.next; res }$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^      else { val res = that.elem; that = that.next; res }$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^    var res = empty[C]$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^    var res = this$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^    var res: Map[A, B1] = this$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/SortedMap.scala	/^    var res = empty[C]$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/SortedMap.scala	/^    var res = this$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^      else { val res = that.top; that = that.pop; res }$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayBuffer.scala	/^      val res = array(n).asInstanceOf[A]$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayBuffer.scala	/^    val res = array(n).asInstanceOf[A]$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayBuffer.scala	/^    val res = new ArrayBuffer[A]$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^      val res = es$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^    val res = new HashMap[A, B]$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaSetAdaptor.scala	/^    val res = new HashSet[A]$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Message.scala	/^    var res = "Script("$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^      val res = as(1).asInstanceOf[A]$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^    val res = new PriorityQueue[A]$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^    val res = new Queue[A]$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Queue.scala	/^        val res: Option[LinkedList[A]] = Some(cell.next)$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Queue.scala	/^      val res = first0.elem$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Queue.scala	/^      val res = new ArrayBuffer[A]$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Queue.scala	/^      val res: Option[A] = Some(first0.elem)$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Queue.scala	/^    val res = new Queue[A]$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SingleLinkedList.scala	/^      val res = elems.elem$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Stack.scala	/^    val res = new Stack[A]$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Stack.scala	/^    val res = stack.top$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^      var res: A = defaultValue$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^      val res = refDef.appU(state.stream)$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^      val res = buf.toString()$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^    val res = buf.toString()$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/UTF8Codec.scala	/^    val res = new Array[Byte](bytesToWrite)$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^      var res = true$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^        var res = 0$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    var res = first(in)$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      var res = first(in)$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      var res = new scala.collection.mutable.ListBuffer[Elem]$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^        var res = (this.length == m.length) && (this.hashCode() == m.hashCode())$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^    var res: List[Item] = Nil$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModelParser.scala	/^          val res = MIXED(choiceRest(Eps));$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^        var res = false$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^    var res = (null == contentModel) || check( n.child );	  $/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/NodeFactory.scala	/^      var res = true;$/;"	v
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    val res = handle.elem(pos, pre, local, aMap, scope, ts)$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^    val res = decl.contentModel.validate(ns);$/;"	V
res	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/CachedFileStorage.scala	/^    val res = ConstructingParser.fromSource(src,false).document.docElem(0)$/;"	V
res1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      val res1 = new ListBuffer[A]$/;"	V
res1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^        val res1 = Parser.this(in)$/;"	V
res1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^        val res1 = Parser.this(in)$/;"	V
res1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^        val res1 = UnitParser.this(in)$/;"	V
res2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      val res2 = new ListBuffer[A]$/;"	V
res2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^          val res2 = pa.appU(new UnPicklerState(res._2, upe))$/;"	V
res2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^          val res2 = unat.appU(res._2)  \/\/ read location$/;"	V
res2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^        val res2 = q(in)$/;"	V
res2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^        val res2 = q(in)$/;"	V
resArray	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val resArray = new ListBuffer[FieldHolder];$/;"	V
resArray	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^    val resArray = new ListBuffer[FieldHolder]$/;"	V
resPa	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^      val resPa = pa.appU(s)$/;"	V
reserved	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/StdLexical.scala	/^  val reserved = new HashSet[String]$/;"	V
reserved	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/StdLexical.scala	/^  val reserved = new HashSet[String]$/;"	V
reservedWords	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  val reservedWords = _root_.scala.collection.immutable.HashSet.empty ++$/;"	V
reset	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^  def reset = synchronized {value = Empty}$/;"	f
reset	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^  def reset(): Unit = calced.set(false)$/;"	f
reset	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  def reset = {$/;"	f
reset	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def reset: Unit$/;"	f
reset	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/HasManyThrough.scala	/^  def reset = others.reset$/;"	f
reset	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  def reset(): T = this(randomString(maxLen))$/;"	f
reset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BufferedSource.scala	/^      override def reset = do_reset()$/;"	f
reset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^      def reset() = fromChar(c)$/;"	f
reset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^      def reset() = fromChars(chars)$/;"	f
reset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^      def reset() = fromString(s)$/;"	f
reset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^      def reset() = fromURL(url)$/;"	f
reset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  def reset(): Source$/;"	f
reset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  protected def reset() = {$/;"	f
reset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ExternalSources.scala	/^      def reset: Source = new MyClass$/;"	f
resetLink	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^        val resetLink = S.hostAndPath+$/;"	V
resetLink	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    val resetLink = S.hostAndPath+"\/"+validateUserPath.mkString("\/")+$/;"	V
resetPasswordMenuLoc	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^  override def resetPasswordMenuLoc: Box[Menu] = Empty$/;"	f
resetPasswordMenuLoc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def resetPasswordMenuLoc: Box[Menu] =$/;"	f
resize	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-imaging/src/main/scala/net/liftweb/imaging/ImageHelpers.scala	/^    def resize(src: BufferedImage, dst: BufferedImage) { $/;"	f
resize	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-imaging/src/main/scala/net/liftweb/imaging/ImageHelpers.scala	/^  def resize(source: BufferedImage, inputFormat: String, dx: Double, dy: Double): (BufferedImage, String) = { $/;"	f
resize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^  private def resize(newSize: Int) = {$/;"	f
resized	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-imaging/src/main/scala/net/liftweb/imaging/ImageHelpers.scala	/^      val resized = new BufferedImage($/;"	V
resolveType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/JSON.scala	/^  def resolveType(input: List[_]): Any = {$/;"	f
resolver	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/Main.scala	/^      var resolver: EntityResolver = null$/;"	v
resolver	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^        val resolver = this.getEntityResolver()$/;"	V
resource	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPContext.scala	/^  def resource(path: String): URL$/;"	f
resource	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletContext.scala	/^  def resource(path: String): URL = ctx getResource path$/;"	f
resourceAsStream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPContext.scala	/^  def resourceAsStream(path: String): InputStream$/;"	f
resourceAsStream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletContext.scala	/^  def resourceAsStream(path: String): InputStream = ctx getResourceAsStream path$/;"	f
resourceBundleFactories	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var resourceBundleFactories = RulesSeq[ResourceBundleFactoryPF]$/;"	v
resourceBundles	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def resourceBundles: List[ResourceBundle] = {$/;"	f
resourceFinder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  private def resourceFinder(name: String): _root_.java.net.URL = _context.resource(name)$/;"	f
resourceNames	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var resourceNames: List[String] = List("lift")$/;"	v
resourceServerPath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var resourceServerPath = "classpath"$/;"	v
resp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^        val resp = cresp.toResponse$/;"	V
resp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^    val resp: Box[LiftResponse] =$/;"	V
resp	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^              val resp = PaypalIPN(r, mode, connection)$/;"	V
resp	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^         val resp = PaypalDataTransfer(paypalAuthToken, tx, mode, connection);$/;"	V
respHeaders	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^          val respHeaders = slurpApacheHeaders(getter.getResponseHeaders)$/;"	V
respHeaders	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^          val respHeaders = slurpApacheHeaders(poster.getResponseHeaders)$/;"	V
respond	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Responder.scala	/^    def respond(k: A => Unit) = k(x)$/;"	f
respond	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Responder.scala	/^    def respond(k: A => Unit) {$/;"	f
respond	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Responder.scala	/^    def respond(k: B => Unit) {$/;"	f
respond	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Responder.scala	/^  def respond(k: A => Unit): Unit$/;"	f
response	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^          val response: Box[LiftResponse] = early or (request.testLocation match {$/;"	V
response	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResponseShortcutException.scala	/^  lazy val response = _response$/;"	V
response	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^    val response = hexEncode(md5((ha1 + ":" + clientAuth.nonce + ":" +$/;"	V
response	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^    val response = FacebookClient !? AuthGetSession(authToken)$/;"	V
response	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^        val response = OAuthUtil.formEncode(List(Parameter(OAUTH_TOKEN, token.token), Parameter(OAUTH_TOKEN_SECRET, token.secret)))$/;"	V
response	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^      val response = OAuthUtil.formEncode(List(OAuthUtil.Parameter(OAuthUtil.OAUTH_TOKEN, token.token), OAuthUtil.Parameter(OAuthUtil.OAUTH_TOKEN_SECRET, token.secret)))$/;"	V
response	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^    val response =	new ParameterList(paramMap);$/;"	V
response	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def response: List[String]$/;"	f
response	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^private[paypal] class PaypalIPNPostbackReponse(val response: List[String]) extends PaypalResponse {$/;"	V
responseCookies	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def responseCookies: List[HTTPCookie] = Box.legacyNullTest(_responseCookies.value).$/;"	f
responseFuture	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  private[this] var responseFuture: LAFuture[Any] = null$/;"	v
responseTransformers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val responseTransformers = RulesSeq[LiftResponse => LiftResponse]$/;"	V
rest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^      val rest = walk(in) {$/;"	V
rest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LD.scala	/^      val rest = this(root, ws, f)$/;"	V
rest	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^            val rest = dw(in) {$/;"	V
rest	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    override def rest: CharSequenceReader =$/;"	f
rest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^        val rest = copy(e.next)$/;"	V
rest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ImmutableIterator.scala	/^    val rest = NonEmpty(item,right);$/;"	V
rest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    val rest = new mutable.Stack[BitSet]();$/;"	V
rest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/Scanners.scala	/^    def rest = new Scanner(rest2)$/;"	f
rest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/Scanners.scala	/^    def rest = new Scanner(rest2)$/;"	f
rest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/CharSequenceReader.scala	/^  def rest: CharSequenceReader =$/;"	f
rest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/PagedSeqReader.scala	/^  def rest: PagedSeqReader =$/;"	f
rest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/Reader.scala	/^  def rest: Reader[T]$/;"	f
rest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/StreamReader.scala	/^  override def rest: StreamReader =$/;"	f
restart	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LAPinger.scala	/^  def restart: Unit = synchronized { if ((service eq null) || service.isShutdown)$/;"	f
restart	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ActorPing.scala	/^  def restart: Unit = synchronized { if ((service eq null) || service.isShutdown)$/;"	f
result	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^     val result = f(x)$/;"	V
result	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    val result = f$/;"	V
result	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BasicTypesHelpersSpec.scala	/^      val result = toByteArrayInputStream(input)$/;"	V
result	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^        val result = EOL(s)$/;"	V
result	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^    val result = stack.withValue(new TransactionContext) { body }$/;"	V
result	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val result = SampleModel.findAll(ByList(SampleModel.firstName, seq))$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^    val result = new Array[Int](end - start)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^    val result = new Array[T](len)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^        val result = these.head; these = these.tail; result$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var result: List[A] = Nil$/;"	v
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Responder.scala	/^    var result: Option[A] = None$/;"	v
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    val result = new Array[B](length)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    val result = new ListBuffer[A]$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    val result = new scala.collection.mutable.ListBuffer[A]$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    var result = true$/;"	v
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    var result: List[A] = Nil$/;"	v
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^    def next: A = { val result = current.head; current = current.tail; result }$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Set.scala	/^    val result = new Array[B](size)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^        val result = new Entry(e.key, e.value)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^    var result: Stack[A] = Stack.Empty$/;"	v
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^    val result = underlying.indexOf(a);$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^      val result = i.next;$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^      val result = table(index);$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/ops.scala	/^    val result = new SyncVar[Either[A, Throwable]]$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val result = method.invoke(obj, args : _*)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    val result = new BoxedAnyArray(end - start);$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    val result = new BoxedAnyArray(len)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    val result = new BoxedAnyArray(length)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^    val result = new Array[(Any,Int)](len)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^    val result = new Array[(Any,b)](len)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^    val result = new Array[b](len)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedBooleanArray.scala	/^    val result = new Array[Boolean](end - start)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedBooleanArray.scala	/^    val result = new Array[Boolean](len)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedBooleanArray.scala	/^    val result = new Array[Boolean](length)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedByteArray.scala	/^    val result = new Array[Byte](end - start)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedByteArray.scala	/^    val result = new Array[Byte](len)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedByteArray.scala	/^    val result = new Array[Byte](length)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedCharArray.scala	/^    val result = new Array[Char](end - start)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedCharArray.scala	/^    val result = new Array[Char](len)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedCharArray.scala	/^    val result = new Array[Char](length)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedDoubleArray.scala	/^    val result = new Array[Double](end - start)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedDoubleArray.scala	/^    val result = new Array[Double](len)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedDoubleArray.scala	/^    val result = new Array[Double](length)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedFloatArray.scala	/^    val result = new Array[Float](end - start)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedFloatArray.scala	/^    val result = new Array[Float](len)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedFloatArray.scala	/^    val result = new Array[Float](length)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedIntArray.scala	/^    val result = new Array[Int](end - start)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedIntArray.scala	/^    val result = new Array[Int](len)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedIntArray.scala	/^    val result = new Array[Int](length)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedLongArray.scala	/^    val result = new Array[Long](end - start)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedLongArray.scala	/^    val result = new Array[Long](len)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedLongArray.scala	/^    val result = new Array[Long](length)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedObjectArray.scala	/^    val result = create(end - start)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedObjectArray.scala	/^    val result = create(len)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedObjectArray.scala	/^    val result = create(length)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedShortArray.scala	/^    val result = new Array[Short](end - start)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedShortArray.scala	/^    val result = new Array[Short](len)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedShortArray.scala	/^    val result = new Array[Short](length)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^    val result = new Array[Char](length)$/;"	V
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^    var result: a = _$/;"	v
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/Inclusion.scala	/^    var result = true$/;"	v
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^       var result = true$/;"	v
result	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/Binder.scala	/^  var result: NodeBuffer = new NodeBuffer()$/;"	v
resultSetConcurrencyDescs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^    def resultSetConcurrencyDescs (in : Int) = in match {$/;"	f
resultSetHoldabilityDescs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^    def resultSetHoldabilityDescs (in : Int) = in match {$/;"	f
resultSetTo	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def resultSetTo(rs: ResultSet): (List[String], List[List[String]]) = {$/;"	f
resultSetToAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def resultSetToAny(rs: ResultSet): (List[String], List[List[Any]]) = {$/;"	f
resultSetTypeDescs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^    def resultSetTypeDescs (in : Int) = in match {$/;"	f
results	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ParserTest.scala	/^    val results = (0 to 100).map(_ =>$/;"	V
results	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/ops.scala	/^    val results = new Array[b](xs.length);$/;"	V
resume	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def resume(what: AnyRef): Unit$/;"	f
resume	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def resume(what: AnyRef): Unit = $/;"	f
resume	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def resume(what: AnyRef): Unit = LiftRules.servletAsyncProvider(this).resume(what)$/;"	f
resume	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/ServletAsyncProvider.scala	/^  def resume(ref: AnyRef): Unit$/;"	f
resume	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty6AsyncProvider.scala	/^      val resume = cci.getMethod("resume")$/;"	V
resume	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty6AsyncProvider.scala	/^  def resume(what: AnyRef) {$/;"	f
resume	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty7AsyncProvider.scala	/^      val resume = cci.getMethod("resume")$/;"	V
resume	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty7AsyncProvider.scala	/^  def resume(what: AnyRef) {$/;"	f
resumeInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def resumeInfo : Option[Any]$/;"	f
resumeInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def resumeInfo : Option[Any] = LiftRules.servletAsyncProvider(this).resumeInfo$/;"	f
resumeInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  val resumeInfo : Option[Any] = req resumeInfo$/;"	V
resumeInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/ServletAsyncProvider.scala	/^  def resumeInfo : Option[Any]$/;"	f
resumeInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty6AsyncProvider.scala	/^  def resumeInfo: Option[Any] =$/;"	f
resumeInfo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty7AsyncProvider.scala	/^  def resumeInfo: Option[Any] =$/;"	f
resumeRequest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def resumeRequest(what: AnyRef, req: HTTPRequest) = req resume what$/;"	f
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^        val ret = f(x)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^        val ret = dflt$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^      case _ => val ret = calcDefaultValue$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^          val ret = try {$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^    val ret: ListBuffer[Class[_]] = new ListBuffer$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^    val ret = new HashMap[A,B];$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^    val ret = new ListBuffer[Elem]$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^    val ret = new ListBuffer[T]$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^    val ret: ListBuffer[Node] = new ListBuffer$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^      val ret = rot.flatMap(z => (z: @unchecked) match {case x :: xs => permuteList(xs).map(x :: _)})$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^                 map{s => val ret = new Properties;$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^    val ret = new ListBuffer[List[String]]$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^    val ret = new Array[Byte](max)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^    val ret = Integer.toString(in.toInt, 16)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^    val ret = new StringBuffer$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    val ret = new SimpleDateFormat("EEE, d MMM yyyy HH:mm:ss z", Locale.US)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msgs.scala	/^          case msgList => val ret = (<div id={LiftRules.noticesContainerId + "_" + ord}>{title}<ul>{msgList}<\/ul><\/div>)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^    var ret: JsCmd = JsCmds.JsTry(JsCmds.Run("destroy_" + id + "();"), false) &$/;"	v
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^                val ret: NodeSeq = v match {$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^      val ret: Node = if (Props.devMode) {$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^    val ret = sb.toString$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^        val ret = LiftSession(req.request.session, req.request.contextPath)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^      val ret = XhtmlResponse(ns,$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val ret = "Message: " + le.toString + "\\n\\t" +$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val ret = LogBoot.loggerByName("comet_trace")$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val ret = SessionMaster.getSession(req.request, cometSessionId) match {$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val ret: Box[Date] =$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val ret: Box[String] =$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^              val ret = ar.response.toJavaScript(session, ar.displayAll)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^            val ret: LiftResponse = what2 match {$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^          val ret: (Boolean, Box[LiftResponse]) =$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^      val ret = try {$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                  val ret = findCometByType(tpe, name, defaultXml, attributes)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                val ret = constr.newInstance().asInstanceOf[LiftCometActor]$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                val ret = constr.newInstance(this, name, defaultXml, attributes).asInstanceOf[LiftCometActor];$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^            var ret: NodeSeq = null$/;"	v
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^        val ret = LiftRules.snippet(cls) or findSnippetInstance(cls)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^      val ret = Box(asyncComponents.get(what)).or({$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val ret = synchronized {$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val ret = toRun.map(_.owner).removeDuplicates.flatMap {$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val ret = try {$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val ret: NodeSeq = snippetName.map(snippet =>$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^      val ret = for {uri <- Box.legacyNullTest(request.uri)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResourceServer.scala	/^      val ret: Long =$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^                  val ret = cmds.map(f)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^          val ret = LiftSession(httpRequest.session, req.contextPath)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^        val ret: (JsonCall, JsCmd) = S.buildJsonFunc(this.apply)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^              val ret: T = f$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^            val ret: T = f()$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/ScriptRenderer.scala	/^        var ret = [];$/;"	v
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty6AsyncProvider.scala	/^      val ret = getObject.invoke(cont)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty7AsyncProvider.scala	/^      val ret = getAttribute.invoke(cont, "__liftCometState")$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^    val ret = "sig" -> signature :: allParams$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    val ret = new TimedEventHandler(getSingleton)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    val ret = new TimedEventManager(getSingleton)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^    val ret: Box[LiftResponse] =$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^    val ret: ListBuffer[String] = new ListBuffer$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^      val ret = (headers.filter {case ("Cookie", _) => true; case _ => false}.$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    val ret = new HttpClient(new SimpleHttpConnectionManager(false))$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    val ret = try {$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^        val ret = f()$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^      val ret = new scala.collection.mutable.ListBuffer[Textile]$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^      var ret : List[Pair[String,String]] = Nil$/;"	v
ret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    val ret = new StringBuilder(len)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/test/scala/net/lift/textile/TextileSpec.scala	/^      val ret = toHtml("\\"Observe!\\"")$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^   val ret = if (! first) ",\\n      " else "      "$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^      val ret = Helpers.nextFuncName$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^                val ret = f$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^              val ret = f$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^          val ret = createOne$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^        val ret = f(conn)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^    val ret = ((threadLocalConnectionManagers.box.flatMap(_.get(name)) or Box(connectionManagers.get(name))).flatMap(cm => cm.newSuperConnection(name) or cm.newConnection(name).map(c => new SuperConnection(c, () => cm.releaseConnection(c))))) openOr {$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^    var ret = info.get(name) match {$/;"	v
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^    val ret = new StringBuilder$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^                val ret: Boolean = DB.prepareStatement("UPDATE "+MapperRules.quoteTableName(_dbTableNameLC)+" SET "+whatToSet(toSave)+" WHERE "+indexMap.open_! +" = ?", conn) {$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^              val ret = conn.driverType.performInsert(conn, query, prepStat, MapperRules.quoteTableName(_dbTableNameLC), generatedColumns) {$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^              val ret: Boolean = if (!dirty_?(toSave)) true else {$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^            val ret = if (saved_?(toSave)) {$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^          val ret = DB.prepareStatement("DELETE FROM "+MapperRules.quoteTableName(_dbTableNameLC) +" WHERE "+im+" = ?", conn) {$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^          val ret = DB.use(toSave.connectionIdentifier) {$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      case _ => val ret = "r"+randomString(15)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      val ret = (max, start) match {$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      val ret = findForClass(staringClass)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val ret = new Array[QueryParam[A]](prod.productArity)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val ret: A = createInstance$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val ret: A = createInstance.connectionIdentifier(dbId)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val ret: List[FieldError] = runValidationList(toValidate)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    var ret = new ListBuffer[T]$/;"	v
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^        val ret = meta.findAll(By(foreign, primaryKeyField) :: qp.toList : _*)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    val ret = super.apply(f)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    val ret = super.save &&$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    val ret = super.set(v)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala	/^        case _ => val ret: ModelType = (createInstance).name(tag).saveMe$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala	/^      val ret = super.findDbByKey(dbId,key)$/;"	V
ret	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^    val ret = if (connection.supportsForeignKeys_?) {$/;"	V
ret	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^      val ret = lookahead.toList$/;"	V
ret	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^        val ret = values(bit)$/;"	V
ret	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^        val ret = Iterator.this.next$/;"	V
ret	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^      val ret = (Iterator.this.next, idx)$/;"	V
ret	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      val ret = RandomAccessSeq.this.apply(idx)$/;"	V
ret	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      val ret = new Array[B](length + that.length)$/;"	V
ret	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^          val ret = i.next$/;"	V
ret	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/RollbackIterator.scala	/^    val ret = super.next$/;"	V
ret	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Set.scala	/^       val ret = new HashSet[A]$/;"	V
ret	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^        val ret = underlying.nextIndex;$/;"	V
ret	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^        val ret = underlying.previousIndex;$/;"	V
ret	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    val ret = i.seek(idx); i.remove; ret;$/;"	V
ret	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    val ret = i.seek(idx); i.set(a); ret;$/;"	V
ret	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^    val ret = underlying.get(key);$/;"	V
ret	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^    val ret = underlying.put(key, elem)$/;"	V
ret	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^    val ret = underlying.remove(key)$/;"	V
ret	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SeqIterator.scala	/^      val ret = next;$/;"	V
ret	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashMap.scala	/^      val ret = Some(e.value)$/;"	V
ret	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^    val ret = get(key)$/;"	V
ret	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/ReferenceWrapper.scala	/^    val ret = underlying.get.asInstanceOf[T]$/;"	V
ret	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^    val ret = a.toArray$/;"	V
ret	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/EncodingHeuristics.scala	/^    var ret: String = null$/;"	v
ret2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^      val ret2 = f.get(cometTimeout) openOr Nil$/;"	V
ret2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^    val ret2: List[AnswerRender] = ret.toList$/;"	V
retString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  @deprecated def retString(toRet: String)(other: Seq[(String, String)]) = Full(toRet)$/;"	f
retain	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterator.scala	/^  def retain(p : A => Boolean) : Boolean = {$/;"	f
retain	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^  override final def retain(f: A => Boolean) = retainOnly(f)$/;"	f
retain	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableMapAdaptor.scala	/^  override def retain(p: (A, B) => Boolean): Unit = { $/;"	f
retain	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^  def retain(p: (A, B) => Boolean) {$/;"	f
retain	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MapProxy.scala	/^  override def retain(p: (A, B) => Boolean): Unit = self retain p$/;"	f
retain	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  override def retain(f : (Key, Value) => Boolean) =$/;"	f
retain	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Set.scala	/^  def retain(p: A => Boolean): Unit = toList.foreach {$/;"	f
retain	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SetProxy.scala	/^  override def retain(p: A => Boolean): Unit =  self.retain(p)$/;"	f
retain	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  override def retain(p: (A, B) => Boolean): Unit = synchronized {$/;"	f
retain	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedSet.scala	/^  override def retain(p: A => Boolean) = synchronized {$/;"	f
retainAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/IterableWrapper.scala	/^  override def retainAll(that : Iterable[A]) = that match {$/;"	f
retainAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^  def retainAll(that : Iterable[A]) : Boolean = elements.retain(s => that.exists(t => t == s));$/;"	f
retainOnly	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^  def retainOnly(p : A => Boolean) : Unit = elements.retain(p);$/;"	f
retainOnly	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^    override def retainOnly(p0 : A => Boolean): Unit = $/;"	f
retryAt	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val retryAt = r.param("retry_at")$/;"	V
returnToUrl	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^    val returnToUrl = S.encodeURL(S.hostAndPath + targetUrl)$/;"	V
return_	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  def return_[T](result: T): ReturnAndDo[T] =$/;"	f
rev	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^    val rev = res.reverse$/;"	V
reverse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    def reverse(v: JValue): JValue = v match {$/;"	f
reverse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^     override def reverse : Projection[A] = new Projection[A] {$/;"	f
reverse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^     override def reverse = projection.reverse$/;"	f
reverse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def reverse: List[A] = {$/;"	f
reverse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      override def reverse: MutableProjection[A] = Mutable.this.projection$/;"	f
reverse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def reverse : MutableProjection[A] = new MutableProjection[A] {$/;"	f
reverse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def reverse : RandomAccessSeq.Projection[A] = RandomAccessSeq.this.projection$/;"	f
reverse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^  override def reverse : Seq[A] = new RandomAccessSeq.Projection[A] {$/;"	f
reverse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeqProxy.scala	/^  override def reverse = self.reverse$/;"	f
reverse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  def reverse: Seq[A] = {$/;"	f
reverse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def reverse: Seq[A] = self.reverse$/;"	f
reverse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override def reverse: Stream[A] =$/;"	f
reverse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def reverse(): StringBuilder = {$/;"	f
reverse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^  override def reverse: Stack[A] = {$/;"	f
reverse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  override def reverse: RichString = {$/;"	f
reverseApply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^  private def reverseApply(n: Int): A =$/;"	f
reverseElements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^  private def reverseElements: Iterator[A] = new Iterator[A] {$/;"	f
reverseList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^class JsCommands(val reverseList: List[JsCmd]) {$/;"	V
reverseMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def reverseMap[B](f: A => B): List[B] = {$/;"	f
reverse_	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def reverse_:::[B >: A](prefix: List[B]): List[B] = {$/;"	f
rewrite	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    val rewrite = new RewriteRule {$/;"	V
rewrite	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^    val rewrite = URLRewriter.rewriteFunc$/;"	V
rewrite	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val rewrite = statelessRewrite$/;"	V
rewrite	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    val rewrite = URLRewriter.rewriteFunc$/;"	V
rewrite	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResourceServer.scala	/^  def rewrite(rw: PartialFunction[List[String], List[String]]) {$/;"	f
rewrite	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def rewrite: LocRewrite = Empty$/;"	f
rewrite	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^          override val rewrite: LocRewrite =$/;"	V
rewrite	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^        override val rewrite: LocRewrite =$/;"	V
rewriteFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def rewriteFunc: Box[(String) => String] = Box.legacyNullTest(funcHolder value)$/;"	f
rewritePF	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def rewritePF: Box[LiftRules.RewritePF] = rewrite.map($/;"	f
rewritten	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    val rewritten = processRewrite(original.path, Map.empty)$/;"	V
rewritten	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    val rewritten = processRewrite(tmpPath, Map.empty)$/;"	V
rfb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^    var rfb: StringBuilder = null$/;"	v
rh	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    val rh = <span id={hid}>{hidden(ui.show(sid).toJsCmd + ";" + ui.hide(hid).toJsCmd + ";")}<\/span>$/;"	V
right	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^    val right: Parser[List[T]] = success(Nil)$/;"	V
right	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^  def right = Either.RightProjection(this)$/;"	f
right	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^                           override val right: Tree[B]) extends NonEmpty[B] {$/;"	V
right	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^                         override val right: Tree[B]) extends NonEmpty[B] {$/;"	V
right	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def right: Tree[B]$/;"	f
rightIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    val rightIndex = sourceCount - targetCount$/;"	V
right_align	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val right_align : Parser[Attribute] = elem('>') ^^ Align$/;"	V
rights	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def rights[A, B](es: Iterable[Either[A, B]]) = $/;"	f
rint	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def rint(x: Double): Double = java.lang.Math.rint(x)$/;"	f
rmap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Tests.scala	/^    val rmap : SortedMap[String,Integer] = map.range("b", "d");$/;"	V
rnk	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^              val rnk = if (visible) nk else nk % ("style" -> "display: none")$/;"	V
roboSplit	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^    def roboSplit(sep: String): List[String] = what match {case null => Nil case s => s.split(sep).toList.map(_.trim).filter(_.length > 0)}$/;"	f
roboSplit	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/StringHelpersSpec.scala	/^  "The SuperString class roboSplit method" should {$/;"	c
role	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^    val role = NamedPF.applyBox(req, LiftRules.httpAuthProtectedResource.toList)$/;"	V
rollback	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^      var rollback = true$/;"	v
rollback	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def rollback(name: ConnectionIdentifier) = use(name)(conn => conn.rollback)$/;"	f
rollback	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/RollbackIterator.scala	/^  private[this] var rollback: ArrayBuffer[A] = null$/;"	v
root	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    var root: Option[JValue] = None$/;"	v
root	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Parser.scala	/^  def root       = jsonObj | jsonArray$/;"	f
rootCause	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/XIncludeException.scala	/^  private var rootCause: Throwable = null$/;"	v
rootClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  protected val rootClass = this.getClass.getSuperclass$/;"	V
rootClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  protected val rootClass = this.getClass.getSuperclass$/;"	V
rootElem	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  var rootElem: Node = null:Node$/;"	v
rootLabel	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^  var rootLabel:String = _$/;"	v
rootLogger	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  lazy val rootLogger: LiftLogger = LogBoot.loggerByName("lift")$/;"	V
rootPath	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def rootPath = "paypal"$/;"	f
roster	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^  val roster: Roster = conn.getRoster();$/;"	V
roster	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^  var roster: Roster = null$/;"	v
rosterMap	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^  val rosterMap: HashMap[String, Presence] = new HashMap[String, Presence]$/;"	V
rot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^      case xs => val rot = rotateList(xs)$/;"	V
rotate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^    def rotate = rotateList(what)$/;"	f
rotateList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^  def rotateList[T](in: Seq[T]): List[List[T]] = {$/;"	f
round	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^        def round(precision: Int) = make(BigDecimal(get(precision)))$/;"	f
round	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def round(x: Double): Long = java.lang.Math.round(x)$/;"	f
round	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def round(x: Float): Int = java.lang.Math.round(x)$/;"	f
round	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichDouble.scala	/^  def round: Long = Math.round(x)$/;"	f
round	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichFloat.scala	/^  def round: Int = Math.round(x)$/;"	f
routingKey	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^    val routingKey = env.getRoutingKey$/;"	V
row_def	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val row_def : Parser[TableDef] = rep1(table_attribute) <~ '.' ^^ TableDef$/;"	V
row_span	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val row_span : Parser[Attribute] = '\/' ~> num ^^ {s => AnyAttribute("rowspan", s )}$/;"	V
rp	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    val rp = new REMatcher(body, p)$/;"	V
rs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^    val rs = statement.executeQuery$/;"	V
rs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^          val rs = md.getTables(null, Schemifier.getDefaultSchemaName(conn), null, null)$/;"	V
rset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Tests.scala	/^    val rset : SortedSet[String] = set.range("b", "e");$/;"	V
rule	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^            val rule = new RewriteRule {$/;"	V
rule	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/RuleTransformer.scala	/^      val rule = it.next$/;"	V
rules	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile private var rules: List[T] = Nil$/;"	v
rules	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/jolib.scala	/^    def rules(rs: (Pattern, Rule)*) =$/;"	f
ruls	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/jolib.scala	/^    private var ruls: List[(Pattern, Rule)] = null$/;"	v
run	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def run[T](in: T)(f: (T, A) => T) = in$/;"	f
run	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def run[T](in: T)(f: (T, A) => T) = f(in, value)$/;"	f
run	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Benchmark.scala	/^  def run(name: String, warmup: Int, count: Int)(f: => Any) = {$/;"	f
run	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ActorPing.scala	/^          def run = {$/;"	f
run	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ThreadGlobal.scala	/^  def run[S](x: T)(f: => S): S = {$/;"	f
run	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^            override def run = {$/;"	f
run	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^  def run: TestResults = {$/;"	f
run	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^  def run(u: String, p: String) = {$/;"	f
run	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Responder.scala	/^  def run[A](r: Responder[A]): Option[A] = {$/;"	f
run	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/ops.scala	/^    val t = new Thread() { override def run() = p }$/;"	f
run	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^    def run(): Unit = result = block$/;"	f
run	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def run(r: TestResult) {$/;"	f
run	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def run(r: TestResult): Unit$/;"	f
run	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/CachedFileStorage.scala	/^  override def run = {$/;"	f
runASingleTest	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^    def runASingleTest(testItem: Item) {$/;"	f
runAppliers	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^        def runAppliers(rs: ResultSet) : Boolean = {$/;"	f
runBenchmark	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/Benchmark.scala	/^  def runBenchmark(noTimes: Int): List[Long] =$/;"	f
runFilters	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def runFilters(in: FieldType, filter: List[FieldType => FieldType]): FieldType =$/;"	f
runFilters	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def runFilters(in: MyType, filter: List[MyType => MyType]): MyType = filter match {$/;"	f
runForkTest	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^    def runForkTest(testItem: Item, cnt: Int) {$/;"	f
runIt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^      def runIt(pos: Int) {$/;"	f
runLogger	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private def runLogger(logged: Statement, time: Long) = logged match {$/;"	f
runParams	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def runParams(state: Req): List[Any] = {$/;"	f
runPreparedStatement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private def runPreparedStatement[T](st: PreparedStatement)(f: (PreparedStatement) => T): T = {$/;"	f
runQuery	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def runQuery(query: String): (List[String], List[List[String]]) =$/;"	f
runQuery	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def runQuery(query: String, params: List[Any]): (List[String], List[List[String]]) =$/;"	f
runQuery	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def runQuery(query: String, params: List[Any], connectionIdentifier: ConnectionIdentifier): (List[String], List[List[String]]) = {$/;"	f
runSafe	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def runSafe[T](f : => T) : T = {$/;"	f
runSafe	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Safe.scala	/^  def runSafe[T](x : Long)(f : => T) : T = {$/;"	f
runSafe	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Record.scala	/^  def runSafe[T](f : => T) : T = {$/;"	f
runTemplate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def runTemplate(pageName: String, template: NodeSeq): NodeSeq =$/;"	f
runTemplate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def runTemplate(path: List[String]): Box[NodeSeq] =$/;"	f
runTest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    protected def runTest(): Unit$/;"	f
runValidationList	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  protected def runValidationList(toValidate: A): List[FieldError] =$/;"	f
runValidations	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^    def runValidations(validators: List[FieldType => List[FieldError]]) {$/;"	f
running_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def running_? = _running_?$/;"	f
rwl	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^  val rwl = new ReentrantReadWriteLock();$/;"	V
s	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^          val s = segments(i).seg$/;"	V
s	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^        val s = new StringBuilder$/;"	V
s	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^        val s = new java.lang.StringBuilder(base)$/;"	V
s	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^      val s = acquire$/;"	V
s	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    val vals = new ValStack(p)$/;"	V
s	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^          val types = typeConstructors(t, k)(valueTypeIndex)$/;"	T
s	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^case class Objs(objects: List[Obj[_]])$/;"	o
s	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^      case vals :: rest => build(rest, ret ++ bind(vals, xml))$/;"	V
s	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def build (listvals: List[Map[String, NodeSeq]], ret: NodeSeq): NodeSeq = listvals match {$/;"	V
s	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def bind(vals: Map[String, NodeSeq], xml: NodeSeq): NodeSeq = {$/;"	V
s	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def bindlist(listvals: List[Map[String, NodeSeq]], xml: NodeSeq): Box[NodeSeq] = {$/;"	V
s	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/JSONSpec.scala	/^    "complex JSON objects #2" in {$/;"	o
s	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/JSONSpec.scala	/^    "complex JSON objects" in {$/;"	o
s	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    "provide a noTime function on Date objects to transform a date into a date at the same day but at 00:00" in {$/;"	o
s	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    "provide a toDate returning a Full(date) from many kinds of objects" in {$/;"	o
s	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def bind(prefix: String, vals: BindParam*): NodeSeq = bind(prefix, _defaultXml, vals: _*)$/;"	V
s	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def bind(vals: BindParam*): NodeSeq = bind(_defaultPrefix, vals: _*)$/;"	V
s	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^              val s = se.next$/;"	V
s	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    val vals = opts.map(_._1)$/;"	V
s	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  private val vals: ThreadGlobal[HashMap[String, (MyType, Any, Boolean)]] = new ThreadGlobal$/;"	V
s	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^      val s = stateList(who.state)$/;"	V
s	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/test/scala/net/lift/textile/TextileSpec.scala	/^      val s =     """I am <em>very<\/em> serious$/;"	V
s	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/test/scala/net/lift/textile/TextileSpec.scala	/^      val s =   """VF-DE:$/;"	V
s	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class ByList[O<:Mapper[O], T](field: MappedField[T,O], vals: Seq[T]) extends QueryParam[O]$/;"	V
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^       val s = readLine()$/;"	V
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^    val s = readLine()$/;"	V
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^        val s = xs.head compare ys.head;$/;"	V
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    val s = start max 0$/;"	V
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^    val s = ltable.length$/;"	V
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^    var s = 0$/;"	v
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashSet.scala	/^    var s = 0$/;"	v
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^    val s = start + _start$/;"	V
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^        val s = right.smallest$/;"	V
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^        val s = r.smallest$/;"	V
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^    val s = new Source {$/;"	V
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val types = Array[AnyClass]() $/;"	T
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val types = Array[AnyClass](p._2)$/;"	T
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val types = Array[AnyClass](p0._2, p1._2)$/;"	T
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val types = Array[AnyClass](p0._2, p1._2, p2._2)$/;"	T
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val types = Array[AnyClass](p0._2, p1._2, p2._2, p3._2)$/;"	T
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val types = Array[AnyClass](p0._2, p1._2, p2._2, p3._2, p4._2)$/;"	T
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val types = Array[AnyClass](p0._2, p1._2, p2._2, p3._2, p4._2, p5._2)$/;"	T
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val types = Array[AnyClass](p0._2, p1._2, p2._2, p3._2, p4._2, p5._2, p6._2)$/;"	T
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val types = Array[AnyClass](p0._2, p1._2, p2._2, p3._2, p4._2, p5._2, p6._2, p7._2)$/;"	T
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val types = Array[AnyClass](p0._2, p1._2, p2._2, p3._2, p4._2, p5._2, p6._2, p7._2, p8._2)$/;"	T
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichException.scala	/^    val s = new StringBuilder()$/;"	V
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^            var s = len \/ 8$/;"	v
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^        var s = Math.min(a-off, b-a)$/;"	v
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^    val s = new scala.collection.mutable.HashSet[String]()$/;"	V
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/Main.scala	/^          val s = new XIncluder(System.out, "UTF-8")$/;"	V
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^            val s = xCharRef ({ () => c }, { () => c = it.next })$/;"	V
s	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    val s: Seq[Char] = attval$/;"	V
s1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^        val s1 = sm - s2$/;"	V
s2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^        val s2 = sm \/ 2$/;"	V
sConn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^        val sConn = conn \/\/ SuperConnection(conn)$/;"	V
sOpt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModelParser.scala	/^  def sOpt = if( token == S ) nextToken;$/;"	f
sPrime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^          val sPrime = refDef.appP(Def(), state.stream)$/;"	V
sPrime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^          val sPrime = refDef.appP(Ref(), state.stream)$/;"	V
sPrime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^      val sPrime = pa.appP(a, s)$/;"	V
sPrime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^      val sPrime = resPa._2$/;"	V
sPrimePrime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^          val sPrimePrime = pa.appP(v, new PicklerState(sPrime, pe))$/;"	V
sPrimePrime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^      val sPrimePrime = pb.appP(b, sPrime)$/;"	V
safeIs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^  final def safeIs(idx : Int, a : Any) = if (idx >= 0 && idx < length) this(idx) == a else false$/;"	f
safePrimaryConstructorOf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^    def safePrimaryConstructorOf[A](cl: Class[A]): Option[JConstructor[A]] = $/;"	f
safe_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  private def safe_?(f: => Any) {$/;"	f
safe_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  final def safe_? : Boolean = fieldOwner.safe_?$/;"	f
safe_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  final def safe_? : Boolean = {$/;"	f
safe_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Safe.scala	/^  def safe_?(test : Long) : Boolean = test == threadLocal.value$/;"	f
safe_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  final def safe_? : Boolean = owner.safe_?$/;"	f
safe_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Record.scala	/^  final def safe_? : Boolean = {$/;"	f
salt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  def salt = this.salt_i$/;"	f
salt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^  def salt = this.salt_i$/;"	f
salt_i	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  private val salt_i = FatLazy(Safe.randomString(16))$/;"	V
salt_i	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^  private val salt_i = FatLazy(Safe.randomString(16))$/;"	V
sameDay	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarUtils.scala	/^  def sameDay(c1: Calendar, c2: Calendar) = (c1.get(DAY_OF_MONTH) == c2.get(DAY_OF_MONTH)) &&$/;"	f
sameElements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def sameElements[B >: A](that: Iterable[B]): Boolean = self sameElements that$/;"	f
sameElements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def sameElements[B >: A](that: Iterable[B]): Boolean = {$/;"	f
sameElements	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def sameElements[B >: A](that: Iterable[B]) = self sameElements that$/;"	f
sameMappings	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  private def sameMappings(that : AssocMap[_, _]) : Boolean = (this, that) match {$/;"	f
samp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^    val samp = SampleModel.findAll()$/;"	V
satisfied	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LAFuture.scala	/^  @volatile private[this] var satisfied = false$/;"	v
satisfy	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LAFuture.scala	/^  def satisfy(value: T): Unit = synchronized {$/;"	f
save	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    def save = {$/;"	f
save	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^  abstract override def save = {$/;"	f
save	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def save(): Boolean = {$/;"	f
save	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def save: Boolean$/;"	f
save	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def save(toSave: A): Boolean = {$/;"	f
save	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    def save = {$/;"	f
save	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    override def save = {$/;"	f
save	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^  override def save = {$/;"	f
save	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/DBMetaRecord.scala	/^  def save(inst: BaseRecord): Boolean = {$/;"	f
save	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/DBRecord.scala	/^  def save(): MyType = {$/;"	f
save	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^  final def save(filename: String, node: Node): Unit = $/;"	f
save	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^  final def save(filename: String, node: Node, enc: String): Unit = $/;"	f
save	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/CachedFileStorage.scala	/^  private def save = if (this.dirty) {$/;"	f
saveFull	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^  final def saveFull(filename: String, node: Node, enc: String, xmlDecl: Boolean, doctype: dtd.DocType) {$/;"	f
saveFull	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^  final def saveFull(filename: String, node: Node, xmlDecl: Boolean, doctype: dtd.DocType): Unit = $/;"	f
saveMe	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def saveMe(): A = {$/;"	f
saved	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^    val saved = toSave filter {_.validate eq Nil} filter (_.save)$/;"	V
saved_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def saved_? : Boolean = getSingleton.saved_?(this)$/;"	f
saved_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def saved_?(toSave: A): Boolean =$/;"	f
saved_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/DBMetaRecord.scala	/^  def saved_?(inst: BaseRecord): Boolean = true$/;"	f
sb	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^    val sb = new StringBuilder(20)$/;"	V
sb	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^    val sb = new StringBuilder(50000)$/;"	V
sb	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^    val sb: StringBuilder = new StringBuilder()$/;"	V
sb	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^    val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^        val sb = new GoodSB(len * 2)$/;"	V
sb	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^    val sb = new GoodSB$/;"	V
sb	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^    val sb = new StringBuilder(64000)$/;"	V
sb	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^            val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/test/scala/net/lift/textile/TextileSpec.scala	/^      val sb = new StringBuilder()$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    val sb = new StringBuilder()$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple1.scala	/^     val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple10.scala	/^     val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple11.scala	/^     val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple12.scala	/^     val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple13.scala	/^     val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple14.scala	/^     val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple15.scala	/^     val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple16.scala	/^     val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple17.scala	/^     val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple18.scala	/^     val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple19.scala	/^     val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple2.scala	/^     val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple20.scala	/^     val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple21.scala	/^     val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple22.scala	/^     val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple3.scala	/^     val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple4.scala	/^     val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple5.scala	/^     val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple6.scala	/^     val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple7.scala	/^     val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple8.scala	/^     val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple9.scala	/^     val sb = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Position.scala	/^    val sb = new StringBuilder()$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/DetWordAutom.scala	/^    val sb = new StringBuilder("[DetWordAutom  nstates=")$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^    val sb = new StringBuilder("[NondetWordAutom  nstates=")$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Elem.scala	/^     val sb = new StringBuilder()$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/EntityRef.scala	/^    case _ => val sb = new StringBuilder(); toString(sb).toString() $/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Group.scala	/^    val sb = new StringBuilder()$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^    val sb = new StringBuilder()$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NamespaceBinding.scala	/^    val sb = new StringBuilder()$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^    val sb = new StringBuilder()$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^          val sb = new StringBuilder()$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^    val sb = new StringBuilder("<")$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^    val sb = new StringBuilder("<\/")$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^    val sb = new StringBuilder()$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^    var sb = new StringBuilder()$/;"	v
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/TextBuffer.scala	/^  val sb = new StringBuilder()$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^    val sb  = new StringBuilder$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^    val sb = new StringBuilder()$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^    val sb = new StringBuilder();$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Xhtml.scala	/^    val sb = new StringBuilder()$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^    val sb = new StringBuilder()$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/DTD.scala	/^    val sb = new StringBuilder("DTD [\\n")$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/DocType.scala	/^    val sb = new StringBuilder("<!DOCTYPE ")$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Scanner.scala	/^    val sb = new StringBuilder()$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ValidationException.scala	/^    val sb = new StringBuilder("missing value for REQUIRED attribute")$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    val sb: StringBuilder = new StringBuilder()$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    val sb:StringBuilder = new StringBuilder()$/;"	V
sb	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/XhtmlParser.scala	/^    val sb: StringBuilder = new StringBuilder()$/;"	V
sb2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrefixedAttribute.scala	/^    val sb2 = new StringBuilder()$/;"	V
sb2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/UnprefixedAttribute.scala	/^    val sb2 = new StringBuilder()$/;"	V
sbis	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  val sbis = new StringBufferInputStream("")$/;"	V
sc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^      val sc = c.getSuperclass$/;"	V
scala.runtime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BooleanRef.java	/^package scala.runtime;$/;"	p
scala.runtime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedUnit.java	/^package scala.runtime;$/;"	p
scala.runtime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^package scala.runtime;$/;"	p
scala.runtime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ByteRef.java	/^package scala.runtime;$/;"	p
scala.runtime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/CharRef.java	/^package scala.runtime;$/;"	p
scala.runtime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/DoubleRef.java	/^package scala.runtime;$/;"	p
scala.runtime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ExceptionHandling.java	/^package scala.runtime;$/;"	p
scala.runtime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/FloatRef.java	/^package scala.runtime;$/;"	p
scala.runtime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/IntRef.java	/^package scala.runtime;$/;"	p
scala.runtime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/LongRef.java	/^package scala.runtime;$/;"	p
scala.runtime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ObjectRef.java	/^package scala.runtime;$/;"	p
scala.runtime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ShortRef.java	/^package scala.runtime;$/;"	p
scala1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/MergeExamples.scala	/^  val scala1 = parse("""$/;"	V
scala2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/MergeExamples.scala	/^  val scala2 = parse("""$/;"	V
scalacheck	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/project/build/src/LiftJson.scala	/^  val scalacheck = "org.scala-tools.testing" % "scalacheck" % "1.6"$/;"	V
scale	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^        val scale: Int$/;"	V
scale	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^    val scale = 10$/;"	V
scale	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^abstract class MappedDecimal[T <: Mapper[T]] (val fieldOwner : T, val context : MathContext, val scale : Int) extends MappedField[BigDecimal,T] {$/;"	V
scale	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DecimalField.scala	/^class DecimalField[OwnerType <: Record[OwnerType]](rec: OwnerType, val context : MathContext, val scale : Int) extends NumericField[BigDecimal, OwnerType] {$/;"	V
scale	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  def scale: Int = this.bigDecimal.scale()$/;"	f
scales	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    val scales = List((1000L, "milli"), (60L, "second"), (60L, "minute"), (24L, "hour"), (7L, "day"), (10000L, "week"))$/;"	V
scanSentMsgs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^  private def scanSentMsgs[A](receiver: Receiver[A]): Unit = synchronized {$/;"	f
schedule	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LAPinger.scala	/^  def schedule[T](to: SpecializedLiftActor[T], msg: T, delay: Long): ScheduledFuture[Unit] = {$/;"	f
schedule	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ActorPing.scala	/^  def schedule[T](to: SimpleActor[T], msg: T, delay: TimeSpan): ScheduledFuture[Unit] = synchronized {$/;"	f
scheduleAtFixedRate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ActorPing.scala	/^  def scheduleAtFixedRate(to: Actor, msg: Any, initialDelay: TimeSpan, delay: TimeSpan) {$/;"	f
schema	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  private lazy val schema = tryo(sf.newSchema(new URL(ngurl)))$/;"	V
schemaName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^class SuperConnection(val connection: Connection, val releaseFunc: () => Unit, val schemaName: Box[String]) {$/;"	V
scheme	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def scheme: String$/;"	f
scheme	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def scheme: String = req getScheme$/;"	f
scheme	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  val scheme: String = req.scheme$/;"	V
scheme	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^    val scheme = uri.getScheme().toLowerCase()$/;"	V
scheme	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var scheme = "http"$/;"	v
schemify	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^  def schemify(performWrite: Boolean, logFunc: (=> AnyRef) => Unit, dbId: ConnectionIdentifier, stables: BaseMetaMapper*): List[String] = {$/;"	f
schemify	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^  def schemify(performWrite: Boolean, logFunc: (=> AnyRef) => Unit, stables: BaseMetaMapper*): List[String] = schemify(performWrite, logFunc, DefaultConnectionIdentifier, stables :_*)$/;"	f
scientist	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/SourceSnippet.scala	/^		object scientist extends RequestVar[Scientist]( defaultScientist() )$/;"	o
scientistCount	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/Stats.scala	/^		val scientistCount = Scientist.count$/;"	V
scope	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^    var scope: NamespaceBinding = pscope$/;"	v
scope	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Elem.scala	/^                override val scope: NamespaceBinding,$/;"	V
scope	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  def scope: NamespaceBinding = TopScope$/;"	f
scope	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    var scope: NamespaceBinding = pscope$/;"	v
scopeStack	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  var scopeStack  = new Stack[NamespaceBinding]$/;"	v
scp	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^    val scp = scopeStack.pop$/;"	V
scpe	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^    var scpe = scopeStack.top$/;"	v
screenBottom	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  def screenBottom: Box[Elem] = Empty$/;"	f
screenCount	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  lazy val screenCount = screens.size$/;"	V
screenFields	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  def screenFields: List[BaseField] = _fieldList.flatMap(_.apply().allFields)$/;"	f
screenName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  def screenName: String = "Screen"$/;"	f
screenName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    override def screenName: String = "Screen " + (myScreenNum + 1)$/;"	f
screenNameAsHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  def screenNameAsHtml: NodeSeq = Text(screenName)$/;"	f
screenTitle	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  def screenTitle: NodeSeq = screenNameAsHtml$/;"	f
screenTop	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  def screenTop: Box[Elem] = Empty$/;"	f
screenTopText	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  def screenTopText: Box[String] = Empty$/;"	f
screenTopTextAsHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  def screenTopTextAsHtml: Box[NodeSeq] = screenTopText.map(Text.apply)$/;"	f
screenVars	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  protected class ScreenSnapshot(private[http] val screenVars: Map[String, (NonCleanAnyVar[_], Any)],$/;"	V
screenVars	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  class WizardSnapshot(private[wizard] val screenVars: Map[String, (NonCleanAnyVar[_], Any)],$/;"	V
screenWrap	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def screenWrap: Box[Node] = Empty$/;"	f
screens	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  def screens: List[Screen] = _screenList$/;"	f
script	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^  def script(xml: NodeSeq): JsCmd =$/;"	f
se	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^            val se = suffixes.elements$/;"	V
second	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    def second = seconds$/;"	f
second	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/ToHeadUsages.scala	/^      val second = net.liftweb.http.LiftRules.excludePathFromContextPathRewriting.doWith(excludeBar _) {$/;"	V
secondLazy	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/snippet/DeferredSnippet.scala	/^  def secondLazy:NodeSeq = {$/;"	f
seconds	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    def seconds = TimeSpan(outer.seconds(len))$/;"	f
seconds	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def seconds(in: Long): Long = in * 1000L$/;"	f
secret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def secret = System.getProperty("com.facebook.secret")$/;"	f
secret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    def secret = _secret.is$/;"	f
secret	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def secret: String$/;"	f
secret_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def secret_=(key: String) = System.setProperty("com.facebook.secret", key)$/;"	f
section	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  val section = path(0) match {case null => "default"; case s => s}$/;"	V
secure	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^      val secure: List[(T, String, String)] = o2.map {case (obj, txt) => (obj, randomString(20), txt)}$/;"	V
secure	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    val secure = options.map {case (obj, txt) => (obj, randomString(20), txt)}$/;"	V
secure	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^    val secure = options.map{case (obj, txt) => (obj, randomString(20), txt)}$/;"	V
seek	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SeqIterator.scala	/^  def seek(idx: K) = {$/;"	f
seekNext	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^      protected def seekNext : Option[A] = {$/;"	f
seekPrevious	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^      protected def seekPrevious : Option[A] = {$/;"	f
seenLabel	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^  protected def seenLabel(r: RegExp, i: Int, label: _labelT) {$/;"	f
seenLabel	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^  protected def seenLabel(r: RegExp, label: _labelT): Int = {$/;"	f
seg	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    val seg: Array[Char]$/;"	V
segment	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    private[this] var segment: Array[Char] = _$/;"	v
segmentCount	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    private[this] var segmentCount = 0$/;"	v
segmentSize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    private[json] var segmentSize = 1000$/;"	v
segments	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    private[this] val segments = new ArrayBlockingQueue[Segment](maxNumOfSegments)$/;"	V
segments	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    private[this] var segments: List[Segment] = Nil$/;"	v
selectDbForKey	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def selectDbForKey(key: Type): ConnectionIdentifier =$/;"	f
selectStatement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      val selectStatement = "SELECT "+$/;"	V
selectTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^  def selectTag(Q: BitSet, finals: Array[Int]) = {$/;"	f
select_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def select_*(opts: Seq[(String, String)], deflt: Box[String],$/;"	f
selected	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  private def selected(in: Boolean) = if (in) new UnprefixedAttribute("selected", "selected", Null) else Null$/;"	f
selected	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^        var selected: Box[String] = Empty$/;"	v
selectedAwards	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/SourceSnippet.scala	/^		object selectedAwards extends RequestVar[List[Award]](List[Award]())$/;"	o
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^      def self: Any = x$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^    def self: Any = x;$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  def self: Collection[A]$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def self: Iterable[A]$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^      val self = x$/;"	V
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^      val self = xs$/;"	V
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^    def self: Any = x$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Proxy.scala	/^  def self: Any$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Random.scala	/^class Random(val self: java.util.Random) {$/;"	V
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeqProxy.scala	/^  override def self: RandomAccessSeq[A]$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def self: Seq[A]$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/MapProxy.scala	/^  override def self: Map[A, B]$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SetProxy.scala	/^  def self: Set[A]$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^      var self: ListMap[A,B] = ListMap.this$/;"	v
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BufferProxy.scala	/^    def self = BufferProxy.this.self.clone()$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BufferProxy.scala	/^  def self: Buffer[A]$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MapProxy.scala	/^  def self: Map[A, B]$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueueProxy.scala	/^    def self = PriorityQueueProxy.this.self.clone()$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueueProxy.scala	/^  def self: PriorityQueue[A]$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/QueueProxy.scala	/^    def self = QueueProxy.this.self.clone()$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/QueueProxy.scala	/^  def self: Queue[A]$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SetProxy.scala	/^    def self = SetProxy.this.self.clone()$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SetProxy.scala	/^  def self: Set[A]$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/StackProxy.scala	/^    def self = StackProxy.this.self.clone()$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/StackProxy.scala	/^  def self: Stack[A]$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/ReferenceWrapper.scala	/^  def self = underlying$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichBoolean.scala	/^  def self: Any = x$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichByte.scala	/^  def self: Any = x$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichChar.scala	/^  def self: Any = x$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichDouble.scala	/^  def self: Any = x$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichFloat.scala	/^  def self: Any = x$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichInt.scala	/^  def self: Any = start$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichLong.scala	/^  def self: Any = x$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichShort.scala	/^  def self: Any = start$/;"	f
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^final class RichString(val self: String) extends Proxy with RandomAccessSeq[Char] with Ordered[String] {$/;"	V
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichStringBuilder.scala	/^final class RichStringBuilder(val self : StringBuilder) extends RandomAccessSeq.Mutable[Char] with Proxy with Buffer[Char] {$/;"	V
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Random.scala	/^class Random(val self: java.util.Random) {$/;"	V
self	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def self: Element = scope.getElementFor(el)$/;"	f
send	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^  def send(msg: T) {$/;"	f
send	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^  def send[T](msg: T) {$/;"	f
send	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^  def send[T](msg: T, params: ConnectionParameters, host: String, port: Int) {$/;"	f
send	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^  def send(msg: Message): Unit = synchronized {$/;"	f
sendError	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def sendError(code: Int) {$/;"	f
sendError	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def sendError(code: Int, s: String) {$/;"	f
sendItToMe	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^        val sendItToMe: AnswerRender => Unit = ah => this ! ah$/;"	V
sendMail	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  def sendMail(from: From, subject: Subject, rest: MailTypes*) {$/;"	f
sendMessage	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^  def sendMessage(to: String, msg: String) {$/;"	f
sendMsg	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] def sendMsg(in: Any): Unit =$/;"	f
sendPasswordReset	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def sendPasswordReset(email: String) {$/;"	f
sendRedirect	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def sendRedirect(uri: String) {$/;"	f
sendResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  def sendResponse(resp: BasicResponse, response: HTTPResponse, request: Box[Req]) {$/;"	f
sendValidationEmail	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def sendValidationEmail(user: ModelType) {$/;"	f
sender	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^    val sender = ExampleDirectAMQPSender.send("hello!")$/;"	V
sender	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^    val sender = new ExampleStringAMQPSender()$/;"	V
sent	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^  private var sent = messageQueue.make$/;"	v
sep	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^              val sep = uri contains ("?") match {case true => "&" case _ => "?"}$/;"	V
separate	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def separate[A,B](es: Iterable[Either[A,B]]): (List[A], List[B]) =$/;"	f
seq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^        var seq = in$/;"	v
seq	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^          val seq: Seq[String] = List("Elwood", "Archer")$/;"	V
seq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  private def seq[T, U, V](p: => Input => ParseResult[T], q: => Input => ParseResult[U])$/;"	f
seq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  private def seq[T, U, V](p: => Input => ParseResult[T], q: => Input => ParseResult[U])$/;"	f
seq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^    val seq = transform(n)$/;"	V
seq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^    val seq: Seq[Node] = arr$/;"	V
seq1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^  lazy val seq1 = elem('\\'') ~> path <~ elem('\\'')$/;"	V
seq2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^  lazy val seq2 = elem('\\"') ~> path <~ elem('\\"')$/;"	V
seq2RichSort	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^  implicit def seq2RichSort[K <: Ordered[K]](s: Seq[K]) = new RichSorting[K](s)$/;"	f
seq2jvalue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  implicit def seq2jvalue[A <% JValue](s: Seq[A]) = JArray(s.toList.map { a => val v: JValue = a; v })$/;"	f
seqDone	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^      var seqDone = 0;$/;"	v
seqId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^    val seqId = Helpers.nextNum$/;"	V
seqJsToJs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  implicit def seqJsToJs(in: Seq[JsCmd]): JsCmd = in.foldLeft[JsCmd](Noop)(_ & _)$/;"	f
seqRest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModelParser.scala	/^  def seqRest(p: RegExp) = { $/;"	f
seqToCharSequence	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def seqToCharSequence(xs: RandomAccessSeq[Char]): CharSequence = new CharSequence {$/;"	f
sequ	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def sequ[t,u](f: u => t, pa: SPU[t], k: t => SPU[u]): SPU[u] = new SPU[u] {$/;"	f
sequence	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  def sequence[bt <: NameElement, st <% Mappable[st]](orig: List[UnderBinder[bt, st]]): UnderBinder[bt, List[st]] = $/;"	f
sequenceToXML	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^  def sequenceToXML(children: Seq[Node], pscope: NamespaceBinding,$/;"	f
sequenceToXML	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def sequenceToXML(children: Seq[Node], pscope: NamespaceBinding,$/;"	f
sequenceToXML	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Xhtml.scala	/^  def sequenceToXML(children: Seq[Node], pscope: NamespaceBinding,$/;"	f
ser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val ser = swrite(Nullable(null))$/;"	V
ser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val ser = swrite(animals)$/;"	V
ser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val ser = swrite(ints)$/;"	V
ser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val ser = swrite(lotto)$/;"	V
ser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val ser = swrite(m)$/;"	V
ser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val ser = swrite(objs)$/;"	V
ser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val ser = swrite(p)$/;"	V
ser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val ser = swrite(primitives)$/;"	V
ser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val ser = swrite(project)$/;"	V
ser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val ser = swrite(r3)$/;"	V
ser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val ser = swrite(t)$/;"	V
ser	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val ser = swrite(ts)$/;"	V
ser1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^    val ser1 = serialize(project)$/;"	V
ser2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^    val ser2 = write(project)$/;"	V
serial	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^  private val serial = new AtomicLong(Math.abs(Helpers.randomLong(Helpers.millis)) + 1000000L)$/;"	V
serialVersionUID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BooleanRef.java	/^    private static final long serialVersionUID = -5730524563015615974L;$/;"	f	class:BooleanRef	file:
serialVersionUID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedUnit.java	/^    private static final long serialVersionUID = 8405543498931817370L;$/;"	f	class:BoxedUnit	file:
serialVersionUID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ByteRef.java	/^    private static final long serialVersionUID = -100666928446877072L;$/;"	f	class:ByteRef	file:
serialVersionUID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/CharRef.java	/^    private static final long serialVersionUID = 6537214938268005702L;$/;"	f	class:CharRef	file:
serialVersionUID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/DoubleRef.java	/^    private static final long serialVersionUID = 8304402127373655534L;$/;"	f	class:DoubleRef	file:
serialVersionUID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/FloatRef.java	/^    private static final long serialVersionUID = -5793980990371366933L;$/;"	f	class:FloatRef	file:
serialVersionUID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/IntRef.java	/^    private static final long serialVersionUID = 1488197132022872888L;$/;"	f	class:IntRef	file:
serialVersionUID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/LongRef.java	/^    private static final long serialVersionUID = -3567869820105829499L;$/;"	f	class:LongRef	file:
serialVersionUID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ObjectRef.java	/^    private static final long serialVersionUID = -9055728157600312291L;$/;"	f	class:ObjectRef	file:
serialVersionUID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ShortRef.java	/^    private static final long serialVersionUID = 4218441291229072313L;$/;"	f	class:ShortRef	file:
serialVersionUID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NamespaceBinding.scala	/^  private val serialVersionUID = 0 - 2518644165573446725L$/;"	V
serializable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/serializable.scala	/^class serializable extends StaticAnnotation {}$/;"	c
serialization	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^  "Custom class serialization using provided serialization and deserialization functions" in {$/;"	c
serialize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Serbench.scala	/^    def serialize(project: Project) = {$/;"	f
serialize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  def serialize: PartialFunction[Any, JObject] = Map()$/;"	f
serialize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    override def serialize: PartialFunction[Any, JObject] = {$/;"	f
serialize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JSArtifacts.scala	/^  def serialize(id: String): JsExp$/;"	f
serialize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JQueryArtifacts.scala	/^  def serialize(id: String) = JqId(id) ~> new JsMethod {$/;"	f
serialize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^  def serialize(id: String) = new JsExp {$/;"	f
serializer	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Extraction.scala	/^    val serializer = formats.typeHints.serialize$/;"	V
series	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  private def series(docs: List[Document]) = fold(punctuate(text(","), docs))$/;"	f
serveAjaxScript	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var serveAjaxScript: (LiftSession, Req) => Box[LiftResponse] =$/;"	v
serveCometScript	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var serveCometScript: (LiftSession, Req) => Box[LiftResponse] =$/;"	v
server	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/JettyTestServer.scala	/^    val server = new Server(serverPort_)$/;"	V
server	/Users/Mads/Dev/logicOfScientificDiscovery/src/test/scala/RunWebApp.scala	/^  val server = new Server(8080)$/;"	V
serverName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def serverName: String$/;"	f
serverName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def serverName = req getServerName$/;"	f
serverName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  val serverName: String = req.serverName$/;"	V
serverName	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var serverName = null$/;"	v
serverPort	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def serverPort: Int$/;"	f
serverPort	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def serverPort = req getServerPort$/;"	f
serverPort	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  val serverPort: Int = req.serverPort$/;"	V
serverPort	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var serverPort = 0$/;"	v
serverPort_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/JettyTestServer.scala	/^  private val serverPort_ = System.getProperty("SERVLET_PORT", "8989").toInt$/;"	V
server_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/JettyTestServer.scala	/^  private val server_ : Server = {$/;"	V
servers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/QueryExamples.scala	/^    val servers = for {$/;"	V
service	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LAPinger.scala	/^  private var service = Executors.newSingleThreadScheduledExecutor(TF)$/;"	v
service	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ActorPing.scala	/^  private var service = Executors.newSingleThreadScheduledExecutor(TF)$/;"	v
service	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ActorPingSpec.scala	/^  val service = new Service$/;"	V
service	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  def service(req: Req, resp: HTTPResponse): Boolean = {$/;"	f
service	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPProvider.scala	/^  protected def service(req: HTTPRequest, resp: HTTPResponse)(chain: => Unit) = {$/;"	f
servlet	/Users/Mads/Dev/logicOfScientificDiscovery/project/build/LogicOfScientificDiscovery.scala	/^	val servlet = "javax.servlet" % "servlet-api" % "2.5" % "provided"$/;"	V
servletAsyncProvider	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var servletAsyncProvider: (HTTPRequest) => ServletAsyncProvider = (req) => new Jetty6AsyncProvider(req)$/;"	v
servletContext	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  private var servletContext: HTTPContext = null$/;"	v
servletContext	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  var servletContext = null$/;"	v
servletReq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty6AsyncProvider.scala	/^  private val servletReq = (req.asInstanceOf[HTTPRequestServlet]).req$/;"	V
servletReq	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty7AsyncProvider.scala	/^  private val servletReq = (req.asInstanceOf[HTTPRequestServlet]).req$/;"	V
ses	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^      val ses = lock.read {sessions}$/;"	V
ses	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^      val ses = lock.read(sessions)$/;"	V
ses	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^      val ses: LiftSession = SessionMaster.getSession(httpRequest, Empty) match {$/;"	V
session	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^          val session = authenticator match {$/;"	V
session	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^    val session = S.session$/;"	V
session	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Factory.scala	/^    object session extends SessionVar[Maker[T]](Empty)$/;"	o
session	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def session: Box[LiftSession] = Box.legacyNullTest(_sessionInfo.value)$/;"	f
session	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def session: HTTPSession$/;"	f
session	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  lazy val session = new HTTPServletSession(req getSession)$/;"	V
session	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  val session: HTTPSession = req.session$/;"	V
session	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^class FacebookClient(val apiKey: String, val secret: String, val session: FacebookSession) {$/;"	V
session	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  var session : HttpSession = new MockHttpSession$/;"	v
session	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^  val session : LiftSession = new LiftSession("", Helpers.randomString(20), Empty)$/;"	V
session1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/MemoizeTest.scala	/^  lazy val session1 = new LiftSession("\/", Helpers.randomString(20), Empty)$/;"	V
session2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/MemoizeTest.scala	/^  lazy val session2 = new LiftSession("\/", Helpers.randomString(20), Empty)$/;"	V
sessionContext	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  val sessionContext = null$/;"	V
sessionCreator	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var sessionCreator: (HTTPSession, String) => LiftSession = {$/;"	v
sessionDidActivate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletSession.scala	/^  def sessionDidActivate(se: HttpSessionEvent) = {$/;"	f
sessionDispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^      val sessionDispatch = S.highLevelSessionDispatcher$/;"	V
sessionForms	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  private object sessionForms extends SessionVar[Map[String, List[FormBuilderLocator[_]]]](Map())$/;"	o
sessionId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def sessionId: Box[String]$/;"	f
sessionId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPSession.scala	/^  def sessionId: String$/;"	f
sessionId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def sessionId: Box[String] =$/;"	f
sessionId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  val sessionId: Box[String] = req.sessionId$/;"	V
sessionId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletSession.scala	/^  def sessionId: String = session getId$/;"	f
sessionKey	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/Facebook.scala	/^    def sessionKey: Option[String] = S.param("fb_sig_session_key")$/;"	f
sessionKey	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/Facebook.scala	/^  def sessionKey : Box[String] = S.param("fb_sig_session_key")$/;"	f
sessionKey	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^    def sessionKey: Option[String]$/;"	f
sessionKey_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/Facebook.scala	/^  def sessionKey_! : String = sessionKey.open_!$/;"	f
sessionLife	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def sessionLife: Boolean = _sessionLife$/;"	f
sessionLife	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    override def sessionLife = proxyTo.sessionLife$/;"	f
sessionMemo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/MemoizeTest.scala	/^  object sessionMemo extends SessionMemoize[Int, Int]$/;"	o
sessionProgessListener	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/uploadprogress/UploadProgress.scala	/^  def sessionProgessListener =$/;"	f
sessionRewriter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] var sessionRewriter = new HashMap[String, LiftRules.RewritePF]()$/;"	v
sessionRewriter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def sessionRewriter: List[RewriteHolder] =$/;"	f
sessionThing	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  private val sessionThing: ThreadGlobal[Box[LiftSession]] = new ThreadGlobal$/;"	V
sessionVarSync	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private val sessionVarSync = new Object$/;"	V
sessionWatchers	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  @volatile var sessionWatchers: List[LiftActor] = Nil$/;"	v
sessionWillPassivate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletSession.scala	/^  def sessionWillPassivate(se: HttpSessionEvent) = {$/;"	f
sessions	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private var sessions: Map[String, LiftSession] = Map.empty$/;"	v
set	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^    val set = localMap.entrySet.iterator$/;"	V
set	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  def set(key: K, value: V): Unit = coreVar.doSync {$/;"	f
set	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  def set(what: T): T = apply(what)$/;"	f
set	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^  def set(v: T): T = synchronized {$/;"	f
set	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TemplateCache.scala	/^  def set(key: K, node: V): V$/;"	f
set	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TemplateCache.scala	/^  def set(key: T, node: NodeSeq): NodeSeq = cacheLock.write {$/;"	f
set	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TemplateCache.scala	/^  def set(key: T, node: NodeSeq): NodeSeq = node$/;"	f
set	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ThreadGlobal.scala	/^  def set(v: T): ThreadGlobal[T] = {$/;"	f
set	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ThreadGlobal.scala	/^  def set(v: T): this.type = {$/;"	f
set	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ValueHolder.scala	/^  def set(in: ValueType): ValueType$/;"	f
set	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Factory.scala	/^      def set(v: () => T): () => T = {$/;"	f
set	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    def set(v: ValueType) = _currentValue.set(setFilter.foldLeft(v)((nv, f) => f(nv)))$/;"	f
set	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    def set[T](name: String, from: ScreenVar[_], value: T): Unit =$/;"	f
set	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def set(value: String) {$/;"	f
set	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[liftweb] def set[T](name: String, value: T): Unit = sessionVarSync.synchronized {$/;"	f
set	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def set(name: String, value: String) = session.foreach(_.set(name, value))$/;"	f
set	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SimpleController.scala	/^  def set(name: String, value: String) {$/;"	f
set	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  private[http] def set[T](name: String, from: MyType, value: T): Unit =$/;"	f
set	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    def set[T](name: String, from: WizardVar[_], value: T): Unit =$/;"	f
set	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/HasManyThrough.scala	/^  def set(what: Seq[ThroughType]): Seq[ThroughType] = {$/;"	f
set	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def set(value: FieldType): FieldType = {$/;"	f
set	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  def set(v: Box[O]): T = {$/;"	f
set	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^  override def set(v: Long) = {$/;"	f
set	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def set(in: MyType): MyType = synchronized {$/;"	f
set	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^      def set(a : A) = {$/;"	f
set	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    override def set(a : A) = {$/;"	f
set	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    override def set(idx : Int, a : A) = Buffer.this.set(translate(idx), a);$/;"	f
set	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  def set(idx : Int, a : A) : A = {$/;"	f
set	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferIterator.scala	/^  def set(a: A): Unit;$/;"	f
set	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^    def set(a : A) = underlying.set(a);$/;"	f
set	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^  override def set(idx : Int, a : A) = underlying.set(idx, a).asInstanceOf[A];$/;"	f
set	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Tests.scala	/^    val set = new HashSet[String];$/;"	V
set	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Tests.scala	/^    val set = new TreeSet[String];$/;"	V
set	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableSetAdaptor.scala	/^class ImmutableSetAdaptor[A](protected var set: immutable.Set[A]) extends Set[A] {$/;"	v
set	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MultiMap.scala	/^      val set = makeSet$/;"	V
set	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/SyncVar.scala	/^  def set(x: A) = synchronized {$/;"	f
set	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^    def set(f: () => Any) = synchronized {$/;"	f
set1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Tests.scala	/^    val set1 = new HashSet[String] + "1" + "2" + "3";$/;"	V
setAll	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  protected def setAll (in : BigDecimal) = this.set(coerce(in))$/;"	f
setAll	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DecimalField.scala	/^  protected def setAll (in : BigDecimal) = this.set(new BigDecimal(in.bigDecimal.setScale(scale, context.getRoundingMode)))$/;"	f
setAndSwap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    def setAndSwap (show : String, showContents : => NodeSeq, hide : String) : JsCmd =$/;"	f
setAttribute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPContext.scala	/^  def setAttribute(name: String, value: Any): Unit$/;"	f
setAttribute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPSession.scala	/^  def setAttribute(name: String, value: Any)$/;"	f
setAttribute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletContext.scala	/^  def setAttribute(name: String, value: Any) {$/;"	f
setAttribute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletSession.scala	/^  def setAttribute(name: String, value: Any) = session setAttribute (name, value)$/;"	f
setAttribute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty7AsyncProvider.scala	/^      val setAttribute = cci.getMethod("setAttribute", classOf[String], classOf[AnyRef])$/;"	V
setAttribute	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def setAttribute(key: String, value: Any) = attr += (key -> value)$/;"	f
setAttribute	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def setAttribute(key: String, value: Any) = attr += (key -> value)$/;"	f
setAttribute	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def setAttribute(name: String, o: Object) {}$/;"	f
setBit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def setBit  (n: Int): BigInt  = new BigInt(this.bigInteger.setBit(n))$/;"	f
setBufferSize	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def setBufferSize(i: Int) = bufferSize = i$/;"	f
setCharAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def setCharAt(index: Int, ch: Char) {$/;"	f
setCharacterEncoding	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def setCharacterEncoding(encoding: String)$/;"	f
setCharacterEncoding	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def setCharacterEncoding(encoding: String) = $/;"	f
setCharacterEncoding	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def setCharacterEncoding(encoding: String) = req.setCharacterEncoding(encoding)$/;"	f
setCharacterEncoding	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def setCharacterEncoding(enc: String) = charEncoding = enc$/;"	f
setCharacterEncoding	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def setCharacterEncoding(e: String) = charEncoding = e$/;"	f
setContentLength	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def setContentLength(l: Int) = contentLength = l$/;"	f
setContentModel	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^  def setContentModel(cm:ContentModel) = {$/;"	f
setContentType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def setContentType(t: String) = contentType = t$/;"	f
setContext	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def setContext(in: HTTPContext): Unit = synchronized {$/;"	f
setDateHeader	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def setDateHeader(s: String, l: Long) {$/;"	f
setDateHeader	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def setDateHeader(s: String, l: Long) {$/;"	f
setDay	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    def setDay(d: Int) = { c.set(Calendar.DAY_OF_MONTH, d); c }$/;"	f
setDocType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def setDocType(what: Box[String]) {$/;"	f
setDocumentLocator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^  override def setDocumentLocator(locator: Locator) {$/;"	f
setDocumentLocator	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^  def setDocumentLocator(locator: Locator) {}$/;"	f
setDomain	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPCookie.scala	/^  def setDomain(newDomain: String): HTTPCookie = new HTTPCookie(name, value, Box !! newDomain, path, maxAge, version, secure_?)$/;"	f
setElemId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  private def setElemId(in: NodeSeq, attr: String, value: Seq[Node]): NodeSeq =$/;"	f
setEvent	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^  def setEvent(e: XMLEvent) { $/;"	f
setException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/SyncVar.scala	/^  private def setException(e: Throwable) = synchronized {$/;"	f
setFileDescriptor	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  private def setFileDescriptor(file: File, s: Source): Source = {$/;"	f
setFilter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  protected def setFilter: List[ValueType => ValueType]$/;"	f
setFilter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    def setFilter: List[ValueType => ValueType] = Nil$/;"	f
setFilter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^    override def setFilter = trim _ :: super.setFilter$/;"	f
setFilter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^    override def setFilter = notNull _ :: toLower _ :: trim _ ::$/;"	f
setFilter	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedEmail.scala	/^  override def setFilter = notNull _ :: toLower _ :: trim _ :: super.setFilter$/;"	f
setFilter	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  protected def setFilter: List[FieldType => FieldType] = Nil$/;"	f
setFilter	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^  override def setFilter = notNull _ :: toUpper _ :: trim _ :: super.setFilter$/;"	f
setFilter	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  override protected def setFilter = crop _ :: super.setFilter$/;"	f
setFilter	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala	/^    override def setFilter = getSingleton.capify :: super.setFilter$/;"	f
setFilter	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  protected def setFilter: List[MyType => MyType] = Nil$/;"	f
setFilter	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PostalCodeField.scala	/^  override def setFilter = notNull _ :: toUpper _ :: trim _ :: super.setFilter$/;"	f
setFilter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^  def setFilter(filter: XIncludeFilter) {$/;"	f
setFrom	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^  def setFrom(other: FatLazy[T]): Unit = synchronized {$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^    override def setFromAny(in: Any): String = {$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  override def setFromAny(f: Any): Array[Byte] = f match {$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  override def setFromAny(in: Any): Boolean = {$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  override def setFromAny(f : Any): Date = f match {$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  override def setFromAny(f: Any): Date = f match {$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  def setFromAny (in : Any) : BigDecimal =$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	override def setFromAny(in: Any): Double = {$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def setFromAny(value: Any): FieldType$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  override def setFromAny(in: Any): ENUM#Value = {$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  override def setFromAny(in: Any): Int = {$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def setFromAny(in: Any): Box[Long] = {$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def setFromAny(in: Any): Long = {$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def setFromAny(in: Any): Long =$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def setFromAny(in: Any): Seq[ENUM#Value] = {$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  override def setFromAny(f: Any): String = {$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  override def setFromAny(in: Any): String = {$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  override def setFromAny(f : Any): Date = f match {$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def setFromAny(in: Any): Box[MyType]$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BinaryField.scala	/^  def setFromAny(f: Any): Box[Array[Byte]] = Full(this.set($/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BooleanField.scala	/^  def setFromAny(in: Any): Box[Boolean] = {$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DateTimeField.scala	/^  def setFromAny(f : Any): Box[Calendar] = toDate(f).map(d => {$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DecimalField.scala	/^  def setFromAny (in : Any) : Box[BigDecimal] =$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DoubleField.scala	/^  def setFromAny(in: Any): Box[Double] = {$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EnumField.scala	/^  def setFromAny(in: Any): Box[ENUM#Value] = {$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/IntField.scala	/^  def setFromAny(in: Any): Box[Int] = {$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/LongField.scala	/^  def setFromAny(in: Any): Box[Long] = {$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^  def setFromAny(in: Any): Box[String] = {$/;"	f
setFromAny	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^  def setFromAny(in: Any): Box[String] = {$/;"	f
setFromString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  def setFromString (in : String) : BigDecimal = {$/;"	f
setFromString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def setFromString(s: String): Box[MyType]$/;"	f
setFromString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BinaryField.scala	/^  def setFromString(s: String): Box[Array[Byte]] = {$/;"	f
setFromString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BooleanField.scala	/^  def setFromString(s: String): Box[Boolean] = {$/;"	f
setFromString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DateTimeField.scala	/^  def setFromString(s: String): Box[Calendar] = {$/;"	f
setFromString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DecimalField.scala	/^  def setFromString (s : String) : Box[BigDecimal] = {$/;"	f
setFromString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DoubleField.scala	/^  def setFromString(s: String): Box[Double] = {$/;"	f
setFromString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EnumField.scala	/^  def setFromString(s: String): Box[ENUM#Value] = setFromAny(s)$/;"	f
setFromString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/IntField.scala	/^  def setFromString(s: String): Box[Int] = {$/;"	f
setFromString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/LongField.scala	/^  def setFromString(s: String): Box[Long] = {$/;"	f
setFromString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^  def setFromString(s: String): Box[String] = Full(set(s))$/;"	f
setFromString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^  def setFromString(s: String): Box[String] = Full(set(s))$/;"	f
setFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  protected def setFunc(name: String, value: T): Unit$/;"	f
setFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    override protected def setFunc(name: String, value: T): Unit = ScreenVarHandler.set(name, this, value)$/;"	f
setFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  override protected def setFunc(name: String, value: T): Unit = RequestVarHandler.set(name, this, value)$/;"	f
setFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  override protected def setFunc(name: String, value: T): Unit = S.session match {$/;"	f
setFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  override protected def setFunc(name: String, value: T): Unit = TransientRequestVarHandler.set(name, this, value)$/;"	f
setFunc	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    override protected def setFunc(name: String, value: T): Unit = WizardVarHandler.set(name, this, value)$/;"	f
setHeader	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def setHeader(name: String, value: String) {$/;"	f
setHeader	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def setHeader(s1: String, s2: String) {$/;"	f
setHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JSArtifacts.scala	/^  def setHtml(id: String, xml: NodeSeq): JsCmd$/;"	f
setHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JQueryArtifacts.scala	/^  def setHtml(id: String, xml: NodeSeq): JsCmd = JqJsCmds.JqSetHtml(id, xml)$/;"	f
setHtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^  def setHtml(uid: String, content: NodeSeq): JsCmd = new JsCmd {$/;"	f
setId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  private def setId(in: Box[String]) = in match {case Full(id) => new UnprefixedAttribute("id", Text(id), Null); case _ => Null}$/;"	f
setIn	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def setIn(in: InputStream): Unit =$/;"	f
setIn	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def setIn(reader: Reader): Unit = {$/;"	f
setIntHeader	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def setIntHeader(s: String, i: Int) {$/;"	f
setIsUnset	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  def setIsUnset(value: => T): T = doSync {$/;"	f
setLength	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def setLength(n: Int) {$/;"	f
setList	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  def setList(in: List[String]): Boolean =$/;"	f
setLocale	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def setLocale(l: Locale) = locale = l$/;"	f
setLogger	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^  private[this] def setLogger(logger: LiftLogger) {$/;"	f
setMaxAge	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPCookie.scala	/^  def setMaxAge(newMaxAge: Int): HTTPCookie = new HTTPCookie(name, value, domain, path, Box !! newMaxAge, version, secure_?)$/;"	f
setMaxInactiveInterval	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPSession.scala	/^  def setMaxInactiveInterval(interval: Long)$/;"	f
setMaxInactiveInterval	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletSession.scala	/^  def setMaxInactiveInterval(interval: Long) = session setMaxInactiveInterval (interval.toInt)$/;"	f
setMaxInactiveInterval	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def setMaxInactiveInterval(i: Int) = maxii = i$/;"	f
setMetaData	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ElementValidator.scala	/^  def setMetaData(adecls: List[AttrDecl]) { this.adecls = adecls }$/;"	f
setMonth	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    def setMonth(m: Int) = { c.set(Calendar.MONTH, m); c }$/;"	f
setName_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  private[mapper] final def setName_!(newName : String) : String = {$/;"	f
setName_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  private[record] final def setName_!(newName : String) : String = {$/;"	f
setObj	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty6AsyncProvider.scala	/^      val setObj = cci.getMethod("setObject", classOf[AnyRef])$/;"	V
setOut	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def setOut(out: OutputStream): Unit =$/;"	f
setOut	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def setOut(out: PrintStream) { outVar.value = out }$/;"	f
setPath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPCookie.scala	/^  def setPath(newPath: String): HTTPCookie = new HTTPCookie(name, value, domain, Box !! newPath, maxAge, version, secure_?)$/;"	f
setPos	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/Positional.scala	/^  def setPos(newpos: Position): this.type = {$/;"	f
setRollbackOnly	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  def setRollbackOnly = TransactionContext.setRollbackOnly$/;"	f
setRollbackOnly	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  private def setRollbackOnly = tm.setRollbackOnly$/;"	f
setRollbackOnly	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  private[transaction] def setRollbackOnly = current.setRollbackOnly$/;"	f
setRootCause	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/XIncludeException.scala	/^  def setRootCause(nestedException: Throwable ) {$/;"	f
setScale	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  def setScale(scale: Int): BigDecimal =$/;"	f
setScale	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  def setScale(scale: Int, mode: RoundingMode): BigDecimal =$/;"	f
setSecure	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPCookie.scala	/^  def setSecure(newSecure: Boolean): HTTPCookie = new HTTPCookie(name, value, domain, path, maxAge, version, Box !! newSecure)$/;"	f
setSeed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Random.scala	/^  def setSeed(seed: Long) { self.setSeed(seed) }$/;"	f
setSeed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Random.scala	/^  def setSeed(seed: Long) { self.setSeed(seed) }$/;"	f
setSessionAttribute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def setSessionAttribute(name: String, value: String) = containerSession.foreach(_.setAttribute(name, value))$/;"	f
setSiteMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def setSiteMap(sm: SiteMap) {$/;"	f
setStatementFields	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private[mapper] def setStatementFields(st: PreparedStatement, by: List[QueryParam[A]], curPos: Int, conn: SuperConnection): Int = {$/;"	f
setStatus	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPResponse.scala	/^  def setStatus(status: Int)$/;"	f
setStatus	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPResponseServlet.scala	/^  def setStatus(status: Int) = resp setStatus status$/;"	f
setStatus	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def setStatus(i: Int) = {$/;"	f
setStatus	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  def setStatus(i: Int, s: String) = {$/;"	f
setTimeout	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty7AsyncProvider.scala	/^      val setTimeout = cci.getMethod("setTimeout", _root_.java.lang.Long.TYPE)$/;"	V
setTimezone	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    def setTimezone(tz: TimeZone) = { c.setTimeZone(tz); c }$/;"	f
setTo	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^            val setTo =$/;"	V
setValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPCookie.scala	/^  def setValue(newValue: String): HTTPCookie = new HTTPCookie(name, Box !! newValue, domain, path, maxAge, version, secure_?)$/;"	f
setVars	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def setVars[T](attr: MetaData)(f: => T): T = {$/;"	f
setVersion	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPCookie.scala	/^  def setVersion(newVersion: Int): HTTPCookie = new HTTPCookie(name, value, domain, path, maxAge, Box !! newVersion, secure_?)$/;"	f
setWithCatch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/SyncVar.scala	/^  @deprecated def setWithCatch(x: => A) = synchronized {$/;"	f
setYear	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    def setYear(y: Int) = { c.set(Calendar.YEAR, y); c }$/;"	f
set_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  def set_? : Boolean = testWasSet(name)$/;"	f
set_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def set_?(value: Box[FieldType]): Box[FieldType] = {$/;"	f
set_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  protected def set_!(in: MyType) = runFilters(in, setFilter)$/;"	f
set_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EnumField.scala	/^  override protected def set_!(value: ENUM#Value): ENUM#Value = {$/;"	f
set_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^  override def set_!(in: String) = hash("{"+in+"} salt={"+salt_i.get+"}")$/;"	f
set_grid	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^   val set_grid = options.grid match {$/;"	V
set_legend	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^   val set_legend = options.legend match {$/;"	V
set_lines	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^   val set_lines = options.lines match {$/;"	V
set_points	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^   val set_points = options.points match {$/;"	V
set_selection	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^   val set_selection = options.modeSelection match {$/;"	V
set_shadowSize	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^   val set_shadowSize = options.shadowSize match {$/;"	V
set_xaxis	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^   val set_xaxis = options.xaxis match {$/;"	V
set_yaxis	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^   val set_yaxis = options.yaxis match {$/;"	V
settleAmount	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val settleAmount = r.param("settle_amount")$/;"	V
settleCurrency	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val settleCurrency  = r.param("settle_currency")$/;"	V
setup	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    def setup(setp: (MyType, StV) => Any): this.type = {_setup = setp :: _setup; this}$/;"	f
setup	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^  def setup[T](what: List[Item]): (() => TestResults, (String,() => T) => T)  = {$/;"	f
setupComet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def setupComet(theType: String, name: Box[String], msg: Any) {$/;"	f
setupContinuation	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  private def setupContinuation(request: Req, session: LiftSession, actors: List[(LiftCometActor, Long)]): Any = {$/;"	f
setupDB	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def setupDB: Unit$/;"	f
setupInstanceForPostCommit	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def setupInstanceForPostCommit(inst: A) {$/;"	f
setupLocalState	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  protected def setupLocalState[T](f: => T): T = f$/;"	f
setupTime	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  def setupTime(when: TimeSpan) {$/;"	f
sf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  private lazy val sf = SchemaFactory.newInstance(W3C_XML_SCHEMA_NS_URI)$/;"	V
sftVal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^        val sftVal = refQueue.remove(30000).asInstanceOf[SoftValue[_,_]];$/;"	V
shadowSize	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def shadowSize: Box[Int] = Empty$/;"	f
shadowSize	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotSerie.scala	/^  def shadowSize: Box[Int] = Empty$/;"	f
share	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def share[a](pa: SPU[a]): SPU[a] = new SPU[a] {$/;"	f
shift	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^      private def shift = {$/;"	f
shiftLogicalRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object shiftLogicalRight(Object arg1, Object arg2) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
shiftSignedLeft	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object shiftSignedLeft(Object arg1, Object arg2) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
shiftSignedRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object shiftSignedRight(Object arg1, Object arg2) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
short	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  @deprecated type short   = scala.Short$/;"	T
short2Short	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def short2Short(x: Short) = new java.lang.Short(x)$/;"	f
short2double	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def short2double(x: Short): Double = x.toDouble$/;"	f
short2float	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def short2float(x: Short): Float = x.toFloat$/;"	f
short2int	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def short2int(x: Short): Int = x.toInt$/;"	f
short2long	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def short2long(x: Short): Long = x.toLong$/;"	f
shortCache	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static Short[] shortCache = new Short[shortUpBound - shortLowBound + 1];$/;"	f	class:BoxesRunTime	file:
shortLowBound	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static int shortLowBound = -128;$/;"	f	class:BoxesRunTime	file:
shortName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def shortName: String = (firstName.is, lastName.is) match {$/;"	f
shortUpBound	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static int shortUpBound = 127;$/;"	f	class:BoxesRunTime	file:
shortValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  override def shortValue  = intValue.toShort$/;"	f
shortValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  override def shortValue  = intValue.toShort$/;"	f
shortWrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def shortWrapper(x: Short)   = new runtime.RichShort(x)$/;"	f
shortcutResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResponseShortcutException.scala	/^  def shortcutResponse(responseIt: => LiftResponse) =$/;"	f
shorter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def shorter(m1 : Int, m2 : Int) = unsignedCompare(m2, m1)$/;"	f
shorter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def shorter(m1 : Long, m2 : Long) = unsignedCompare(m2, m1)$/;"	f
shouldRelax	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/test/scala/net/lift/textile/TextileSpec.scala	/^  val shouldRelax = (java.lang.Boolean.getBoolean("textile.relax"))$/;"	V
shouldShow	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def shouldShow(percent: Double): Boolean = random.nextDouble <= percent$/;"	f
shouldSucceed	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^    def shouldSucceed[T](r: ParseResult[T]) = r match {$/;"	f
show	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JSArtifacts.scala	/^  def show(id: String): JsExp$/;"	f
show	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JQueryArtifacts.scala	/^  def show(id: String) = JqId(id) ~> new JsMethod {$/;"	f
show	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^  def show(id: String) = new JsExp {$/;"	f
show	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def show: Box[Boolean] = Empty$/;"	f
showAll	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msgs.scala	/^    val showAll = toBoolean(attr("showAll"))$/;"	V
showAllClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def showAllClass = "show_all"$/;"	f
showAllId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def showAllId = "show_all"$/;"	f
showAllMenuLoc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def showAllMenuLoc: Box[Menu] =$/;"	f
showAllMenuLocParams	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def showAllMenuLocParams: List[Loc.AnyLocParam] = Nil$/;"	f
showAllMenuName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def showAllMenuName = S.??("List")+" "+displayName$/;"	f
showAllTemplate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def showAllTemplate(): NodeSeq = pageWrapper(_showAllTemplate)$/;"	f
showAndFocus	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JSArtifacts.scala	/^  def showAndFocus(id: String): JsExp$/;"	f
showAndFocus	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JQueryArtifacts.scala	/^  def showAndFocus(id: String) = JqId(id) ~> new JsMethod {$/;"	f
showAndFocus	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^  def showAndFocus(id: String) = new JsExp {$/;"	f
showException	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  private def showException(le: Throwable): String = {$/;"	f
showIfLoggedIn	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  def showIfLoggedIn(in: NodeSeq): NodeSeq = currentUser match {$/;"	f
showIfLoggedOut	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  def showIfLoggedOut(in: NodeSeq): NodeSeq = currentUser match {$/;"	f
showUserBox	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  def showUserBox(ignore: NodeSeq): NodeSeq = <div class="openidbox">{$/;"	f
showWarningWhenAccessedOutOfSessionScope_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  def showWarningWhenAccessedOutOfSessionScope_? = false$/;"	f
shutDown	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^  def shutDown = {$/;"	f
shutDown	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private def shutDown() = {$/;"	f
shutDown	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  override def shutDown = NonceWatcher ! ShutDown$/;"	f
shutdown	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LAPinger.scala	/^  def shutdown: Unit = synchronized { service.shutdown }$/;"	f
shutdown	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^      def shutdown(): Unit = {}$/;"	f
shutdown	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  def shutdown(): Unit$/;"	f
shutdown	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ActorPing.scala	/^  def shutdown: Unit = synchronized { service.shutdown }$/;"	f
sign	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Lexer.scala	/^  def sign = elem("sign character", d => d == '-' || d == '+')$/;"	f
signUpPath	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  lazy val signUpPath = thePath(signUpSuffix)$/;"	V
signUpSuffix	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def signUpSuffix = "sign_up"$/;"	f
signature	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^    val signature = genSignature(allParams, secret)$/;"	V
signum	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  def signum: Int = this.bigDecimal.signum()$/;"	f
signum	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def signum: Int = this.bigInteger.signum()$/;"	f
signum	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def signum(x: Double): Double = x match { case 0 => 0$/;"	f
signum	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def signum(x: Float): Float = x match { case 0f => 0f$/;"	f
signum	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def signum(x: Int): Int = x match { case 0 => 0$/;"	f
signum	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def signum(x: Long): Long = x match { case 0l => 0l$/;"	f
signup	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def signup = {$/;"	f
signupFields	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^  override def signupFields: List[BaseOwnedMappedField[ModelType]] = nickname ::$/;"	f
signupFields	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def signupFields: List[BaseOwnedMappedField[ModelType]] = firstName :: lastName :: email :: locale :: timezone :: password :: Nil$/;"	f
signupFunc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  protected object signupFunc extends RequestVar[Box[() => NodeSeq]](Empty)$/;"	o
signupMailBody	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def signupMailBody(user: ModelType, validationLink: String) = {$/;"	f
signupMailSubject	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def signupMailSubject = S.??("sign.up.confirmation")$/;"	f
signupXhtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def signupXhtml(user: ModelType) = {$/;"	f
sin	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def sin(x: Double): Double = java.lang.Math.sin(x)$/;"	f
single	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^    val single = table.mappedFields.filter{f => f.dbIndexed_?}.toList.flatMap {$/;"	V
single	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def single[a](x: a) = new Iterator[a] {$/;"	f
single	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  @deprecated def single[A](x: A) = singleton(x)$/;"	f
single	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^  protected def single(ns: Seq[Node]) =$/;"	f
singleType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^  def singleType[T](value: Any): Manifest[T] =$/;"	f
single_html	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val single_html: Parser[Textile] =$/;"	V
single_quote	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val single_quote: Parser[Textile] = '\\'' ^^^ SingleQuote$/;"	V
single_quote_attr	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val single_quote_attr =$/;"	V
singles	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    val singles = ($/;"	V
singleton	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  case class singleton[A](value: A) extends RandomAccessSeq[A] {$/;"	c
singleton	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  case class singleton[A](value: A) extends RandomAccessSeq[A] {$/;"	m
singleton	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def singleton[T](key : Int, value : T) : IntMap[T] = IntMap.Tip(key, value);$/;"	f
singleton	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def singleton[T](key : Long, value : T) : LongMap[T] = LongMap.Tip(key, value);$/;"	f
singleton	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  def singleton[Key, Value](key : Key, value : Value) = Cons(key, value, empty);$/;"	f
sink	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    val sink = _emptyBitSet$/;"	V
sinkIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    val sinkIndex = 1$/;"	V
sir	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/EnumWithDescriptionSpec.scala	/^    val sir = Value("SirS", "Sir")$/;"	V
siteMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def siteMap: Box[SiteMap] = _sitemap$/;"	f
siteMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def siteMap: SiteMap = _menu.siteMap$/;"	f
siteMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Menu.scala	/^  private[sitemap] var siteMap: SiteMap = _$/;"	v
siteMapFailRedirectLocation	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var siteMapFailRedirectLocation: List[String] = List()$/;"	v
sitemap	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  lazy val sitemap: List[Menu] =$/;"	V
size	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  def size: Int = localMap.size$/;"	f
size	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def size = 0$/;"	f
size	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def size = data.length$/;"	f
size	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def size: Long$/;"	f
size	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/uploadprogress/UploadProgress.scala	/^    val size: Double = StatusHolder.is.map(_._2.toDouble).openOr(0D)$/;"	V
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Collection.scala	/^  def size : Int$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def size = self.size                       $/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def size = {$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  def size = length$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def size = self.size$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^  def size: Int$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^    def size = Map.this.size$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^    def size = {$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^    override def size = Map.this.size$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^  def size: Int$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/MapProxy.scala	/^  override def size = self.size$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Set.scala	/^  def size: Int$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SetProxy.scala	/^  def size: Int = self.size$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedMap.scala	/^    def size = SortedMap.this.size$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/EmptyMap.scala	/^  def size: Int = 0$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/EmptySet.scala	/^  def size: Int = 0$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^  override def size: Int = synchronized {$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashSet.scala	/^  override def size: Int = synchronized {$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  final def size : Int = this match {$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^    override def size: Int = next.size + 1$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^  def size: Int = 0$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^    override def size = ListSet.this.size + 1$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^  def size: Int = 0$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  final def size : Int = this match {$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^    def size = Map.this.size$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map1.scala	/^  def size = 1$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map2.scala	/^  def size = 2$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map3.scala	/^  def size = 3$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map4.scala	/^  def size = 4$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set1.scala	/^  def size: Int = 1$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set2.scala	/^  def size: Int = 2$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set3.scala	/^  def size: Int = 3$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Set4.scala	/^  def size: Int = 4$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def size: Int = 0$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  def size = this match {$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  override lazy val size = underlying.values.foldLeft(0)((x, y) => x + y.size);$/;"	V
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^class TreeMap[A <% Ordered[A], +B](val size: Int, t: RedBlack[A]#Tree[B])$/;"	V
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^class TreeSet[A <% Ordered[A]](val size: Int, t: RedBlack[A]#Tree[Unit])$/;"	V
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^    override def size = left.size + right.size + 1$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^  def size: Int = 0$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Collection.scala	/^    override def size = Collection.this.size$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/CollectionWrapper.scala	/^  override def size = underlying.size;$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/IterableWrapper.scala	/^  override def size = underlying.size;$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    override def size = Map.this.size$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    override def size = Map.this.size;$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    override def size = size0;$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^    override def size = MapWrapper.this.size$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^  override def size = underlying.size$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^    def size = size0;$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^    override def size = MutableIterable.this.size$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^    override def size = length;$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^    override def size = Set.this.size$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SetWrapper.scala	/^  override def size = underlying.size;$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    override def size = SortedMap.this.size$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^    override def size = SortedSet.this.size$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^  def size = index;$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BitSet.scala	/^  var size: Int = 0$/;"	v
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^  def size: Int = tableSize$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^  def size = tableSize$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/History.scala	/^  override def size: Int = log.length$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableMapAdaptor.scala	/^  def size: Int = imap.size$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableSetAdaptor.scala	/^  def size: Int = set.size$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^  def size: Int = jmap.size()$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaSetAdaptor.scala	/^  def size: Int = jset.size()$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^    override def size = Map.this.size$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  def size = _size;$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Set.scala	/^    override def size = Set.this.size$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  abstract override def size: Int = synchronized {$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedSet.scala	/^  abstract override def size: Int = synchronized {$/;"	f
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^    val size = if (bufferSize > 0) bufferSize else Source.DefaultBufSize$/;"	V
size	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def size : Int = 1 + {$/;"	f
size0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterable.scala	/^  protected def size0 : Int = {$/;"	f
size0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ResizableArray.scala	/^  protected def size0: Int = size1$/;"	f
size0_	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ResizableArray.scala	/^  protected def size0_=(sz: Int) { size1 = sz }$/;"	f
size1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ResizableArray.scala	/^  private var size1: Int = 0$/;"	v
size_	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  private[this] def size_=(s : Int) = _size = s;$/;"	f
skip	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/Scanners.scala	/^    private def skip(in: Reader[Char]) = if (in.atEnd) in else in.rest$/;"	f
skip	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/Scanners.scala	/^    private def skip(in: Reader[Char]) = if (in.atEnd) in else in.rest$/;"	f
skipDocType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def skipDocType: Boolean = _skipDocType.is$/;"	f
skipDocType_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def skipDocType_=(skip: Boolean) {_skipDocType.set(skip)}$/;"	f
skipEmailValidation	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def skipEmailValidation = false$/;"	f
skipEmailValidation	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  override def skipEmailValidation = true$/;"	f
skipWhitespace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/RegexParsers.scala	/^  def skipWhitespace = whiteSpace.toString.length > 0$/;"	f
skipXmlHeader	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def skipXmlHeader: Boolean = _skipXmlHeader.is$/;"	f
skipXmlHeader_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def skipXmlHeader_=(in: Boolean): Unit = _skipXmlHeader.set(in)$/;"	f
skippedEntity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^  override def skippedEntity(name: String) {$/;"	f
skippedEntity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^  def skippedEntity(name: String) {$/;"	f
sl	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^        val sl = s.toLowerCase$/;"	V
sl	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^            val sl = List("_" + locale.toString, "_" + locale.getLanguage, "")$/;"	V
slash	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def slash = elem("slash", c => c == '\/')$/;"	f
slice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^       override def slice(from0: Int, until0: Int) =$/;"	f
slice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^     override def slice(from : Int, until : Int) : Projection[A] = projection.slice(from, until)$/;"	f
slice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^     override def slice(from0: Int, until0: Int): Projection[A] = new RandomAccessSeq.MutableSlice[A] with Projection[A] {$/;"	f
slice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def slice(from: Int, until: Int): Iterator[A] = drop(from).take(until - from)$/;"	f
slice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def slice(start: Int, end: Int): List[A] = {$/;"	f
slice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def slice(from0 : Int, until0 : Int) = {$/;"	f
slice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def slice(from0: Int, until0: Int) : MutableProjection[A] = new MutableSlice[A] {$/;"	f
slice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^  override def slice(from0 : Int, until0 : Int) : RandomAccessSeq[A] = new RandomAccessSeq.Slice[A] {$/;"	f
slice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeqProxy.scala	/^  override def slice(from: Int, until: Int) : RandomAccessSeq[A] = self.slice(from, until)$/;"	f
slice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  def slice(from: Int, until: Int): Seq[A] = drop(from).take(until - from)$/;"	f
slice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^ @deprecated def slice(from: Int): Seq[A] = slice(from, length)$/;"	f
slice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def slice(from: Int) = self slice from$/;"	f
slice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def slice(from: Int, len: Int): Seq[A] = self.slice(from, len)$/;"	f
slice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  override def slice(_start: Int, _end: Int) = {$/;"	f
slice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  override def slice(start: Int) = slice(start, UndeterminedEnd)$/;"	f
slice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^      val slice = added.drop(length)$/;"	V
slice	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  override def slice(from: Int, until: Int): RichString = {$/;"	f
slurpApacheHeaders	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  private def slurpApacheHeaders(in: Array[Header]):$/;"	f
sm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^      val sm: Map[String, T] = Map(secure.map(v => (v._2, v._1)): _*)$/;"	V
sm	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^        val sm = s - 1$/;"	V
smackRepo	/Users/Mads/Dev/logicOfScientificDiscovery/project/build/LogicOfScientificDiscovery.scala	/^	val smackRepo = "m2-repository-smack" at "http:\/\/maven.reucon.com\/public"$/;"	V
smaller	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^    val smaller = sort(md.filter { m => m.key < key })$/;"	V
smallest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def smallest: NonEmpty[B] = if (left.isEmpty) this else left.smallest$/;"	f
smallest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def smallest: NonEmpty[B]$/;"	f
smallest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def smallest: NonEmpty[Nothing] = throw new NoSuchElementException("empty map")$/;"	f
smallest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^    override protected def smallest: UnbalancedTreeMap[A, B] = $/;"	f
smallest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^  protected def smallest: UnbalancedTreeMap[A, B] = throw new NoSuchElementException("empty map")$/;"	f
snToNs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  private def snToNs(in: Seq[Node]): NodeSeq = in$/;"	f
snapshot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^                                 private[http] val snapshot: Box[ScreenSnapshot]) {$/;"	V
snapshot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^        val snapshot = createSnapshot$/;"	V
snapshot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    val snapshot = createSnapshot$/;"	V
snapshot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def snapshot = {$/;"	f
snapshot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def snapshot: HTTPRequest$/;"	f
snapshot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def snapshot = this$/;"	f
snapshot	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def snapshot: HTTPRequest  = new OfflineRequestSnapshot(this)$/;"	f
snapshot	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^                       private[wizard] val snapshot: Box[WizardSnapshot],$/;"	V
snapshot	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^          val snapshot = createSnapshot$/;"	V
snapshot	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    val snapshot = createSnapshot$/;"	V
snarfLastItem	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  protected def snarfLastItem: String =$/;"	f
snd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def snd(p: (a,b)): b = p._2$/;"	f
snd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def snd(p: (a,b,c)): b = p._2$/;"	f
snipName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^    val snipName = S.currentSnippet$/;"	V
snipName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^    val snipName = S.currentSnippet$/;"	V
snippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  private[http] def snippet(name: String): Box[DispatchSnippet] = NamedPF.applyBox(name, snippetDispatch.toList)$/;"	f
snippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    val snippet = if (name.indexOf(".") != -1) name.roboSplit("\\\\.") else name.roboSplit(":")$/;"	V
snippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def snippet(name: String): Box[NodeSeq => NodeSeq] = {$/;"	f
snippet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/ModelView.scala	/^class ModelView[T <: Mapper[T]](var entity: T, val snippet: ModelSnippet[T]) {$/;"	V
snippet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Paginator.scala	/^class Paginator[T <: Mapper[T]](val meta: MetaMapper[T], val snippet: ModelSnippet[T],$/;"	V
snippetDispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val snippetDispatch = RulesSeq[SnippetDispatchPF]$/;"	V
snippetFailedFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val snippetFailedFunc = RulesSeq[SnippetFailure => Unit].prepend(logSnippetFailure _)$/;"	V
snippetForClass	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def snippetForClass(cls: String): Box[StatefulSnippet] =$/;"	f
snippetHashs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^    val snippetHashs: HashMap[String, Box[NodeSeq]] = this.deferredSnippets.is$/;"	V
snippetMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private object snippetMap extends RequestVar[Map[String, AnyRef]](Map())$/;"	o
snippetPF	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  def snippetPF: LiftRules.SnippetPF = NamedPF ("OpenID Default") {$/;"	f
snippets	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val snippets = RulesSeq[SnippetPF]$/;"	V
snippets	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def snippets: SnippetTest = Map.empty$/;"	f
snippets	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^          override val snippets: SnippetTest = {$/;"	V
snippets	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^        override val snippets: SnippetTest = {$/;"	V
snurpHeaders	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  private def snurpHeaders(in: JavaMap[String, CRK]): Map[String, List[String]] = {$/;"	f
sort	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Paginator.scala	/^  var sort: OrderBy[T, _] = OrderBy(initialSort, Ascending)$/;"	v
sort	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def sort(lt : (A,A) => Boolean): List[A] = {$/;"	f
sort	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^  def sort = Sorting.stableSort(s)$/;"	f
sort	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def sort(md: MetaData): MetaData = if((md eq Null) || (md.next eq Null)) md else {$/;"	f
sort	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def sort(n:Node): Node = n match {$/;"	f
sort1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^  private def sort1(x: Array[Double], off: Int, len: Int) {$/;"	f
sort1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^  private def sort1(x: Array[Float], off: Int, len: Int) {$/;"	f
sort1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^  private def sort1(x: Array[Int], off: Int, len: Int) {$/;"	f
sort1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^  private def sort1[K <% Ordered[K]](x: Array[K], off: Int, len: Int) {$/;"	f
sort2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^    def sort2(off: Int, len: Int) {$/;"	f
sortBy	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Paginator.scala	/^  def sortBy(field: MappedField[_, T]) = sort = sort match {$/;"	f
sortBy	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  def sortBy(field: MappedField[_, T]) = (sortField, ascending) match {$/;"	f
sortField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  var sortField: Option[MappedField[_, T]] = None$/;"	v
sortFn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  def sortFn(f: MappedField[_, T]): ()=>Unit = items.sortFn(f)$/;"	f
sortFn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  def sortFn(field: MappedField[_, T]) = (sortField, ascending) match {$/;"	f
sortNullFirst	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  var sortNullFirst = true$/;"	v
sortedParameters	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^    val sortedParameters = filteredParameters.sort((p1, p2) => {$/;"	V
source	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/AwardSource.scala	/^	object source extends MappedLong(this) { $/;"	o
source	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/DiscoverySource.scala	/^	object source extends MappedLong(this) { $/;"	o
source	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DiscoverySnippet.scala	/^	object source extends RequestVar[List[BaseSource]](List[BaseSource]())$/;"	o
source	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    val source: java.lang.CharSequence$/;"	V
source	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^  class Match(val source: java.lang.CharSequence, $/;"	V
source	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/RegexParsers.scala	/^      val source = in.source$/;"	V
source	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/Scanners.scala	/^    override def source: java.lang.CharSequence = in.source$/;"	f
source	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/Scanners.scala	/^    override def source: java.lang.CharSequence = in.source$/;"	f
source	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/CharSequenceReader.scala	/^class CharSequenceReader(override val source: java.lang.CharSequence, $/;"	V
source	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/PagedSeqReader.scala	/^  override lazy val source: java.lang.CharSequence = seq$/;"	V
source	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/Reader.scala	/^  def source: java.lang.CharSequence = $/;"	f
source	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^    var source: URL = null$/;"	v
sourceColorModel	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-imaging/src/main/scala/net/liftweb/imaging/ImageHelpers.scala	/^    var sourceColorModel = source.getColorModel $/;"	v
sourceOptions	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DependencySnippet.scala	/^			val sourceOptions = sources.map{ inst => (inst.name.is,inst.name.is) }$/;"	V
sourceOptions	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DiscoverySnippet.scala	/^			val sourceOptions = sources.map{ inst => (inst.name.is,inst.name.is) }$/;"	V
sourceType	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^	object sourceType extends MappedEnum(this,SourceTypes) { \/\/ making sure they have reasonable default values $/;"	o
sources	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Award.scala	/^	def sources = AwardSource.findAll(By(AwardSource.award,this)).map(_.award.obj.open_!)$/;"	f
sources	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Discovery.scala	/^	def sources = $/;"	f
sources	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DependencySnippet.scala	/^			val sources = Scientist.findAll(By(Scientist.sourceType,SourceTypes.Scientist)) ::: Lab.findAll(By(Lab.sourceType, SourceTypes.Lab))$/;"	V
sources	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/snippet/DiscoverySnippet.scala	/^			val sources = Scientist.findAll(By(Scientist.sourceType,SourceTypes.Scientist)) ::: Lab.findAll(By(Lab.sourceType, SourceTypes.Lab))$/;"	V
space	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^  val space     = "space"$/;"	V
spaceOrEnd	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val spaceOrEnd: Parser[Int] = endOfLine ^^^ 0 | rep1(' ') ^^ {case lst => lst.length}$/;"	V
spaces	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^  lazy val spaces = (elem(' ') | elem('\\t') | elem('\\n') | elem('\\r')).*$/;"	V
spaces	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val spaces = rep(whitespace)$/;"	V
spaces	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/VCardParser.scala	/^  lazy val spaces = (elem(' ') | elem('\\t') | elem('\\n') | elem('\\r'))*$/;"	V
spaces	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^    def spaces(n: Int) {$/;"	f
span	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def span(body: NodeSeq, cmd: JsCmd, attrs: (String, String)*): Elem =$/;"	f
span	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val span : Parser[Textile] = formattedLineElem('%', opt(style) ^^ {s => s.toList}) ^^ flatten4(Special * "span")$/;"	V
span	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def span(p: A => Boolean): (List[A], List[A]) = {$/;"	f
spanId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private var spanId = uniqueId$/;"	v
spawn	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/ops.scala	/^  def spawn(p: => Unit) = {$/;"	f
spawn	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^  val spawn = new Spawn {$/;"	V
specs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/project/build/src/LiftJson.scala	/^  val specs      = "org.scala-tools.testing" % "specs" % "1.6.1"$/;"	V
split	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  private def split(in: String): Box[(String, String)] = {$/;"	f
split	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala	/^  def split(in: String): List[String] = in.roboSplit(",").map(capify)$/;"	f
split	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    def split(lst: List[A]) = {$/;"	f
split	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  def split(separator: Char): Array[String] = self.split(escape(separator))$/;"	f
split	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  def split(separators: Array[Char]): Array[String] = {$/;"	f
splitAndFind	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala	/^  def splitAndFind(in: String): List[ModelType] = split(in).map(findOrCreate)$/;"	f
splitAt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^    def splitAt(sep: String): List[(String, String)] = {$/;"	f
splitAt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/StringHelpersSpec.scala	/^  "The SuperString class splitAt method" should {$/;"	c
splitAt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def splitAt(n: Int): (List[A], List[A]) = {$/;"	f
splitColonPair	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^  def splitColonPair(in: String, first: String, second: String): (String, String) = {$/;"	f
splitNameValuePairs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^  def splitNameValuePairs(props: String): Map[String, String] = {$/;"	f
splits	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val splits = (if (name.startsWith("\/")) name else "\/" + name).split("\/").toList.drop(1) match {$/;"	V
splits	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val splits = tpath.toList.filter {a => !a.startsWith("_") && !a.startsWith(".") && a.toLowerCase.indexOf("-hidden") == -1} match {$/;"	V
sq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^             val sq:Seq[String] = stg.split(" ");$/;"	V
sql	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def sql: String = " ASC "$/;"	f
sql	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def sql: String = " DESC "$/;"	f
sql	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def sql: String$/;"	f
sqrt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def sqrt(x: Double): Double = java.lang.Math.sqrt(x)$/;"	f
sqrt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def sqrt(x: Int): Int = java.lang.Math.sqrt(x.toDouble).toInt$/;"	f
src	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HeadHelper.scala	/^       val src = e.attributes("src")$/;"	V
src	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/rssfeed/RSSfeed.scala	/^    var src = new Queue[Node]()$/;"	v
src	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingParser.scala	/^    val src = scala.io.Source.fromURL(url);$/;"	V
src	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/CachedFileStorage.scala	/^    val src = Source.fromFile( theFile )$/;"	V
src	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^  var src:Source = null$/;"	v
src1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^    val src1 = adapt(src)$/;"	V
ss	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^        val ss = mkString((c :: cs).map(_.s));$/;"	V
ss	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    { case c ~ cs => val ss = mkString((c :: cs).map(_.s));$/;"	V
ss	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^    val ss = S.initIfUninitted(session) {$/;"	V
st	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarWeekView.scala	/^        var st = day + startIndex$/;"	v
st	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^      val st =$/;"	V
st	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^    val st =$/;"	V
st	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  private def st(in: Box[Date]): Unit =$/;"	f
st	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  private def st(in: Box[Date]): Unit =$/;"	f
st	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  private def st (in : BigDecimal) = {$/;"	f
st	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	private def st(in: Double) {$/;"	f
st	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  private def st(in: ENUM#Value) {$/;"	f
st	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  private def st(in: Int) {$/;"	f
st	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  private def st(in: Box[Long]) {$/;"	f
st	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  private def st(in: Long) {$/;"	f
st	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  private def st(in: Seq[ENUM#Value]) {$/;"	f
st	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  private def st(in: Box[Date]): Unit =$/;"	f
st	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^            val st = conn.createStatement$/;"	V
st	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^      val st = connection.createStatement$/;"	V
st	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^              val st = conn.createStatement$/;"	V
stableSort	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^  def stableSort[K <% Ordered[K]](a: Array[K]) {$/;"	f
stableSort	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^  def stableSort[K <% Ordered[K]](a: Seq[K]): Array[K] =$/;"	f
stableSort	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^  def stableSort[K, M <% Ordered[M]](a: Seq[K], f: K => M): Array[K] =$/;"	f
stableSort	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^  def stableSort[K](a: Array[K], f: (K,K) => Boolean) {$/;"	f
stableSort	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^  def stableSort[K](a: Seq[K], f: (K,K) => Boolean): Array[K] = {$/;"	f
stableSort	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^  private def stableSort[K](a: Array[K], lo: Int, hi: Int, scratch: Array[K], f: (K,K) => Boolean) {$/;"	f
stack	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    private[this] val stack = new LinkedList[JValue]()$/;"	V
stack	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  private def stack: List[PValueHolder[Maker[T]]] = _stack.get() match {$/;"	f
stack	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  private[TransactionContext] val stack = new scala.util.DynamicVariable(new TransactionContext)$/;"	V
stack	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Stack.scala	/^  private var stack: immutable.Stack[A] = immutable.Stack.Empty$/;"	v
stackWhack	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/snippet/DeferredSnippet.scala	/^   def stackWhack: NodeSeq = {$/;"	f
standAlone	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Document.scala	/^  var standAlone: Option[Boolean] = _$/;"	v
standardColorModel	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-imaging/src/main/scala/net/liftweb/imaging/ImageHelpers.scala	/^    val standardColorModel = ColorModel.getRGBdefault $/;"	V
standardCreationStatement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^      val standardCreationStatement = (table._dbTableNameLC+"_"+columns.map(_.field._dbColumnNameLC).mkString("_"))+" ON "+table._dbTableNameLC+" ( "+columns.map(_.indexDesc).comma+" )"$/;"	V
start	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Benchmark.scala	/^    val start = System.currentTimeMillis$/;"	V
start	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^          val start = if (i == curMarkSegment) curMark else 0$/;"	V
start	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    val start = millis$/;"	V
start	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/JettyTestServer.scala	/^  def start() = server_.start()$/;"	f
start	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^  override def start(context: BundleContext) {$/;"	f
start	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^    val start = res.map(_.at).reduceLeft((a: Long, b: Long) => if (a < b) a else b)$/;"	V
start	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^    val start = end - 100$/;"	V
start	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val start = params.foldRight(Empty.asInstanceOf[Box[Long]]){(a,b) => a match {case StartAt(n) => Full(n); case _ => b}}$/;"	V
start	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^    var start = 0$/;"	v
start	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^      val start = j - (targetCount - 1)$/;"	V
start	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  final def start = num * PageSize$/;"	f
start	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^  private var start: List[A] = Nil$/;"	v
start	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^      val start = index$/;"	V
start	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def start(i: Int) = starts(i)$/;"	f
start	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def start(i: Int): Int = matcher.start(i)$/;"	f
start	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def start(i: Int): Int$/;"	f
start	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def start: Int = matcher.start$/;"	f
start	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def start: Int$/;"	f
start	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    val start = matcher.start$/;"	V
start	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/RegexParsers.scala	/^      val start = handleWhiteSpace(source, offset)$/;"	V
startAgain	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private def startAgain(a: scala.actors.Actor, ignore: Throwable) {$/;"	f
startCnt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  @volatile private[this] var startCnt = 0$/;"	v
startDTD	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^  def startDTD(name: String, publicID: String, systemID: String) {$/;"	f
startElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^  override def startElement(uri: String, localName: String, qName: String, atts1: Attributes) {$/;"	f
startElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^  def startElement(namespaceURI: String, localName: String, qualifiedName: String, atts: Attributes) = {$/;"	f
startElement	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  override def startElement(uri: String, _localName: String,$/;"	f
startEntity	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^  def startEntity(name: String) {$/;"	f
startIndex	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarUtils.scala	/^      val startIndex = sm match {$/;"	V
startIndex	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarWeekView.scala	/^    val startIndex = cal.get(DAY_OF_WEEK)$/;"	V
startModCount	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^    val startModCount = modCount;$/;"	V
startPrefixMapping	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^  override def startPrefixMapping(prefix: String , uri: String) {$/;"	f
startPrefixMapping	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^  def startPrefixMapping(prefix: String , uri: String) {}$/;"	f
startPrefixMapping	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^   def startPrefixMapping( prefix:String , uri:String ):Unit = {} $/;"	f
startQuestion	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  protected def startQuestion(what: Any) {}$/;"	f
startSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] def startSession(): Unit = {$/;"	f
startTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  protected def startTag(n: Node, pscope: NamespaceBinding): (String, Int) = {$/;"	f
startTime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/Benchmark.scala	/^      val startTime = Platform.currentTime$/;"	V
starts	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    private lazy val starts: Array[Int] = $/;"	V
startsWith	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    def startsWith(seq : Seq[Any]) : Boolean = {$/;"	f
startsWith	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  def startsWith[B](that: Seq[B]): Boolean = startsWith(that, 0)$/;"	f
startsWith	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  def startsWith[B](that: Seq[B], offset: Int): Boolean = {  $/;"	f
startsWith	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def startsWith[B](that: Seq[B]) = self startsWith that$/;"	f
startsWith	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  override def startsWith[B](that: Seq[B]) = that match {$/;"	f
state	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  protected var state: State = emptyState$/;"	v
state	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    val state = instantiate$/;"	V
state	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  def state: StateType#Value = getSingleton.stateEnumeration(currentState.is)$/;"	f
state	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/uploadprogress/UploadProgress.scala	/^    val state: String = if(recived == size){ "completed" } else { "uploading" }$/;"	V
stateEnumeration	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  def stateEnumeration: StateType$/;"	f
stateInfo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  private val stateInfo = new HashMap[StV, Seq[Meta#ATransition]]$/;"	V
stateList	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  private val stateList = new HashMap[StV, Meta#State]$/;"	V
statefulRewrite	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val statefulRewrite = RulesSeq[RewritePF]$/;"	V
statelessDispatchTable	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val statelessDispatchTable = RulesSeq[DispatchPF]$/;"	V
statelessRewrite	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val statelessRewrite = RulesSeq[RewritePF]$/;"	V
statement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def statement[T](db: SuperConnection)(f: (Statement) => T): T = {$/;"	f
statement	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^  def statement : String$/;"	f
statementEntries	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^  def statementEntries : List[DBStatementEntry] = executedStatements.filter(_.isInstanceOf[DBStatementEntry]).reverse.asInstanceOf[List[DBStatementEntry]]$/;"	f
states	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  protected def states : List[Meta#State];$/;"	f
states	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    var states   = new TreeSet[BitSet]()$/;"	v
static_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^    def static_?(f: Field) = Modifier.isStatic(f.getModifiers)$/;"	f
stats	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^  def stats = {$/;"	f
status	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/EntityManagerSynchronization.scala	/^      val status = tm.getStatus$/;"	V
status	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/EntityManagerSynchronization.scala	/^    val status = tm.getStatus$/;"	V
statusCode	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  var statusCode : Int = 200$/;"	v
statusString	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletResponse.scala	/^  var statusString : String = "OK"$/;"	v
stdErr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/IoHelpers.scala	/^      var stdErr = ""$/;"	v
stdOut	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/IoHelpers.scala	/^      var stdOut = ""$/;"	v
stdRequestTimeout	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var stdRequestTimeout: Box[Int] = Empty$/;"	v
step	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Range.scala	/^      val step = if (this.step < 0) -this.step else this.step$/;"	V
step	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Range.scala	/^class Range(val start: Int, val end: Int, val step: Int) extends RandomAccessSeq.Projection[Int] {$/;"	V
stmt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^    val stmt = conn.createStatement$/;"	V
stmt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^              val stmt = xName$/;"	V
stop	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/JettyTestServer.scala	/^  def stop() = {$/;"	f
stop	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^  override def stop(context: BundleContext) {$/;"	f
stop	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^  def stop = {$/;"	f
stopClient	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/LazyLoad.scala	/^  var stopClient = false$/;"	v
stopTime	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/Benchmark.scala	/^      val stopTime = Platform.currentTime$/;"	V
storageNode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/CachedFileStorage.scala	/^    val storageNode = <nodes>{ nodes.toList }<\/nodes>$/;"	V
store	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPSender.scala	/^    val store = new ObjectOutputStream(bytes)$/;"	V
storeInThreadLocal	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^  private def storeInThreadLocal(tx: Transaction) = suspendedTx.set(tx)$/;"	f
str	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^      val str = res toString;$/;"	V
str	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^    def str: String = what.mkString("")$/;"	f
str	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^  class SuperString(val str: String) {$/;"	V
str	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResourceServer.scala	/^    val str = in.toString$/;"	V
str	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/Role.scala	/^    var str = "Role(" + name;$/;"	v
str	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def str(what: String, pred: Char => Boolean) = rep(elem(what, pred)) ^^ mkString$/;"	f
str	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    val str = if (s == null) "null" else s$/;"	V
str	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    val str = if (x == null) "null" else x$/;"	V
str	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ExternalSources.scala	/^    val str = new StringBuilder()$/;"	V
str	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^      val str = cbuf.toString();$/;"	V
str	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    val str = cbuf.toString()$/;"	V
str1	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def str1(what: String, pred: Char => Boolean) = rep1(elem(what, pred)) ^^ mkString$/;"	f
str2chars	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    implicit def str2chars(s: String): List[Char] = stringWrapper(s).toList$/;"	f
strFuncToFailMsg	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  implicit def strFuncToFailMsg(in: () => String): FailMsg = strToFailMsg(in())$/;"	f
strLastChar	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    val strLastChar = target(strLastIndex)$/;"	V
strLastIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    val strLastIndex = targetOffset + targetCount - 1$/;"	V
strLstToLink	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  implicit def strLstToLink(in: Seq[String]): Link[Unit] = new Link[Unit](in.toList)$/;"	f
strPairToLink	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  implicit def strPairToLink(in: (Seq[String], Boolean)): Link[Unit] = new Link[Unit](in._1.toList, in._2)$/;"	f
strRep	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Lexer.scala	/^    val strRep = xs mkString ""$/;"	V
strToBPAssoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  implicit def strToBPAssoc(in: String): BindParamAssoc = new BindParamAssoc(in)$/;"	f
strToFailMsg	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  implicit def strToFailMsg(in: => String): FailMsg = () => {$/;"	f
strToInput	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^  implicit def strToInput(in: String): Input = new _root_.scala.util.parsing.input.CharArrayReader(in.toCharArray)$/;"	f
strToInput	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  implicit def strToInput(in: String): Input = new _root_.scala.util.parsing.input.CharArrayReader(in.toCharArray)$/;"	f
strToInput	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  implicit def strToInput(in: String): Input = new _root_.scala.util.parsing.input.CharArrayReader(in.toCharArray)$/;"	f
strToInput	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/VCardParser.scala	/^  implicit def strToInput(in: String): Input = new _root_.scala.util.parsing.input.CharArrayReader(in.toCharArray)$/;"	f
strToLinkText	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  implicit def strToLinkText[T](in: => String): LinkText[T] = LinkText(T => Text(in))$/;"	f
strToLst	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  implicit def strToLst(in: String): List[Elem] = stringWrapper(in).toList$/;"	f
strToRe	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^  implicit def strToRe(in: String): REDoer[Nothing] = new REDoer(in, Empty)$/;"	f
strToS	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  implicit def strToS(in: String): Str = Str(in)$/;"	f
strToSuperArrowAssoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  implicit def strToSuperArrowAssoc(in: String): SuperArrowAssoc = new SuperArrowAssoc(in)$/;"	f
strToSuperStr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^  implicit def strToSuperStr(in: String): SuperString = new SuperString(in)$/;"	f
stream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResourceServer.scala	/^        val stream = url.openStream$/;"	V
stream	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^    val stream: InputStream = p.getResponseBodyAsStream()$/;"	V
stream	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Properties.scala	/^    val stream = classOf[Application].getResourceAsStream(propFilename)$/;"	V
string	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val string: Parser[String] = ('\\'' ~> rep(not('\\'') ~> bchar) <~ '\\'' ^^ {case xs => xs.mkString}) |$/;"	V
string	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Collection.scala	/^    var string = this.getClass.getName$/;"	v
string	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def string: SPU[String] =$/;"	f
string	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/testing/RegexTest.scala	/^  val string: Parser[Any] = "\\".*\\"".r ^^ (s => Str(s.substring(1, s.length - 1)))$/;"	V
string	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Lexer.scala	/^  def string = '\\"' ~> rep(charSeq | chrExcept('\\"', '\\n', EofCh)) <~ '\\"' ^^ { _ mkString "" }$/;"	f
string2jvalue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  implicit def string2jvalue(x: String) = JString(x)$/;"	f
stringBuilderWrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def stringBuilderWrapper(x : StringBuilder): runtime.RichStringBuilder = new runtime.RichStringBuilder(x)$/;"	f
stringListener	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^  val stringListener = new LiftActor {$/;"	V
stringLit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/syntactical/StdTokenParsers.scala	/^  def stringLit: Parser[String] = $/;"	f
stringLit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/syntactical/StdTokenParsers.scala	/^  def stringLit: Parser[String] = $/;"	f
stringLiteral	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/JavaTokenParsers.scala	/^  def stringLiteral: Parser[String] = $/;"	f
stringOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  def stringOf(arg : Any): String = arg match {$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^       override def stringPrefix = Projection.this.stringPrefix + "R"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Collection.scala	/^  protected def stringPrefix : String = {$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    override def stringPrefix = Enumeration.this.name;$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override protected def stringPrefix = "List"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      override def stringPrefix = Mutable.this.stringPrefix + "R"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      override def stringPrefix = Mutable.this.stringPrefix + "RO"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def stringPrefix = "patch"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def stringPrefix = RandomAccessSeq.this.stringPrefix + "P"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def stringPrefix = RandomAccessSeq.this.stringPrefix + "R"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^      override def stringPrefix = Projection.this.stringPrefix + "F"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^      override def stringPrefix = Projection.this.stringPrefix + "G"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^      override def stringPrefix = Projection.this.stringPrefix + "M"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^      override def stringPrefix = Projection.this.stringPrefix + "TW"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    override def stringPrefix = Seq.this.stringPrefix + "P"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^  protected override def stringPrefix = "Set"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^  override protected def stringPrefix: String = "Map"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Set.scala	/^  override protected def stringPrefix : String = "Set"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  override def stringPrefix = "IntMap"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^    override def stringPrefix = "Set"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  override def stringPrefix = "LongMap"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^  override def stringPrefix: String = "Stack"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  override def stringPrefix="TreeHashMap"  $/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayBuffer.scala	/^  override protected def stringPrefix: String = "ArrayBuffer"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Buffer.scala	/^  override protected def stringPrefix: String = "Buffer"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedList.scala	/^  override protected def stringPrefix: String = "LinkedList"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^  override protected def stringPrefix: String = "ListBuffer"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MutableList.scala	/^  override protected def stringPrefix: String = "MutableList"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  override def stringPrefix = "OpenHashMap"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Stack.scala	/^  override protected def stringPrefix: String = "Stack"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^    override def stringPrefix = "ArrayP"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  override final def stringPrefix: String = "Array"$/;"	f
stringPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichChar.scala	/^        override def stringPrefix = "RandomAccessSeq.Projection"$/;"	f
stringToMailBodyType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  implicit def stringToMailBodyType(text: String): MailBodyType = PlainMailBodyType(text)$/;"	f
stringToSuper	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^  implicit def stringToSuper(in: String): SuperString = new SuperString(in)$/;"	f
stringVal	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Parser.scala	/^  def stringVal  = accept("string", { case lexical.StringLit(n) => n} )$/;"	f
stringValues	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/FormProcessor.scala	/^  val stringValues: mMap[String, String] = mMap.empty[String, String]$/;"	V
stringWithWhiteGen	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^object stringWithWhiteGen {$/;"	o
stringWrapper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def stringWrapper(x: String) = new runtime.RichString(x)$/;"	f
strings	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/FormProcessor.scala	/^  val strings = mMap.empty[String, (String,String=>Unit)=>NodeSeq] $/;"	V
stripComments	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^    val stripComments: Boolean = LiftRules.stripComments.vend$/;"	V
stripComments	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val stripComments: FactoryMaker[Boolean] =$/;"	V
stripHead	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def stripHead(in: NodeSeq): NodeSeq = {$/;"	f
stripLineEnd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  def stripLineEnd: String = {$/;"	f
stripMargin	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  def stripMargin(marginChar: Char): String = {$/;"	f
stripMargin	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  def stripMargin: String = stripMargin('|')$/;"	f
stripSig	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def stripSig(in: String): String =  if (in != null && in.startsWith("fb_sig_")) in.substring(7) else in$/;"	f
strong	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val strong: Parser[Textile] = formattedLineElem('*') ^^ flatten4(Strong)$/;"	V
stuff2ToUnpref	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  implicit def stuff2ToUnpref(in: (Symbol, Any)): UnprefixedAttribute = new UnprefixedAttribute(in._1.name, Text(in._2.toString), Null)$/;"	f
style	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val style : Parser[Attribute] = '{' ~> repsep(styleElem, ';') <~ '}' ^^ Style$/;"	V
styleElem	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val styleElem: Parser[StyleElem] =$/;"	V
styles	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msgs.scala	/^        val styles = styleList.toList.map(_.text.trim)$/;"	V
stype	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^		val stype: Int = this.sourceType.defaultValue match {$/;"	V
sub	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val sub : Parser[Textile] =  formattedLineElem('~') ^^ flatten4(Special * "sub")$/;"	V
subArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def subArray(from: Int, end: Int): Array[A] = throw new Error()$/;"	f
subArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  override def subArray(start: Int, end: Int): AnyRef = {$/;"	f
subArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  def subArray(from: Int, end: Int): AnyRef$/;"	f
subArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedBooleanArray.scala	/^  def subArray(start: Int, end: Int): Array[Boolean] = {$/;"	f
subArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedByteArray.scala	/^  def subArray(start: Int, end: Int): Array[Byte] = {$/;"	f
subArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedCharArray.scala	/^  def subArray(start: Int, end: Int): Array[Char] = {$/;"	f
subArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedDoubleArray.scala	/^  def subArray(start: Int, end: Int): Array[Double] = {$/;"	f
subArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedFloatArray.scala	/^  def subArray(start: Int, end: Int): Array[Float] = {$/;"	f
subArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedIntArray.scala	/^  def subArray(start: Int, end: Int): Array[Int] = {$/;"	f
subArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedLongArray.scala	/^  def subArray(start: Int, end: Int): Array[Long] = {$/;"	f
subArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedObjectArray.scala	/^  override def subArray(start: Int, end: Int): Array[AnyRef] = {$/;"	f
subArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedShortArray.scala	/^  def subArray(start: Int, end: Int): Array[Short] = {$/;"	f
subSequence	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^    def subSequence(start: Int, end: Int): CharSequence = seqToCharSequence(xs.slice(start, end))$/;"	f
subSequence	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    def subSequence(start: Int, end: Int): java.lang.CharSequence = sb.substring(start, end)$/;"	f
subSuper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^      val subSuper =$/;"	V
subSuperClass	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^      val subSuperClass = sub.getSuperclass$/;"	V
subSuperInterfaces	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^      val subSuperInterfaces = sub.getInterfaces.toList$/;"	V
subgroups	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def subgroups: List[String] = (1 to groupCount).toList map group$/;"	f
subject	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarItem.scala	/^  def subject (subject: String) = CalendarItem(id, start, calendarType, Empty, Box.legacyNullTest(subject), Empty, Empty)$/;"	f
submit	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def submit(value: String, func: () => Any, attrs: (String, String)*): Elem = {$/;"	f
submitAjaxForm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def submitAjaxForm(formId: String):JsCmd = SHtml.makeAjaxCall(LiftRules.jsArtifacts.serialize(formId))$/;"	f
submitAjaxForm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def submitAjaxForm(formId: String, func: () => JsCmd): JsCmd = {$/;"	f
submitAjaxForm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def submitAjaxForm(formId: String, postSubmit: Call):JsCmd =$/;"	f
submitButton	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def submitButton(func: () => Any, attrs: (String, String)*): Elem = makeFormElement("submit", NFuncHolder(func), attrs: _*)$/;"	f
submitJsonForm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def submitJsonForm(jsonHandler: JsonHandler, formId: String):JsCmd = jsonHandler.call("processForm", FormToJSON(formId))$/;"	f
submit_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def submit_*(value: String, func: AFuncHolder, attrs: (String, String)*): Elem =$/;"	f
subscrDate	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val subscrDate = r.param("subscr_date")$/;"	V
subscrEffective	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val subscrEffective  = r.param("subscr_effective")$/;"	V
subscrId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val subscrId = r.param("subscr_id")$/;"	V
subscribe	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Publisher.scala	/^  def subscribe(sub: Subscriber[A, This]): Unit =$/;"	f
subscribe	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Publisher.scala	/^  def subscribe(sub: Subscriber[A, This], filter: A => Boolean): Unit =$/;"	f
subseq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  def subseq(from: Int, end: Int): Seq[A] = slice(from, end - from)$/;"	f
subseq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def subseq(from: Int, end: Int) = self.subseq(from, end)$/;"	f
subsetOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^  override def subsetOf(other: Set[Int]): Boolean = other match {$/;"	f
subsetOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Set.scala	/^  def subsetOf(that: Set[A]): Boolean = forall(that.contains)$/;"	f
subsetOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SetProxy.scala	/^  override def subsetOf(that: Set[A]): Boolean = self.subsetOf(that)$/;"	f
subsetOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedSet.scala	/^  override def subsetOf(that: Set[A]): Boolean = that match {$/;"	f
subsetOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^  override def subsetOf(set : scala.collection.Set[A]) = set match {$/;"	f
subsetOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^  override def subsetOf(that : scala.collection.Set[A]) = super[SortedSet].subsetOf(that);$/;"	f
subsetOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedSet.scala	/^  override def subsetOf(that: scala.collection.Set[A]) = synchronized {$/;"	f
subsetProp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JsonASTTest.scala	/^    val subsetProp = (x: JObject, y: JObject) => {$/;"	V
substitute	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^        def substitute (in : String, index : Int) : String = in.indexOf('?') match {$/;"	f
substitute	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def substitute(b: binderType, value: Element): Unit = substitution(b) = value$/;"	f
substitution	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    private val substitution: Map[binderType, Element] = $/;"	V
substring	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    def substring = {$/;"	f
substring	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^    def substring(re: REDoer[_]) = re.=~(str).matchStr$/;"	f
substring	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def substring(start: Int): String = substring(start, count)$/;"	f
substring	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def substring(start: Int, end: Int): String = {$/;"	f
subtract	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object subtract(Object arg1, Object arg2) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
subtype	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^    def subtype(sub: Predef.Class[_], sup: Predef.Class[_]): Boolean = {$/;"	f
succeed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/Parsers.scala	/^  def succeed[A](x: A) = new Parser[A] {$/;"	f
success	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^      var success = false$/;"	v
success	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^        var success = false$/;"	v
success	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^  def success[T](v: T) = Parser{ in => Success(v, in) }$/;"	f
success	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def success = new UnitParser {$/;"	f
success	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^  def success[T](v: T) = new Parser[T] {$/;"	f
successAttrName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/rest/XMLApiHelper.scala	/^  def successAttrName = "success"$/;"	f
successFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/ScriptRenderer.scala	/^             var successFunc = function(data) {$/;"	v
successful	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    val successful = false$/;"	V
successful	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    val successful = true$/;"	V
successful	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    val successful: Boolean$/;"	V
successful	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    val successful = false$/;"	V
successful	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    val successful = true$/;"	V
successful	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    val successful: Boolean$/;"	V
suffix	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^            val suffix = last.substring(firstDot + 1)$/;"	V
suffix	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^    val suffix = if (context.getPrecision == 0) {$/;"	V
suffix	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DecimalField.scala	/^    val suffix = if (context.getPrecision == 0) {$/;"	V
suffixSplitters	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val suffixSplitters = RulesSeq[SplitSuffixPF].append {$/;"	V
suffixes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private val suffixes = List("html", "xhtml", "htm")$/;"	V
suite	/Users/Mads/Dev/logicOfScientificDiscovery/src/test/scala/sidewayscoding/AppTest.scala	/^    val suite = new TestSuite(classOf[AppTest])$/;"	V
suite	/Users/Mads/Dev/logicOfScientificDiscovery/src/test/scala/sidewayscoding/AppTest.scala	/^  def suite: Test = {$/;"	f
suite	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def suite: TestSuite$/;"	f
sum	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^    val sum = Sum(s.toList map { _.untyped })$/;"	V
sums	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^  private var sums: List[Sum] = Nil$/;"	v
sup	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val sup : Parser[Textile] = formattedLineElem('^') ^^ flatten4(Special * "sup")$/;"	V
superToConn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  implicit def superToConn(in: SuperConnection): Connection = in.connection$/;"	f
superToRegConnection	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^  implicit def superToRegConnection(sc: SuperConnection): Connection = sc.connection$/;"	f
superUser	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  object superUser extends MappedBoolean(this) {$/;"	o
superUser_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def superUser_? : Boolean = currentUser.map(_.superUser.is) openOr false$/;"	f
suplementalJs	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def suplementalJs(ob: Box[KeyObfuscator]): List[(String, JsExp)] = Nil$/;"	f
supplimentalHeaders	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var supplimentalHeaders: HTTPResponse => Unit = s => s.addHeaders(List(HTTPParam("X-Lift-Version", liftVersion)))$/;"	v
supplimentalKidMenuItems	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def supplimentalKidMenuItems: List[MenuItem] =$/;"	f
supportsFileParams_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def supportsFileParams_? : Boolean = false$/;"	f
supportsFileParams_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    override def supportsFileParams_? : Boolean = proxyTo.supportsFileParams_?$/;"	f
supportsFileParams_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    override def supportsFileParams_? : Boolean = true$/;"	f
supportsForeignKeys_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def supportsForeignKeys_? : Boolean = driverType.supportsForeignKeys_?$/;"	f
supportsForeignKeys_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def supportsForeignKeys_? : Boolean = false$/;"	f
suspend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def suspend(timeout: Long): Any$/;"	f
suspend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def suspend(timeout: Long): Any = LiftRules.servletAsyncProvider(this).suspend(timeout)$/;"	f
suspend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def suspend(timeout: Long): Nothing = $/;"	f
suspend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/ServletAsyncProvider.scala	/^  def suspend(timeout: Long): Any$/;"	f
suspend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty6AsyncProvider.scala	/^      val suspend = cci.getMethod("suspend", _root_.java.lang.Long.TYPE)$/;"	V
suspend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty6AsyncProvider.scala	/^  def suspend(timeout: Long): Nothing = {$/;"	f
suspend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty7AsyncProvider.scala	/^      val suspend = cci.getMethod("suspend")$/;"	V
suspend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty7AsyncProvider.scala	/^  def suspend(timeout: Long): Any = {$/;"	f
suspendResumeSupport_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/ServletAsyncProvider.scala	/^  def suspendResumeSupport_? : Boolean$/;"	f
suspendResumeSupport_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty6AsyncProvider.scala	/^  def suspendResumeSupport_? : Boolean = hasContinuations_?$/;"	f
suspendResumeSupport_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/containers/Jetty7AsyncProvider.scala	/^  def suspendResumeSupport_? : Boolean = hasContinuations_?$/;"	f
suspendSubscription	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Publisher.scala	/^  def suspendSubscription(sub: Subscriber[A, This]): Unit = suspended += sub$/;"	f
suspended	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Publisher.scala	/^  private val suspended = new HashSet[Subscriber[A, This]]$/;"	V
suspendedTx	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^    val suspendedTx: Option[Transaction] =$/;"	V
suspendedTx	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^  private val suspendedTx = new ThreadLocal[Transaction] {$/;"	V
swap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^  def swap = this match {$/;"	f
swap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple2.scala	/^  def swap: Tuple2[T2,T1] = Tuple2(_2, _1)$/;"	f
swap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ResizableArray.scala	/^  protected def swap(a: Int, b: Int) {$/;"	f
swap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^    def swap(a: Int, b: Int) {$/;"	f
swapJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    def swapJsCmd (show : String, hide : String) : JsCmd = Show(show) & Hide(hide)$/;"	f
swappable	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def swappable(shown: Elem, hidden: Elem): Elem = {$/;"	f
swappable	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def swappable(shown: Elem, hidden: String => Elem): Elem = {$/;"	f
switch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/CachedFileStorage.scala	/^  private def switch = { theFile = if (theFile == file1) file2 else file1; }$/;"	f
sym	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Symbol.scala	/^      val sym = new Symbol(name)$/;"	V
symApply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/Show.scala	/^  implicit def symApply(sym: Symbol) = new SymApply(sym)$/;"	f
symToBPAssoc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  implicit def symToBPAssoc(in: Symbol): BindParamAssoc = new BindParamAssoc(in.name)$/;"	f
symbol	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^            val symbol=numberFormat.getCurrency.getSymbol(_locale)$/;"	V
symbol2jvalue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  implicit def symbol2jvalue(x: Symbol) = JString(x.name)$/;"	f
symbols	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/Examples.scala	/^  val symbols = ("f1" -> 'foo) ~ ("f2" -> 'bar)$/;"	V
synchronizeForSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def synchronizeForSession[T](f: => T): T = {$/;"	f
sysID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^      val sysID = if (ch != '>')$/;"	V
sysID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^      val sysID = systemLiteral()$/;"	V
systemID	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^    var systemID = ""$/;"	v
systemId	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ExternalID.scala	/^  def systemId: String$/;"	f
systemId	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^    var systemId = ex.getSystemId()$/;"	v
systemLiteral	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def systemLiteral(): String = {$/;"	f
systemLiteralToString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def systemLiteralToString(s: String): String = {$/;"	f
systemLiteralToString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def systemLiteralToString(sb: StringBuilder, s: String): StringBuilder = {$/;"	f
sz	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOverview.scala	/^     val sz = new StringBuilder (1000)$/;"	V
sz	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^      var sz = seq.length$/;"	v
sz	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^      var sz = 0$/;"	v
sz	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^        var sz = 0$/;"	v
sz	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^      var sz = 0$/;"	v
sz	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/RollbackIterator.scala	/^        val sz = oldLength.getOrElse(0)$/;"	V
sz	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableSeq.scala	/^    var sz = 0;$/;"	v
sz0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^      var sz0 = lookahead.length$/;"	v
t	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Benchmark.scala	/^    val t = time {$/;"	V
t	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val t: (Animal, Animal) = (Fish(1.5), Dog("pluto"))$/;"	V
t	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^  def head[T](l: Seq[T], deft: => T) = l.firstOption.getOrElse(deft)$/;"	f
t	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/EnumWithDescriptionSpec.scala	/^            val t = T2.valueOf("MR") == Some(T2.mr)$/;"	V
t	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JQueryArtifacts.scala	/^    def toJsCmd = "show().each(function(i) {var t = this; setTimeout(function() { t.focus(); }, 200);})"$/;"	v
t	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-amqp/src/main/scala/net/liftweb/amqp/AMQPDispatcher.scala	/^    val t = in.readObject.asInstanceOf[T];$/;"	V
t	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^        val t = GBNode(k, v, t1, t2)$/;"	V
t	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^    val t = findValue(key)$/;"	V
t	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/ops.scala	/^    val t = new Thread() { override def run() = p }$/;"	V
t	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^      val t = x(a)$/;"	V
t	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModelParser.scala	/^      val t = choiceRest( PCDATA_ );$/;"	V
t1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/IoHelpers.scala	/^      val t1 = new Thread(new ReadItAll(proc.getInputStream, x => stdOut = x))$/;"	V
t1	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^        val t1: List[Textile] ~ List[Textile] = new ~(List(CharBlock(" " * bg)),$/;"	V
t2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/IoHelpers.scala	/^      val t2 = new Thread(new ReadItAll(proc.getErrorStream, x => stdErr = x))$/;"	V
t2	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^        val t2 = new ~(t1, attrs)$/;"	V
tArray	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val tArray = new ListBuffer[FieldHolder]$/;"	V
tArray	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^    val tArray = new ListBuffer[FieldHolder]$/;"	V
tField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^              val tField = fieldInfo.get.invoke(this).asInstanceOf[MappedField[AnyRef, A]]$/;"	V
tGet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^      def tGet(in: Seq[(String, String)]): Box[String] =$/;"	f
t_hi	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^      var t_hi = mid + 1$/;"	v
tabIndex	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def tabIndex: Int = 1$/;"	f
tabinc	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^  var tabinc = 4$/;"	v
table	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val table : Parser[Textile] = opt(table_def) ~ opt(table_header) ~ rep1(table_row) ^^ {$/;"	V
table	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^class ArrayStack[T] private(private var table : Array[AnyRef],$/;"	v
table	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^  protected var table: Array[AnyRef] = $/;"	v
table	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^  protected var table: Array[HashEntry[A, Entry]] = $/;"	v
table	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  private var table : Array[Entry[Key, Value]] = new Array[Entry[Key, Value]](actualInitialSize);$/;"	v
tableDebug	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^  private final val tableDebug = false$/;"	V
tableName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^          val tableName = rs.getString(3).toLowerCase$/;"	V
tableName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^            val tableName = rs.getString(3)$/;"	V
tableSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^  protected var tableSize = 0$/;"	v
tableSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^  protected var tableSize: Int = 0$/;"	v
table_attribute	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val table_attribute = para_attribute | row_span | col_span$/;"	V
table_def	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val table_def : Parser[TableDef] = (beginlS ~> accept("table") ~> rep(para_attribute) <~ '.' <~ rep(' ') <~ '\\n') ^^ TableDef$/;"	V
table_element	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def table_element(isHeader : Boolean) : Parser[Textile] = opt(row_def) ~ (rep(not(accept('|') | '\\n') ~> lineElem) <~ '|') ^^ {$/;"	f
table_header	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val table_header : Parser[Textile] = (beginlS ~> opt(row_def)) ~ (rep(' ') ~> accept("|_.") ~> rep1sep(table_element(true), accept("_.")) <~ rep(' ') <~ '\\n') ^^ {$/;"	V
table_row	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val table_row : Parser[Textile] = (beginlS ~> opt(row_def)) ~ (rep(' ') ~> '|' ~> rep1(table_element(false)) <~ rep(' ') <~ '\\n') ^^ {$/;"	V
tables	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^        val tables = stables.toList.filter(t => hasTable_?(t, sConn, th))$/;"	V
tables	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^    val tables = stables.toList$/;"	V
tabulate	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def tabulate[A](n: Int, maker: Int => A): List[A] = {$/;"	f
tag	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^              val tag = bindByNameTag(namespace, s)$/;"	V
tag	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala	/^    val tag = capify(ntag)$/;"	V
tag	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  object tag extends MappedString(this, 32)$/;"	o
tag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^      val tag = finals(it.next)$/;"	V
tagCache	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoTag.scala	/^  private val tagCache = new LRU[String, ModelType](cacheSize)$/;"	V
tagStack	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  val tagStack    = new Stack[String]$/;"	V
tag_attr	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val tag_attr = single_quote_attr | double_quote_attr$/;"	V
tags	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^    val tags = List("Hello", "Moose", "Frog", "WooHoo", "Sloth",$/;"	V
tail	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    override def tail = List.this.tail.toStream$/;"	f
tail	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def tail : List[B] = tl$/;"	f
tail	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def tail: List[A]$/;"	f
tail	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def tail: List[Nothing] =$/;"	f
tail	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def tail = RandomAccessSeq.this.drop(1).toStream$/;"	f
tail	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^      def tail: Stream[A] = {$/;"	f
tail	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^    def tail: Stream[Nothing] = throw new UnsupportedOperationException("tail of empty stream")$/;"	f
tail	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  def tail: Stream[A]$/;"	f
tail	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^        val tail = next - k$/;"	V
tail	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^      val tail = ListSet.this - e; new tail.Node(elem)$/;"	V
tail0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      var tail0 = tail$/;"	v
take	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^     override def take(until : Int) : Projection[A] = projection.take(until)$/;"	f
take	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^     override def take(until: Int) = slice(0, until)$/;"	f
take	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  @deprecated def take(n: Int): Collection[A] = $/;"	f
take	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  @deprecated override def take(n: Int) = self take n$/;"	f
take	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def take(n: Int): Iterator[A] = new Iterator[A] {$/;"	f
take	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def take(n: Int): List[A] = {$/;"	f
take	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def take(until: Int): MutableProjection[A] = slice(0, until)$/;"	f
take	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^  override def take(until: Int): RandomAccessSeq[A] = slice(0, until)$/;"	f
take	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeqProxy.scala	/^  override def take(until: Int): RandomAccessSeq[A] = self.take(until)$/;"	f
take	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  override def take(n: Int): Seq[A] = {$/;"	f
take	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def take(n: Int): Seq[A] = self take n$/;"	f
take	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override def take(n: Int): Stream[A] =$/;"	f
take	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/SyncVar.scala	/^  def take() = synchronized {$/;"	f
take	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  override def take(until: Int): RichString = slice(0, until)$/;"	f
takeAnd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object takeAnd(Object arg1, Object arg2) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
takeConditionalAnd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object takeConditionalAnd(Object arg1, Object arg2) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
takeConditionalOr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object takeConditionalOr(Object arg1, Object arg2) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
takeModulo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object takeModulo(Object arg1, Object arg2) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
takeNot	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object takeNot(Object arg) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
takeOr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object takeOr(Object arg1, Object arg2) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
takeRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def takeRight(n: Int): List[A] = {$/;"	f
takeSmallest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def takeSmallest: (A, B, aNode) = smaller match {$/;"	f
takeSmallest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def takeSmallest: (A,B, GBTree[A,B]) =$/;"	f
takeSmallest	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def takeSmallest: (A,B,aNode)$/;"	f
takeWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^     override def takeWhile(p: A => Boolean) = projection.takeWhile(p)$/;"	f
takeWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^     override def takeWhile(p: A => Boolean) = {$/;"	f
takeWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def takeWhile(p: A => Boolean): Collection[A] = self takeWhile p $/;"	f
takeWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    override def takeWhile(p: A => Boolean): Projection[A] = new Projection[A] {$/;"	f
takeWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def takeWhile(p: A => Boolean): Iterable[A] = $/;"	f
takeWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def takeWhile(p: A => Boolean) = self takeWhile p $/;"	f
takeWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def takeWhile(p: A => Boolean): Iterator[A] = new TakeWhileIterator(p)$/;"	f
takeWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def takeWhile(p: A => Boolean): List[A] = {$/;"	f
takeWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^    override def takeWhile(p: A => Boolean): Projection[A] = new ComputeSize[A] {$/;"	f
takeWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  override def takeWhile(p: A => Boolean): Seq[A] = super.takeWhile(p).asInstanceOf[Seq[A]]$/;"	f
takeWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def takeWhile(p: A => Boolean): Seq[A] = self takeWhile p$/;"	f
takeWhile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override def takeWhile(p: A => Boolean): Stream[A] =$/;"	f
takeXor	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object takeXor(Object arg1, Object arg2) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
tan	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def tan(x: Double): Double = java.lang.Math.tan(x)$/;"	f
target	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^class MockServletContext(var target: String) extends ServletContext {$/;"	v
targetColorModel	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-imaging/src/main/scala/net/liftweb/imaging/ImageHelpers.scala	/^    val targetColorModel = source.getColorModel $/;"	V
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def targetSQLType = Types.BINARY$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def targetSQLType = Types.VARCHAR$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  def targetSQLType = Types.BOOLEAN$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  def targetSQLType = Types.DATE$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  def targetSQLType = Types.TIMESTAMP$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  def targetSQLType = Types.DECIMAL$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	def targetSQLType = Types.DOUBLE$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def targetSQLType(field : String): Int = targetSQLType$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def targetSQLType(field: String): Int$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def targetSQLType: Int$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def targetSQLType = Types.BIGINT$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def targetSQLType = Types.INTEGER$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def targetSQLType = Types.BIGINT$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  def targetSQLType = Types.VARCHAR$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def targetSQLType = Types.VARCHAR$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  def targetSQLType = Types.TIME$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def targetSQLType : Int$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BinaryField.scala	/^  def targetSQLType = Types.BINARY$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BooleanField.scala	/^  def targetSQLType = _root_.java.sql.Types.BOOLEAN$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DateTimeField.scala	/^  def targetSQLType = Types.TIMESTAMP$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DecimalField.scala	/^  def targetSQLType = Types.DECIMAL$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DoubleField.scala	/^  def targetSQLType = Types.DOUBLE$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EmailField.scala	/^  def targetSQLType = Types.VARCHAR$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EnumField.scala	/^  def targetSQLType = Types.VARCHAR$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/IntField.scala	/^  def targetSQLType = Types.INTEGER$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/LocaleField.scala	/^  def targetSQLType = Types.VARCHAR$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/LongField.scala	/^  def targetSQLType = Types.BIGINT$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^  def targetSQLType = Types.VARCHAR$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PostalCodeField.scala	/^  def targetSQLType = Types.VARCHAR$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^  def targetSQLType = Types.VARCHAR$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TextareaField.scala	/^  def targetSQLType = Types.VARCHAR$/;"	f
targetSQLType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TimeZoneField.scala	/^  def targetSQLType = Types.VARCHAR$/;"	f
tax	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val tax = r.param("tax")$/;"	V
temp	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^      val temp = value(j)$/;"	V
temp2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^      val temp2 = value(n - j)$/;"	V
tempMaxSize	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private var tempMaxSize = maxPoolSize$/;"	v
template	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def template(xhtml: NodeSeq, prefix: String, tag1: String,$/;"	f
template	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def template(xhtml: NodeSeq, prefix: String, tag: String): Box[NodeSeq] =$/;"	f
template	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def template: Box[NodeSeq] = paramTemplate or calcTemplate$/;"	f
templateCache	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var templateCache: Box[TemplateCache[(Locale, List[String]), NodeSeq]] = Empty$/;"	v
templateFromTemplateAttr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def templateFromTemplateAttr: Box[NodeSeq] =$/;"	f
term	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^      def term(i: Int) = {$/;"	f
terminate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPSession.scala	/^  def terminate: Unit$/;"	f
terminate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletSession.scala	/^  def terminate = session invalidate$/;"	f
terminate	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  def terminate(from: StV,to: StV,event: Meta#Event): Unit = {$/;"	f
terminate	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  def terminate(what: MyType,from: StV,to: StV,event: Meta#Event) {what.terminate(from, to, event)}$/;"	f
terminated	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^  private var terminated = false;$/;"	v
test	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    val test = (name, requestValue.is)$/;"	V
test	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/Show.scala	/^  def test[A](f: Symbol, args: A*): String = {$/;"	f
test	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/Inclusion.scala	/^        val test = encode(r1, r2)$/;"	V
test	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/testing/Tester.scala	/^  def test(in: String) {$/;"	f
test	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/testing/Tester.scala	/^  def test(in: String) {$/;"	f
test	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^        val test = {$/;"	V
test	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^              val test =  replacementText(ent);$/;"	V
testAccess	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def testAccess: Either[Boolean, Box[() => LiftResponse]] = accessTestRes.is$/;"	f
testAccess	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Menu.scala	/^  override private[sitemap] def testAccess: Either[Boolean, Box[() => LiftResponse]] = loc.testAccess$/;"	f
testAccess	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/SiteMap.scala	/^  private[sitemap] def testAccess: Either[Boolean, Box[() => LiftResponse]] = Left(true)$/;"	f
testAllParams	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  private def testAllParams(params: List[Loc.LocParam[T]], req: Req): Boolean = {$/;"	f
testBit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def testBit (n: Int): Boolean = this.bigInteger.testBit(n)$/;"	f
testCnt	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^    val testCnt = res.filter(a => a.isTest && !a.isBegin).length$/;"	V
testConnection	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  protected def testConnection(conn: Connection) {$/;"	f
testEqual	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object testEqual(Object arg1, Object arg2) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
testFor304	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def testFor304(lastModified: Long, headers: (String, String)*): Box[LiftResponse] =$/;"	f
testFromString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^  final def testFromString(x: String): Test = {$/;"	f
testFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    val testFunc = LFuncHolder(in => in.filter(v => vals.contains(v)) match {case Nil => false case xs => func(xs)}, func.owner)$/;"	V
testGreaterOrEqualThan	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object testGreaterOrEqualThan(Object arg1, Object arg2) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
testGreaterThan	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object testGreaterThan(Object arg1, Object arg2) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
testGuard	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    def testGuard(who: MyType, from: StV, to: StV, what: Meta#Event): Boolean =$/;"	f
testIfModifiedSince	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def testIfModifiedSince(when: Long): Boolean = (when == 0L) ||$/;"	f
testInitialized	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  private def testInitialized: Unit = doSync {$/;"	f
testJson	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^  val testJson = $/;"	V
testLessOrEqualThan	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object testLessOrEqualThan(Object arg1, Object arg2) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
testLessThan	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object testLessThan(Object arg1, Object arg2) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
testLocation	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def testLocation: Either[Boolean, Box[LiftResponse]] = {$/;"	f
testLoggedIn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def testLoggedIn(page: String): Boolean =$/;"	f
testLogginIn	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  lazy val testLogginIn = If(loggedIn_? _, S.??("must.be.logged.in")) ;$/;"	V
testMethod	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/Show.scala	/^    def testMethod(meth: java.lang.reflect.Method): String =$/;"	f
testMode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  lazy val testMode: Boolean = mode == RunModes.Test$/;"	V
testNotEqual	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Object testNotEqual(Object arg1, Object arg2) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
testOK	/Users/Mads/Dev/logicOfScientificDiscovery/src/test/scala/sidewayscoding/AppTest.scala	/^  def testOK() = assertTrue(true)$/;"	f
testParams	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    def testParams(what: List[Loc.LocParam[T]]): Either[Boolean, Box[() => LiftResponse]] = what match {$/;"	f
testParentAccess	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Menu.scala	/^  private[sitemap] def testParentAccess: Either[Boolean, Box[() => LiftResponse]] = _parent match {$/;"	f
testProdArity	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private def testProdArity(prod: Product): Boolean = {$/;"	f
testSnippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      val testSnippet = new TestSnippet$/;"	V
testState	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def testState(in: Any): Box[State]$/;"	f
testSuperUser	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  lazy val testSuperUser = If(superUser_? _, S.??("must.be.super.user"))$/;"	V
testTranslate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  override protected def testTranslate[R](f: Any => R)(v: Any) = v match {$/;"	f
testTranslate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  protected def testTranslate[R](f: T => R)(v: T): R = f(v)$/;"	f
testWasSet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  protected def testWasSet(name: String): Boolean$/;"	f
testWasSet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    override protected def testWasSet(name: String): Boolean = {$/;"	f
testWasSet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  override protected def testWasSet(name: String): Boolean = {$/;"	f
testWasSet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  protected override def testWasSet(name: String): Boolean = {$/;"	f
testWasSet	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    override protected def testWasSet(name: String): Boolean = {$/;"	f
testXml	/Users/Mads/Dev/logicOfScientificDiscovery/src/test/scala/sidewayscoding/AppTest.scala	/^  def testXml() = {$/;"	f
tests	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def tests: List[Item]$/;"	f
text	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def text(value: String, func: String => Any, attrs: (String, String)*): Elem =$/;"	f
text	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    override val text: LinkText[T],$/;"	V
text	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    override val text: LinkText[Unit],$/;"	V
text	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def text: Loc.LinkText[T]$/;"	f
text	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/XmlMenu.scala	/^      val text = scala.xml.NodeSeq.fromSeq((m \\ "text" elements) flatMap {_.child.elements} collect)$/;"	V
text	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^    val text = baseString.getBytes(ENCODING)$/;"	V
text	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^          val text = new Loc.LinkText(calcLinkText _)$/;"	V
text	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^        val text = new Loc.LinkText(calcLinkText _)$/;"	V
text	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/FormProcessor.scala	/^  def text(attrs: (String, String)*)(init: String, action: String=>Unit) = SHtml.text(init, action, attrs:_*)$/;"	f
text	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/FormProcessor.scala	/^  def text: (String,String=>Unit)=>NodeSeq  = text()_$/;"	f
text	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/text/Document.scala	/^  def text(s: String): Document = DocText(s)$/;"	f
text	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Atom.scala	/^  override def text: String = data.toString()$/;"	f
text	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Comment.scala	/^  override def text = ""$/;"	f
text	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Elem.scala	/^   override def text = {$/;"	f
text	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/EntityRef.scala	/^  override def text = entityName match {$/;"	f
text	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Group.scala	/^  override def text = { \/\/ same impl as NodeSeq$/;"	f
text	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  override def text: String = super.text$/;"	f
text	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^  def text: String = {$/;"	f
text	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/ProcInstr.scala	/^  override def text = ""$/;"	f
text	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/Binder.scala	/^  final def text(pos: Int, txt: String) =$/;"	f
text	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingHandler.scala	/^  def text(pos: Int, txt:String) =$/;"	f
text	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/DefaultMarkupHandler.scala	/^  def text(pos: Int, txt:String) = NodeSeq.Empty$/;"	f
text	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^      val text = buffer.toString()$/;"	V
text	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^  def text(pos: Int, txt: String): NodeSeq$/;"	f
text	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^    def text(pos: Int, txt:String): NodeSeq = {$/;"	f
textAjaxTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def textAjaxTest(value: String, func: String => Any, ajaxTest: Box[String => JsCmd], attrs: (String, String)*): Elem =$/;"	f
textAjaxTest	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def textAjaxTest(value: String, func: String => Any, ajaxTest: String => JsCmd, attrs: (String, String)*): Elem =$/;"	f
textArea	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  object textArea extends MappedTextarea(this, 2048) {$/;"	o
textComponents	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  private def textComponents(a: Array[AnyRef]): List[Any] = {$/;"	f
textDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def textDecl(): Tuple2[Option[String],Option[String]] = {$/;"	f
textInfo	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  private def textInfo(field: SettableValueHolder {type ValueType = String}) = SHtml.text(field.is, field.set _)$/;"	f
textParams	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  private def textParams(s: Seq[Any]): Array[AnyRef] = {$/;"	f
text_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def text_*(value: String, func: AFuncHolder, ajaxTest: Box[String => JsCmd], attrs: (String, String)*): Elem =$/;"	f
text_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def text_*(value: String, func: AFuncHolder, ajaxTest: String => JsCmd, attrs: (String, String)*): Elem =$/;"	f
text_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def text_*(value: String, func: AFuncHolder, attrs: (String, String)*): Elem =$/;"	f
textarea	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def textarea(value: String, func: String => Any, attrs: (String, String)*): Elem =$/;"	f
textareaCols	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTextarea.scala	/^  def textareaCols = 20$/;"	f
textareaCols	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^    override def textareaCols = 50$/;"	f
textareaCols	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TextareaField.scala	/^  def textareaCols = 20$/;"	f
textareaRows	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTextarea.scala	/^  def textareaRows  = 8$/;"	f
textareaRows	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^    override def textareaRows  = 10$/;"	f
textareaRows	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TextareaField.scala	/^  def textareaRows  = 8$/;"	f
textarea_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def textarea_*(value: String, func: AFuncHolder, attrs: (String, String)*): Elem =$/;"	f
textdecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    var textdecl:Tuple2[Option[String],Option[String]] = null;$/;"	v
th	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^      val th = new Thread(new Runnable {def run {f(t)}})$/;"	V
th	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^    val th = new HashMap[String, String]()$/;"	V
that	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  mixed into this class that provides autocomplete.  dpp 2009\/12\/01$/;"	c
that	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^      val that = obj.asInstanceOf[scala.collection.Set[A]]$/;"	V
that	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListSet.scala	/^    var that: ListSet[A] = ListSet.this;$/;"	v
that	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^    var that: Stack[A] = Stack.this;$/;"	v
that0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      val that0 : Seq[B] = that match {$/;"	V
thatLen	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^      val thatLen = memsize(that.capacity)$/;"	V
theCall	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def theCall(value: JsExp) = jsonCall(FieldId, JsVar("it", meta.primaryKeyField.name), value)$/;"	f
theChar	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^              val theChar = parseCharRef ({ ()=> c },{ () => c = it.next },{s => throw new RuntimeException(s)})$/;"	V
theChar	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^                val theChar = handle.text( tmppos, $/;"	V
theData	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/ScriptRenderer.scala	/^               var theData = aboutToSend.theData;$/;"	v
theElems	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  abstract class ATextile(val theElems : List[Textile], attrs : List[Attribute]) extends Textile {$/;"	V
theFile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/CachedFileStorage.scala	/^  private var theFile: File = null$/;"	v
theHttpClient	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^                   val theHttpClient: HttpClient) extends$/;"	V
theHttpClient	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def theHttpClient: HttpClient = buildNoAuthClient$/;"	f
theHttpClient	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def theHttpClient: HttpClient$/;"	f
theHttpClient	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  override def theHttpClient: HttpClient = defaultHttpClient$/;"	f
theList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^  class ListMapish(val theList: Seq[(String, String)]) {$/;"	V
theMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/IndexedStorage.scala	/^  private var theMap: mutable.Map[A,Node] = new mutable.HashMap[A,Node]()$/;"	v
theName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    val theName = editPath.mkString("")$/;"	V
theName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    val theName = signUpPath.mkString("")$/;"	V
theNode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^      val theNode = <lift_deferred:node id={nodeId}\/>$/;"	V
theNode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    var theNode: Node = null;$/;"	v
theParams	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^    val theParams = params.map{case (name, value) => urlEncode(name)+"="+urlEncode(value.toString)}.mkString("&")$/;"	V
thePath	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def thePath(end: String): List[String] = basePath ::: List(end)$/;"	f
theResp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^        object theResp extends RequestVar(resp.apply())$/;"	o
theScreen	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    val theScreen = this$/;"	V
theScreen	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    val theScreen = currentScreen openOr {$/;"	V
theSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Document.scala	/^  def theSeq: Seq[Node] = this.docElem$/;"	f
theSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Group.scala	/^  override def theSeq = nodes$/;"	f
theSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  def theSeq: Seq[Node] = this :: Nil$/;"	f
theSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^    def theSeq = s$/;"	f
theSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^  def theSeq: Seq[Node]$/;"	f
theSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^  final val Empty = new NodeSeq { def theSeq = Nil }$/;"	f
theSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^      val theSeq = list$/;"	V
theSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/path/Expression.scala	/^    def eval(n: Node): NodeSeq = new NodeSeq { val theSeq=Nil}; \/\/ @todo$/;"	V
theSession	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def theSession = _theSession$/;"	f
theSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/SetStorage.scala	/^  private var theSet: mutable.HashSet[Node] = new mutable.HashSet[Node]$/;"	v
theSetList	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/HasManyThrough.scala	/^  private var theSetList: Seq[ThroughType] = Nil$/;"	v
theStr	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^    val theStr = convert(allParams).sort(_ < _).mkString("") + secret$/;"	V
theType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Comet.scala	/^       val theType: Box[String] = S.attr.~("type").map(_.text)$/;"	V
theType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def theType = _theType$/;"	f
theType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def theType: Box[String]$/;"	f
theUpload	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/UploadProgressDemo.scala	/^  private object theUpload extends RequestVar[Box[FileParamHolder]](Empty)$/;"	o
theUser	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    val theUser: ModelType = create$/;"	V
theUser	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    val theUser: ModelType = currentUser.open_! \/\/ we know we're logged in$/;"	V
theValue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val theValue: Parser[Any] = string | number | jsonObject | array | istrue | isfalse | isnull$/;"	V
theVar	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^    val theVar = f$/;"	V
the_class	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val the_class : Parser[Attribute] = '(' ~> str1("class", validClassChar) <~ ')' ^^ {rc => ClassAndId(rc, null)}$/;"	V
the_id	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val the_id : Parser[Attribute] = '(' ~> '#' ~> str1("class", validClassChar) <~ ')' ^^ {ri => ClassAndId(null, ri)}$/;"	V
the_lang	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val the_lang : Parser[Attribute] = '[' ~> str1("class", validClassChar) <~ ']' ^^ Lang$/;"	V
then	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    def then(f: Response => Response): Response = f(res)$/;"	f
these	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      var these : List[A] = xs$/;"	v
these	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var these = List.this$/;"	v
these	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var these = this$/;"	v
these	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var these: List[B] = this$/;"	v
these	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^        val these = xs.elements$/;"	V
these	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^    var these = this$/;"	v
these	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      var these: List[Elem] = es$/;"	v
these1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      var these1 = this$/;"	v
third	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/snippet/DeferredSnippet.scala	/^  def third:NodeSeq = {$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  def this(size: Int) = this(size, Empty)$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  def this(msg: String) = this(msg, null)$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LRU.scala	/^  def this(size: Int) = this(size, Empty)$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def this(id: String, ro: RenderOut, spanFunc: (Long, NodeSeq) => NodeSeq, notices: List[(NoticeType.Value, NodeSeq, Box[String])]) =$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def this(xhtml: NodeSeq) = this (Full(xhtml), Empty, Empty, Empty, false)$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def this(xhtml: NodeSeq, js: JsCmd) = this (Full(xhtml), Empty, Full(js), Empty, false)$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def this(xhtml: NodeSeq, js: JsCmd, destroy: JsCmd) = this (Full(xhtml), Empty, Full(js), Full(destroy), false)$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^  def this(ctx: HTTPContext) = {$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResponseShortcutException.scala	/^  def this(resp: => LiftResponse) = this (resp, false)$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def this(func: String => Any) = this (func, Empty)$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    def this(proxyTo: AFuncHolder) = this (proxyTo, Empty)$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def this(in: List[JsExp]) = this (in: _*)$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    def this(b: List[String]) = this(b, false)$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def this(text: NodeSeq, uri: NodeSeq,  kids: Seq[MenuItem],$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def this(nm: String, params: FacebookParam*) = { this(nm, false, params: _*) }$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def this(pair: (String, Any)) = this(pair._1, pair._2)$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def this(session: FacebookSession) = this(FacebookRestApi.apiKey, FacebookRestApi.secret, session)$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def this(source: Array[Char], offset: Int) =$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarDayView.scala	/^  def this(when: Calendar) = this(when, DayViewMeta(Locale getDefault))$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarItem.scala	/^  def this(id: String, start: Calendar, calendarType: CalendarType.Value) = this(id, start, calendarType, Empty, Empty, Empty, Empty)$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarMonthView.scala	/^  def this(when: Calendar) = this(when, MonthViewMeta(MONDAY, Locale getDefault))$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarWeekView.scala	/^  def this(when: Calendar) = this(when, WeekViewMeta(MONDAY, Locale getDefault))$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/menu/MenuWidget.scala	/^  def this(style: MenuStyle.Value, jsObj: JsObj) = this(style, jsObj, Nil)$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def this(c: Connection, rf: () => Unit) = this (c, rf, Empty)$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  def this(fieldOwner : T, value : BigDecimal) = {$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  def this(fieldOwner : T, value : BigDecimal, context : MathContext) = {$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/ModelView.scala	/^    def this(e: T) {$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/Paginator.scala	/^  @deprecated def this(meta: MetaMapper[T],$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BinaryField.scala	/^  def this(rec: OwnerType, value: Array[Byte]) = {$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BooleanField.scala	/^  def this(rec: OwnerType, value: Boolean) = {$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DateTimeField.scala	/^  def this(rec: OwnerType, value: Calendar) = {$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DecimalField.scala	/^  def this(rec : OwnerType, value : BigDecimal) = {$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DecimalField.scala	/^  def this(rec : OwnerType, value : BigDecimal, context : MathContext) = {$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EmailField.scala	/^  def this(rec: OwnerType, maxLength: Int, value: String) = {$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EmailField.scala	/^  def this(rec: OwnerType, value: String) = {$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/IntField.scala	/^  def this(rec: OwnerType, value: Int) = {$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^  def this(rec: OwnerType, maxLength: Int, value: String) = {$/;"	f
this	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^  def this(rec: OwnerType, value: String) = {$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^   def this(dim1: Int, dim2: Int) = {$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^   def this(dim1: Int, dim2: Int, dim3: Int) = {$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^   def this(dim1: Int, dim2: Int, dim3: Int, dim4: Int) = {$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^   def this(dim1: Int, dim2: Int, dim3: Int, dim4: Int, dim5: Int) = {$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^   def this(dim1: Int, dim2: Int, dim3: Int, dim4: Int, dim5: Int, dim6: Int) = {$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^   def this(dim1: Int, dim2: Int, dim3: Int, dim4: Int, dim5: Int, dim6: Int, dim7: Int) = {$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^   def this(dim1: Int, dim2: Int, dim3: Int, dim4: Int, dim5: Int, dim6: Int, dim7: Int, dim8: Int) = {$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^   def this(dim1: Int, dim2: Int, dim3: Int, dim4: Int, dim5: Int, dim6: Int, dim7: Int, dim8: Int, dim9: Int) = {$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def this() = this(0)$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def this() =$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def this(i: Int) =$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def this(name: String) = this(nextId, name)$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  def this() = this(0, null)$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  def this(names: String*) = this(0, names: _*)$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/MatchError.scala	/^  def this(obj: Any) =$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Random.scala	/^  def this() = this(compat.Platform.currentTime)$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Random.scala	/^  def this(seed: Int) = this(seed.toLong)$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Random.scala	/^  def this(seed: Long) = this(new java.util.Random(seed))$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def this() = this(16, "")$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def this(capacity: Int) = this(capacity, "")$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def this(str: String) = this(16, str)$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/UninitializedFieldError.scala	/^  def this(obj: Any) =$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  def this(more: (Array[T], Int, Int) => Int) = this(more, new Page[T](0), 0, UndeterminedEnd)$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^  def this() = this(0, null)$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^  def this() = this(0, null)$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/ArrayList.scala	/^  def this() = this(new java.util.ArrayList[A]);$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/HashMap.scala	/^  def this() = this(new java.util.HashMap[K, E])$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/HashSet.scala	/^  def this() = this(new java.util.HashSet[A])$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Hashtable.scala	/^  def this() = this(new java.util.Hashtable[K,E])$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/IdentityHashMap.scala	/^  def this() = this(new java.util.IdentityHashMap[K, E])$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/LinkedHashMap.scala	/^  def this() = this(new java.util.LinkedHashMap[K, E])$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/LinkedHashSet.scala	/^  def this() = this(new java.util.LinkedHashSet[A])$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/LinkedList.scala	/^  def this() = this(new java.util.LinkedList[A]);$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/WeakHashMap.scala	/^  def this() = this(new java.util.WeakHashMap[K, E])$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^  def this() = this(new Array[AnyRef](1), 0);   $/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BitSet.scala	/^  def this() = this(0)$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  def this() = this(8);$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/SoftReference.scala	/^  def this(value : T) = this(value, null);$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/WeakReference.scala	/^  def this(value: T) = this(value, null)$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  def this(dim1: Int, dim2: Int) = {$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  def this(dim1: Int, dim2: Int, dim3: Int) = {$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  def this(dim1: Int, dim2: Int, dim3: Int, dim4: Int) = {$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  def this(dim1: Int, dim2: Int, dim3: Int, dim4: Int, dim5: Int) = {$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  def this(dim1: Int, dim2: Int, dim3: Int, dim4: Int, dim5: Int, dim6: Int) = {$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  def this(dim1: Int, dim2: Int, dim3: Int, dim4: Int, dim5: Int, dim6: Int, dim7: Int) = {$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  def this(dim1: Int, dim2: Int, dim3: Int, dim4: Int, dim5: Int, dim6: Int, dim7: Int, dim8: Int) = {$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  def this(dim1: Int, dim2: Int, dim3: Int, dim4: Int, dim5: Int, dim6: Int, dim7: Int, dim8: Int, dim9: Int) = {$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def this(names: Seq[String], constr: String => Test) =$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def this(p: (Test, Throwable)) = this(p._1, p._2)$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Random.scala	/^  def this() = this(compat.Platform.currentTime)$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Random.scala	/^  def this(seed: Int) = this(seed.toLong)$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Random.scala	/^  def this(seed: Long) = this(new java.util.Random(seed))$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/Scanners.scala	/^    def this(in: String) = this(new CharArrayReader(in.toCharArray()))$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/Scanners.scala	/^    def this(in: String) = this(new CharArrayReader(in.toCharArray()))$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/CharArrayReader.scala	/^  def this(chars: Array[Char]) = this(chars, 0)$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/CharSequenceReader.scala	/^  def this(source: java.lang.CharSequence) = this(source, 0)$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/PagedSeqReader.scala	/^  def this(seq: PagedSeq[Char]) = this(seq, 0)$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrefixedAttribute.scala	/^  def this(pre: String, key: String, value: String, next: MetaData) = $/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrefixedAttribute.scala	/^  def this(pre: String, key: String, value: scala.AllRef, next: MetaData) = $/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/UnprefixedAttribute.scala	/^  def this(key: String, value: Option[Seq[Node]], next: MetaData) = $/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/UnprefixedAttribute.scala	/^  def this(key: String, value: String, next: MetaData) = $/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/CircularIncludeException.scala	/^    def this() = this(null);$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/UnavailableResourceException.scala	/^  def this() = this(null)$/;"	f
this	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/XIncludeException.scala	/^  def this() = this(null)$/;"	f
thisLen	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^      val thisLen = memsize(this.capacity)$/;"	V
thisMonth	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarMonthView.scala	/^      val thisMonth = when get(MONTH)$/;"	V
thisToMappee	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  implicit def thisToMappee(in: Mapper[A]): A = this.asInstanceOf[A]$/;"	f
those	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      var those = f(these.head).elements$/;"	v
those	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      var those = prefix$/;"	v
those	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var those = that$/;"	v
those	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^        val those = that.elements$/;"	V
thread	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^    val thread = new Thread(new Runnable(){$/;"	V
thread	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^        val thread = new Thread(new Runnable {def run {$/;"	V
threadFactory	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LAPinger.scala	/^  val threadFactory = Executors.defaultThreadFactory()$/;"	V
threadFactory	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ActorPing.scala	/^  val threadFactory = Executors.defaultThreadFactory()$/;"	V
threadLocal	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ThreadGlobal.scala	/^  private val threadLocal = new ThreadLocal[T]$/;"	V
threadLocal	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Safe.scala	/^  private val threadLocal = new ThreadGlobal[Long]$/;"	V
threadLocalConnectionManagers	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private val threadLocalConnectionManagers = new ThreadGlobal[Map[ConnectionIdentifier, ConnectionManager]]$/;"	V
threadPoolSize	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  @volatile var threadPoolSize = 16 \/\/ issue 194$/;"	v
threadStore	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  private val threadStore = new ThreadLocal[HashMap[ConnectionIdentifier, ConnectionHolder]]$/;"	V
threads	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    val threads = for (t <- (1 to cnt).toList) yield {$/;"	V
threads	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^      val threads = for (n <- (1 to cnt).toList) yield {$/;"	V
threshold	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/FlatHashTable.scala	/^  protected var threshold: Int = newThreshold(initialSize)$/;"	v
threshold	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/HashTable.scala	/^  protected var threshold: Int = initialThreshold$/;"	v
throwException	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      class TestSnippet { def throwException = throw new SpecificException  }$/;"	f
thrownException	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^  class TestFailure(val failedTest: Test, val thrownException: Throwable) {$/;"	V
throws	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/throws.scala	/^class throws(clazz: Class[_]) extends StaticAnnotation$/;"	c
tickColor	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def tickColor: Box[String] = Empty$/;"	f
tickDecimals	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def tickDecimals: Box[Double] = Empty$/;"	f
tickUrl	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val tickUrl: Parser[WikiAnchor] = '`' ~ rep1(tickUrlChar) ~ '`' ^^$/;"	V
tickUrlChar	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val tickUrlChar: Parser[Char] = elem("tick url char", isTickUrlChar)$/;"	V
ticks	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def ticks: List[Double] = Nil \/\/  null or number or ticks array or (fn: range -> ticks array)$/;"	f
time	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/benchmark/Benchmark.scala	/^  def time(f: => Any): Long = {$/;"	f
time	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^class DateTime(val time: Long)$/;"	V
time	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def time(when: Long) = new Date(when)$/;"	f
time	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^      val time = Helpers.nextNum$/;"	V
time	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^      val time = millis - begin$/;"	V
time	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def time: Box[TimeSpan]$/;"	f
time	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  class Hide(val uid: String, val time: Box[TimeSpan]) extends JsCmd with HasTime {$/;"	V
time	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  class Show(val uid: String, val time: Box[TimeSpan]) extends JsCmd with HasTime {$/;"	V
time	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarDayView.scala	/^                val time = cal.getTime$/;"	V
time	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarWeekView.scala	/^                  val time = headCal.getTime$/;"	V
timeAmounts	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^  val timeAmounts = for {$/;"	V
timeColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def timeColumnType = "TIME"$/;"	f
timeColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def timeColumnType = "TIMESTAMP"$/;"	f
timeColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def timeColumnType: String$/;"	f
timeFormatter	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def timeFormatter = new SimpleDateFormat("HH:mm zzz")$/;"	f
timeFormatter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarUtils.scala	/^  private lazy val timeFormatter = new SimpleDateFormat("h:m")$/;"	V
timeFormatter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/ViewMeta.scala	/^  var timeFormatter = new SimpleDateFormat("h a", locale)$/;"	v
timeNow	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def timeNow = new Date$/;"	f
timeSpanStringIsPluralized	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^      val timeSpanStringIsPluralized = forAll(timeAmounts)((t: TimeAmounts) => { val (timeSpanToString, timeSpanAmounts) = t$/;"	V
timeSpanToDate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  implicit def timeSpanToDate(in: TimeSpan): Date = in.date$/;"	f
timeSpanToLong	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  implicit def timeSpanToLong(in: TimeSpan): Long = in.millis$/;"	f
timeStr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def timeStr = time.map(_.millis.toString) openOr ""$/;"	f
timeZone	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def timeZone: TimeZone =$/;"	f
timeZoneCalculator	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var timeZoneCalculator: Box[HTTPRequest] => TimeZone = defaultTimeZoneCalculator _$/;"	v
timeZoneField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def timeZoneField: Box[MappedTimeZone[A]] = Empty$/;"	f
timeZoneField	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Record.scala	/^  def timeZoneField: Box[TimeZoneField[MyType]] = Empty$/;"	f
timeZoneList	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^  lazy val timeZoneList =$/;"	V
timeZoneList	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TimeZoneField.scala	/^  lazy val timeZoneList = TimeZone.getAvailableIDs.toList.$/;"	V
timedEventAt	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  object timedEventAt extends MappedLong[MyType](this)$/;"	o
timedEventHandler	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  val timedEventHandler: LiftActor = {$/;"	V
timedEventInitialWait	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  def timedEventInitialWait = 120000L$/;"	f
timedEventManager	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  val timedEventManager: LiftActor = {$/;"	V
timedEventPeriodicWait	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  def timedEventPeriodicWait = 10000L$/;"	f
timestamp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  val timestamp = millis$/;"	V
timestamp	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^    def timestamp = _timestamp.is$/;"	f
timestamp	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def timestamp: Long$/;"	f
timezone	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  object timezone extends MappedTimeZone[T](this) {$/;"	o
timezoneDisplayName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def timezoneDisplayName = ??("Time Zone")$/;"	f
tinfo	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^        val tinfo = new HashMap[ConnectionIdentifier, ConnectionHolder]$/;"	V
title	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^  def title(text: NodeSeq): NodeSeq = {$/;"	f
title	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Msgs.scala	/^        val title: String = titleList.toList.filter(_.prefix == "lift").$/;"	V
title	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def title(in: T): NodeSeq = paramTitle.map(_.apply(in)) openOr linkText(in)$/;"	f
title	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  def title: NodeSeq = currentValue.map(title _) openOr Text(name)$/;"	f
title	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  def title = _title.is$/;"	f
title	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def title: String$/;"	f
title	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/test/scala/net/liftweb/oauth/OAuthSignatureMethodSpec.scala	/^    def title: String = ""$/;"	f
title	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^  def title: String$/;"	f
title	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^protected class TableEditorImpl[T <: Mapper[T]](val title: String, meta: T with MetaMapper[T]) extends ItemsListEditor[T] {$/;"	V
tl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^final case class ::[B](private var hd: B, private[scala] var tl: List[B]) extends List[B] {$/;"	v
tl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/DynamicVariable.scala	/^  private val tl = new InheritableThreadLocal[T] {$/;"	V
tlDefined	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^      private def tlDefined = tlVal ne null$/;"	f
tlVal	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^      private var tlVal: Stream[A] = _$/;"	v
tm	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/EntityManagerSynchronization.scala	/^  val tm: TransactionManager,$/;"	V
tm	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  val tm: TransactionManager = transactionService.transactionManager$/;"	V
tm	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^    val tm = TransactionContext.getTransactionManager$/;"	V
tm	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/atomikos/AtomikosTransactionService.scala	/^      val tm: TransactionManager = new J2eeTransactionManager$/;"	V
tmp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    val tmp = (in \\ ("@" + param))$/;"	V
tmp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^    val tmp: String = camelCase(name)$/;"	V
tmp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^    val tmp = ((in match {$/;"	V
tmp	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    val tmp = _addOrdering(in, params)$/;"	V
tmp	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^      var tmp = emptySet$/;"	v
tmp	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^      var tmp = emptySet;$/;"	v
tmp	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^    val tmp = width - cur$/;"	V
tmp	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^    var tmp = value;$/;"	v
tmp	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^        val tmp = content(scope)$/;"	V
tmpPath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    val tmpPath = parsePath(tmpUri)$/;"	V
tmpRet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^      val tmpRet = Elem(htmlTag.prefix, htmlTag.label, htmlTag.attributes, htmlTag.scope, htmlKids.toList: _*)$/;"	V
tmpStatelessHolder	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^    var tmpStatelessHolder: Box[() => Box[LiftResponse]] = null$/;"	v
tmpUri	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    val tmpUri = if (turi.length > 0) turi else "\/"$/;"	V
tmplList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^         val tmplList = templateName.roboSplit("\/");$/;"	V
tmppos	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  var tmppos: Int = _$/;"	v
tn	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^        val tn = name(cnt)$/;"	V
to	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BasicTypesHelpersSpec.scala	/^    "have a toBoolean method converting any object to a reasonable Boolean value" in {$/;"	o
to	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BasicTypesHelpersSpec.scala	/^    "have a toInt method converting any object to a reasonable Int value" in {$/;"	o
to	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BasicTypesHelpersSpec.scala	/^    "have a toLong method converting any object to a reasonable Long value" in {$/;"	o
to	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ListHelpersSpec.scala	/^    "convert a java enumeration containing any kind of object to a List of Strings" in {$/;"	o
to	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^      val to = t.to$/;"	V
to	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  case class After(when: TimeSpan, override val to: StV) extends ATransition(to, {case TimerEvent(len) if (when.millis <= len.millis) => true}) {$/;"	V
to	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  case class On(override val on: PartialFunction[Meta#Event, Any], override val to: StV) extends ATransition(to, on)$/;"	V
to	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  private var to: Map[String, Map[Any, String]] = Map.empty$/;"	v
to	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Sorted.scala	/^  def to(to: K): Sorted[K,A] = {$/;"	f
to	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Sorted.scala	/^  final override def to(to : K): SortedSelf = {$/;"	f
to	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichChar.scala	/^  def to(y: Char): RandomAccessSeq.Projection[Char] = until((y + 1).toChar)$/;"	f
to	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichInt.scala	/^  def to(end: Int) = new Range.Inclusive(start, end, 1)$/;"	f
toAdd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^    var toAdd : List[A] = Nil$/;"	v
toArg	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^    def toArg(name: String, fieldType: Class[_], genericType: Type, visited: Set[Class[_]]): Arg = {$/;"	f
toArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^     override def toArray[B >: A] = (newArray(length, elements))\/\/:Any).asInstanceOf[Array[B]]$/;"	f
toArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Collection.scala	/^  def toArray[B >: A]: Array[B] = toList.toArray$/;"	f
toArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def toArray[B >: A] : Array[B] = self.toArray$/;"	f
toArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  override def toArray[B >: A]: Array[B] = {$/;"	f
toArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def toArray[B >: A]: Array[B] = self.toArray$/;"	f
toArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def toArray: Array[Char] = value$/;"	f
toArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^  def toArray: Array[Int] = {$/;"	f
toArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Set.scala	/^  override def toArray[B >: A]: Array[B] = {$/;"	f
toArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  def toArray: Array[Char] = {$/;"	f
toBigInt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  def toBigInt(): BigInt = new BigInt(this.bigDecimal.toBigInteger())$/;"	f
toBinaryString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichInt.scala	/^  def toBinaryString: String = java.lang.Integer.toBinaryString(start)$/;"	f
toBinaryString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichLong.scala	/^  def toBinaryString: String = java.lang.Long.toBinaryString(x)$/;"	f
toBind	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^    val toBind = if ((template \\ "bind").filter(_.prefix == "menu").isEmpty)$/;"	V
toBoolean	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^  def toBoolean(in: Any): Boolean = {$/;"	f
toBoolean	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  def toBoolean: Boolean = parseBoolean(self)$/;"	f
toByte	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Byte toByte(Object arg) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
toByte	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  def toByte: Byte       = java.lang.Byte.parseByte(self)$/;"	f
toByteArray	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def toByteArray: Array[Byte] = this.bigInteger.toByteArray()$/;"	f
toByteArrayInputStream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^  def toByteArrayInputStream(in: InputStream) = {$/;"	f
toCalendarExtension	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  implicit def toCalendarExtension(c: Calendar) = new CalendarExtension(c)$/;"	f
toCharSequence	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  implicit def toCharSequence(sb: StringBuilder): java.lang.CharSequence = new java.lang.CharSequence {$/;"	f
toCharacter	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Character toCharacter(Object arg) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
toCreate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/HasManyThrough.scala	/^	val toCreate = through.createInstance$/;"	V
toDate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def toDate(in: Any): Box[Date] = {$/;"	f
toDateExtension	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  implicit def toDateExtension(d: Date) = new DateExtension(d)$/;"	f
toDegrees	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def toDegrees(x: Double): Double = java.lang.Math.toDegrees(x)$/;"	f
toDegrees	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichDouble.scala	/^  def toDegrees: Double = Math.toDegrees(x)$/;"	f
toDegrees	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichFloat.scala	/^  def toDegrees: Float = Math.toDegrees(x).toFloat$/;"	f
toDelete	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/HasManyThrough.scala	/^    val toDelete = current.filter(c => !newKeys.contains(throughToField.actualField(c).is))$/;"	V
toDelete	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^          var toDelete: List[String] = Nil$/;"	v
toDo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^    val toDo: () => Unit = baseMailbox.synchronized {$/;"	V
toDo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^        val toDo = what.toList.reverse$/;"	V
toDouble	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	def toDouble(in: Any): Double = {$/;"	f
toDouble	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DoubleField.scala	/^  private def toDouble(in: Any): Double = {$/;"	f
toDouble	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Double toDouble(Object arg) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
toDouble	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  def toDouble: Double   = java.lang.Double.parseDouble(self)$/;"	f
toDump	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^      val toDump = request.uri + "\\n" +$/;"	V
toEnum	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def toEnum(b: Boolean) = if (b) 1 else 0$/;"	f
toFloat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Float toFloat(Object arg) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
toFloat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  def toFloat: Float     = java.lang.Float.parseFloat(self)$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  def toForm: Box[NodeSeq]$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    def toForm: Box[NodeSeq] = {$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  def toForm = {$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    def toForm: NodeSeq = flatMap(ChoiceHolder.htmlize)$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  def toForm = {$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def toForm: Box[NodeSeq] = {$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  override def toForm: Box[Elem] = {$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def toForm(button: Box[String], f: A => Any): NodeSeq =$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def toForm(button: Box[String], onSuccess: String): NodeSeq =$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def toForm(button: Box[String], redoSnippet: NodeSeq => NodeSeq, onSuccess: A => Unit): NodeSeq = {$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def toForm(toMap: A): NodeSeq =$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def toForm: NodeSeq$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  def toForm(inst: BaseRecord): NodeSeq = {$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  def toForm(inst: BaseRecord, template: NodeSeq): NodeSeq = {$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Record.scala	/^  def toForm(button: Box[String])(f: MyType => Unit): NodeSeq = {$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Record.scala	/^  def toForm(f: MyType => Unit): NodeSeq = meta.toForm(this) ++ (SHtml.hidden(() => f(this)))$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BinaryField.scala	/^  def toForm = NodeSeq.Empty$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BooleanField.scala	/^  def toForm = {$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DateTimeField.scala	/^  def toForm = {$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EnumField.scala	/^  def toForm = {$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/LocaleField.scala	/^  override def toForm = {$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/NumericField.scala	/^  def toForm = {$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^  def toForm = {$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^  def toForm = {$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TextareaField.scala	/^  override def toForm = {$/;"	f
toForm	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TimeZoneField.scala	/^  override def toForm = {$/;"	f
toFormAppendedAttributes	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def toFormAppendedAttributes: MetaData =$/;"	f
toHashMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^  def toHashMap[A,B](in : Map[A,B]) : HashMap[A,B] = {$/;"	f
toHexString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichInt.scala	/^  def toHexString: String = java.lang.Integer.toHexString(start)$/;"	f
toHexString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichLong.scala	/^  def toHexString: String = java.lang.Long.toHexString(x)$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def toHtml : NodeSeq = <xml:group> &#8211; <\/xml:group>$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def toHtml : NodeSeq = <xml:group>&#169;<\/xml:group>$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def toHtml : NodeSeq = <xml:group>&#174;<\/xml:group>$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def toHtml : NodeSeq = <xml:group>&#215;<\/xml:group>$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def toHtml : NodeSeq = <xml:group>&#8217;<\/xml:group>$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def toHtml : NodeSeq = <xml:group>&#8230;<\/xml:group>$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def toHtml : NodeSeq = <xml:group>&#8482;<\/xml:group>$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def toHtml : NodeSeq = Text(" "+8212.toChar+" ")$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def toHtml : NodeSeq$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def toHtml :NodeSeq = <br\/>$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def toHtml :NodeSeq = {$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def toHtml = Text("")$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def toHtml = Text(s)$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def toHtml = null$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    override def toHtml : NodeSeq = Text("")$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    override def toHtml : NodeSeq = XmlElem(null, "a", fromStyle(allAttrs), TopScope, Text(alt) : _*)$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    override def toHtml : NodeSeq = XmlElem(null, "pre", fromStyle(attrs), TopScope, flattenAndDropLastEOL(elems) : _*) ++ Text("\\n")$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    override def toHtml : NodeSeq = if (disableLinks) Text(alt) else$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    override def toHtml : NodeSeq = super.toHtml ++ Text("\\n")$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    override def toHtml : NodeSeq = {$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    override def toHtml : NodeSeq =$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    override def toHtml: NodeSeq = {$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    override def toHtml: NodeSeq =$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  def toHtml(toParse: String): NodeSeq =$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  def toHtml(toParse: String, disableLinks: Boolean): NodeSeq =$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  def toHtml(toParse: String, wikiUrlFunc: Option[RewriteFunc]): NodeSeq =$/;"	f
toHtml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  def toHtml(toParse: String, wikiUrlFunc: Option[RewriteFunc], disableLinks: Boolean): NodeSeq = {$/;"	f
toImmutable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BitSet.scala	/^  def toImmutable: collection.immutable.BitSet =$/;"	f
toInt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^  def toInt(in: Any): Int = {$/;"	f
toInt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def toInt = is.id$/;"	f
toInt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EnumField.scala	/^  def toInt = value.id$/;"	f
toInt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  def toInt: Int         = java.lang.Integer.parseInt(self)$/;"	f
toInteger	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Integer toInteger(Object arg) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
toInternetDate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def toInternetDate(in: Date): String = internetDateFormatter.format(in)$/;"	f
toInternetDate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def toInternetDate(in: Long): String = internetDateFormatter.format(new Date(in))$/;"	f
toJSON	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def toJSON = "{'x':'" + x.toString + "','y':'" + y.toString + "','tag_text':'" + name.toString + "'}"$/;"	f
toJSON	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def toJSON = "{'x':'" + x.toString + "','y':'" + y.toString + "','tag_uid':" + userId.toString + "}"$/;"	f
toJSON	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^sealed abstract class PhotoTag(x: Double, y: Double){ def toJSON: String }$/;"	f
toJSON	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarUtils.scala	/^  def toJSON(items: List[CalendarItem]): JsExp = {$/;"	f
toJSON	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^  def toJSON(nodes: List[Tree]): String = nodes.map(_ toJSON).mkString("[", ", ", "]")$/;"	f
toJSON	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^  def toJSON: String = {$/;"	f
toJavaScript	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def toJavaScript(session: LiftSession, displayAll: Boolean): JsCmd = {$/;"	f
toJs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def toJs: JsCmd$/;"	f
toJs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^  def toJs: JsExp = AnonFunc("it",$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^  def toJsCmd: String$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^    lazy val toJsCmd = Printer.pretty(JsonAST.render((_json)))$/;"	V
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    def toJsCmd = "liftAjax.lift_ajaxHandler(" + in.toJsCmd + ", " + (context.success openOr "null") +$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    def toJsCmd = "liftAjax.lift_ajaxHandler(" + in.toJsCmd + ", null, null, null)"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def toJsCmd = "(" + AnonFunc.this.toJsCmd + ")" + "()"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def toJsCmd = "(" + AnonFunc.this.toJsCmd + ")" +$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def toJsCmd = "function " + name + "(" +$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def toJsCmd = "function(" + params + ") {" + in.toJsCmd + "}"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def toJsCmd = "function() {" + in.toJsCmd + "}"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def toJsCmd = "lift$." + funcName + "(" + obj + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def toJsCmd = "lift$." + funcName + "(" + obj + ", " + func.encJs + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def toJsCmd = "lift$." + funcName + "(" + obj.toJsCmd + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def toJsCmd = "lift$." + funcName + "(" + obj.toJsCmd + ", " + func.toJsCmd + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def toJsCmd = "lift$.alt(" + obj + ", " + func.encJs + ", " + alt.encJs + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def toJsCmd = "lift$.alt(" + obj.toJsCmd + ", " + func.toJsCmd + ", " + alt.encJs + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def toJsCmd = "lift$.alt(" + obj.toJsCmd + ", " + func.toJsCmd + ", " + alt.toJsCmd + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def toJsCmd = "lift$.buildIndex(" + obj + ", " + indexName.encJs +$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def toJsCmd = "lift$.buildIndex(" + obj.toJsCmd + ", " + indexName.encJs +$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def toJsCmd = "lift$.fold(" + what.toJsCmd + ", " + init1.toJsCmd + ", " + func.encJs + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def toJsCmd = "lift$.fold(" + what.toJsCmd + ", " + init1.toJsCmd + ", " + func.toJsCmd + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def toJsCmd = "lift$.magicUpdate(" + obj + ", " + field.encJs + ", " + idField.encJs + ", " + toUpdate.toJsCmd + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def toJsCmd = "lift$.magicUpdate(" + obj.toJsCmd + ", " + field.encJs + ", " + idField.encJs + ", " + toUpdate.toJsCmd + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def toJsCmd = "return " + in.toJsCmd$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def toJsCmd = "return "$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def toJsCmd = LiftRules.jsArtifacts.formToJSON(formId).toJsCmd;$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^      def toJsCmd = in.map(_.toJsCmd).mkString("[", ", ", "]\\n")$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = """var x=document.getElementById(""" + select.encJs + """);$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = ""$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "JSON.stringify(" + in.toJsCmd + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "alert(" + text.encJs + ");"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "break"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "continue"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "do { " + body.toJsCmd + " } while ( " + condition.toJsCmd + " )"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "document.getElementById(" + id.encJs + ")" + ($/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "document.getElementById(" + id.encJs + ").checked"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "document.getElementById(" + id.encJs + ").value = " +$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "document.getElementById(" + id.encJs + ").value"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "false"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "for ( " + initialExp.toJsCmd + " in " + reference + ") { " + body.toJsCmd + " }"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "for ( " + initialExp.toJsCmd + "; " +$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "id"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "if (confirm(" + text.encJs + ")) {" + yes.toJsCmd + "}"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "null"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "parentNode"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "setTimeout(function() {" + toDo.toJsCmd + "}, " + time.millis + ");"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "style"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "true"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "try { " + what.toJsCmd + " } catch (e) {" + (if (alert) "alert(e);" else "") + "}"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "value"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "var " + name + " = " + right.toJsCmd + ";"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "while ( " + condition.toJsCmd + " ) { " + body.toJsCmd + " }"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "window.location = " + S.encodeURL(where2).encJs + ";"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "with ( " + reference + " ) { " + body.toJsCmd + " }"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = (ElemById(id) ~> Parent).toJsCmd$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = JsExp.this.toJsCmd + " + " + right.toJsCmd$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = JsExp.this.toJsCmd + " = " + right.toJsCmd$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = JsExp.this.toJsCmd + "." + right.toJsCmd$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = function + "(" + params.map(_.toJsCmd).mkString(",") + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = left.toJsCmd + " != " + right.toJsCmd$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = left.toJsCmd + " < " + right.toJsCmd$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = left.toJsCmd + " <= " + right.toJsCmd$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = left.toJsCmd + " = " + right.toJsCmd + ";"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = left.toJsCmd + " == " + right.toJsCmd$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = left.toJsCmd + " > " + right.toJsCmd$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = left.toJsCmd + " >= " + right.toJsCmd$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = n.toString$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = new JsExp {$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = params.map(_.toJsCmd).mkString(method + "(", ", ", ")")$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = rawJsCmd$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = str.encJs$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = text$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = valueName$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = varName + (if (andThen.isEmpty) ""$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = {$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    override def toJsCmd = "document.getElementById(" + id.encJs + ")" + ($/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    override val toJsCmd = {$/;"	V
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    val toJsCmd = LiftRules.jsArtifacts.setHtml(uid, Helpers.stripHead(content)).toJsCmd$/;"	V
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  def toJsCmd = props.map {case (n, v) => n.encJs + ": " + v.toJsCmd}.mkString("{", ", ", "}")$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  def toJsCmd: String$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/ScriptRenderer.scala	/^            def toJsCmd = "liftComet.lift_handlerSuccessFunc()"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/ScriptRenderer.scala	/^          """ + LiftRules.jsArtifacts.onLoad(new JsCmd() {def toJsCmd = "liftAjax.lift_doAjaxCycle()"}).toJsCmd)$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JQueryArtifacts.scala	/^    def toJsCmd = "JSON.stringify(" + in.toJsCmd + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JQueryArtifacts.scala	/^    def toJsCmd = "hide()"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JQueryArtifacts.scala	/^    def toJsCmd = "lift$.formToJSON('" + formId + "')";$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JQueryArtifacts.scala	/^    def toJsCmd = "serialize()"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JQueryArtifacts.scala	/^    def toJsCmd = "show()"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JQueryArtifacts.scala	/^    def toJsCmd = "show().each(function(i) {var t = this; setTimeout(function() { t.focus(); }, 200);})"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JQueryArtifacts.scala	/^    def toJsCmd = "toggle()"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^        def toJsCmd = "tabs(" + in.toJsCmd + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^        def toJsCmd = "tabsClick(" + tab.toJsCmd + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^        override def toJsCmd = "css(" + name.toJsCmd + "," + value.toJsCmd + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^      def toJsCmd = "html()"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^      def toJsCmd = "text(" + content.encJs + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^      def toJsCmd = "text()"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^      def toJsCmd = JQueryLeft.this.toJsCmd + "." + that.toJsCmd$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^      val toJsCmd = "html(" + fixHtml("inline", content) + ")"$/;"	V
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def toJsCmd = "attr(" + key.encJs + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def toJsCmd = "attr(" + key.encJs + ", " + value.toJsCmd + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def toJsCmd = "click(" + exp.toJsCmd + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def toJsCmd = "document.getElementById(" + id.encJs + ").value = " +$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def toJsCmd = "each(function(i) {this.scrollTop=this.scrollHeight;})"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def toJsCmd = "jQuery(document).ready(function() {" + cmd.toJsCmd + "});"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def toJsCmd = "jQuery.unblockUI();"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def toJsCmd = "serialize()"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def toJsCmd = "serializeArray()"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def toJsCmd = "tabsSelected()"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def toJsCmd = "try{jQuery(" + ("#" + uid).encJs + ").hide(" + timeStr + ");} catch (e) {}"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def toJsCmd = "try{jQuery(" + ("#" + uid).encJs + ").show(" + timeStr + ");} catch (e) {}"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def toJsCmd = (After(duration, JqJE.JqId(id) >> (new JsRaw("fadeIn(" + fadeTime.millis + ")") with JQueryRight))).toJsCmd$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def toJsCmd = (After(duration, JqJE.JqId(id) >> (new JsRaw("fadeOut(" + fadeTime.millis + ")") with JQueryRight))).toJsCmd$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def toJsCmd = (Show(where) & JqSetHtml(where, msg) & After(duration, Hide(where, fadeTime))).toJsCmd$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def toJsCmd = JQueryLeft.this.toJsCmd + "." + that.toJsCmd$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    override def toJsCmd = "jQuery(" + query.toJsCmd + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    override def toJsCmd = "jQuery('#'+" + id.toJsCmd + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    override def toJsCmd = "jQuery(document)"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    override def toJsCmd = "keypress(function(e) {" +$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    override def toJsCmd = "remove()"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    override val toJsCmd = "append(" + fixHtml("inline", content) + ")"$/;"	V
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    override val toJsCmd = "appendTo(" + fixHtml("inline", content) + ")"$/;"	V
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    override val toJsCmd = "empty().after(" + fixHtml("inline", content) + ")"$/;"	V
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    override val toJsCmd = "prepend(" + fixHtml("inline", content) + ")"$/;"	V
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    override val toJsCmd = "prependTo(" + fixHtml("inline", content) + ")"$/;"	V
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    val toJsCmd = "jQuery.blockUI({ message: " + AltXML.toXML(Group(S.session.map(s =>$/;"	V
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    val toJsCmd =$/;"	V
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  def toJsCmd: String$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^    def toJsCmd = "YAHOO.lang.JSON.stringify(" + in.toJsCmd + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^    def toJsCmd = "YAHOO.lift.formToJSON('" + formId + "')";$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^    def toJsCmd = "YAHOO.lift.toggle(this, " + id.encJs + ");";$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^    def toJsCmd = "YAHOO.util.Connect.setForm(" + id.encJs + ", false)"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^    def toJsCmd = "YAHOO.util.Dom.setStyle(" + id.encJs + ", 'display', 'block');" +$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^    def toJsCmd = "YAHOO.util.Dom.setStyle(" + id.encJs + ", 'display', 'block');"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^    def toJsCmd = "YAHOO.util.Dom.setStyle(" + id.encJs + ", 'display', 'none');"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^    def toJsCmd = "YAHOO.util.Event.onDOMReady(function(){" + cmd.toJsCmd + "})"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^    val toJsCmd = "try{document.getElementById(" + uid.encJs + ").innerHTML = " + fixHtml(uid, content) + ";} catch (e) {}"$/;"	V
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^           def toJsCmd = "addClass(\\"flot_lww\\")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotAjax.scala	/^  def toJsCmd: String = {$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotAjax.scala	/^  lazy val toJsCmd: String = jsCmd.toJsCmd$/;"	V
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/sparklines/Sparklines.scala	/^    def toJsCmd = "new " + graphStyle + "(" + id.encJs + ", " + data.toJsCmd + ", " + opts.toJsCmd + ").draw()"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^           def toJsCmd = "treeview(" + jsObj.toJsCmd + ")"$/;"	f
toJsCmd	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^       def toJsCmd = "treeview(" + obj.toJsCmd + ")"$/;"	f
toJsExp	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/sparklines/Sparklines.scala	/^  def toJsExp(id: String, graphStyle: SparklineStyle.Value, data: JsArray, opts: JsObj): JsExp = new JsExp {$/;"	f
toJson	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Xml.scala	/^  def toJson(xml: NodeSeq): JValue = {$/;"	f
toJson	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JQueryArtifacts.scala	/^  private def toJson(info: AjaxInfo, server: String, path: String => JsExp): String =$/;"	f
toJson	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^  private def toJson(info: AjaxInfo): String =$/;"	f
toLFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  implicit def toLFunc(in: List[String] => Any): AFuncHolder = LFuncHolder(in, Empty)$/;"	f
toLeft	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^  def toLeft[X](right: => X) =$/;"	f
toList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def toList: List[A] = Nil$/;"	f
toList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def toList: List[A] = List(value)$/;"	f
toList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def toList = rules$/;"	f
toList	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^      def toList(st : List[Attribute]) : List[Pair[String, String]] = {$/;"	f
toList	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def toList : List[Pair[String, String]] = {$/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/CollectionProxy.scala	/^  override def toList: List[A] = self.toList$/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def toList: List[A] = elements.toList$/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def toList = self.toList$/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def toList: List[A] = {$/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    override def toList: List[A] = these$/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def toList: List[A] = this$/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^  def toList: List[A] = $/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  override def toList = {$/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  override def toList = {$/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def toList(acc: List[(A,B)]): List[(A,B)] = acc$/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def toList(acc: List[(A,B)]): List[(A,B)] =$/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def toList(acc: List[(A,B)]): List[(A,B)]$/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  override def toList : List[(Key, Value)] = {$/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableMapAdaptor.scala	/^  override def toList: List[(A, B)] = imap.toList$/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableSetAdaptor.scala	/^  override def toList: List[A] = set.toList$/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^  override def toList: List[A] = {$/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MutableList.scala	/^  override def toList: List[A] = if (first0 eq null) Nil else first0.toList$/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SingleLinkedList.scala	/^  override def toList: List[A] = elements toList$/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Stack.scala	/^  override def toList: List[A] = stack.toList$/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/StackProxy.scala	/^  override def toList: List[A] = self.toList$/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  override def toList: List[(A, B)] = synchronized {$/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedSet.scala	/^  override def toList: List[A] = synchronized {$/;"	f
toList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedStack.scala	/^  override def toList: List[A] = synchronized { super.toList }$/;"	f
toLong	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^  def toLong(in: Any): Long = {$/;"	f
toLong	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  def toLong: Long = is match {$/;"	f
toLong	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  def toLong: Long = is match {$/;"	f
toLong	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  private def toLong: Long = is.foldLeft(enum.Set64)((a,b) => a + b.asInstanceOf[enum.Value]).underlyingAsLong$/;"	f
toLong	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  def toLong: Long = is match {$/;"	f
toLong	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Long toLong(Object arg) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
toLong	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  def toLong: Long       = java.lang.Long.parseLong(self)$/;"	f
toLower	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  final def toLower(in: String): String = in match {$/;"	f
toLowerCase	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichChar.scala	/^  def toLowerCase: Char = Character.toLowerCase(x)$/;"	f
toMatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^      val toMatch = req$/;"	V
toMatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^      val toMatch = request$/;"	V
toNFunc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  implicit def toNFunc(in: () => Any): AFuncHolder = NFuncHolder(in, Empty)$/;"	f
toOctalString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichInt.scala	/^  def toOctalString: String = java.lang.Integer.toOctalString(start)$/;"	f
toOctalString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichLong.scala	/^  def toOctalString: String = java.lang.Long.toOctalString(x)$/;"	f
toOptiCons	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BasicTypesHelpers.scala	/^  implicit def toOptiCons(expr: => Boolean): OptionalCons = new OptionalCons(expr)$/;"	f
toOption	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def toOption: Option[A] = None$/;"	f
toOption	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def toOption: Option[A] = Some(value)$/;"	f
toOption	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^    def toOption = e match {$/;"	f
toOrdered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^  implicit def toOrdered(bs: BitSet): Ordered[BitSet] = new Ordered[BitSet] {$/;"	f
toParse	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    val toParse = fixBadWindows(_toParse) match {$/;"	V
toProcess	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^      val toProcess = synchronized {$/;"	V
toQueue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^  def toQueue: Queue[A] = {$/;"	f
toQueue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueueProxy.scala	/^  override def toQueue: Queue[A] = self.toQueue$/;"	f
toRadians	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Math.scala	/^  def toRadians(x: Double): Double = java.lang.Math.toRadians(x)$/;"	f
toRadians	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichDouble.scala	/^  def toRadians: Double = Math.toRadians(x)$/;"	f
toRadians	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichFloat.scala	/^  def toRadians: Float = Math.toRadians(x).toFloat$/;"	f
toRemove	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^        val toRemove = _prev$/;"	V
toRemove	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^      val toRemove: Iterable[String] = tv.flatMap {$/;"	V
toRemove	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^    val toRemove = removed filter {_.saved_?}$/;"	V
toRender	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^    val toRender = renderWhat(true)$/;"	V
toRender	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/builtin/snippet/Menu.scala	/^    val toRender: Seq[MenuItem] = (S.attr("item"), S.attr("group")) match {$/;"	V
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = CreatedResponse(xml, "application\/atom+xml").toResponse$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = InMemoryResponse(Array(), List("Location" -> request.updateWithContextPath(uri)), cookies.toList, 301)$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = InMemoryResponse(Array(), List("Location" -> request.updateWithContextPath(uri)), cookies.toList, 307)$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = InMemoryResponse(Array(), List("Retry-After" -> retryAfter.toString), Nil, 503)$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = InMemoryResponse(Array(), List("WWW-Authenticate" -> ("Basic realm=\\"" + realm + "\\"")), Nil, 401)$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = InMemoryResponse(Array(), headers, cookies, 200)$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = InMemoryResponse(Array(), headers, cookies, 202)$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = InMemoryResponse(Array(), headers, cookies, 204)$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = InMemoryResponse(Array(), headers, cookies, 205)$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = InMemoryResponse(Array(), headers, cookies, 400)$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = InMemoryResponse(Array(), headers, cookies, 405)$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = InMemoryResponse(Array(), headers, cookies, 410)$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = InMemoryResponse(Array(), headers, cookies, 415)$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = InMemoryResponse(Array(), headers, cookies, 500)$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = InMemoryResponse(Array(), headers, cookies, 501)$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = InMemoryResponse(Array(), headers, cookies, 502)$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = InMemoryResponse(Array(0), List("Location" -> uri), cookies toList, 302)$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = InMemoryResponse(message.getBytes("UTF-8"), "Content-Type" -> "text\/plain; charset=utf-8" :: headers, cookies, 403)$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = InMemoryResponse(message.getBytes("UTF-8"), "Content-Type" -> "text\/plain; charset=utf-8" :: headers, cookies, 404)$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = InMemoryResponse(msg.getBytes("UTF-8"), headers, cookies, 406)$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = XmlMimeResponse(xml, "application\/atomcat+xml").toResponse$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = XmlMimeResponse(xml, "application\/atomsvc+xml").toResponse$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = this$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse = {$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  def toResponse: BasicResponse$/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  override def toResponse = InMemoryResponse(Array(), List("WWW-Authenticate" -> ($/;"	f
toResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  def toResponse = {$/;"	f
toRight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Option.scala	/^  def toRight[X](left: => X) =$/;"	f
toRun	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val toRun = {$/;"	V
toRun	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^       val toRun = tables.flatMap(t => ensureTable(performWrite, t, connection, actualTableNames) ) :::$/;"	V
toRun	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^      val toRun =$/;"	V
toSave	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^    val toSave = (added++current) filter {i=>removed.forall(i.ne)}$/;"	V
toSend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/ScriptRenderer.scala	/^	  var toSend = {retryCnt: 0};$/;"	v
toSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Either.scala	/^    def toSeq = e match {$/;"	f
toSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def toSeq: Seq[A] = toList $/;"	f
toSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def toSeq = self.toSeq$/;"	f
toSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  override def toSeq: Seq[A] = this$/;"	f
toSeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/SeqProxy.scala	/^  override def toSeq = self.toSeq$/;"	f
toSet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^    val toSet = v match {$/;"	V
toSet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^    val toSet: String = v match {$/;"	V
toShort	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static Short toShort(Object arg) throws NoSuchMethodException {$/;"	m	class:BoxesRunTime
toShort	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  def toShort: Short     = java.lang.Short.parseShort(self)$/;"	f
toStream	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  def toStream: Stream[A] = Stream.fromIterator(elements)$/;"	f
toStream	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/IterableProxy.scala	/^  override def toStream = self.toStream$/;"	f
toStream	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  override def toStream : Stream[A] = new Stream.Definite[A] {$/;"	f
toStream	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^  override def toStream : Stream[A] = new Stream.Definite[A] {$/;"	f
toStream	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeqProxy.scala	/^  override def toStream: Stream[A] = self.toStream$/;"	f
toStream	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override def toStream = this$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  override def toString = is.toString$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Currency.scala	/^  override def toString = {$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CurrencyZone.scala	/^        override def toString = format("", numberOfFractionDigits)$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^  override def toString = "LZ("+get+")"$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  override def toString = field.uniqueFieldId + " : " + msg$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^  override def toString(sb: StringBuilder) = {$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    override def toString = TimeSpan.format(millis)$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  override def toString = "InMemoryResponse(" + (new String(data, "UTF-8")) + ", " + headers + ", " + cookies + ", " + code + ")"$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  override def toString = "StreamingResponse( steaming_data , " + headers + ", " + cookies + ", " + code + ")"$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    override def toString = is.toString$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  override def toString = screenName$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^    override def toString = "Actor dude " + seqId$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  override def toString = "Req(" + paramNames + ", " + params + ", " + path +$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  override def toString = "AuthenticationScheme(" + code + ")"$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/Role.scala	/^  override def toString = {$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  override def toString(sb: StringBuilder) = {$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  override def toString = "Loc("+name+", "+link+", "+text+", "+params+")"$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthProblemException.scala	/^  override def toString = {$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  override def toString = "PaypalConnection: "+protocol+":"+port$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  override def toString = "PaypalMode: "+domain$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  override def toString = serverName + (exception.map(e => " Exception: " + e.getMessage) openOr "")$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    override def toString = category match {$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    override def toString = line+"."+column$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    override def toString = name+":"+value$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  override def toString() = "ConnectionIdentifier(" + jndiName + ")"$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^    override def toString = executedStatements.reverse.mkString("\\n")$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  override def toString: String = LiftRules.formatDate(is)$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  override def toString: String = LiftRules.formatDate(is)$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  override def toString : String =$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def toString = if (defined_?) super.toString else "NULL"$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^    override def toString() =$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTextarea.scala	/^  override def toString = {$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^    override def toString = {$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  override def toString = if (defined_?) super.toString else "NULL"$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  override def toString = {$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    override def toString = {$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  override def toString = value match {$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/CountryField.scala	/^    override def toString() =$/;"	f
toString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TextareaField.scala	/^  override def toString = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  override def toString(): String = this.bigDecimal.toString()$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def toString(radix: Int): String = this.bigInteger.toString(radix)$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  override def toString(): String = this.bigInteger.toString()$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BufferedIterator.scala	/^    override def toString = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ByNameFunction.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Collection.scala	/^  override def toString = mkString(stringPrefix + "(", ", ", ")")$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    override def toString() =$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  override def toString(): String = updateCache.mkString("{", ", ", "}")$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function0.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function1.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function10.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function11.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function12.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function13.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function14.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function15.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function16.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function17.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function18.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function19.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function2.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function20.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function21.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function22.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function3.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function4.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function5.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function6.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function7.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function8.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function9.scala	/^  override def toString() = "<function>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  override def toString = (if (hasNext) "non-empty" else "empty")+" iterator"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def toString(xs: List[Char]): String = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^    override def toString: String = xs.mkString("")$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Proxy.scala	/^  override def toString: String = self.toString$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^    override def toString =$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  override def toString =$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    override def toString: String = sb.toString$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  override def toString(): String = new String(value, 0, count)$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Symbol.scala	/^  override def toString(): String = "'" + name$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple1.scala	/^   override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple10.scala	/^   override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple11.scala	/^   override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple12.scala	/^   override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple13.scala	/^   override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple14.scala	/^   override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple15.scala	/^   override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple16.scala	/^   override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple17.scala	/^   override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple18.scala	/^   override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple19.scala	/^   override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple2.scala	/^   override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple20.scala	/^   override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple21.scala	/^   override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple22.scala	/^   override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple3.scala	/^   override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple4.scala	/^   override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple5.scala	/^   override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple6.scala	/^   override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple7.scala	/^   override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple8.scala	/^   override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Tuple9.scala	/^   override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^  override def toString() =$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/MapProxy.scala	/^  override def toString() = self.toString()$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/PagedSeq.scala	/^  override def toString = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Queue.scala	/^  override def toString() = mkString("Queue(", ", ", ")")$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/CollectionWrapper.scala	/^  override def toString = underlying.toString;$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^  override def toString = underlying.toString$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSetWrapper.scala	/^  override def toString = super.toString;$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableMapAdaptor.scala	/^  override def toString() = imap.toString()$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableSetAdaptor.scala	/^  override def toString = set.toString$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^    override def toString = "ro-" + Map.this.toString$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Message.scala	/^  override def toString(): String = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/PriorityQueue.scala	/^  override def toString() = toList.mkString("PriorityQueue(", ", ", ")")$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Queue.scala	/^  override def toString() = toList.mkString("Queue(", ", ", ")")$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Set.scala	/^    override def toString = "ro-" + Set.this.toString$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  override def toString() = synchronized {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedPriorityQueue.scala	/^  override def toString(): String = synchronized { super.toString() }$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedQueue.scala	/^  override def toString() = synchronized { super.toString() }$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedSet.scala	/^  override def toString = synchronized {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedStack.scala	/^  override def toString = synchronized { super.toString }$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Position.scala	/^  def toString(pos: Int): String = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/Reference.scala	/^  override def toString = get.map(_.toString).getOrElse("<deleted>")$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/ReferenceQueue.scala	/^  override def toString = underlying.toString$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^      override lazy val toString = erasure.getName$/;"	V
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^      override lazy val toString = parents.mkString(" with ")$/;"	V
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^      override lazy val toString = prefix.toString + "#" + erasure.getName$/;"	V
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^      override lazy val toString = prefix.toString + "#" + name$/;"	V
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^      override lazy val toString = value.toString + ".type"$/;"	V
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^      override lazy val toString =$/;"	V
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BooleanRef.java	/^    public String toString() { return "" + elem; }$/;"	m	class:BooleanRef
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedUnit.java	/^    public String toString() {$/;"	m	class:BoxedUnit
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ByteRef.java	/^    public String toString() { return Byte.toString(elem); }$/;"	m	class:ByteRef
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/CharRef.java	/^    public String toString() { return Character.toString(elem); }$/;"	m	class:CharRef
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/DoubleRef.java	/^    public String toString() { return Double.toString(elem); }$/;"	m	class:DoubleRef
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/FloatRef.java	/^    public String toString() { return Float.toString(elem); }$/;"	m	class:FloatRef
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/IntRef.java	/^    public String toString() { return Integer.toString(elem); }$/;"	m	class:IntRef
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/LongRef.java	/^    public String toString() { return Long.toString(elem); }$/;"	m	class:LongRef
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ObjectRef.java	/^    public String toString() { return "" + elem; }$/;"	m	class:ObjectRef
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^  override def toString = self$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    override def toString() = name$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    override def toString() =$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/DynamicVariable.scala	/^  override def toString: String = "DynamicVariable(" + value  +")"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/DetWordAutom.scala	/^  override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^  override def toString = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    override def toString = matched$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    override def toString = super[Iterator].toString$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^  override def toString = regex$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    override def toString: String =  elements.toList.mkString("[",", ","]")+"!"+id \/\/ TODO show substitution?$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    override def toString: String =  super.toString+"@"+scope.id$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    override def toString: String = "(" + scope.toString + ") in { "+element.toString+" }"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^      override def toString = "|||"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    override def toString = "("+ _1 +"~"+ _2 +")"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    override def toString = "["+next.pos+"] error: "+msg+"\\n\\n"+next.pos.longString$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    override def toString = "["+next.pos+"] failure: "+msg+"\\n\\n"+next.pos.longString$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    override def toString = "["+next.pos+"] parsed: "+result$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    override def toString() = "Parser ("+ name +")"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      override def toString = "|"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      override def toString = "|||"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      override def toString = "~!"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      override def toString = "~"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      override def toString = Parser.this.toString+"^?"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      override def toString = Parser.this.toString+"^^"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      override def toString = UnitParser.this.toString+"^^"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    override def toString = "["+next.pos+"] error: "+msg+"\\n\\n"+next.pos.longString$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    override def toString = "["+next.pos+"] failure: "+msg+"\\n\\n"+next.pos.longString$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^    override def toString = "["+next.pos+"] parsed: "+result$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/NoPosition.scala	/^  override def toString = "<undefined position>"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/OffsetPosition.scala	/^  override def toString = line+"."+column$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/input/Position.scala	/^  override def toString = ""+line+"."+column$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/StdTokens.scala	/^    override def toString = "\\""+chars+"\\""$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/StdTokens.scala	/^    override def toString = "`"+chars+"'"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/StdTokens.scala	/^    override def toString = "identifier "+chars$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/syntax/StdTokens.scala	/^    override def toString = chars$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/regexp/Base.scala	/^    override def toString() = "Eps"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Atom.scala	/^  def toString(sb: StringBuilder) =$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Comment.scala	/^  override def toString(sb: StringBuilder) =$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/EntityRef.scala	/^  override def toString(sb: StringBuilder) = $/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Group.scala	/^  def toString(sb: StringBuilder) =$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def toString(sb: StringBuilder): StringBuilder = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  override def toString(): String = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NamespaceBinding.scala	/^  def toString(sb: StringBuilder, stop: NamespaceBinding): Unit = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NamespaceBinding.scala	/^  def toString(stop: NamespaceBinding): String = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NamespaceBinding.scala	/^  override def toString(): String = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  def toString(stripComment: Boolean): String =$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  override def toString(): String = toString(false)$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^  override def toString(): String = theSeq.elements.foldLeft ("") { $/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  override def toString(): String = ""$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  override def toString(sb: StringBuilder): StringBuilder = sb$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PCData.scala	/^  override def toString(sb: StringBuilder) = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^    override def toString() = "\\\\"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/ProcInstr.scala	/^  override def toString(sb: StringBuilder) = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/SpecialNode.scala	/^  def toString(sb: StringBuilder): StringBuilder$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Text.scala	/^  override def toString(sb: StringBuilder) =$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/TopScope.scala	/^  override def toString() = ""$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/TopScope.scala	/^  override def toString(sb: StringBuilder, ignore: NamespaceBinding) = {}$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/TopScope.scala	/^  override def toString(stop: NamespaceBinding) = ""$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Unparsed.scala	/^  override def toString(sb: StringBuilder) = sb append data$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^    override def toString() = "ElemName(\\""+name+"\\")"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  def toString(c: ContentModel, sb: StringBuilder): StringBuilder = c match {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  def toString(r: RegExp): String = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  def toString(r: RegExp, sb:StringBuilder): StringBuilder = r match {  \/\/ !!! check for match translation problem$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  def toString(sb:StringBuilder): StringBuilder;$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  override def toString(): String = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  override def toString(sb: StringBuilder): StringBuilder =  $/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  override def toString(sb: StringBuilder): StringBuilder =  {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  override def toString(sb: StringBuilder): StringBuilder = sb.append("(#PCDATA)")$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  override def toString(sb: StringBuilder): StringBuilder = sb.append("ANY")$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  override def toString(sb: StringBuilder): StringBuilder = sb.append("EMPTY")$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  private def toString(rs: Seq[RegExp], sb: StringBuilder, sep: Char) {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/DTD.scala	/^  override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^  def toString(sb: StringBuilder): StringBuilder = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^  def toString(sb: StringBuilder): StringBuilder$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^  override def toString(): String = "#IMPLIED"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^  override def toString(): String = "#REQUIRED"$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^  override def toString(): String = $/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^  override def toString(): String$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^  override def toString(sb: StringBuilder) = sb.append("#IMPLIED")$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^  override def toString(sb: StringBuilder) = sb.append("#REQUIRED")$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^  override def toString(sb: StringBuilder): StringBuilder = $/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^  override def toString(sb: StringBuilder): StringBuilder = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/DocType.scala	/^  final override def toString() = {$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ExternalID.scala	/^  def toString(sb: StringBuilder): StringBuilder$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ExternalID.scala	/^  override def toString() = $/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ExternalID.scala	/^  override def toString() =$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ExternalID.scala	/^  override def toString(): String$/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ExternalID.scala	/^  override def toString(sb: StringBuilder): StringBuilder = $/;"	f
toString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ExternalID.scala	/^  override def toString(sb: StringBuilder): StringBuilder = {$/;"	f
toString1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def toString1(): String = {$/;"	f
toString1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def toString1(sb:StringBuilder): Unit$/;"	f
toString1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  def toString1(sb:StringBuilder) = {}$/;"	f
toString1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  override def toString1(): String = ""$/;"	f
toString1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrefixedAttribute.scala	/^  def toString1(sb:StringBuilder): Unit = if(value ne null) {$/;"	f
toString1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/UnprefixedAttribute.scala	/^  def toString1(sb: StringBuilder): Unit = if (value ne null) {$/;"	f
toSuperList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^  implicit def toSuperList[T](in: List[T]): SuperList[T] = new SuperList(in)$/;"	f
toText	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/TextBuffer.scala	/^  def toText: Seq[Text] = {$/;"	f
toTransform	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^      val toTransform: Box[LiftResponse] =$/;"	V
toTry	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  lazy val toTry: List[() => String] = List($/;"	V
toTry	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val toTry = trans.flatMap(f => (LiftRules.buildPackage("view") ::: ("lift.app.view" :: Nil)).map(_ + "." + f(controller)))$/;"	V
toUpper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  final def toUpper(in: String): String = in match {$/;"	f
toUpper	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^  final def toUpper(in: String): String = in match {$/;"	f
toUpperCase	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichChar.scala	/^  def toUpperCase: Char = Character.toUpperCase(x)$/;"	f
toWatchFromPage	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def toWatchFromPage(body: String): List[(String, String)] = {$/;"	f
toWatchUpdates	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def toWatchUpdates(old: Seq[(String, String)], body: String): Seq[(String, String)] = {$/;"	f
toXHtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def toXHtml: NodeSeq = Text(toString)$/;"	f
toXHtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  def toXHtml(inst: BaseRecord): NodeSeq = fieldList.flatMap(holder =>$/;"	f
toXHtml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Record.scala	/^  def toXHtml: NodeSeq = {$/;"	f
toXML	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^  def toXML(n: Node, stripComment: Boolean, convertAmp: Boolean): String = {$/;"	f
toXML	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^  def toXML(n: Node, stripComment: Boolean, convertAmp: Boolean,$/;"	f
toXML	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^  def toXML(x: Node, pscope: NamespaceBinding, sb: StringBuilder,$/;"	f
toXML	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def toXML(n: Node): String = toXML(n, true)$/;"	f
toXML	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def toXML(n: Node, stripComment: Boolean): String = {$/;"	f
toXML	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def toXML(x: Node, pscope: NamespaceBinding, sb: StringBuilder, stripComment: Boolean) {$/;"	f
toXhtml	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Xhtml.scala	/^  def toXhtml(n: Node, stripComment: Boolean, convertAmp: Boolean): String = {$/;"	f
toXhtml	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Xhtml.scala	/^  def toXhtml(x: Node, pscope: NamespaceBinding, sb: StringBuilder, stripComment: Boolean, convertAmp: Boolean): Unit = {$/;"	f
toXml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Xml.scala	/^    def toXml(name: String, json: JValue): NodeSeq = json match {$/;"	f
toXml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Xml.scala	/^  def toXml(json: JValue): NodeSeq = {$/;"	f
toXml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def toXml: Elem = {$/;"	f
toXml	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def toXml(what: A): Elem =$/;"	f
today	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def today  = Calendar.getInstance.noTime$/;"	f
today	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarMonthView.scala	/^      val today = Calendar getInstance (meta locale)$/;"	V
toggle	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JSArtifacts.scala	/^  def toggle(id: String): JsExp$/;"	f
toggle	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JQueryArtifacts.scala	/^  def toggle(id: String) = JqId(id) ~> new JsMethod {$/;"	f
toggle	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^  def toggle(id: String) = new JsExp {$/;"	f
toggleKids	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def toggleKids(head: Elem, visible: Boolean, func: () => JsCmd, kids: Elem): NodeSeq = {$/;"	f
togo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^      val togo: Int = maxInactive - (diff \/ 1000L).toInt$/;"	V
toi	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^      val toi = if (until == None) BufferWrapper.this.size else until.get;$/;"	V
token	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^    var token: Token = null$/;"	v
token	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthNonce.scala	/^    def token = _token.is$/;"	f
token	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    def token = _token.is$/;"	f
token	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^        val token = oauthTokenMeta.create(accessor.oauthConsumer, Full(user), "access", 1, MAX_TTL)$/;"	V
token	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^        val token = oauthTokenMeta.create(consumer, consumer.user, "request")$/;"	V
token	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^      val token = oauthTokenMeta.create(accessor.oauthConsumer, accessor.user, "access", 1, MAX_TTL)$/;"	V
token	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def token: String$/;"	f
token	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/Scanners.scala	/^  def token: Parser[Token]$/;"	f
token	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/StdLexical.scala	/^  def token: Parser[Token] = $/;"	f
token	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/Scanners.scala	/^  def token: Parser[Token]$/;"	f
token	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/StdLexical.scala	/^  def token: Parser[Token] = $/;"	f
token	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Lexer.scala	/^  override def token: Parser[Token] =$/;"	f
token	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Scanner.scala	/^  var token:Int = END$/;"	v
token2string	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Tokens.scala	/^  final def token2string(i: Int): String = i match {$/;"	f
tokenType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    def tokenType = token_type.is$/;"	f
tokenType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def tokenType: String$/;"	f
token_type	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    object token_type extends MappedString(this, 32) {$/;"	o
tonvp	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  implicit def tonvp(in: Seq[(String, String)]): Array[NameValuePair] =$/;"	f
top	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^    override def top: B = elem$/;"	f
top	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Stack.scala	/^  def top: A = throw new NoSuchElementException("no element on stack")$/;"	f
top	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Stack.scala	/^  def top: A =$/;"	f
top	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/StackProxy.scala	/^  override def top: A = self.top$/;"	f
top	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedStack.scala	/^  override def top: A = synchronized { super.top }$/;"	f
topId	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  private var topId = initial$/;"	v
topSnippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def topSnippet (xhtml : NodeSeq) : NodeSeq =  {$/;"	f
top_align	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val top_align : Parser[Attribute] = elem('^') ^^ Align$/;"	V
total	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/test/scala/net/liftweb/common/BoxSpec.scala	/^      var total = 0$/;"	v
total	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Application.scala	/^      val total = currentTime - executionStart$/;"	V
totalColCnt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^      val totalColCnt = field.dbColumnCount$/;"	V
totalHeight	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^    val totalHeight = 2 * Math.max(height, subHeight)$/;"	V
totalSize	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^    val totalSize = size + subSize + 1$/;"	V
touch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LiftActor.scala	/^  private lazy val touch = {$/;"	V
tpath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val tpath = path.partPath$/;"	V
tpe	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^  val tpe = NamedType("scala.Unit")$/;"	V
tpe	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^  val tpe = NamedType(fullname)$/;"	V
tpe	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^  val tpe = NoPrefix$/;"	V
tpe	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^  val tpe = NoType$/;"	V
tpe	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Symbol.scala	/^  val tpe: Type$/;"	V
tr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val tr = cache.get(key)$/;"	V
tr	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^      val tr = findRefs(List(it))$/;"	V
tr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^  val tr = new IdentityTransformer;$/;"	V
tr2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^  val tr2 = new RewriteRule {$/;"	V
tr3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^  val tr3 = new RewriteRule {$/;"	V
tr4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^  val tr4 = new RuleTransformer(tr2, tr3);$/;"	V
trace	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def trace(msg: => AnyRef): Unit = ()$/;"	f
trace	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def trace(msg: => AnyRef, t: => Throwable): Unit = ()$/;"	f
trace	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def trace(msg: => AnyRef) = if (isTraceEnabled) logger.trace(msg)$/;"	f
trace	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def trace(msg: => AnyRef) = rootLogger.trace(msg)$/;"	f
trace	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def trace(msg: => AnyRef, t: => Throwable) = if (isTraceEnabled) logger.trace(msg, t)$/;"	f
trace	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def trace(msg: => AnyRef, t: => Throwable) = rootLogger.trace(msg, t)$/;"	f
trace	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  override def trace(msg: => AnyRef) = if (isTraceEnabled) logger.trace(String.valueOf(msg))$/;"	f
trace	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  override def trace(msg: => AnyRef, t: => Throwable) = if (isTraceEnabled) logger.trace(String.valueOf(msg), t)$/;"	f
trace	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    override def trace(msg: => AnyRef): Unit = logger.trace(msg)$/;"	f
trace	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    override def trace(msg: => AnyRef, t: => Throwable): Unit = logger.trace(msg, t)$/;"	f
trace	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^        val trace = combineStack(e, Nil).takeWhile(e => e.getClassName != myTrace.getClassName || e.getFileName != myTrace.getFileName || e.getMethodName != myTrace.getMethodName).dropRight(2)$/;"	V
trace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^    def trace(): String = thrownException.getStackTraceString$/;"	f
tracing	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/SimpleTokenizer.scala	/^  val tracing = false$/;"	V
trademark	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val trademark: Parser[Textile] =$/;"	V
trans	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val trans = List[String => String](n => n, n => camelCase(n))$/;"	V
trans	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  class State(val name: StV,val trans: Seq[Meta#ATransition]) {$/;"	V
trans	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^      deftrans = deftrans.update(P, Pdef)$/;"	f
trans	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^      val trans = delta(Q)$/;"	V
trans	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    deftrans = deftrans.update(q0,sink);$/;"	f
trans	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    deftrans = deftrans.update(sink,sink);$/;"	f
trans	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^    var deftrans = new TreeMap[BitSet, BitSet]$/;"	f
trans	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^              val trans = delta1(k)$/;"	V
trans	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^      val trans = dm.dfa.delta(qCurrent)$/;"	V
transDef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/SubsetConstruction.scala	/^      val transDef = deftrans(Q)$/;"	V
transactionManager	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^  def transactionManager: TransactionManager  $/;"	f
transactionManager	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/atomikos/AtomikosTransactionService.scala	/^  val transactionManager =$/;"	V
transactionService	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^class TransactionContext(private implicit val transactionService: TransactionService)$/;"	V
transform	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^      override def transform(in: Node): Seq[Node] = in match {$/;"	f
transform	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^              override def transform(n: Node) = n match {$/;"	f
transform	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^        override def transform(n: Node) = n match {$/;"	f
transform	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/FormProcessor.scala	/^    def transform(node: NodeSeq): NodeSeq = {$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  override def transform[S](f : (Int, T) => S) : IntMap[S] = this match {$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  override def transform[S](f : (Long, T) => S) : LongMap[S] = this match {$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^  def transform[C](f: (A, B) => C): Map[A, C] = {$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/SortedMap.scala	/^  override def transform[C](f: (A, B) => C): SortedMap[A, C] = {$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  override def transform[C](f : (Key, Value) => C) : AssocMap[Key, C] = this match {$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  override def transform[C](f : (Key, Value) => C) = {$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    override def transform(f : A => A) = Buffer.this.transform(f)$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  override def transform(f: A => A): Boolean = {$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Collection.scala	/^    override def transform(f : A => A) = Collection.this.transform(f);$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Collection.scala	/^  def transform(f: A => A): Boolean$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^  override def transform(f: A => A) = {$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableMapAdaptor.scala	/^  override def transform(f: (A, B) => B): Unit = { imap = imap.transform(f) }$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^  def transform(f: (A, B) => B) {$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MapProxy.scala	/^  override def transform(f: (A, B) => B) = self transform f$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  override def transform(f : (Key, Value) => Value) =$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  override def transform(f: (A, B) => B): Unit = synchronized {$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^    override def transform(n: Node) = n.match {$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^  def transform(it: Iterator[Node], nb: NodeBuffer): Seq[Node] = {$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^  def transform(n: Node): Seq[Node] = {$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^  def transform(ns: Seq[Node]): Seq[Node] = {$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^  override def transform(n: Node): Seq[Node] = n.match {$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/RewriteRule.scala	/^  override def transform(n: Node): Seq[Node] = n$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/RewriteRule.scala	/^  override def transform(ns: Seq[Node]): Seq[Node] = super.transform(ns)$/;"	f
transform	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/RuleTransformer.scala	/^  override def transform(n: Node): Seq[Node] = {$/;"	f
transient	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/transient.scala	/^class transient extends StaticAnnotation$/;"	c
transition	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  def transition(from: StV, to: StV, why: Meta#Event): Unit = this.currentState(to.id).inProcess(false).save$/;"	f
transitions	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    val transitions = stateInfo(who.state) \/\/ get the transitions$/;"	V
translate	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    private def translate(idx : Int) = {$/;"	f
transparent	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-imaging/src/main/scala/net/liftweb/imaging/ImageHelpers.scala	/^      val transparent = indexColorModel.getRGB(indexColorModel.getTransparentPixel) $/;"	V
transpose	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def transpose[A](xss: List[List[A]]): List[List[A]] = {$/;"	f
traverse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^  protected def traverse(r: RegExp): Unit = r match {$/;"	f
traverse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^  override def traverse(r: RegExp): Unit = r match {$/;"	f
traverse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeTraverser.scala	/^  def traverse(n: Node): Unit = n match {$/;"	f
traverse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  protected def traverse(it: Iterator[Node], scope: NamespaceBinding, ind: Int ): Unit =$/;"	f
traverse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrettyPrinter.scala	/^  protected def traverse(node: Node, pscope: NamespaceBinding, ind: Int): Unit =  node match {$/;"	f
traverse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^    def traverse(r: RegExp) {$/;"	f
traverse	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/Binder.scala	/^  final def traverse(n:Node): Unit = n match {$/;"	f
traverse1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^    def traverse1(xs: Seq[RegExp]) {$/;"	f
trd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def trd(p: (a,b,c)): c = p._3$/;"	f
tree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  protected def tree: aNode = GBLeaf[A,B]()$/;"	f
tree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^  protected val tree: RedBlack[A]#Tree[B] = if (size == 0) Empty else t$/;"	V
tree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^     val tree = this.tree.range(from, until)$/;"	V
tree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeSet.scala	/^  protected val tree: RedBlack[A]#Tree[Unit] = if (size == 0) Empty else t$/;"	V
tree	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Code.scala	/^class Code[Type](val tree: Tree)$/;"	V
treeFunc	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^     val treeFunc : () => LiftResponse = {$/;"	V
treeMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Tests.scala	/^  def treeMap : Unit = {$/;"	f
treeSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Tests.scala	/^  def treeSet : Unit = {$/;"	f
trigger	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    val trigger = timedEventAt.is + when.millis$/;"	V
trim	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  final def trim(in: String): String = in match {$/;"	f
trim	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^  final def trim(in: String): String = in match {$/;"	f
trim	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def trim(x: Node): Node = x match {$/;"	f
trimArr	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  private def trimArr(xs: List[JValue]) = xs.filter(_ != JNothing)$/;"	f
trimEnd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Buffer.scala	/^  def trimEnd(n: Int) {$/;"	f
trimObj	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  private def trimObj(xs: List[JField]) = xs.filter(_.value != JNothing)$/;"	f
trimProper	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def trimProper(x:Node): Seq[Node] = x match {$/;"	f
trimStart	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Buffer.scala	/^  def trimStart(n: Int) {$/;"	f
triple	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def triple[a,b,c](pa: SPU[a], pb: SPU[b], pc: SPU[c]): SPU[(a,b,c)] = {$/;"	f
tripleDESDDecryptStream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def tripleDESDDecryptStream(in: InputStream, key: Array[Byte]): InputStream = tripleDESDecryptStream(in, tripleDESKeyFromBytes(key))$/;"	f
tripleDESDecrypt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def tripleDESDecrypt(enc: Array[Byte], key: Array[Byte]): Array[Byte] = tripleDESDecrypt(enc, tripleDESKeyFromBytes(key))$/;"	f
tripleDESDecrypt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def tripleDESDecrypt(enc: Array[Byte], key: SecretKey): Array[Byte] = readWholeStream(tripleDESDecryptStream(new ByteArrayInputStream(enc), key))$/;"	f
tripleDESDecrypt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def tripleDESDecrypt(enc: String, key: Array[Byte]): String = tripleDESDecrypt(enc, tripleDESKeyFromBytes(key))$/;"	f
tripleDESDecrypt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def tripleDESDecrypt(enc: String, key: SecretKey): String = new String(tripleDESDecrypt(base64Decode(enc), key), "UTF-8")$/;"	f
tripleDESDecryptStream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def tripleDESDecryptStream(in: InputStream, key: SecretKey): InputStream = {$/;"	f
tripleDESEncrypt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def tripleDESEncrypt(plain: Array[Byte], key: Array[Byte]): Array[Byte] = tripleDESEncrypt(plain, tripleDESKeyFromBytes(key))$/;"	f
tripleDESEncrypt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def tripleDESEncrypt(plain: Array[Byte], key: SecretKey): Array[Byte] = readWholeStream(tripleDESEncryptStream(new ByteArrayInputStream(plain), key))$/;"	f
tripleDESEncrypt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def tripleDESEncrypt(plain: String, key: Array[Byte]): String = tripleDESEncrypt(plain, tripleDESKeyFromBytes(key))$/;"	f
tripleDESEncrypt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def tripleDESEncrypt(plain: String, key: SecretKey): String = base64Encode(tripleDESEncrypt(plain.getBytes("UTF-8"), key))$/;"	f
tripleDESEncryptStream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def tripleDESEncryptStream(in: InputStream, key: Array[Byte]): InputStream= tripleDESEncryptStream(in, tripleDESKeyFromBytes(key))$/;"	f
tripleDESEncryptStream	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def tripleDESEncryptStream(in: InputStream, key: SecretKey): InputStream = {$/;"	f
tripleDESKeyFromBytes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^  def tripleDESKeyFromBytes(key: Array[Byte]): SecretKey = new SecretKeySpec(key, "DESede")$/;"	f
tryCatch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/ops.scala	/^  private def tryCatch[A](left: => A): Either[A, Throwable] = {$/;"	f
tryCatch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ExceptionHandling.java	/^  public static Throwable tryCatch(Runnable runnable) {$/;"	m	class:ExceptionHandling
tryCompareTo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/PartiallyOrdered.scala	/^  def tryCompareTo [B >: A <% PartiallyOrdered[B]](that: B): Option[Int]$/;"	f
tryMatch	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/jolib.scala	/^    def tryMatch =$/;"	f
tryRead	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/RollbackIterator.scala	/^  def tryRead[T](f: => Option[T]): Option[T] = {$/;"	f
tryReduction	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/jolib.scala	/^    def tryReduction(x: C) {$/;"	f
trySave	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/lib/SafeSave.scala	/^	def trySave(in: T): Boolean = {$/;"	f
tryit	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  def tryit = (for (res <- parse(example, Some(DefaultRewriter("\/foo")))) yield {$/;"	f
tryo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ControlHelpers.scala	/^  def tryo[T](f: => T): Box[T] = tryo(Nil, Empty)(f)$/;"	f
tryo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ControlHelpers.scala	/^  def tryo[T](handler: PartialFunction[Throwable, T], f: => T): Box[T] = {$/;"	f
tryo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ControlHelpers.scala	/^  def tryo[T](ignore: Class[_])(f: => T): Box[T] = tryo(List(ignore), Empty)(f)$/;"	f
tryo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ControlHelpers.scala	/^  def tryo[T](ignore: List[Class[_]])(f: => T): Box[T] = tryo(ignore, Empty)(f)$/;"	f
tryo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ControlHelpers.scala	/^  def tryo[T](ignore: List[Class[_]], onError: Box[Throwable => Unit])(f: => T): Box[T] = {$/;"	f
tryo	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ControlHelpers.scala	/^  def tryo[T](onError: Throwable => Unit)(f: => T): Box[T] = tryo(Nil, Full(onError))(f)$/;"	f
ts	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val ts = Times(List(new DateTime(123L), new DateTime(234L)))$/;"	V
ts	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^              val ts = System.currentTimeMillis$/;"	V
ts	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^            val ts = System.currentTimeMillis$/;"	V
ts	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^      val ts = new NodeBuffer();$/;"	V
ts	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    val ts = {$/;"	V
ts	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^    var ts = new NodeBuffer$/;"	v
ts2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/SerializationExamples.scala	/^    val ts2 = read[Times](ser)$/;"	V
ttl	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    def ttl = _ttl.is$/;"	f
ttl	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def ttl: Date$/;"	f
tuple22ordered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def tuple22ordered[A1 <% Ordered[A1], A2 <% Ordered[A2]](x: Tuple2[A1, A2]): Ordered[Tuple2[A1, A2]] = $/;"	f
tuple2FieldError	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  implicit def tuple2FieldError(t: (FieldIdentifier, NodeSeq)) = FieldError(t._1, t._2)$/;"	f
tuple2MessageState	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  implicit def tuple2MessageState(msg: (String, NoticeType.Value)) = MessageState(msg)$/;"	f
tuple32ordered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def tuple32ordered[A1 <% Ordered[A1], A2 <% Ordered[A2], A3 <% Ordered[A3]](x: Tuple3[A1, A2, A3]): Ordered[Tuple3[A1, A2, A3]] = $/;"	f
tuple42ordered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def tuple42ordered[A1 <% Ordered[A1], A2 <% Ordered[A2], A3 <% Ordered[A3], A4 <% Ordered[A4]](x: Tuple4[A1, A2, A3, A4]): Ordered[Tuple4[A1, A2, A3, A4]] = $/;"	f
tuple52ordered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def tuple52ordered[A1 <% Ordered[A1], A2 <% Ordered[A2], A3 <% Ordered[A3], A4 <% Ordered[A4], A5 <% Ordered[A5]](x: Tuple5[A1, A2, A3, A4, A5]): Ordered[Tuple5[A1, A2, A3, A4, A5]] = $/;"	f
tuple62ordered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def tuple62ordered[A1 <% Ordered[A1], A2 <% Ordered[A2], A3 <% Ordered[A3], A4 <% Ordered[A4], A5 <% Ordered[A5], A6 <% Ordered[A6]](x: Tuple6[A1, A2, A3, A4, A5, A6]): Ordered[Tuple6[A1, A2, A3, A4, A5, A6]] = $/;"	f
tuple72ordered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def tuple72ordered[A1 <% Ordered[A1], A2 <% Ordered[A2], A3 <% Ordered[A3], A4 <% Ordered[A4], A5 <% Ordered[A5], A6 <% Ordered[A6], A7 <% Ordered[A7]](x: Tuple7[A1, A2, A3, A4, A5, A6, A7]): Ordered[Tuple7[A1, A2, A3, A4, A5, A6, A7]] = $/;"	f
tuple82ordered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def tuple82ordered[A1 <% Ordered[A1], A2 <% Ordered[A2], A3 <% Ordered[A3], A4 <% Ordered[A4], A5 <% Ordered[A5], A6 <% Ordered[A6], A7 <% Ordered[A7], A8 <% Ordered[A8]](x: Tuple8[A1, A2, A3, A4, A5, A6, A7, A8]): Ordered[Tuple8[A1, A2, A3, A4, A5, A6, A7, A8]] = $/;"	f
tuple92ordered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def tuple92ordered[A1 <% Ordered[A1], A2 <% Ordered[A2], A3 <% Ordered[A3], A4 <% Ordered[A4], A5 <% Ordered[A5], A6 <% Ordered[A6], A7 <% Ordered[A7], A8 <% Ordered[A8], A9 <% Ordered[A9]](x: Tuple9[A1, A2, A3, A4, A5, A6, A7, A8, A9]): Ordered[Tuple9[A1, A2, A3, A4, A5, A6, A7, A8, A9]] = $/;"	f
tupled	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function.scala	/^  def tupled[a1, a2, a3, a4, a5, b](f: (a1, a2, a3, a4, a5) => b): Tuple5[a1, a2, a3, a4, a5] => b = {$/;"	f
tupled	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function.scala	/^  def tupled[a1, a2, a3, a4, b](f: (a1, a2, a3, a4) => b): Tuple4[a1, a2, a3, a4] => b = {$/;"	f
tupled	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function.scala	/^  def tupled[a1, a2, a3, b](f: (a1, a2, a3) => b): Tuple3[a1, a2, a3] => b = {$/;"	f
tupled	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function.scala	/^  def tupled[a1, a2, b](f: (a1, a2) => b): Tuple2[a1, a2] => b = {$/;"	f
tuples	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^    val tuples = Array($/;"	V
turi	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    val turi = if (request.uri.length >= contextPath.length) request.uri.substring(contextPath.length) else ""$/;"	V
tv	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LD.scala	/^          val tv = this(root, f(w))$/;"	V
tv	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^      val tv = vals.value$/;"	V
tv	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^        val tv = value(cnt)$/;"	V
tv	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOverview.scala	/^    def tv(in: String) = in+idOverview$/;"	f
tv	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^      case _ => {(inst : T, v : AnyRef) => {val tv = getField(inst, accessor).asInstanceOf[MappedBoolean[T]]; tv.data = Full(toBoolean(v))}}$/;"	V
tv	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^      case null => {(inst : T, v : AnyRef) => {val tv = getField(inst, accessor).asInstanceOf[MappedBoolean[T]]; tv.data = Full(false)}}$/;"	V
tv	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^        case _ => {(inst : T, v : AnyRef) => {val tv = getField(inst, accessor).asInstanceOf[MappedPassword[T]]; tv.password() = (if (v == null) null else v.toString); tv.resetDirty}}$/;"	V
tv	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^        case _ => {(inst : T, v : AnyRef) => {val tv = getField(inst, accessor).asInstanceOf[MappedPassword[T]]; tv.salt_i() = (if (v == null) null else v.toString); tv.resetDirty}}$/;"	V
tv	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^      {(inst : T, v: Long, isNull: Boolean ) => {val tv = getField(inst, accessor).asInstanceOf[MappedPassword[T]]; tv.password() = if (isNull) null else v.toString}}$/;"	V
tv	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^      {(inst : T, v: Long, isNull: Boolean ) => {val tv = getField(inst, accessor).asInstanceOf[MappedPassword[T]]; tv.salt_i() = if (isNull) null else v.toString}}$/;"	V
tv	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^      {(inst : T, v: String ) => {val tv = getField(inst, accessor).asInstanceOf[MappedPassword[T]]; tv.password() = v}}$/;"	V
tv	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^      {(inst : T, v: String ) => {val tv = getField(inst, accessor).asInstanceOf[MappedPassword[T]]; tv.salt_i() = v}}$/;"	V
two	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SecurityHelpers.scala	/^      val two = pos * 2$/;"	V
twoAddresses	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^  val twoAddresses =$/;"	V
txService	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/atomikos/AtomikosTransactionService.scala	/^  private val txService: UserTransactionService = new UserTransactionServiceImp$/;"	V
txnId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val txnId = r.param("txn_id")$/;"	V
txnType	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val txnType = r.param("txn_type")$/;"	V
typeArguments	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^      val typeArguments: Seq[Manifest[_]] = args$/;"	V
typeCode	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    private static int typeCode(Object a) {$/;"	m	class:BoxesRunTime	file:
typeConstructor_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^    def typeConstructor_?(t: Type) = t match {$/;"	f
typeConstructors	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^    def typeConstructors(t: Type, k: Kind): List[(Class[_], Type)] = {$/;"	f
typeHints	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^    override val typeHints = hints$/;"	V
typeHints	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  val typeHints: TypeHints = NoTypeHints$/;"	V
typeHints	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Serialization.scala	/^    override val typeHints = hints$/;"	V
typeParameters	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^    def typeParameters(t: Type, k: Kind): List[Class[_]] = {$/;"	f
typePredicate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    private def typePredicate[A <: JValue](clazz: Class[A])(json: JValue) = json match {$/;"	f
typePredicate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/JsonASTTest.scala	/^  private def typePredicate(clazz: Class[_])(json: JValue) = json match {$/;"	f
typeTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Atom.scala	/^  final override def typeTag$: Int = -1$/;"	f
typeTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Comment.scala	/^  final override def typeTag$: Int = -3$/;"	f
typeTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Elem.scala	/^  final override def typeTag$: Int = 0$/;"	f
typeTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/EntityRef.scala	/^  final override def typeTag$: Int = -5$/;"	f
typeTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  def typeTag$: Int = 0$/;"	f
typeTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/ProcInstr.scala	/^  final override def typeTag$: Int = -2$/;"	f
types	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^          val types = typeConstructors(t, k)(valueTypeIndex)$/;"	V
types	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^      def types(i: Int) = {$/;"	f
types	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val types = Array[AnyClass]() $/;"	V
types	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val types = Array[AnyClass](p._2)$/;"	V
types	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val types = Array[AnyClass](p0._2, p1._2)$/;"	V
types	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val types = Array[AnyClass](p0._2, p1._2, p2._2)$/;"	V
types	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val types = Array[AnyClass](p0._2, p1._2, p2._2, p3._2)$/;"	V
types	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val types = Array[AnyClass](p0._2, p1._2, p2._2, p3._2, p4._2)$/;"	V
types	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val types = Array[AnyClass](p0._2, p1._2, p2._2, p3._2, p4._2, p5._2)$/;"	V
types	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val types = Array[AnyClass](p0._2, p1._2, p2._2, p3._2, p4._2, p5._2, p6._2)$/;"	V
types	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val types = Array[AnyClass](p0._2, p1._2, p2._2, p3._2, p4._2, p5._2, p6._2, p7._2)$/;"	V
types	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val types = Array[AnyClass](p0._2, p1._2, p2._2, p3._2, p4._2, p5._2, p6._2, p7._2, p8._2)$/;"	V
u	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/rssfeed/RSSfeed.scala	/^    val u = new URL(feedUrl)$/;"	V
u	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/CollectionWrapper.scala	/^    val u = underlying;$/;"	V
uc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/ResourceServer.scala	/^        val uc = url.openConnection$/;"	V
uc	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncludeFilter.scala	/^      val uc = source.openConnection()$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-actor/src/main/scala/net/liftweb/actor/LAFuture.scala	/^  def satisfy(value: T): Unit = synchronized {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^    case value: AnyRef =>$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def apply[InType, OutType](pf: PartialFunction[InType, OutType])(value: InType): Box[OutType] =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  def apply[InType, OutType](value: InType)(pf: PartialFunction[InType, OutType]): Box[OutType] =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^  override def ===[B >: A](to: B): Boolean = value == to$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/Box.scala	/^final case class Full[+A](value: A) extends Box[A] {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  def update(key: K, value: V) {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  protected def expired(key: K, value: V) {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  case class JBool(value: Boolean) extends JValue {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  case class JField(name: String, value: JValue) extends JValue {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  def render(value: JValue): Document = value match {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^        val value = s.toString$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case class BoolVal(value: Boolean) extends Token$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case class DoubleVal(value: Double) extends Token$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case class IntVal(value: BigInt) extends Token$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^  case class StringVal(value: String) extends Token$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Xml.scala	/^    def makeField(name: String, value: String) = JField(name, JString(value))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Xml.scala	/^  private[json] class XmlElem(name: String, value: String) extends Elem(null, name, xml.Null, TopScope, Text(value))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  def set(key: K, value: V): Unit = coreVar.doSync {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  def setIsUnset(value: => T): T = doSync {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  def update(key: K, value: V): Unit = set(key,value)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  protected def setFunc(name: String, value: T): Unit$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def -->(value: Any): BindParam = TheBindParam(name, Text(if (value == null) "null" else value.toString))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def -->(value: Box[NodeSeq]): BindParam = TheBindParam(name, value.openOr(Text("Empty")))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def -->(value: NodeSeq): BindParam = TheBindParam(name, value)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def -->(value: String): BindParam = TheBindParam(name, Text(value))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^    def -->(value: Symbol): BindParam = TheBindParam(name, Text(value.name))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class BooleanBindParam(name: String, value: Boolean) extends Tuple2[String, Boolean](name, value) with BindParam {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class BoxBindParam(name: String, value: Box[NodeSeq]) extends Tuple2(name, value) with BindParam {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class FuncAttrBindParam(name: String, value: NodeSeq => NodeSeq, newAttr: String) extends BindParam with BindWithAttr {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class FuncBindParam(name: String, value: NodeSeq => NodeSeq) extends Tuple2(name, value) with BindParam {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class IntBindParam(name: String, value: Int) extends Tuple2[String, Int](name, value) with BindParam {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class LongBindParam(name: String, value: Long) extends Tuple2[String, Long](name, value) with BindParam {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class OptionBindParam(name: String, value: Option[NodeSeq]) extends Tuple2(name, value) with BindParam {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class SymbolBindParam(name: String, value: Symbol) extends Tuple2(name, value) with BindParam {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class TheBindParam(name: String, value: NodeSeq) extends Tuple2(name, value) with BindParam {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class TheBindableBindParam[T <: Bindable](name: String, value: T) extends Tuple2[String, T](name, value) with BindParam {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  final case class TheStrBindParam(name: String, value: String) extends Tuple2(name, value) with BindParam {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  private def setElemId(in: NodeSeq, attr: String, value: Seq[Node]): NodeSeq =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/EnumWithDescription.scala	/^        val value = enum.Value(name, description)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^      case _ => value = Full(f)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^    value = Full(v)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^    value = other.value$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^  def reset = synchronized {value = Empty}$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^  private val value = new ThreadGlobal[TheType]$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^  private var value: Box[T] = Empty$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^    val value: Option[NodeSeq] = in._2 match {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/KeyedCache.scala	/^  def update(key: K, value: T) = cache.update(key, value)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^    <priority value ="INFO"\/>$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  def apply[T](value: T): Maker[T] = new Maker[T]{implicit def make: Box[T] = Full(value)}$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  def doWith[F](value: T)(f: => F): F =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  implicit def valToVender[T](value: T): Vendor[T] = apply(value)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/NamedPartialFunction.scala	/^  def applyBox[A, B](value: A, lst: Seq[PartialFunction[A, B]]): Box[B] =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/NamedPartialFunction.scala	/^  def apply[A, B](value: A, lst: Seq[PartialFunction[A, B]]): B =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/NamedPartialFunction.scala	/^  def find[A, B](value: A, lst: Seq[PartialFunction[A, B]]):$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/NamedPartialFunction.scala	/^  def isDefinedAt[A, B](value: A, lst: Seq[PartialFunction[A, B]]): Boolean =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^      val value = xAttributeValue()$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ThreadGlobal.scala	/^  def value: T = threadLocal.get$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/VCardParser.scala	/^  case class VCardEntry(key: VCardKey, value: List[String])$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/VCardParser.scala	/^  lazy val value = (multiLineSep ~> elem("value", {c => !c.isControl && c != ';'}) <~ multiLineSep).* ^^ {case l => l.mkString}$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BindHelpersSpec.scala	/^                     <input type="checkbox" name="F893599644556MN4" value="true"\/>) ) must ==\/(<t><input><\/input><input name="F893599644556MN4" type="checkbox" value="true" id="acceptTerms"><\/input><\/t>)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BindHelpersSpec.scala	/^        <option value="7">week<\/option><option value="30">month<\/option> }$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BindHelpersSpec.scala	/^      bind("user", <t><input name="user:tag" type="submit" value="press me"\/><\/t>, "tag" -> <input name="111222" type="submit"\/>) must ==\/(<t><input name="111222" type="submit" value="press me"><\/input><\/t>)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Factory.scala	/^        value = v$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Factory.scala	/^      private var value = _default$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    def set[T](name: String, from: ScreenVar[_], value: T): Unit =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    override protected def setFunc(name: String, value: T): Unit = ScreenVarHandler.set(name, this, value)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def set(value: String) {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[liftweb] def set[T](name: String, value: T): Unit = sessionVarSync.synchronized {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    case (map, (key, value)) => map + (key -> (value :: map.getOrElse(key, Nil)))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^case class NormalParamHolder(name: String, value: String) extends ParamHolder$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def addFunctionMap(name: String, value: AFuncHolder) = _functionMap.value += (name -> value)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def set(name: String, value: String) = session.foreach(_.set(name, value))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def setHeader(name: String, value: String) {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def setSessionAttribute(name: String, value: String) = containerSession.foreach(_.setAttribute(name, value))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^                                checked(actual.contains(p._1)) ++ (if (p._2 == 0) (<input type="hidden" name={name} value="-1"\/>) else Nil))))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^                        attrs.foldLeft(<input type="checkbox" name={name} value={p._2.toString}\/>)(_ % _) %$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^                    (attrs.foldLeft(<input type="checkbox" name={name} value="true"\/>)(_ % _) % checked(value) % setId(id))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^                attrs.foldLeft(<input type="radio" name={name} value={v}\/>)(_ % _) %$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^              (attrs.foldLeft(<input type="text" value={value}\/>)(_ % _)) %$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^              (attrs.foldLeft(<select>{opts.flatMap {case (value, text) => (<option value={value}>{text}<\/option>) % selected(deflt.exists(_ == value))}}<\/select>)(_ % _)) %$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^            (<input type="hidden" name={name} value="false"\/>) ++$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^            attrs.foldLeft(<select multiple="true" name={funcName}>{opts.flatMap(o => (<option value={o._1}>{o._2}<\/option>) % selected(deflt.contains(o._1)))}<\/select>)(_ % _))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^            attrs.foldLeft(<select name={funcName}>{opts.flatMap {case (value, text) => (<option value={value}>{text}<\/option>) % selected(deflt.exists(_ == value))}}<\/select>)(_ % _))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^        <input type="button" onclick={swapJsCmd(dispName,editName).toJsCmd + " return false;"} value={S.??("cancel")} \/>$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^        <input type="submit" value={S.??("ok")} \/> ++$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^      <input value={S.??("edit")} type="button" onclick={setAndSwap(editName, editMarkup, dispName).toJsCmd + " return false;"} \/>$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    (attrs.foldLeft(<input type="text" value={value}\/>)(_ % _)) %$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    attrs.foldLeft(fmapFunc(testFunc)(fn => <select name={fn}>{opts.flatMap {case (value, text) => (<option value={value}>{text}<\/option>) % selected(deflt.exists(_ == value))}}<\/select>))(_ % _)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    val raw = (funcName: String, value: String) => JsRaw("'" + funcName + "=' + " + value + ".checked")$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    val raw = (funcName: String, value: String) => JsRaw("'" + funcName + "=' + encodeURIComponent(" + value + ".value)")$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    val raw = (funcName: String, value: String) => JsRaw("'" + funcName + "=' + this.options[" + value + ".selectedIndex].value")$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxCheckbox(value: Boolean, func: Boolean => JsCmd, attrs: (String, String)*): Elem =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxCheckbox(value: Boolean, jsFunc: Call, func: Boolean => JsCmd, attrs: (String, String)*): Elem =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxSubmit(value: String, func: () => JsCmd, attrs: (String, String)*): Elem = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxText(value: String, func: String => JsCmd, attrs: (String, String)*): Elem = ajaxText_*(value, Empty, SFuncHolder(func), attrs: _*)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def ajaxText(value: String, jsFunc: Call, func: String => JsCmd, attrs: (String, String)*): Elem = ajaxText_*(value, Full(jsFunc), SFuncHolder(func), attrs: _*)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def checkbox(value: Boolean, func: Boolean => Any, attrs: (String, String)*): NodeSeq = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def checkbox_id(value: Boolean, func: Boolean => Any,$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def jsonText(value: String, cmd: String, json: JsonCall, attrs: (String, String)*): Elem =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def jsonText(value: String, json: JsExp => JsCmd, attrs: (String, String)*): Elem = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def password(value: String, func: String => Any, attrs: (String, String)*): Elem =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def submit(value: String, func: () => Any, attrs: (String, String)*): Elem = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def text(value: String, func: String => Any, attrs: (String, String)*): Elem =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def textAjaxTest(value: String, func: String => Any, ajaxTest: Box[String => JsCmd], attrs: (String, String)*): Elem =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def textAjaxTest(value: String, func: String => Any, ajaxTest: String => JsCmd, attrs: (String, String)*): Elem =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def textarea(value: String, func: String => Any, attrs: (String, String)*): Elem =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SimpleController.scala	/^  def set(name: String, value: String) {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  override protected def setFunc(name: String, value: T): Unit = RequestVarHandler.set(name, this, value)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  override protected def setFunc(name: String, value: T): Unit = S.session match {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  override protected def setFunc(name: String, value: T): Unit = TransientRequestVarHandler.set(name, this, value)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  private[http] def set[T](name: String, from: MyType, value: T): Unit =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^        "y.value = " + value.encJs + "; " +$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^        (if (value == dflt) "y.selected = true; " else "") +$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = "document.getElementById(" + id.encJs + ").value = " +$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def apply(name: JsExp, value: JsExp): JsExp with JQueryRight with JQueryLeft =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^    def toJsCmd = "document.getElementById(" + id.encJs + ").value = " +$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class JqAttr(key: String, value: JsExp) extends JsExp with JQueryRight with JQueryLeft {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/jquery/JqJsCmds.scala	/^  case class SetValueAndFocus(id: String, value: String) extends JsCmd {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPContext.scala	/^  def setAttribute(name: String, value: Any): Unit$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPCookie.scala	/^                      value: Box[String],$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPCookie.scala	/^  def apply(name: String, value: String) = new HTTPCookie(name, Full(value), Empty, Empty, Empty, Empty, Empty)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPParam.scala	/^  def apply(name: String, value: String) = new HTTPParam(name, List(value))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPSession.scala	/^  def setAttribute(name: String, value: Any)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletContext.scala	/^  def setAttribute(name: String, value: Any) {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletSession.scala	/^  def setAttribute(name: String, value: Any) = session setAttribute (name, value)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^        override def createLink(value: Unit): Box[NodeSeq] = Full(Text(url))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^      override def createLink(value: Unit): Box[NodeSeq] = Full(Text(url))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    def createLink(value: T): Box[NodeSeq] = Full(Text(createPath(value)))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    def createPath(value: T): String = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^    def pathList(value: T): List[String] = uriList$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def apply(key: String, value: Any) = new FacebookParam(key, value)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^class FacebookParam(val key: String, val value: Any){$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuth.scala	/^  final case class Parameter(name: String, value: String)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthValidator.scala	/^        case (map, next) => map + (next.name -> (next.value :: map.getOrElse(next.name, Nil)))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^                 "submit" -> (<input type="submit" value={S.??("log.in")}\/>))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^                    <input type="hidden" name={key} value={value}\/>$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^  def setAttribute(key: String, value: Any) = attr += (key -> value)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def putValue(key: String, value: Any) = values += (key -> value)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def setAttribute(key: String, value: Any) = attr += (key -> value)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class AnyAttribute(name : String, value : String) extends Attribute {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  case class StyleElem(name : String, value : String) extends Textile {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^          attrs.foldLeft(<input type="text" id={id} value={start} \/>)(_ % _)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^        <input type="hidden" name={hidden} id={hidden} value={defaultNonce.openOr("")} \/>$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^        <input type="hidden" name={hidden} id={hidden} value={start} \/>$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^        <input type="text" id={id} value={default.openOr("")} \/>$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def c[T](name: String,value: Box[T])(implicit cvt: T => JsExp):$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    def set[T](name: String, from: WizardVar[_], value: T): Unit =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    override protected def setFunc(name: String, value: T): Unit = WizardVarHandler.set(name, this, value)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    <option selected="true" value={JsRaw("it[1]")}>{JsRaw("it[0]")}<\/option>,$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    <option selected="true" value={v._2.toString}>{v._1}<\/option>,$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    <option selected="true" value={v.id}>{v.toString}<\/option>,$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    <option value={JsRaw("it[1]")}>{JsRaw("it[0]")}<\/option> ))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    <option value={v._2.toString}>{v._1}<\/option> )$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    <option value={v.id}>{v.toString}<\/option> )$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def theCall(value: JsExp) = jsonCall(FieldId, JsVar("it", meta.primaryKeyField.name), value)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    value={JsVar("it", field.name)} \/>$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^    case value => JsonAST.JString(base64Encode(value))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def real_convertToJDBCFriendly(value: Array[Byte]): Object = value$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  def real_convertToJDBCFriendly(value: String): Object = value match {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  protected def real_i_set_!(value : Array[Byte]) : Array[Byte] = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  protected def real_i_set_!(value: String): String = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  def real_convertToJDBCFriendly(value: Boolean): Object = new _root_.java.lang.Integer(if (value) 1 else 0)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  protected def real_i_set_!(value : Boolean) : Boolean = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^      value={toString}\/>)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  def real_convertToJDBCFriendly(value: Date): Object = if (value == null) null else new _root_.java.sql.Date(value.getTime)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  protected def real_i_set_!(value: Date): Date = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^      value={toString}\/>)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  def real_convertToJDBCFriendly(value: Date): Object = if (value == null) null else new _root_.java.sql.Timestamp(value.getTime)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  protected def real_i_set_!(value: Date): Date = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  def real_convertToJDBCFriendly(value: BigDecimal): Object = value.bigDecimal$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  def this(fieldOwner : T, value : BigDecimal) = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  def this(fieldOwner : T, value : BigDecimal, context : MathContext) = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  protected def real_i_set_!(value : BigDecimal): BigDecimal = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	def real_convertToJDBCFriendly(value: Double): Object = new _root_.java.lang.Double(value)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	protected def real_i_set_!(value : Double): Double = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^        value={is match {case null => "" case s => s.toString}}\/>)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def set(value: FieldType): FieldType = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def setFromAny(value: Any): FieldType$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def set_?(value: Box[FieldType]): Box[FieldType] = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  final def convertToJDBCFriendly(value: FieldType): Object = real_convertToJDBCFriendly(runFilters(value, setFilter))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  protected def real_convertToJDBCFriendly(value: FieldType): Object$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  protected def real_i_set_!(value: FieldType): FieldType$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  protected final def i_set_!(value: FieldType): FieldType = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def real_convertToJDBCFriendly(value: ENUM#Value): Object = new _root_.java.lang.Integer(value.id)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  def real_convertToJDBCFriendly(value: Int): Object = new _root_.java.lang.Integer(value)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  protected def real_i_set_!(value : Int) : Int = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  protected def real_i_set_!(value: ENUM#Value): ENUM#Value = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def real_convertToJDBCFriendly(value: Box[Long]): Object = value match {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def real_convertToJDBCFriendly(value: Long): Object = new _root_.java.lang.Long(value)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  def real_convertToJDBCFriendly(value: Seq[ENUM#Value]): Object = new _root_.java.lang.Long(Helpers.toLong(value))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  protected def real_i_set_!(value : Long): Long = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  protected def real_i_set_!(value: Box[Long]): Box[Long] = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  protected def real_i_set_!(value: Seq[ENUM#Value]): Seq[ENUM#Value] = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^            value={is.toString}\/>&nbsp;{S.??("repeat")}&nbsp;<input$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^            value={is.toString}\/><\/span>)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  def real_convertToJDBCFriendly(value: String): Object = hash("{"+value+"} salt={"+salt_i.get+"}")$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  protected def real_i_set_!(value : String) : String = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^        value={is match {case null => "" case s => s.toString}}\/>)}$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def real_convertToJDBCFriendly(value: String): Object = value$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def valMaxLen(len: Int, msg: => String)(value: String): List[FieldError] =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def valMinLen(len: Int, msg: => String)(value: String): List[FieldError] =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def valRegex(pat: Pattern, msg: => String)(value: String): List[FieldError] = pat.matcher(value).matches match {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def valUnique(msg: => String)(value: String): List[FieldError] =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  protected def real_i_set_!(value : String) : String = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^      value={is match {case null => "" case s => toInternetDate(s)}}\/>)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  def real_convertToJDBCFriendly(value: Date): Object = if (value == null) null else new _root_.java.sql.Time(value.getTime)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  protected def real_i_set_!(value: Date): Date = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^    (<input type='hidden' name={name} value="n\/a" \/>)} ++$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^    S.fmapFunc((ignore: List[String]) => doSubmit())(name => <input type='hidden' name={name} value="n\/a" \/>) ++$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^      (param, value :: _) <- req.params;$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[O <: Mapper[O], T, U <% T](field: MappedField[T, O], value: U) = Cmp[O,T](field, <, Full(value), Empty, Empty)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[O <: Mapper[O], T, U <% T](field: MappedField[T, O], value: U) = Cmp[O,T](field, <>, Full(value), Empty, Empty)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[O <: Mapper[O], T, U <% T](field: MappedField[T, O], value: U) = Cmp[O,T](field, >, Full(value), Empty, Empty)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[O <: Mapper[O], T, U <% T](field: MappedField[T, O], value: U) = Cmp[O,T](field, Eql, Full(value), Empty, Empty)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[O <: Mapper[O], T](field: MappedNullableField[T, O], value: Box[T]) = value match {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[O <: Mapper[O],T,  Q <: KeyedMapper[T, Q]](field: MappedForeignKey[T, O, Q], value: Q) =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[O <: Mapper[O],T, Q <: KeyedMapper[T, Q]](field: MappedForeignKey[T, O, Q], value: Box[Q]) =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def apply[O <: Mapper[O]](field: MappedField[String, O], value: String) =$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^final case class Cmp[O<:Mapper[O], T](field: MappedField[T,O], opr: OprEnum.Value, value: Box[T],$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^  val valHasObj = (value: Long) =>$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^         "submit" -> (<input type="submit" value={S.??("log.in")}\/>))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^         "submit" -> <input type="submit" value={S.??("send.it")} \/>)$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def ===(other: KeyField[MyType, OwnerType]): Boolean = this.value == other.value$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def value: MyType = synchronized {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Record.scala	/^    ((button.map(b => (<input type="submit" value={b}\/>)) openOr scala.xml.Text("")))$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BinaryField.scala	/^  def this(rec: OwnerType, value: Array[Byte]) = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/BooleanField.scala	/^  def this(rec: OwnerType, value: Boolean) = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DateTimeField.scala	/^      value={value match {case null => "" case s: Calendar => toInternetDate(s.getTime)}}$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DateTimeField.scala	/^  def this(rec: OwnerType, value: Calendar) = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DecimalField.scala	/^  def this(rec : OwnerType, value : BigDecimal) = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DecimalField.scala	/^  def this(rec : OwnerType, value : BigDecimal, context : MathContext) = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EmailField.scala	/^  def this(rec: OwnerType, maxLength: Int, value: String) = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EmailField.scala	/^  def this(rec: OwnerType, value: String) = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EnumField.scala	/^  override protected def set_!(value: ENUM#Value): ENUM#Value = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/IntField.scala	/^  def this(rec: OwnerType, value: Int) = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/NumericField.scala	/^      }}}{funcName => <input type="text" name={funcName} value={value.toString}$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^      value={value match {case null => "" case s => s.toString}}$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^      value={value match {case null => "" case s => s.toString}}$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^  def this(rec: OwnerType, maxLength: Int, value: String) = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^  def this(rec: OwnerType, value: String) = {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^  def valRegex(pat: Pattern, msg: => String)(value: String): Box[Node] = pat.matcher(value).matches match {$/;"	V
ue	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/TextareaField.scala	/^    if (value == null || value.length < 100) super.toString$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^    inVar.value = new BufferedReader(reader)$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def setOut(out: PrintStream) { outVar.value = out }$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def &~(value: Value) = new Set32(underlying & (~value.mask32))$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def &~(value: Value) = new Set64(underlying & (~value.mask64))$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def &~(value: Value): TSet$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def +(value: Value): TSet = this | value$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def -(value: Value): TSet = this &~ value$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def contains(value: Value) = (underlying & value.mask32) != 0$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def contains(value: Value) = (underlying & value.mask64) != 0$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def |(value: Value) = new Set32(underlying | value.mask32)$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def |(value: Value) = new Set64(underlying | value.mask64)$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def |(value: Value): TSet$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  case class singleton[A](value: A) extends RandomAccessSeq[A] {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    value = StringBuilder.copyOf($/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^    value = s.readObject().asInstanceOf[Array[Char]]$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  private var value = new Array[Char](initCapacity + initValue.length)$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^          case Some(otherval) => value == otherval$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/EmptyMap.scala	/^  def update [B1 >: B](key: A, value: B1): Map[A, B1] = $/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^        else if (m.deltaSize == 0) findEntry(m.oldKey).value = m.oldValue.get$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^      e.value = value$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^  def update [B1 >: B](key: A, value: B1): Map[A, B1] = synchronized {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def singleton[T](key : Int, value : T) : IntMap[T] = IntMap.Tip(key, value);$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def updateWith[S >: T](key : Int, value : S, f : (T, S) => S) : IntMap[S] = this match {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def update[S >: T](key : Int, value : S) : IntMap[S] = this match {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  private[immutable] case class Tip[+T](key : Int, value : T) extends IntMap[T]{$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^                                override protected val value: B1) extends ListMap[A, B1] {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^  def update [B1 >: B](key: A, value: B1): ListMap[A, B1] = new Node(key, value)$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^  protected def value: B = throw new NoSuchElementException("empty map")$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def singleton[T](key : Long, value : T) : LongMap[T] = LongMap.Tip(key, value);$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def updateWith[S >: T](key : Long, value : S, f : (T, S) => S) : LongMap[S] = this match {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def update[S >: T](key : Long, value : S) : LongMap[S] = this match {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  private[immutable] case class Tip[+T](key : Long, value : T) extends LongMap[T]{$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^    def -> [B1 >: B](value: B1) = update(key, value)$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^    def update [B2 >: B1](key: A, value: B2): Map[A, B2] = $/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^  def update [B1 >: B] (key: A, value: B1): Map[A, B1]$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map1.scala	/^  def update [B1 >: B](key: A, value: B1): Map[A, B1] = $/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map2.scala	/^  def update [B1 >: B](key: A, value: B1): Map[A, B1] = $/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map3.scala	/^  def update [B1 >: B](key: A, value: B1): Map[A, B1] = $/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map4.scala	/^  def update [B1 >: B](key: A, value: B1): Map[A, B1] = $/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^                           override val value: B,$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^                         override val value: B,$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def value: B$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/SortedMap.scala	/^  override def update [B1 >: B] (key: A, value: B1): SortedMap[A, B1]$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^                                             value: B,$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def insert(key: A, value: B, s: Int): anInsertTree = {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def insert(key: A, value: B, size: Int): anInsertTree$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def insertLeft(key: A, value: B, bigger: GBTree[A,B]) =$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def insertRight(key: A, value: B, smaller: GBTree[A,B]) =$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def update(key: A, value: B) = throw new NoSuchElementException("key " + key + " not found")$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def update(key: A, value: B): aNode$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^        if (value == value2) Some(tail);$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  def singleton[Key, Value](key : Key, value : Value) = Cons(key, value, empty);$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  def update[S >: Value](key : Key, value : S) : AssocMap[Key, S] = this match {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  def update[S >: Value](key : Key, value : S) : TreeHashMap[Key, S] = TreeHashMap($/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  private def removeKeyValue(key : Any, value : Any) : Option[AssocMap[Key, Value]] = this match {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  private[collection] case class Cons[S, +T](key : S, value : T, tail : AssocMap[S, T]) extends AssocMap[S, T]$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^  def insert [B1 >: B](key: A, value: B1): TreeMap[A, B1] = {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^  def update [B1 >: B](key: A, value: B1): TreeMap[A, B1] = {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^                           override protected val value: B,$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^  def insert[B1 >: B](key: A, value: B1) = add(key, value)$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^  def update[B1 >: B](key: A, value: B1) = add(key, value)$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^  protected def add [B1 >: B](key: A, value: B1) = new Node(key, value, this, this)$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^  protected def value: B = throw new NoSuchElementException("empty map")$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/DefaultEntry.scala	/^final class DefaultEntry[A, B](val key: A, var value: B) $/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/DefaultMapModel.scala	/^    else e.value = value$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/DefaultMapModel.scala	/^  def update(key: A, value: B) {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableMapAdaptor.scala	/^  def update(key: A, value: B): Unit = { imap = imap.update(key, value) }$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashMap.scala	/^      e.value = value$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashMap.scala	/^  override def put(key: A, value: B): Option[B] = {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashMap.scala	/^  override def update(key: A, value: B) { put(key, value) }$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^    def ->(value: B) { update(key, value) }$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^  def update(key: A, value: B)$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MapProxy.scala	/^  override def update(key: A, value: B): Unit = self.update(key, value)$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MultiMap.scala	/^  def add(key: A, value: B): Unit = get(key) match {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MultiMap.scala	/^  def remove(key: A, value: B) = get(key) match {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ObservableMap.scala	/^  abstract override def update(key: A, value: B): Unit = get(key) match {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^                                           var value : Option[Value])$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^      entry.value = Some(value);$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^      if (entry.value == None) { size += 1; modCount += 1 }$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^      table(index).value = None;$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^      while((index <= mask) && (table(index) == null || table(index).value == None)) index+=1;$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^    foreachUndeletedEntry(entry => entry.value = Some(f(entry.key, entry.value.get)));$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^    foreachUndeletedEntry(entry => if (!f(entry.key, entry.value.get)) {entry.value = None; size -= 1; deleted += 1} );$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  def update(key : Key, value : Value){$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  private def update(key : Key, hash : Int, value : Value) {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  abstract override def update(key: A, value: B): Unit = synchronized {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/SyncVar.scala	/^    value = x$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/SyncVar.scala	/^  private var value: A = _$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^  private def boxValue(value: Any) = value match {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/PhantomReference.scala	/^class PhantomReference[+T <: AnyRef](value: T, queue: ReferenceQueue[T]) extends ReferenceWrapper[T] {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/SoftReference.scala	/^  def this(value : T) = this(value, null);$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/SoftReference.scala	/^class SoftReference[+T <: AnyRef](value : T, queue : ReferenceQueue[T]) extends ReferenceWrapper[T] {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/WeakReference.scala	/^  def this(value: T) = this(value, null)$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/WeakReference.scala	/^class WeakReference[+T <: AnyRef](value: T, queue: ReferenceQueue[T]) extends ReferenceWrapper[T] {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Manifest.scala	/^  def singleType[T](value: Any): Manifest[T] =$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/reflect/Tree.scala	/^case class Literal(value: Any) extends Tree$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^        val newvalue = new Array[Boolean](length)$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^        val newvalue = new Array[Byte](length)$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^        val newvalue = new Array[Char](length)$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^        val newvalue = new Array[Double](length)$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^        val newvalue = new Array[Float](length)$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^        val newvalue = new Array[Int](length)$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^        val newvalue = new Array[Long](length)$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^        val newvalue = new Array[Short](length)$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  def value: AnyRef = {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  def value: AnyRef$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedBooleanArray.scala	/^    other.isInstanceOf[BoxedBooleanArray] && value == other.asInstanceOf[BoxedBooleanArray].value$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedBooleanArray.scala	/^    value == other ||$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedBooleanArray.scala	/^final class BoxedBooleanArray(val value: Array[Boolean]) extends BoxedArray {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedByteArray.scala	/^    other.isInstanceOf[BoxedByteArray] && value == other.asInstanceOf[BoxedByteArray].value$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedByteArray.scala	/^    value == other ||$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedByteArray.scala	/^final class BoxedByteArray(val value: Array[Byte]) extends BoxedArray {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedCharArray.scala	/^    other.isInstanceOf[BoxedCharArray] && value == other.asInstanceOf[BoxedCharArray].value$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedCharArray.scala	/^    value == other ||$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedCharArray.scala	/^final class BoxedCharArray(val value: Array[Char]) extends BoxedArray {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedDoubleArray.scala	/^    other.isInstanceOf[BoxedDoubleArray] && value == other.asInstanceOf[BoxedDoubleArray].value$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedDoubleArray.scala	/^    value == other ||$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedDoubleArray.scala	/^final class BoxedDoubleArray(val value: Array[Double]) extends BoxedArray {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedFloatArray.scala	/^    other.isInstanceOf[BoxedFloatArray] && value == other.asInstanceOf[BoxedFloatArray].value$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedFloatArray.scala	/^    value == other ||$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedFloatArray.scala	/^final class BoxedFloatArray(val value: Array[Float]) extends BoxedArray {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedIntArray.scala	/^    other.isInstanceOf[BoxedIntArray] && value == other.asInstanceOf[BoxedIntArray].value$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedIntArray.scala	/^    value == other ||$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedIntArray.scala	/^final class BoxedIntArray(val value: Array[Int]) extends BoxedArray {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedLongArray.scala	/^    other.isInstanceOf[BoxedLongArray] && value == other.asInstanceOf[BoxedLongArray].value$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedLongArray.scala	/^    value == other ||$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedLongArray.scala	/^final class BoxedLongArray(val value: Array[Long]) extends BoxedArray {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedObjectArray.scala	/^    other.isInstanceOf[BoxedObjectArray] && value == other.asInstanceOf[BoxedObjectArray].value$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedObjectArray.scala	/^    value == other ||$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedObjectArray.scala	/^final class BoxedObjectArray(val value: Array[AnyRef]) extends BoxedArray {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedShortArray.scala	/^    other.isInstanceOf[BoxedShortArray] && value == other.asInstanceOf[BoxedShortArray].value$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedShortArray.scala	/^    value == other ||$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedShortArray.scala	/^final class BoxedShortArray(val value: Array[Short]) extends BoxedArray {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/NonLocalReturnException.scala	/^class NonLocalReturnException[T](val key: AnyRef, val value: T) extends RuntimeException {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/ScalaRunTime.scala	/^  def boxArray(value: AnyRef): BoxedArray = value match {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/DynamicVariable.scala	/^  def value: T = tl.get.asInstanceOf[T]$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def substitute(b: binderType, value: Element): Unit = substitution(b) = value$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/JSON.scala	/^      case (key : String, value : Any) =>$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/JSON.scala	/^      case (key: String, value: List[_]) =>$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Parser.scala	/^  def value: Parser[Any] = (jsonObj | jsonArray | number | "true" ^^^ true | "false" ^^^ false | "null" ^^^ null | stringVal)$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def value: Seq[Node]$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  def value = null$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrefixedAttribute.scala	/^                        val value: Seq[Node],$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrefixedAttribute.scala	/^  def this(pre: String, key: String, value: String, next: MetaData) = $/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrefixedAttribute.scala	/^  def this(pre: String, key: String, value: scala.AllRef, next: MetaData) = $/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/UnprefixedAttribute.scala	/^  def this(key: String, value: Option[Seq[Node]], next: MetaData) = $/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/UnprefixedAttribute.scala	/^  def this(key: String, value: String, next: MetaData) = $/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/UnprefixedAttribute.scala	/^class UnprefixedAttribute(val key: String, val value: Seq[Node], next1: MetaData) extends MetaData {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def checkAttributeValue(value: String): String = {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  def parseAttributeValue(value: String): Seq[Node] = {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Decl.scala	/^case class IntDef(value:String) extends EntityDef {$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Scanner.scala	/^    value = ""$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Scanner.scala	/^    value = sb.toString()$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Scanner.scala	/^  var value:String = _$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ValidationException.scala	/^  def fromFixedAttribute(k: String, value: String, actual: String) =$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/include/sax/XIncluder.scala	/^        val value = atts.getValue(i);$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^      val value = attributes.getValue(i)$/;"	V
ue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^      val value = xAttributeValue()$/;"	V
ue1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^        val what = new LinkedListElem[K, V] {def value1 = key}$/;"	V
ue1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  private[common] def value1: K = throw new NullPointerException("Foo")$/;"	V
ue1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  private[common] def value1: T1$/;"	V
ue1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map1.scala	/^class Map1[A, +B](key1: A, value1: B) extends Map[A, B] {$/;"	V
ue2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^      v.value2 = value$/;"	V
ue2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^      what.value2 = value$/;"	V
ue2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  private[common] var value2: T2 = _$/;"	V
ue2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^      def append(value1: JValue, value2: JValue): JValue = (value1, value2) match {$/;"	V
ue2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def intersection[R](that : IntMap[R]) : IntMap[T] = this.intersectionWith(that, (key : Int, value : T, value2 : R) => value);$/;"	V
ue2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def intersection[R](that : LongMap[R]) : LongMap[T] = this.intersectionWith(that, (key : Long, value : T, value2 : R) => value);$/;"	V
ue2	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map2.scala	/^class Map2[A, +B](key1: A, value1: B, key2: A, value2: B) extends Map[A, B] {$/;"	V
ue3	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map3.scala	/^class Map3[A, +B](key1: A, value1: B, key2: A, value2: B, key3: A, value3: B) extends Map[A, B] {$/;"	V
ue4	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map4.scala	/^class Map4[A, +B](key1: A, value1: B, key2: A, value2: B, key3: A, value3: B, key4: A, value4: B) extends Map[A, B] {$/;"	V
ueCouldNotBeSet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^      valueCouldNotBeSet = false$/;"	V
ueCouldNotBeSet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^      valueCouldNotBeSet = true$/;"	V
ueCouldNotBeSet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def couldNotSetValue = valueCouldNotBeSet = true$/;"	V
ueCouldNotBeSet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  private[record] var valueCouldNotBeSet = false$/;"	V
ueCouldNotBeSet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DecimalField.scala	/^      case e: Exception => valueCouldNotBeSet = true; Empty$/;"	V
ueCouldNotBeSet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DoubleField.scala	/^      case e: Exception => valueCouldNotBeSet = true; Empty$/;"	V
ueCouldNotBeSet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/IntField.scala	/^      case e: Exception => valueCouldNotBeSet = true; Empty$/;"	V
ueCouldNotBeSet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/LongField.scala	/^      case e: Exception => valueCouldNotBeSet = true; Empty$/;"	V
ueCouldNotBeSet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/NumericField.scala	/^        case Empty => valueCouldNotBeSet = true$/;"	V
ueName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^  case class JsVal(valueName: String) extends JsMethod {$/;"	V
ueSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^  def valueSet : MutableIterable.Projection[E] = projection.map(_._2);$/;"	V
ueSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^  override def valueSet: MutableIterable.Projection[E] = new ValueSet$/;"	V
ueTypeIndex	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^      def mkContainer(t: Type, k: Kind, valueTypeIndex: Int, factory: Mapping => Mapping) = $/;"	V
ue_	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/DynamicVariable.scala	/^  def value_=(newval: T) = { tl.set(newval) }$/;"	V
ues	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def values = (name, value.values)$/;"	V
ues	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def values = Map() ++ obj.map(_.values : (String, Any))$/;"	V
ues	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def values = None$/;"	V
ues	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def values = arr.map(_.values)$/;"	V
ues	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def values = null$/;"	V
ues	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def values = num$/;"	V
ues	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def values = s$/;"	V
ues	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def values = value$/;"	V
ues	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def values: Values$/;"	V
ues	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/EnumWithDescription.scala	/^        _values = _values ::: List(value)  \/\/ build in order$/;"	V
ues	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/EnumWithDescription.scala	/^    def values = _values$/;"	V
ues	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/EnumWithDescription.scala	/^    private var _values: List[Value] = Nil$/;"	V
ues	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPParam.scala	/^case class HTTPParam(name: String, values: List[String])$/;"	V
ues	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  val values = new _root_.scala.collection.jcl.HashMap[String, Any](new _root_.java.util.HashMap)$/;"	V
ues	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/Flot.scala	/^  def renderValues(values: List[(Double, Double)]): JsExp =$/;"	V
ues	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def values: List[(String, FieldType)] = enum$/;"	V
ues	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def values: List[Enum#Value] = enum.elements.toList$/;"	V
ues	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  private val values: Map[Int, Value] = new HashMap$/;"	V
ues	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^  def values: Iterator[B] = new Iterator[B] {$/;"	V
ues	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/MapProxy.scala	/^  override def values = self.values$/;"	V
ues	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  override def values : Iterator[T] = this match {$/;"	V
ues	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  override def values : Iterator[T] = this match {$/;"	V
ues	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableMapAdaptor.scala	/^  override def values: Iterator[B] = imap.values$/;"	V
ues	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^  override def values: Iterator[B] = new Iterator[B] {$/;"	V
ues	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  override def values: Iterator[B] = synchronized {$/;"	V
ufixedList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def ufixedList[A](pa: PU[A])(n: Int): PU[List[A]] = {$/;"	f
ui	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^    val ui = LiftRules.jsArtifacts$/;"	V
uid	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/Facebook.scala	/^    def uid: Option[String] = S.param("fb_sig_user")$/;"	f
uid	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^    def uid: Option[String]$/;"	f
uid	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^    val uid = (response \\\\ "uid").text$/;"	V
uid	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^class FacebookSession(val key: String, val expiration: Long, val uid: String)$/;"	V
ulift	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def ulift[t](x: t): PU[t] = new PU[t] {$/;"	f
ulist	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def ulist[a](pa: PU[a]): PU[List[a]] =$/;"	f
unCamelCase	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ClassHelpers.scala	/^  def unCamelCase(name : String) = {$/;"	f
unWatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def unWatch = partialUpdate(Call("liftComet.lift_unlistWatch", uniqueId))$/;"	f
unapply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^  def unapply[T](in: LZ[T]): Option[T] = Some(in.get)$/;"	f
unapply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Helpers.scala	/^  def unapply(any: Any) : Option[Seq[Node]] = any match {$/;"	f
unapply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^  def unapply(in: Any): Option[NodeSeq] = in match {$/;"	f
unapply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  def unapply(in: Any): Option[Any] = in match {$/;"	f
unapply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/RE.scala	/^  def unapply(in: REMatcher): Option[List[String]] = Some(in.capture)$/;"	f
unapply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def unapply(in: Any): Option[(String, String, String, Array[Byte])] = in match {$/;"	f
unapply	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def unapply(in: Req): Option[(List[String], String, RequestType)] = Some((in.path.partPath, in.path.suffix, in.requestType))$/;"	f
unapply	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    def unapply(in: NodeSeq): Option[Elem] = in match {$/;"	f
unapply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^  def unapply(obj : Any) = obj match {$/;"	f
unapply	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def unapply(in: NodeSeq): Option[Elem] = in match {$/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^    def unapply[A, B, C](x: Tuple3[A, B, C]): Option[Tuple3[A, B, C]] = Some(x)$/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^    def unapply[A, B](x: Tuple2[A, B]): Option[Tuple2[A, B]] = Some(x)$/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product1.scala	/^  def unapply[T1](x: Product1[T1]): Option[Product1[T1]] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product10.scala	/^  def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10](x: Product10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]): Option[Product10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product11.scala	/^  def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11](x: Product11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]): Option[Product11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product12.scala	/^  def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12](x: Product12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]): Option[Product12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product13.scala	/^  def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13](x: Product13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]): Option[Product13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product14.scala	/^  def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14](x: Product14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]): Option[Product14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product15.scala	/^  def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15](x: Product15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]): Option[Product15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product16.scala	/^  def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16](x: Product16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]): Option[Product16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product17.scala	/^  def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17](x: Product17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]): Option[Product17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product18.scala	/^  def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18](x: Product18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]): Option[Product18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product19.scala	/^  def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19](x: Product19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]): Option[Product19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product2.scala	/^  def unapply[T1, T2](x: Product2[T1, T2]): Option[Product2[T1, T2]] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product20.scala	/^  def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20](x: Product20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]): Option[Product20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product21.scala	/^  def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21](x: Product21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]): Option[Product21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product22.scala	/^  def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22](x: Product22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]): Option[Product22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product3.scala	/^  def unapply[T1, T2, T3](x: Product3[T1, T2, T3]): Option[Product3[T1, T2, T3]] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product4.scala	/^  def unapply[T1, T2, T3, T4](x: Product4[T1, T2, T3, T4]): Option[Product4[T1, T2, T3, T4]] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product5.scala	/^  def unapply[T1, T2, T3, T4, T5](x: Product5[T1, T2, T3, T4, T5]): Option[Product5[T1, T2, T3, T4, T5]] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product6.scala	/^  def unapply[T1, T2, T3, T4, T5, T6](x: Product6[T1, T2, T3, T4, T5, T6]): Option[Product6[T1, T2, T3, T4, T5, T6]] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product7.scala	/^  def unapply[T1, T2, T3, T4, T5, T6, T7](x: Product7[T1, T2, T3, T4, T5, T6, T7]): Option[Product7[T1, T2, T3, T4, T5, T6, T7]] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product8.scala	/^  def unapply[T1, T2, T3, T4, T5, T6, T7, T8](x: Product8[T1, T2, T3, T4, T5, T6, T7, T8]): Option[Product8[T1, T2, T3, T4, T5, T6, T7, T8]] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Product9.scala	/^  def unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9](x: Product9[T1, T2, T3, T4, T5, T6, T7, T8, T9]): Option[Product9[T1, T2, T3, T4, T5, T6, T7, T8, T9]] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^    def unapply[A](str: Stream[A]): Option[(A, Stream[A])] =$/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^    def unapply[A](xs: Stream[A]): Option[(A, Stream[A])] = $/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Symbol.scala	/^  def unapply(other: Symbol): Option[String] = Some(other.name)$/;"	f
unapply	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^    def unapply(m: Match): Some[String] = Some(m.matched)$/;"	f
unapplySeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^   def unapplySeq[A](x: Array[A]): Option[Seq[A]] = Some(x)$/;"	f
unapplySeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def unapplySeq[A](x: List[A]): Some[List[A]] = Some(x)$/;"	f
unapplySeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Seq.scala	/^  def unapplySeq[A](x: Seq[A]): Some[Seq[A]] = Some(x)$/;"	f
unapplySeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  def unapplySeq[A](xs: Stream[A]): Option[Seq[A]] = Some(xs)$/;"	f
unapplySeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/matching/Regex.scala	/^  def unapplySeq(target: Any): Option[List[String]] = target match {$/;"	f
unapplySeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Elem.scala	/^  def unapplySeq(n:Node) = if (n.isInstanceOf[SpecialNode] || n.isInstanceOf[Group]) None else$/;"	f
unapplySeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/HasKeyValue.scala	/^  def unapplySeq(x: MetaData): Option[Seq[Node]] = x.get(key)$/;"	f
unapplySeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  def unapplySeq(n: Node) = Some(Tuple3(n.label, n.attributes, n.child))$/;"	f
unapplySeq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/QNode.scala	/^  def unapplySeq(n:Node) = Some (Tuple4(n.scope.getURI(n.prefix), n.label, n.attributes, n.child))$/;"	f
unary_	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigDecimal.scala	/^  def unary_- : BigDecimal = new BigDecimal(this.bigDecimal.negate())$/;"	f
unary_	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/BigInt.scala	/^  def unary_- : BigInt   = new BigInt(this.bigInteger.negate())$/;"	f
unat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def unat: PU[Int] = new PU[Int] {$/;"	f
unauthorizedResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  def unauthorizedResponse: UnauthorizedResponse = UnauthorizedResponse(realm)$/;"	f
unauthorizedResponse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  override def unauthorizedResponse = {$/;"	f
unbox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  def unbox(elemClass: Class[_]): AnyRef = synchronized {$/;"	f
unbox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  def unbox(elemTag: String): AnyRef =$/;"	f
unbox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  def unbox(elemClass: Class[_]): AnyRef$/;"	f
unbox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  def unbox(elemTag: String): AnyRef$/;"	f
unbox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedBooleanArray.scala	/^  def unbox(elemClass: Class[_]): AnyRef = value$/;"	f
unbox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedBooleanArray.scala	/^  def unbox(elemTag: String): AnyRef = value$/;"	f
unbox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedByteArray.scala	/^  def unbox(elemClass: Class[_]): AnyRef = value$/;"	f
unbox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedByteArray.scala	/^  def unbox(elemTag: String): AnyRef = value$/;"	f
unbox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedCharArray.scala	/^  def unbox(elemClass: Class[_]): AnyRef = value$/;"	f
unbox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedCharArray.scala	/^  def unbox(elemTag: String): AnyRef = value$/;"	f
unbox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedDoubleArray.scala	/^  def unbox(elemClass: Class[_]): AnyRef = value$/;"	f
unbox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedDoubleArray.scala	/^  def unbox(elemTag: String): AnyRef = value$/;"	f
unbox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedFloatArray.scala	/^  def unbox(elemClass: Class[_]): AnyRef = value$/;"	f
unbox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedFloatArray.scala	/^  def unbox(elemTag: String): AnyRef = value$/;"	f
unbox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedIntArray.scala	/^  def unbox(elemClass: Class[_]): AnyRef = value$/;"	f
unbox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedIntArray.scala	/^  def unbox(elemTag: String): AnyRef = value$/;"	f
unbox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedLongArray.scala	/^  def unbox(elemClass: Class[_]): AnyRef = value$/;"	f
unbox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedLongArray.scala	/^  def unbox(elemTag: String): AnyRef = value$/;"	f
unbox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedObjectArray.scala	/^  def unbox(elemClass: Class[_]): AnyRef = value$/;"	f
unbox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedObjectArray.scala	/^  def unbox(elemTag: String): AnyRef = value$/;"	f
unbox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedShortArray.scala	/^  def unbox(elemClass: Class[_]): AnyRef = value$/;"	f
unbox	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedShortArray.scala	/^  def unbox(elemTag: String): AnyRef = value$/;"	f
unboxToBoolean	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static boolean unboxToBoolean(Object b) {$/;"	m	class:BoxesRunTime
unboxToByte	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static byte unboxToByte(Object b) {$/;"	m	class:BoxesRunTime
unboxToChar	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static char unboxToChar(Object c) {$/;"	m	class:BoxesRunTime
unboxToDouble	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static double unboxToDouble(Object d) {$/;"	m	class:BoxesRunTime
unboxToFloat	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static float unboxToFloat(Object f) {$/;"	m	class:BoxesRunTime
unboxToInt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static int unboxToInt(Object i) {$/;"	m	class:BoxesRunTime
unboxToLong	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static long unboxToLong(Object l) {$/;"	m	class:BoxesRunTime
unboxToShort	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxesRunTime.java	/^    public static short unboxToShort(Object s) {$/;"	m	class:BoxesRunTime
unboxed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  private var unboxed: AnyRef = null$/;"	v
unchanged	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/transform/BasicTransformer.scala	/^  protected def unchanged(n: Node, ns: Seq[Node]) =$/;"	f
unchecked	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/unchecked.scala	/^class unchecked extends Annotation {}$/;"	c
uncheckedStable	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/annotation/unchecked/uncheckedStable.scala	/^final class uncheckedStable extends StaticAnnotation {}$/;"	c
uncheckedVariance	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/annotation/unchecked/uncheckedVariance.scala	/^final class uncheckedVariance extends StaticAnnotation {}$/;"	c
unconvertCollection	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Conversions.scala	/^  implicit def unconvertCollection[T](set : CollectionWrapper[T]) = set.underlying$/;"	f
unconvertList	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Conversions.scala	/^  implicit def unconvertList[T](set : BufferWrapper[T]) = set.underlying$/;"	f
unconvertMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Conversions.scala	/^  implicit def unconvertMap[T,E](set : MapWrapper[T,E]) = set.underlying$/;"	f
unconvertSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Conversions.scala	/^  implicit def unconvertSet[T](set : SetWrapper[T]) = set.underlying$/;"	f
unconvertSortedMap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Conversions.scala	/^  implicit def unconvertSortedMap[T,E](set : SortedMapWrapper[T,E]) = set.underlying$/;"	f
unconvertSortedSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Conversions.scala	/^  implicit def unconvertSortedSet[T](set : SortedSetWrapper[T]) = set.underlying$/;"	f
uncurried	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function.scala	/^  def uncurried[a1, a2, a3, a4, a5, b](f: a1 => a2 => a3 => a4 => a5 => b): (a1, a2, a3, a4, a5) => b  =  {$/;"	f
uncurried	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function.scala	/^  def uncurried[a1, a2, a3, a4, b](f: a1 => a2 => a3 => a4 => b): (a1, a2, a3, a4) => b = {$/;"	f
uncurried	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function.scala	/^  def uncurried[a1, a2, a3, b](f: a1 => a2 => a3 => b): (a1, a2, a3) => b = {$/;"	f
uncurried	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function.scala	/^  def uncurried[a1, a2, b](f: a1 => a2 => b): (a1, a2) => b = {$/;"	f
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^       override def underlying = Projection.this$/;"	f
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^      var underlying = underlyingAsLong$/;"	v
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    val underlying: Underlying$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  class Set32(val underlying: Int) extends SetXX {$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  class Set64(val underlying: Long) extends SetXX {$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      def underlying = Mutable.this$/;"	f
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    def underlying = RandomAccessSeq.this$/;"	f
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    protected def underlying : Mutable[A]$/;"	f
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    protected def underlying : RandomAccessSeq[A]$/;"	f
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/BitSet.scala	/^  def underlying : Array[Int] = {$/;"	f
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^class TreeHashMap[Key, +Value] private (private val underlying : IntMap[AssocMap[Key, Value]]) extends scala.collection.immutable.Map[Key, Value]{$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/ArrayList.scala	/^class ArrayList[A](override val underlying : java.util.ArrayList[A]) extends BufferWrapper[A]  {$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^      val underlying = Buffer.this.elements;$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^    val underlying = list$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^    val underlying = {$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/BufferWrapper.scala	/^  def underlying : java.util.List[A];$/;"	f
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/CollectionWrapper.scala	/^  def underlying : java.util.Collection[A];$/;"	f
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/HashMap.scala	/^class HashMap[K, E](override val underlying: java.util.HashMap[K, E]) extends MapWrapper[K, E] {$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/HashSet.scala	/^class HashSet[A](override val underlying: java.util.HashSet[A]) extends SetWrapper[A] {$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Hashtable.scala	/^class Hashtable[K,E](override val underlying: java.util.Hashtable[K,E]) extends MapWrapper[K,E] {$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/IdentityHashMap.scala	/^class IdentityHashMap[K, E](override val underlying : java.util.IdentityHashMap[K, E]) extends MapWrapper[K, E] {$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/IterableWrapper.scala	/^  def underlying: java.util.Collection[A];$/;"	f
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/LinkedHashMap.scala	/^class LinkedHashMap[K, E](override val underlying: java.util.LinkedHashMap[K, E]) extends MapWrapper[K, E] {$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/LinkedHashSet.scala	/^class LinkedHashSet[A](override val underlying: java.util.LinkedHashSet[A]) extends SetWrapper[A] {$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/LinkedList.scala	/^class LinkedList[A](override val underlying : java.util.LinkedList[A]) extends BufferWrapper[A]  {$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^    val underlying = map0$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^    val underlying = MapWrapper.this.underlying.entrySet.iterator$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^    val underlying = MapWrapper.this.underlying.keySet$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^    val underlying = MapWrapper.this.underlying.values$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^  def underlying: java.util.Map[K, E]$/;"	f
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MutableIterator.scala	/^  class Wrapper[A](val underlying : java.util.Iterator[A]) extends MutableIterator[A] {$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Set.scala	/^    val underlying = set$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SetWrapper.scala	/^  def underlying: java.util.Set[A];$/;"	f
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMap.scala	/^    val underlying = map0$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMapWrapper.scala	/^    val underlying = SortedMapWrapper.this.underlying.keySet;$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMapWrapper.scala	/^    val underlying = Tuple2(from,until) match {$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedMapWrapper.scala	/^  override def underlying : java.util.SortedMap[K,E];$/;"	f
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSet.scala	/^    val underlying = set$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSetWrapper.scala	/^    val underlying = Tuple2(from,until) match {$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/SortedSetWrapper.scala	/^  def underlying : java.util.SortedSet[A];$/;"	f
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/TreeMap.scala	/^      override val underlying =$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/TreeMap.scala	/^  val underlying = (new java.util.TreeMap[K, E](new Comparator[K]))$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/TreeSet.scala	/^      override val underlying =$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/TreeSet.scala	/^  val underlying = new java.util.TreeSet[A](new Comparator[A])$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/WeakHashMap.scala	/^class WeakHashMap[K, E](override val underlying: java.util.WeakHashMap[K, E]) extends MapWrapper[K, E] {$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/PhantomReference.scala	/^  val underlying: java.lang.ref.PhantomReference[_ <: T] = $/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/ReferenceQueue.scala	/^  private[ref] val underlying: java.lang.ref.ReferenceQueue[_ <: T] = new java.lang.ref.ReferenceQueue[T]$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/ReferenceQueue.scala	/^  protected class Wrapper[U <: AnyRef](val underlying: java.lang.ref.Reference[U]) extends ReferenceWrapper[U]$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/ReferenceWrapper.scala	/^  val underlying: java.lang.ref.Reference[_ <: T]$/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/SoftReference.scala	/^  val underlying: java.lang.ref.SoftReference[_ <: T] = $/;"	V
underlying	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/ref/WeakReference.scala	/^  val underlying: java.lang.ref.WeakReference[_ <: T] = $/;"	V
underlying0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^        val underlying0 = (~(1 << 31)) & underlying$/;"	V
underlyingAsLong	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def underlyingAsLong = underlying$/;"	f
underlyingAsLong	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    def underlyingAsLong = {$/;"	f
underlyingAsLong	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    protected def underlyingAsLong: Long$/;"	f
underlyingClassname	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^    override val underlyingClassname = "java.sql.PreparedStatement"$/;"	V
underlyingClassname	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/LoggingStatementWrappers.scala	/^    val underlyingClassname = "java.sql.Statement"$/;"	V
underscoredStrings	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^  val underscoredStrings = for {length <- choose(0, 4)$/;"	V
underscoresNumber	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^      def underscoresNumber(name: String, i: Int) = if (i == 0) 0 else name.substring(0, i).toList.count(_ == '_')$/;"	f
undo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^    def undo(m: HashMap[A, B]) {$/;"	f
undo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashSet.scala	/^    def undo(m: HashSet[A]) {$/;"	f
undo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ObservableMap.scala	/^        def undo = -=(key)$/;"	f
undo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ObservableMap.scala	/^        def undo = update(key, old)$/;"	f
undo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ObservableMap.scala	/^      def undo: Unit = throw new UnsupportedOperationException("cannot undo") $/;"	f
undo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ObservableSet.scala	/^      def undo: Unit = throw new UnsupportedOperationException("cannot undo") $/;"	f
undo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ObservableSet.scala	/^    publish(new Include(elem) with Undoable { def undo = -=(elem) })$/;"	f
undo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ObservableSet.scala	/^    publish(new Remove(elem) with Undoable { def undo = +=(elem) })$/;"	f
undo	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/RevertableHistory.scala	/^  def undo: Unit = {$/;"	f
unescape	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  final def unescape(ref: String, s: StringBuilder): StringBuilder = $/;"	f
unicodeBlock	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Lexer.scala	/^  private def unicodeBlock = hexDigit ~ hexDigit ~ hexDigit ~ hexDigit ^^ {$/;"	f
union	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def union[B >: A](that: List[B]): List[B] = {$/;"	f
unionWith	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def unionWith[S >: T](that : IntMap[S], f : (Int, S, S) => S) : IntMap[S] = (this, that) match{$/;"	f
unionWith	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def unionWith[S >: T](that : LongMap[S], f : (Long, S, S) => S) : LongMap[S] = (this, that) match{$/;"	f
uniqueFieldId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  def uniqueFieldId: Box[String] = Empty$/;"	f
uniqueFieldId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    override lazy val uniqueFieldId: Box[String] = Full(Helpers.hash(this.getClass.getName))$/;"	V
uniqueFieldId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  override def uniqueFieldId: Box[String] =$/;"	f
uniqueFieldId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  override def uniqueFieldId: Box[String] = Full(name+"_id")$/;"	f
uniqueId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def uniqueId: String$/;"	f
uniqueId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  val uniqueId = Helpers.nextFuncName$/;"	V
uniqueId	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^class LiftSession(private[http] val _contextPath: String, val uniqueId: String,$/;"	V
uniqueId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^        val uniqueId = if (Log.isDebugEnabled) Helpers.nextNum.toString else ""$/;"	V
uniqueId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  object uniqueId extends MappedUniqueId(this, 32) {$/;"	o
unit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  @deprecated type unit    = scala.Unit$/;"	T
unit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^    def unit[bt <: NameElement, elementT <% Mappable[elementT]](x: elementT) = UnderBinder(new Scope[bt](), x)$/;"	f
unit2ordered	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Predef.scala	/^  implicit def unit2ordered(x: Unit): Ordered[Unit] = new Ordered[Unit] with Proxy {$/;"	f
universal_key	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^        val universal_key = getUniversalKey(md, scope)$/;"	V
unlink	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPSession.scala	/^  def unlink(liftSession: LiftSession)$/;"	f
unlink	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletSession.scala	/^  def unlink(liftSession: LiftSession) = session.removeAttribute(LiftMagicID)$/;"	f
unlinked	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    private var unlinked: List[O] = Nil$/;"	v
unloadHooks	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val unloadHooks = RulesSeq[() => Unit]$/;"	V
unmangleName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  private[json] def unmangleName(f: Field) = $/;"	f
unmangledNames	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Meta.scala	/^  private val unmangledNames = new Memo[String, String]$/;"	V
unmatchedEventHandler	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^     def unmatchedEventHandler(who: MyType, state: Meta#State) {$/;"	f
unmatchedEventHandler	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^     override def unmatchedEventHandler(who: MyType, state: Meta#State) {$/;"	f
unmatchedEventHandler	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    def unmatchedEventHandler(who: MyType, state: Meta#State, event: Event) {$/;"	f
unmatchedHandler	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    def unmatchedHandler: Box[(MyType, Meta#State, Event) => Any] = Empty$/;"	f
unown	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    protected def unown(e: T2) = {$/;"	f
unown	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    override def unown(e: O) = {$/;"	f
unown	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    protected def unown(e: O) = {$/;"	f
unowned	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^      val unowned = removed.filter{ e =>$/;"	V
unparsedEntities	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Document.scala	/^  def unparsedEntities: Seq[scala.xml.dtd.EntityDecl] = $/;"	f
unparsedEntities	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/DTD.scala	/^  def unparsedEntities: Seq[EntityDecl] = Nil$/;"	f
unparsedEntityDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^  def unparsedEntityDecl(name: String, extID: ExternalID, notat: String): Unit =$/;"	f
unparsedEntityDecl	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ValidatingMarkupHandler.scala	/^  final override def unparsedEntityDecl(name: String, extID: ExternalID, notat: String) {$/;"	f
unpickle	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def unpickle[T](p: SPU[T], stream: Array[Byte]): T =$/;"	f
unquote	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^  def unquote(str: String) = {$/;"	f
unregisterThisSnippet	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/StatefulSnippet.scala	/^  def unregisterThisSnippet() =  names.foreach(n => S.unsetSnippetForClass(n))$/;"	f
unsealed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/unsealed.scala	/^@deprecated class unsealed extends Annotation$/;"	c
unsequence	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/ast/Binders.scala	/^  def unsequence[bt <: NameElement, st <% Mappable[st]](orig: UnderBinder[bt, List[st]]): List[UnderBinder[bt, st]] = $/;"	f
unset	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[liftweb] def unset(name: String): Unit = sessionVarSync.synchronized {$/;"	f
unset	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def unset(name: String) = session.foreach(_.unset(name))$/;"	f
unset	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SimpleController.scala	/^  def unset(name: String) {$/;"	f
unset	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/SyncVar.scala	/^  def unset(): Unit = synchronized {$/;"	f
unsetSessionAttribute	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def unsetSessionAttribute(name: String) = containerSession.foreach(_.removeAttribute(name))$/;"	f
unsetSnippetForClass	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private[http] def unsetSnippetForClass(cls: String): Unit =$/;"	f
unsignedCompare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def unsignedCompare(i : Int, j : Int) = (i < j) ^ (i < 0) ^ (j < 0)$/;"	f
unsignedCompare	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def unsignedCompare(i : Long, j : Long) = (i < j) ^ (i < 0) ^ (j < 0)$/;"	f
unsorted	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/TableEditor.scala	/^    val unsorted: List[T] = current ++ added filter {i => removed.forall(i.ne)}$/;"	V
until	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^       override def until = until0$/;"	f
until	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      def until = until0$/;"	f
until	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    def until = until0$/;"	f
until	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    protected def until : Int$/;"	f
until	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Range.scala	/^      val until = if (inInterval(end)) end + 1 else end$/;"	V
until	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Range.scala	/^      val until = if (inInterval(end)) end - 1 else end$/;"	V
until	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Ranged.scala	/^  def until(until: K) = rangeImpl(None, Some(until))$/;"	f
until	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Sorted.scala	/^  override def until(until: K) = rangeImpl(None, Some(until))$/;"	f
until	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedMap.scala	/^  override def until(until: K) = rangeImpl(None, Some(until));$/;"	f
until	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/SortedSet.scala	/^  override def until(until: A) = rangeImpl(None, Some(until))$/;"	f
until	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/SortedMap.scala	/^  override def until(until: A) = rangeImpl(None, Some(until))$/;"	f
until	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  protected class Range(var from : Option[Int], var until : Option[Int]) extends Buffer[A] {$/;"	v
until	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Ranged.scala	/^  override final def until(until: K): SortedSelf = rangeImpl(None, Some(until));$/;"	f
until	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichChar.scala	/^  def until(limit: Char): RandomAccessSeq.Projection[Char] =$/;"	f
until	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichInt.scala	/^  def until(end: Int): Range = new Range(start, end, 1)$/;"	f
until	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichInt.scala	/^  def until(end: Int, step: Int): Range = new Range(start, end, step)$/;"	f
until0	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichString.scala	/^        val until0 = if (until > len) len else until$/;"	V
untrustedSelect_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/SHtml.scala	/^  def untrustedSelect_*(opts: Seq[(String, String)], deflt: Box[String],$/;"	f
untupled	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function.scala	/^  def untupled[a1, a2, a3, a4, a5, b](f: Tuple5[a1, a2, a3, a4, a5] => b): (a1, a2, a3, a4, a5) => b = {$/;"	f
untupled	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function.scala	/^  def untupled[a1, a2, a3, a4, b](f: Tuple4[a1, a2, a3, a4] => b): (a1, a2, a3, a4) => b = {$/;"	f
untupled	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function.scala	/^  def untupled[a1, a2, a3, b](f: Tuple3[a1, a2, a3] => b): (a1, a2, a3) => b = {$/;"	f
untupled	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Function.scala	/^  def untupled[a1, a2, b](f: Tuple2[a1, a2] => b): (a1, a2) => b = {$/;"	f
untyped	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^    val untyped = UGP(n, polarity, v, c)$/;"	V
unusedFunctionsLifeTime	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var unusedFunctionsLifeTime: Long = 10 minutes$/;"	v
unzip	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def unzip[A,B](xs: Iterable[(A,B)]): (List[A], List[B]) = $/;"	f
unzip	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def unzip[A,B](xs: List[(A,B)]): (List[A], List[B]) = {$/;"	f
up	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    private val up = step(start) > start$/;"	V
up	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    val up = step(start) > start$/;"	V
up	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^    val up = step(start) > start$/;"	V
upair	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def upair[a,b](pa: PU[a], pb: PU[b]): PU[(a,b)] = {$/;"	f
upd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def upd[B1 >: B](k: A, v: B1): Tree[B1] = {$/;"	f
upd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def upd[B1 >: B](k: A, v: B1): Tree[B1]$/;"	f
upd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def upd[B](k: A, v: B): Tree[B] = RedTree(k, v, Empty, Empty)$/;"	f
update	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  def update(key: K, value: V) {$/;"	f
update	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  def update(f: T => T): T = {$/;"	f
update	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  def update(key: K, value: V): Unit = set(key,value)$/;"	f
update	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^  def update(v: T): Unit = set(v)$/;"	f
update	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/KeyedCache.scala	/^  def update(key: K, value: T) = cache.update(key, value)$/;"	f
update	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LRU.scala	/^  def update(k: KeyType, v: ValueType) {$/;"	f
update	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TemplateCache.scala	/^  def update(key: K, node: V): V = set(key, node)$/;"	f
update	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^    val update = createUpdate$/;"	V
update	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^      def update(a: Long, b: Long, c: Int) {progList(a, b, c)}$/;"	f
update	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^  private def update[T](change: LiftBundles => LiftBundles) {$/;"	f
update	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ManyToMany.scala	/^    def update(n: Int, newelem: T2) {$/;"	f
update	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def update[Q <% FieldType](v: Q) {$/;"	f
update	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/OneToMany.scala	/^    def update(n: Int, newelem: O) {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^       def update(idx : Int, what : A) : Unit = Projection.this.update(length - idx - 1, what)$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  override def update(i: Int, x: A) { throw new Error() }$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      def update(idx : Int, what : A) : Unit = Mutable.this.update(idx, what)$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^      def update(idx: Int, what: A) { Mutable.this.update(length - idx - 1, what) }$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    def update(idx : Int, what : A) : Unit$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    override def update(idx : Int, what : A) : Unit = {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  def update(i: Int, c: Char) { setCharAt(i, c) }$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/EmptyMap.scala	/^  def update [B1 >: B](key: A, value: B1): Map[A, B1] = $/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/HashMap.scala	/^  def update [B1 >: B](key: A, value: B1): Map[A, B1] = synchronized {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def update[S >: T](key : Int, value : S) : IntMap[S] = this match {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^    override def update [B2 >: B1](k: A, v: B2): ListMap[A, B2] = {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^  def update [B1 >: B](key: A, value: B1): ListMap[A, B1] = new Node(key, value)$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def update[S >: T](key : Long, value : S) : LongMap[S] = this match {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^    def update [B2 >: B1](key: A, value: B2): Map[A, B2] = $/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^  def update [B1 >: B] (key: A, value: B1): Map[A, B1]$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map1.scala	/^  def update [B1 >: B](key: A, value: B1): Map[A, B1] = $/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map2.scala	/^  def update [B1 >: B](key: A, value: B1): Map[A, B1] = $/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map3.scala	/^  def update [B1 >: B](key: A, value: B1): Map[A, B1] = $/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map4.scala	/^  def update [B1 >: B](key: A, value: B1): Map[A, B1] = $/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def update[B1 >: B](k: A, v: B1): Tree[B1] = blacken(upd(k, v))$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/SortedMap.scala	/^  override def update [B1 >: B] (key: A, value: B1): SortedMap[A, B1]$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def update(key: A, value: B) = throw new NoSuchElementException("key " + key + " not found")$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def update(key: A, value: B): aNode$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  def update(newKey: A, newValue: B): aNode =$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  def update[S >: Value](key : Key, value : S) : AssocMap[Key, S] = this match {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeHashMap.scala	/^  def update[S >: Value](key : Key, value : S) : TreeHashMap[Key, S] = TreeHashMap($/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/TreeMap.scala	/^  def update [B1 >: B](key: A, value: B1): TreeMap[A, B1] = {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^  def update[B1 >: B](key: A, value: B1) = add(key, value)$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Buffer.scala	/^  def update(idx : Int, a : A) : Unit = set(idx, a);$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^  override def update(key : K, e : E) : Unit = put(key,e);$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayBuffer.scala	/^  def update(n: Int, newelem: A) {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Buffer.scala	/^  def update(n: Int, newelem: A): Unit$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/BufferProxy.scala	/^  def update(n: Int, newelem: A): Unit = self.update(n, newelem)$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/DefaultMapModel.scala	/^  def update(key: A, value: B) {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableMapAdaptor.scala	/^  def update(key: A, value: B): Unit = { imap = imap.update(key, value) }$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^  def update(key: A, value: B): Unit = { val x = jmap.put(key, value); }$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/LinkedHashMap.scala	/^  override def update(key: A, value: B) { put(key, value) }$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^  def update(n: Int, x: A) {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Map.scala	/^  def update(key: A, value: B)$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/MapProxy.scala	/^  override def update(key: A, value: B): Unit = self.update(key, value)$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ObservableBuffer.scala	/^  abstract override def update(n: Int, newelement: A): Unit = {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ObservableMap.scala	/^  abstract override def update(key: A, value: B): Unit = get(key) match {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  def update(key : Key, value : Value){$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^  private def update(key : Key, hash : Int, value : Value) {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/Set.scala	/^  def update(elem: A, included: Boolean) {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SetProxy.scala	/^  override def update(elem: A, included: Boolean): Unit = self(elem) = included$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedBuffer.scala	/^  abstract override def update(n: Int, newelem: A): Unit = synchronized {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  abstract override def update(key: A, value: B): Unit = synchronized {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedSet.scala	/^  abstract override def update(elem: A, included: Boolean): Unit = synchronized {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  def update(index: Int, _elem: Any): Unit = synchronized {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^    def update(idx : Int, what : Any) : Unit = BoxedArray.this.update(idx, what)$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  def update(index: Int, elem: Any): Unit$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedBooleanArray.scala	/^  def update(index: Int, elem: Any) {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedByteArray.scala	/^  def update(index: Int, elem: Any) {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedCharArray.scala	/^  def update(index: Int, elem: Any) {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedDoubleArray.scala	/^  def update(index: Int, elem: Any) {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedFloatArray.scala	/^  def update(index: Int, elem: Any) {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedIntArray.scala	/^  def update(index: Int, elem: Any) {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedLongArray.scala	/^  def update(index: Int, elem: Any) {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedObjectArray.scala	/^  def update(index: Int, elem: Any) { $/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedShortArray.scala	/^  def update(index: Int, elem: Any) {$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/RichStringBuilder.scala	/^  override def update(idx : Int, c : Char) = self.setCharAt(idx, c)$/;"	f
update	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def update(attribs: MetaData, scope: NamespaceBinding, updates: MetaData): MetaData =$/;"	f
updateCache	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  private def updateCache: List[Value] =$/;"	f
updateFuncByOwner	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private[http] def updateFuncByOwner(ownerName: String, time: Long): Int = synchronized {$/;"	f
updateFunctionMap	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  def updateFunctionMap(funcs: Map[String, S.AFuncHolder], uniqueId: String, when: Long): Unit = synchronized {$/;"	f
updateOrAdd	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Tree.scala	/^  protected def updateOrAdd(key: A, entry: B): This =$/;"	f
updateWith	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def updateWith[S >: T](key : Int, value : S, f : (T, S) => S) : IntMap[S] = this match {$/;"	f
updateWith	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def updateWith[S >: T](key : Long, value : S, f : (T, S) => S) : LongMap[S] = this match {$/;"	f
updateWithContextPath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def updateWithContextPath(uri: String): String = if (uri.startsWith("\/")) contextPath + uri else uri$/;"	f
updated	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^    val updated = if (hv.startsWith("\/") &&$/;"	V
updatedWhat	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^          var updatedWhat = what$/;"	v
upe	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^      val upe = state.dict$/;"	V
upgrade	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ConcurrentLock.scala	/^  def upgrade[T](f: => T): T = {$/;"	f
upickle	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def upickle[T](p: PU[T], a: T): Array[Byte] =$/;"	f
upload	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/UploadProgressDemo.scala	/^  def upload(xhtml: NodeSeq): NodeSeq = {$/;"	f
uploadField_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  def uploadField_? = false$/;"	f
uploadField_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    override def uploadField_? = false$/;"	f
upper	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val upper: Parser[Char] =$/;"	V
uri	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  lazy val uri: String = request match {$/;"	V
uri	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def uri: String = request.map(_.uri).openOr("\/")$/;"	f
uri	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def uri: String$/;"	f
uri	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def uri = req.getRequestURI$/;"	f
uri	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  val uri: String = req.uri$/;"	V
uri	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^    val uri = new URI(url);$/;"	V
uri	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^      val uri = S.uriAndQueryString$/;"	V
uri	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NamespaceBinding.scala	/^                       val uri: String,$/;"	V
uriAndQueryString	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^def uriAndQueryString: Box[String] =$/;"	f
uriList	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/sitemap/Loc.scala	/^  class Link[-T](val uriList: List[String], val matchHead_? : Boolean) extends PartialFunction[Req, Box[Boolean]] {$/;"	V
uriNotFound	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val uriNotFound = RulesSeq[URINotFoundPF].prepend(NamedPF("default") {$/;"	V
url	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^  val url = "test"$/;"	V
url	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    def url = S.uri$/;"	f
url	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    val url = S.uri$/;"	V
url	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^    val url = LiftRules.calcCometPath(LiftRules.cometServer())$/;"	V
url	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/yui/YUIArtifacts.scala	/^    val url = S.encodeURL(S.contextPath + "\/" + LiftRules.ajaxPath + "\/")$/;"	V
url	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/HTTPRequest.scala	/^  def url: String$/;"	f
url	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  def url = req.getRequestURL.toString$/;"	f
url	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^  val url: String = req.url$/;"	V
url	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val url: Parser[Textile] = httpStr ^^ { u => Anchor(Nil, u, u, Nil, disableLinks) }$/;"	V
url	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/gravatar/Gravatar.scala	/^  private def url(email: String, size: Int, rating: String): NodeSeq = {$/;"	f
url	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/tree/TreeView.scala	/^     val url = encodeURL(contextPath +$/;"	V
url	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    def url = S.uri$/;"	f
url	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    val url = S.uri$/;"	V
url	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/ConstructingParser.scala	/^    val url = args(0);$/;"	V
urlDecode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^  def urlDecode(in : String) = URLDecoder.decode(in, "UTF-8")$/;"	f
urlDecorate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val urlDecorate = RulesSeq[URLDecoratorPF]$/;"	V
urlEncode	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HttpHelpers.scala	/^  def urlEncode(in : String) = URLEncoder.encode(in, "UTF-8")$/;"	f
urlEncode	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/FacebookRestApi.scala	/^  def urlEncode(name: String): String = URLEncoder.encode(name, "UTF-8")$/;"	f
urlEncode	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def urlEncode(in : String) = _root_.java.net.URLEncoder.encode(in, "UTF-8")$/;"	f
urlEncode	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^  def urlEncode(in : String) = _root_.java.net.URLEncoder.encode(in, "UTF-8")$/;"	f
urlFor	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/JettyTestServer.scala	/^  def urlFor(path: String) = baseUrl_ + path$/;"	f
urlStr	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    lazy val urlStr = (rep1(elem("", validUrlChar))^^ mkString)$/;"	V
use	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^    def use(conn: ConnectionIdentifier): Int = if (connections.contains(conn)) {$/;"	f
use	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^  def use[T](name: ConnectionIdentifier)(f: (SuperConnection) => T): T = {$/;"	f
useAndFinish	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^              def useAndFinish(in: List[ConnectionIdentifier]) {$/;"	f
useXhtmlMimeType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var useXhtmlMimeType: Boolean = true$/;"	v
used	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/DB.scala	/^    private var used: Set[ConnectionIdentifier] = Set()$/;"	v
usequ	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def usequ[t,u](f: u => t, pa: PU[t], k: t => PU[u]): PU[u] = new PU[u] {$/;"	f
user	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  def user: UserType = userid.obj.open_!$/;"	f
user	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    def user: UserType = userid.obj.open_!$/;"	f
user	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def user: OAuthUser$/;"	f
user	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/test/scala/net/liftweb/oauth/OAuthSignatureMethodSpec.scala	/^    def user: OAuthUser = new OAuthUser(){}$/;"	f
user	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^          val user = self.findOrCreate(id.getIdentifier)$/;"	V
user	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^          val user: String = entry.asInstanceOf[RosterEntry].getUser$/;"	V
user	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^        val user = StringUtils.parseBareAddress(p.getFrom)$/;"	V
user	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    val user = currentUser.open_! \/\/ we can do this because the logged in test has happened$/;"	V
userAgent	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  lazy val userAgent: Box[String] =$/;"	V
userDidLogin	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^  def userDidLogin(uid: UserType) {$/;"	f
userDidLogout	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^  def userDidLogout(uid: Box[UserType]) {$/;"	f
userId	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/Facebook.scala	/^  def userId: Box[Int] = S.param("fb_sig_user") match {$/;"	f
userId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^  object userId extends MappedString(this, 64)$/;"	o
userIdAsString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoExtendedSession.scala	/^  def userIdAsString: String$/;"	f
userIdAsString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def userIdAsString: String = id.is.toString$/;"	f
userId_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-facebook/src/main/scala/net/liftweb/ext_api/facebook/Facebook.scala	/^  def userId_! : Int = userId.open_!$/;"	f
userMenu	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def userMenu: List[Node] = {$/;"	f
userName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Props.scala	/^  lazy val userName = System.getProperty("user.name")$/;"	V
userNames	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/test/scala/TransactionMonadSpec.scala	/^      val userNames = "Bill" :: "Bob" :: "Alice" :: Nil$/;"	V
userRoles	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^object userRoles extends RequestVar[List[Role]](Nil)$/;"	o
userid	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  object userid extends MappedLongForeignKey(this, getUserMeta) {$/;"	o
userid	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    object userid extends MappedLongForeignKey(this, getUserMeta) {$/;"	o
username	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val username = r.param("username")$/;"	V
users	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/test/scala/TransactionMonadSpec.scala	/^      val users = for {$/;"	V
users1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^  val users1 =$/;"	V
users2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^  val users2 =$/;"	V
using	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Schemifier.scala	/^  private def using[RetType <: Any, VarType <: ResultSet](f: => VarType)(f2: VarType => RetType): RetType = {$/;"	f
utc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  val utc = TimeZone.getTimeZone("UTC")$/;"	V
uunpickle	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def uunpickle[T](p: PU[T], stream: Array[Byte]): T =$/;"	f
uwrap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def uwrap[a,b](i: a => b, j: b => a, pa: PU[a]): PU[b] =$/;"	f
v	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^  implicit def seq2jvalue[A <% JValue](s: Seq[A]) = JArray(s.toList.map { a => val v: JValue = a; v })$/;"	V
v	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ListHelpersSpec.scala	/^      val v: _root_.java.util.Vector[Any] = new _root_.java.util.Vector[Any]$/;"	V
v	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ListHelpersSpec.scala	/^      val v: _root_.java.util.Vector[Int] = new _root_.java.util.Vector[Int]$/;"	V
v	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^          val v = v2.asInstanceOf[_root_.scala.collection.Map[String, Any]]$/;"	V
v	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockHttpServletRequest.scala	/^    val v = new Vector[AnyRef]()$/;"	V
v	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTextarea.scala	/^    val v = is$/;"	V
v	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^    var v: Option[Value] = None$/;"	v
v	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^        val v = x(m)$/;"	V
v	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^    var v: List[Node] = Nil$/;"	v
vToMake	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  implicit def vToMake[T](v: () => T): Maker[T] = this.apply(v)$/;"	f
vToMake	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  implicit def vToMake[T](v: T): Maker[T] = this.apply(v)$/;"	f
vToMakeB1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  implicit def vToMakeB1[T](v: Box[T]): Maker[T] = this.apply1(v)$/;"	f
vToMakeB2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  implicit def vToMakeB2[T](v: Box[() => T]): Maker[T] = this.apply(v)$/;"	f
vToMakeB3	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  implicit def vToMakeB3[T](v: Box[() => Box[T]]): Maker[T] = this.apply2(v)$/;"	f
vToMakeB4	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  implicit def vToMakeB4[T](v: () => Box[T]): Maker[T] = this.apply3(v)$/;"	f
valMaxLen	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def valMaxLen(len: Int, msg: => String)(value: String): List[FieldError] =$/;"	f
valMinLen	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def valMinLen(len: Int, msg: => String)(value: String): List[FieldError] =$/;"	f
valRegex	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def valRegex(pat: Pattern, msg: => String)(value: String): List[FieldError] = pat.matcher(value).matches match {$/;"	f
valRegex	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/StringField.scala	/^  def valRegex(pat: Pattern, msg: => String)(value: String): Box[Node] = pat.matcher(value).matches match {$/;"	f
valToVender	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  implicit def valToVender[T](value: T): Vendor[T] = apply(value)$/;"	f
valUnique	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  def valUnique(msg: => String)(value: String): List[FieldError] =$/;"	f
validActualType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^          def validActualType(meth: Method): Boolean = {$/;"	f
validAttr	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def validAttr(in: Attribute): Boolean = in match {$/;"	f
validClassChar	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def validClassChar(c: Char) = Character.isDigit(c) || Character.isLetter(c) || c == '.' || c == '-' || c == '_'$/;"	f
validEmailAddr_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedEmail.scala	/^  def validEmailAddr_?(email: String): Boolean = emailPattern.matcher(email).matches$/;"	f
validEmailAddr_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EmailField.scala	/^  def validEmailAddr_?(email: String): Boolean = emailPattern.matcher(email).matches$/;"	f
validSelectValues	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def validSelectValues: Box[List[(KeyType, String)]] = Empty$/;"	f
validStyleChar	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def validStyleChar(c: Char) = Character.isDigit(c) || Character.isLetter(c) || c == '.' || c == ' ' || c == ';' || c == '#'$/;"	f
validTagChar	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def validTagChar(c: Char) = Character.isDigit(c) || Character.isLetter(c) || c == '_'$/;"	f
validText	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^  private def validText(str: String): List[FieldError] =$/;"	f
validUrlChar	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def validUrlChar(c : Char) : Boolean = {$/;"	f
validate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  def validate: List[FieldError]$/;"	f
validate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    def validate: List[FieldError] = validations.flatMap(_.apply(is))$/;"	f
validate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  def validate: List[FieldError] = screenFields.flatMap(_.validate)$/;"	f
validate	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  private def validate(clientAuth: DigestAuthentication)(password: String): Boolean = {$/;"	f
validate	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthSignatureMethod.scala	/^  def validate(message: OAuthMessage): Box[OAuthMessage] =$/;"	f
validate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedEmail.scala	/^  override def validate =$/;"	f
validate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def validate: List[FieldError] = {$/;"	f
validate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  override def validate : List[FieldError] = {$/;"	f
validate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Mapper.scala	/^  def validate : List[FieldError] = {$/;"	f
validate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  final def validate(toValidate: A): List[FieldError] = {$/;"	f
validate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/MetaRecord.scala	/^  def validate(inst: BaseRecord): List[FieldError] = {$/;"	f
validate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Record.scala	/^  def validate : List[FieldError] = {$/;"	f
validate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PostalCodeField.scala	/^  def validate(in : String) = country.value match {$/;"	f
validate	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/ContentModel.scala	/^  def validate(cs: NodeSeq): Boolean = this.match {$/;"	f
validate	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/factory/Binder.scala	/^  final def validate(n: Node): Node = {$/;"	f
validateBirth	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^		def validateBirth(b: Int) = {$/;"	f
validateDeath	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^		def validateDeath (y: Int) = {$/;"	f
validateEmail	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EmailField.scala	/^  private def validateEmail(email: String): Box[Node] =$/;"	f
validateMessage	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthValidator.scala	/^  def validateMessage(message: OAuthMessage, accessor: OAuthAccessor): Box[OAuthMessage] =$/;"	f
validateNickname	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^    private def validateNickname(str: String): List[FieldError] = {$/;"	f
validateNonce	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthValidator.scala	/^  private def validateNonce(message: OAuthMessage, timestamp: Long): Box[OAuthMessage] =$/;"	f
validatePassword	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^  private def validatePassword(pwd: String): Box[Node] = pwd match {$/;"	f
validateSignature	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthValidator.scala	/^  private def validateSignature(accessor: OAuthAccessor)(message: Box[OAuthMessage]): Box[OAuthMessage] =$/;"	f
validateTimestamp	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthValidator.scala	/^  private def validateTimestamp(timestampStr: OAuthUtil.Parameter): Box[Long] = {$/;"	f
validateTimestampAndNonce	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthValidator.scala	/^  private def validateTimestampAndNonce(message: Box[OAuthMessage]): Box[OAuthMessage] =$/;"	f
validateUser	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def validateUser(id: String): NodeSeq = getSingleton.find(By(uniqueId, id)) match {$/;"	f
validateUserMenuLoc	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^  override def validateUserMenuLoc: Box[Menu] = Empty$/;"	f
validateUserMenuLoc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def validateUserMenuLoc: Box[Menu] =$/;"	f
validateUserSuffix	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  def validateUserSuffix = "validate_user"$/;"	f
validateVersion	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthValidator.scala	/^  private def validateVersion(message: Box[OAuthMessage]): Box[OAuthMessage] =$/;"	f
validateYear	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Award.scala	/^		def validateYear (y: Int) = {$/;"	f
validateYear	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Discovery.scala	/^		def validateYear (y: Int) = {$/;"	f
validated	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  object validated extends MappedBoolean[T](this) {$/;"	o
validation	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def validation: List[A => List[FieldError]] = Nil$/;"	f
validations	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JsonCmd.scala	/^  def validations: List[ValueType => List[FieldError]]$/;"	f
validations	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    def validations: List[ValueType => List[FieldError]] = Nil$/;"	f
validations	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^    override def validations =  valMinLen(1, "Application name is required") _ :: super.validations$/;"	f
validations	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^    override def validations =  valMinLen(1, "Application web site is required") _ :: super.validations$/;"	f
validations	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^    override def validations =  valMinLen(1, "Callback URL is required") _ :: super.validations$/;"	f
validations	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenIDProtoUser.scala	/^    override def validations = validText _ :: validateNickname _ :: super.validations$/;"	f
validations	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^        override def validations = minLen(2, S ?? "Name Too Short") ::$/;"	f
validations	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/test/scala/net/liftweb/wizard/WizardTest.scala	/^        override def validations = minVal(5, S ?? "Too young") ::$/;"	f
validations	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def validations: List[FieldType => List[FieldError]] = Nil$/;"	f
validations	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPostalCode.scala	/^  override def validations = country.is match {$/;"	f
validations	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    override def validations = valUnique(S.??("unique.email.address")) _ :: super.validations$/;"	f
validations	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Award.scala	/^		override def validations = valMinLen(1, "The name cannot be empty") _ :: Nil$/;"	f
validations	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Award.scala	/^		override def validations = validateYear _ :: Nil$/;"	f
validations	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Discovery.scala	/^		override def validations = valMinLen(1, "A description has to contain more than one char") _ :: Nil$/;"	f
validations	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Discovery.scala	/^		override def validations = validateYear _ :: Nil$/;"	f
validations	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Field.scala	/^		override def validations = valMinLen(1, "Come on, one char can't be enough") _ :: Nil$/;"	f
validations	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Institution.scala	/^		override def validations = valMinLen(1, "name has to contain atleast 1 char") _ :: Nil$/;"	f
validations	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Institution.scala	/^		override def validations = valMinLen(1, "nationality has to contain atleast 1 char") _ :: Nil$/;"	f
validations	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^		override def validations = valMinLen(1, "name has to contain atleast 1 char") _ :: Nil$/;"	f
validations	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^		override def validations = validateBirth _ :: Nil$/;"	f
validations	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Source.scala	/^		override def validations = validateDeath _ :: Nil$/;"	f
validators	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def validators: List[ValidationFunction] = Nil$/;"	f
validators	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/EmailField.scala	/^  override def validators = validateEmail _ :: Nil$/;"	f
validators	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PasswordField.scala	/^  override def validators = validatePassword _ :: Nil$/;"	f
validators	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/PostalCodeField.scala	/^  override def validators = validate _ :: Nil$/;"	f
value	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^  private var value: Box[T] = Empty$/;"	v
value	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ThreadGlobal.scala	/^  def value: T = threadLocal.get$/;"	f
value	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BasicTypesHelpersSpec.scala	/^      "object value" | "boolean value" 	|>$/;"	o
value	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BasicTypesHelpersSpec.scala	/^      "object value"| "int value"	|>$/;"	o
value	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BasicTypesHelpersSpec.scala	/^      "object value"| "long value"	|>$/;"	o
value	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Factory.scala	/^      private var value = _default$/;"	v
value	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def value(which : Int) : String = elms.mkString("",";","")$/;"	f
value	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def value(which : Int) : String = lang$/;"	f
value	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def value(which : Int) : String = value$/;"	f
value	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def value(which : Int) : String = {$/;"	f
value	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-textile/src/main/scala/net/liftweb/textile/TextileParser.scala	/^    def value(which : Int) : String$/;"	f
value	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  def value: MyType = synchronized {$/;"	f
value	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  private var value = new Array[Char](initCapacity + initValue.length)$/;"	v
value	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/ListMap.scala	/^  protected def value: B = throw new NoSuchElementException("empty map")$/;"	f
value	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def value: B$/;"	f
value	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/UnbalancedTreeMap.scala	/^  protected def value: B = throw new NoSuchElementException("empty map")$/;"	f
value	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/DefaultEntry.scala	/^final class DefaultEntry[A, B](val key: A, var value: B) $/;"	v
value	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/OpenHashMap.scala	/^                                           var value : Option[Value])$/;"	v
value	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/SyncVar.scala	/^  private var value: A = _$/;"	v
value	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedAnyArray.scala	/^  def value: AnyRef = {$/;"	f
value	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  def value: AnyRef$/;"	f
value	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/DynamicVariable.scala	/^  def value: T = tl.get.asInstanceOf[T]$/;"	f
value	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Parser.scala	/^  def value: Parser[Any] = (jsonObj | jsonArray | number | "true" ^^^ true | "false" ^^^ false | "null" ^^^ null | stringVal)$/;"	f
value	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def value: Seq[Node]$/;"	f
value	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  def value = null$/;"	f
value	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/dtd/Scanner.scala	/^  var value:String = _$/;"	v
value1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^        val what = new LinkedListElem[K, V] {def value1 = key}$/;"	f
value1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  private[common] def value1: K = throw new NullPointerException("Foo")$/;"	f
value1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  private[common] def value1: T1$/;"	f
value1	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/AutoCompleteDemo.scala	/^    object value1 extends RequestVar("")$/;"	o
value2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-common/src/main/scala/net/liftweb/common/LRU.scala	/^  private[common] var value2: T2 = _$/;"	v
value2	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/AutoCompleteDemo.scala	/^    object value2 extends RequestVar("")$/;"	o
valueBound	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletSession.scala	/^  def valueBound(event: HttpSessionBindingEvent) {$/;"	f
valueCouldNotBeSet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/Field.scala	/^  private[record] var valueCouldNotBeSet = false$/;"	v
valueOf	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/EnumWithDescription.scala	/^    def valueOf(name: String) = values find (_.name == name)$/;"	f
valueOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  def valueOf(s:String) = {$/;"	f
valueOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def valueOf(tip : IntMap.Tip[V]) : T;$/;"	f
valueOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def valueOf(tip : IntMap.Tip[V]) = (tip.key, tip.value);$/;"	f
valueOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def valueOf(tip : IntMap.Tip[V]) = tip.key;$/;"	f
valueOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def valueOf(tip : IntMap.Tip[V]) = tip.value;$/;"	f
valueOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def valueOf(tip : LongMap.Tip[V]) : T;$/;"	f
valueOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def valueOf(tip : LongMap.Tip[V]) = (tip.key, tip.value);$/;"	f
valueOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def valueOf(tip : LongMap.Tip[V]) = tip.key;$/;"	f
valueOf	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def valueOf(tip : LongMap.Tip[V]) = tip.value;$/;"	f
valueSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/Map.scala	/^  def valueSet : MutableIterable.Projection[E] = projection.map(_._2);$/;"	f
valueSet	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/jcl/MapWrapper.scala	/^  override def valueSet: MutableIterable.Projection[E] = new ValueSet$/;"	f
valueUnbound	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPServletSession.scala	/^  def valueUnbound(event: HttpSessionBindingEvent) {$/;"	f
value_	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/DynamicVariable.scala	/^  def value_=(newval: T) = { tl.set(newval) }$/;"	f
values	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def values = (name, value.values)$/;"	f
values	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def values = Map() ++ obj.map(_.values : (String, Any))$/;"	f
values	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def values = None$/;"	f
values	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def values = arr.map(_.values)$/;"	f
values	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def values = null$/;"	f
values	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def values = num$/;"	f
values	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def values = s$/;"	f
values	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def values = value$/;"	f
values	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonAST.scala	/^    def values: Values$/;"	f
values	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/ExtractionExamples.scala	/^  "Map with object values extraction example" in {$/;"	o
values	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/EnumWithDescription.scala	/^    def values = _values$/;"	f
values	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def values: List[(String, FieldType)] = enum$/;"	f
values	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/JSONComet.scala	/^    def values: List[Enum#Value] = enum.elements.toList$/;"	f
values	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/Map.scala	/^  def values: Iterator[B] = new Iterator[B] {$/;"	f
values	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/MapProxy.scala	/^  override def values = self.values$/;"	f
values	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  override def values : Iterator[T] = this match {$/;"	f
values	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  override def values : Iterator[T] = this match {$/;"	f
values	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ImmutableMapAdaptor.scala	/^  override def values: Iterator[B] = imap.values$/;"	f
values	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^  override def values: Iterator[B] = new Iterator[B] {$/;"	f
values	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/SynchronizedMap.scala	/^  override def values: Iterator[B] = synchronized {$/;"	f
values	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/jolib.scala	/^    def values(p: Pattern): List[Any] =$/;"	f
varName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^              case cmd: JsCmd => val varName = "v" + Helpers.nextFuncName$/;"	V
varName	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^      val varName = "v" + Helpers.nextFuncName$/;"	V
varPrefix	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  val varPrefix = "_lift_sv_"$/;"	V
varcharColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  def varcharColumnType(len : Int) : String = "VARCHAR(%d)".format(len)$/;"	f
varcharColumnType	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/Driver.scala	/^  override def varcharColumnType(len : Int) : String = "NVARCHAR(%d)".format(len)$/;"	f
vcache	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^  @transient private var vcache: List[Value] = null$/;"	v
vcard	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/VCardParseSpecs.scala	/^    var vcard = """$/;"	v
vecswap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Sorting.scala	/^    def vecswap(_a: Int, _b: Int, n: Int) {$/;"	f
vend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^    implicit def vend: T = f$/;"	f
vend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^    implicit def vend: T = f()$/;"	f
vend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Maker.scala	/^  implicit def vend: T$/;"	f
vend	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Factory.scala	/^    implicit def vend: T = make openOr default.is.apply()$/;"	f
vendAVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  protected def vendAVar[T](dflt: => T): NonCleanAnyVar[T] = new ScreenVar[T](dflt) {$/;"	f
vendAVar	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  protected def vendAVar[T](dflt: => T): NonCleanAnyVar[T]$/;"	f
vendAVar	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    protected def vendAVar[T](dflt: => T): NonCleanAnyVar[T] = Wizard.this.vendAVar[T](dflt)$/;"	f
vendAVar	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  protected def vendAVar[T](dflt: => T): NonCleanAnyVar[T] = new WizardVar[T](dflt) {$/;"	f
vendForm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def vendForm[T](implicit man: Manifest[T]): Box[(T, T => Unit) => NodeSeq] = {$/;"	f
vendForm	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^  protected def vendForm[T](implicit man: Manifest[T]): Box[(T, T => Unit) => NodeSeq] = Empty$/;"	f
vendForm	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  def vendForm[T](man: Manifest[T]): Box[(T, T => Unit) => NodeSeq] = Empty$/;"	f
vendForm	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  protected def vendForm[T](implicit man: Manifest[T]): Box[(T, T => Unit) => NodeSeq] = Empty$/;"	f
vendor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def vendor : Vendor$/;"	f
vendor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def vendor = new Vendor("com.mysql.jdbc.Driver") {$/;"	f
vendor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def vendor = new Vendor("com.sap.dbtech.jdbc.DriverSapDB") {$/;"	f
vendor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def vendor = new Vendor("net.sourceforge.jtds.jdbc.Driver") {$/;"	f
vendor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def vendor = new Vendor("oracle.jdbc.OracleDriver") {$/;"	f
vendor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def vendor = new Vendor("org.apache.derby.jdbc.EmbeddedDriver") {$/;"	f
vendor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def vendor = new Vendor("org.h2.Driver") {$/;"	f
vendor	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/DBProviders.scala	/^    def vendor = new Vendor("org.postgresql.Driver") {$/;"	f
ver	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^  private object ver extends RequestVar(Helpers.nextFuncName)$/;"	o
verification	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^    val verification = manager.verify(receivingURL.toString(),$/;"	V
verified	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^    val verified = verification.getVerifiedId();$/;"	V
verified_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  def verified_? : PartialFunction[Req, Boolean]$/;"	f
verified_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  def verified_? = {$/;"	f
verified_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/auth/HttpAuthentication.scala	/^  def verified_? = {case req => true}$/;"	f
verifyResponse	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-openid/src/main/scala/net/liftweb/openid/OpenId.scala	/^  def verifyResponse(httpReq: HTTPRequest): (Box[Identifier], VerificationResult) =$/;"	f
verifySign	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  val verifySign = r.param("verify_sign")$/;"	V
version	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  def version: Long$/;"	f
version	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Document.scala	/^  var version: Option[String] = _$/;"	v
versionMsg	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Properties.scala	/^  val versionMsg = "Scala library " + versionString + " -- " + copyrightString$/;"	V
versionString	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Properties.scala	/^  val versionString: String = {$/;"	V
view	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  val view = path(1) match {case null => "index"; case s@_ => s}$/;"	V
view	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/view/ModelView.scala	/^  val view: MV[T]$/;"	V
view	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^  implicit def view[A <% Ordered[A]](x: Iterable[A]): Ordered[Iterable[A]] =$/;"	f
view	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^  implicit def view(s: Seq[Node]): NodeSeq = fromSeq(s)$/;"	f
view	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^  @deprecated def view(s: String): Text = Text(s)$/;"	f
viewClass	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def viewClass = "view_class"$/;"	f
viewDispatch	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  val viewDispatch = RulesSeq[ViewDispatchPF]$/;"	V
viewId	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def viewId = "view_page"$/;"	f
viewMenuLoc	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def viewMenuLoc: Box[Menu] =$/;"	f
viewMenuLocParams	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def viewMenuLocParams: List[Loc.LocParam[CrudType]] = Nil$/;"	f
viewMenuName	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def viewMenuName = S.??("View")+" "+displayName$/;"	f
viewPath	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  lazy val viewPath = Prefix ::: List(ViewItem)$/;"	V
viewPathString	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  lazy val viewPathString: String = mp(viewPath)$/;"	V
viewSnippet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def viewSnippet(xhtml: NodeSeq): NodeSeq = {$/;"	f
viewSnippetSetup	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def viewSnippetSetup: A = {$/;"	f
viewTemplate	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/CRUDify.scala	/^  def viewTemplate(): NodeSeq = pageWrapper(_viewTemplate)$/;"	f
visit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def visit[T](input : T)(f : (T,A,B) => Tuple2[Boolean,T]) : Tuple2[Boolean,T] = {$/;"	f
visit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def visit[T](input : T)(f : (T,A,B) => Tuple2[Boolean,T]) : Tuple2[Boolean,T];$/;"	f
visit	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/RedBlack.scala	/^    def visit[T](input : T)(f : (T,A,Nothing) => Tuple2[Boolean,T]) = Tuple2(true,input)$/;"	f
vn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^    val vn = "v" + Helpers.nextFuncName$/;"	V
volatile	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/volatile.scala	/^class volatile extends StaticAnnotation$/;"	c
w	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-imaging/src/main/scala/net/liftweb/imaging/ImageHelpers.scala	/^      var w = masked.getWidth $/;"	v
w	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^    var w: Writer = null$/;"	v
w	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/persistent/CachedFileStorage.scala	/^    val w = Channels.newWriter(c, "utf-8")$/;"	V
waitAll	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^    def waitAll(in: List[Thread]) {$/;"	f
waitAll	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestRunner.scala	/^      def waitAll(in: List[Thread]) {$/;"	f
waitUntil	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^    val waitUntil = millis + LiftRules.lazySnippetTimeout.vend.millis$/;"	V
walk	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CSSHelpers.scala	/^      def walk(in: Input)(f: Char => Boolean): Input = {$/;"	f
warn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def warn(msg: => AnyRef): Unit = ()$/;"	f
warn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  def warn(msg: => AnyRef, t: => Throwable): Unit = ()$/;"	f
warn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def warn(msg: => AnyRef) = if (isWarnEnabled) logger.warn(msg)$/;"	f
warn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def warn(msg: => AnyRef) = rootLogger.warn(msg)$/;"	f
warn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def warn(msg: => AnyRef, t: => Throwable) = if (isWarnEnabled) logger.warn(msg, t)$/;"	f
warn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Log.scala	/^  override def warn(msg: => AnyRef, t: => Throwable) = rootLogger.warn(msg, t)$/;"	f
warn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  override def warn(msg: => AnyRef) = if (isWarnEnabled) logger.warn(String.valueOf(msg))$/;"	f
warn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Slf4jLogger.scala	/^  override def warn(msg: => AnyRef, t: => Throwable) = if (isWarnEnabled) logger.warn(String.valueOf(msg), t)$/;"	f
warn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    override def warn(msg: => AnyRef): Unit = logger.warn(msg)$/;"	f
warn	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^    override def warn(msg: => AnyRef, t: => Throwable): Unit = logger.warn(msg, t)$/;"	f
warnOnUnused	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^                  def warnOnUnused() =$/;"	f
warning	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def warning(id: String, n: NodeSeq) {notices += ((NoticeType.Warning, n, Full(id)))}$/;"	f
warning	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def warning(id: String, n: String) {warning(id, Text(n))}$/;"	f
warning	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def warning(n: NodeSeq) {notices += ((NoticeType.Warning, n, Empty))}$/;"	f
warning	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  def warning(n: String) {warning(Text(n))}$/;"	f
warning	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def warning(id: String, n: NodeSeq) {p_notice += ((NoticeType.Warning, n, Full(id)))}$/;"	f
warning	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def warning(id: String, n: String) {warning(id, Text(n))}$/;"	f
warning	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def warning(n: NodeSeq) {p_notice += ((NoticeType.Warning, n, Empty))}$/;"	f
warning	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def warning(n: String) {warning(Text(n))}$/;"	f
warning	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^  override def warning(ex: SAXParseException): Unit = {$/;"	f
warnings	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def warnings: List[(NodeSeq, Box[String])] = List(oldNotices.is, p_notice.is).flatMap(_.filter(_._1 == NoticeType.Warning).map(n => (n._2, n._3)))$/;"	f
was	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def was: FieldType = {$/;"	f
wasInitialized	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  protected def wasInitialized(name: String): Boolean$/;"	f
wasInitialized	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftScreen.scala	/^    override protected def wasInitialized(name: String): Boolean = {$/;"	f
wasInitialized	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  override protected def wasInitialized(name: String): Boolean = {$/;"	f
wasInitialized	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^    override protected def wasInitialized(name: String): Boolean = {$/;"	f
wasInt	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/JsonParser.scala	/^        var wasInt = true$/;"	v
wasLastFullRender	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private var wasLastFullRender = false$/;"	v
wasSuccessful	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-paypal/src/main/scala/net/liftweb/paypal/Paypal.scala	/^  def wasSuccessful(code: Int): Boolean = code match {$/;"	f
wav	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    var wav = whereAdded$/;"	v
wc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/JettyTestServer.scala	/^    val wc = new WebTester()$/;"	V
webContainerHolder	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-osgi/src/main/scala/net/liftweb/osgi/internal/Activator.scala	/^  private val webContainerHolder = new AtomicReference[WebContainer]$/;"	V
week	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    def week = weeks$/;"	f
weekClick	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/CalendarMonthViewDemo.scala	/^  def weekClick = Full(AnonFunc("elem, param", JsRaw("alert(param + ' - ' + elem.nodeName)")))$/;"	f
weekDay	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/CalendarUtils.scala	/^  def weekDay(cal: Calendar) = {$/;"	f
weekDaysFormatter	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/calendars/ViewMeta.scala	/^  var weekDaysFormatter = new SimpleDateFormat("EEEE", locale)$/;"	v
weeks	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^    def weeks = TimeSpan(outer.weeks(len))$/;"	f
weeks	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def weeks(in: Long): Long = days(in) * 7L$/;"	f
weight	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  object weight extends MappedInt(this) {$/;"	o
weight	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/test/scala/net/liftweb/mapper/MapperSpecs.scala	/^  object weight extends MappedInt(this)$/;"	o
wellFormed	/Users/Mads/Dev/logicOfScientificDiscovery/src/test/scala/sidewayscoding/AppTest.scala	/^    def wellFormed(file: File) {$/;"	f
wellformed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^  def wellformed(scope: NamespaceBinding): Boolean$/;"	f
wellformed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Null.scala	/^  override def wellformed(scope: NamespaceBinding) = true$/;"	f
wellformed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/PrefixedAttribute.scala	/^  def wellformed(scope: NamespaceBinding): Boolean =$/;"	f
wellformed	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/UnprefixedAttribute.scala	/^  def wellformed(scope: NamespaceBinding): Boolean = $/;"	f
what	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/FatLazy.scala	/^  implicit def what[T](in: ThreadLazy[T]): T = in.get$/;"	f
what	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^      val what = swhat.toLowerCase$/;"	V
what	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ListHelpers.scala	/^  class SuperList[T](val what: List[T]) {$/;"	V
what	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/StringHelpers.scala	/^  class SuperString(val what: String) {$/;"	V
what	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^    val what = composeFunction$/;"	V
what	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^            val what = flatten(liftSession.runParams(requestState))$/;"	V
what	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^     val what = (theType -> name)$/;"	V
what	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^    val what = (theType -> name)$/;"	V
what	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/provider/servlet/HTTPRequestServlet.scala	/^    val what = mimeUpload.getItemIterator(req)$/;"	V
what	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^                                    val what: Event)  extends Exception(msg)$/;"	V
what	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/autocomplete/AutoComplete.scala	/^      val what: String = encodeURL(S.contextPath + "\/" + LiftRules.ajaxPath+"?"+func+"=foo")$/;"	V
what	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^      val what = if (in.startsWith(name + "=")) in.substring((name + "=").length) else in$/;"	V
what	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    var what : Iterator[B] = Iterator.this $/;"	v
what2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^            val what2 = what.flatMap {$/;"	V
whatRequestVarIs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  implicit def whatRequestVarIs[T](in: RequestVar[T]): T = in.is$/;"	f
whatSessionVarIs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Vars.scala	/^  implicit def whatSessionVarIs[T](in: SessionVar[T]): T = in.is$/;"	f
whatToSet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^  def whatToSet(toSave : A) : String = {$/;"	f
whatVarIs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/AnyVar.scala	/^  implicit def whatVarIs[T](in: AnyVar[T, _]): T = in.is$/;"	f
when	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^    "return a Full can with the found class when given a list of names and corresponding packages" in {$/;"	c
when	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^    "return a Full can with the found class when given the name and a list of packages" in {$/;"	c
when	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^    "return a Full can with the found class when given the name and package" in {$/;"	c
when	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^    "return a Full can with the found class when given the name and package, with an underscored name instead of CamelCased" in {$/;"	c
when	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^    "return a Full can with the found class when given the name, a list of packages and a target type to conform to" in {$/;"	c
when	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/ClassHelpersSpec.scala	/^    "return a Full can with the found class when given the type, the name, and a list of packages to conform to" in {$/;"	c
when	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^abstract class Delta(val when: Long) {$/;"	V
when	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^case class JsDelta(override val when: Long, js: JsCmd) extends Delta(when)$/;"	V
when	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftMerge.scala	/^        val when = p.value.text$/;"	V
when	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    object when extends SessionVar[Long](millis)$/;"	o
where2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    private val where2 = \/\/ issue 176$/;"	V
whereOrAnd	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MetaMapper.scala	/^    def whereOrAnd = if (wav) " AND " else {wav = true; " WHERE "}$/;"	f
which	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^    val which = first(transitions.toList) {t => if (t.on.isDefinedAt(what) && t.testGuard(who, who.state, t.to, what)) Full(t) else Empty}$/;"	V
white	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def white = wsc$/;"	f
whiteParse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^      val whiteParse = (s: String) => wsc(s) must beLike { case Success(_, _) => true }$/;"	V
whiteSpace	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def whiteSpace: Parser[Unit] = rep(white) ^^^ ()$/;"	f
whiteSpace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/RegexParsers.scala	/^  protected val whiteSpace = """\\s+""".r$/;"	V
whiteSpaceParse	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^      val whiteSpaceParse = (s: String) => whiteSpace(s) must beLike {$/;"	V
whiteStringGen	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/CombParserHelpersSpec.scala	/^object whiteStringGen {$/;"	o
whitespace	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/JSONParser.scala	/^  lazy val whitespace = elem(' ') | elem('\\t') | elem('\\n') | elem('\\r')$/;"	V
whitespace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/Scanners.scala	/^  def whitespace: Parser[Any]$/;"	f
whitespace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/StdLexical.scala	/^  def whitespace: Parser[Any] = rep($/;"	f
whitespace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/Scanners.scala	/^  def whitespace: Parser[Any]$/;"	f
whitespace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/StdLexical.scala	/^  def whitespace: Parser[Any] = rep($/;"	f
whitespace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Lexer.scala	/^  override def whitespace = rep(whitespaceChar)$/;"	f
whitespaceChar	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/lexical/Lexical.scala	/^  def whitespaceChar = elem("space char", ch => ch <= ' ' && ch != EofCh)$/;"	f
whitespaceChar	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/lexical/Lexical.scala	/^  def whitespaceChar = elem("space char", ch => ch <= ' ' && ch != EofCh)$/;"	f
who	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-machine/src/main/scala/net/liftweb/machine/ProtoStateMachine.scala	/^  class UnmatchedEventException(msg: String,val who: MyType,$/;"	V
wholeNumber	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/JavaTokenParsers.scala	/^  def wholeNumber: Parser[String] = $/;"	f
wholePath	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  lazy val wholePath = if (suffix.length > 0) partPath.dropRight(1) ::: List(partPath.last + "." + suffix)$/;"	V
wholeSet	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  private def wholeSet(in: String) {$/;"	f
whosAsking	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  private var whosAsking: Box[LiftCometActor] = Empty$/;"	v
widget	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/test/scala/webapptest/snippet/RSSFeedDemo.scala	/^    val widget = new RSSFeed()$/;"	V
widgets	/Users/Mads/Dev/logicOfScientificDiscovery/project/build/LogicOfScientificDiscovery.scala	/^	val widgets = "net.liftweb" % "lift-widgets" % "2.0-M2" % "compile" $/;"	V
winners	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/LottoExample.scala	/^  val winners = List(Winner(23, List(2, 45, 34, 23, 3, 5)), Winner(54, List(52, 3, 12, 11, 18, 22)))$/;"	V
withAttrs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  def withAttrs[T](attrs: MetaData)(f: => T): T = {$/;"	f
withDefault	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^  def withDefault[B1 >: B](d: A => B1): Map[A, B1] = new Map[A, B1] {$/;"	f
withDefaultValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/Map.scala	/^  def withDefaultValue[B1 >: B](d: B1): Map[A, B1] = withDefault(x => d)$/;"	f
withHead	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/test/scala/net/liftweb/webapptest/snippet/HeadTestSnippet.scala	/^  def withHead = <div>$/;"	f
withHints	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Formats.scala	/^  def withHints(hints: TypeHints) = new DefaultFormats {$/;"	f
withIn	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^    def withIn[T](reader: Reader)(thunk: =>T): T =$/;"	f
withIn	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def withIn[T](in: InputStream)(thunk: =>T): T =$/;"	f
withLogger	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/TimeHelpersSpec.scala	/^  def withLogger(logger: LiftLogger)(block: => Any) = {$/;"	f
withNewContext	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionContext.scala	/^  private[transaction] def withNewContext[T](body: => T): T = {$/;"	f
withOut	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def withOut[T](out: OutputStream)(thunk: =>T): T =$/;"	f
withOut	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Console.scala	/^  def withOut[T](out: PrintStream)(thunk: =>T): T =$/;"	f
withTxMandatory	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^  def withTxMandatory[T](body: => T): T = {$/;"	f
withTxNever	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^  def withTxNever[T](body: => T): T = {$/;"	f
withTxNotSupported	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^  def withTxNotSupported[T](body: => T): T = TransactionContext.withNewContext {$/;"	f
withTxRequired	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^  def withTxRequired[T](body: => T): T = {$/;"	f
withTxRequiresNew	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^  def withTxRequiresNew[T](body: => T): T = TransactionContext.withNewContext {$/;"	f
withTxSupports	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-jta/src/main/scala/net/liftweb/transaction/TransactionService.scala	/^  def withTxSupports[T](body: => T): T = {$/;"	f
withValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^    def withValue[S](s : S) = $/;"	f
withValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^    def withValue[S](s : S) = $/;"	f
withValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/DynamicVariable.scala	/^  def withValue[S](newval: T)(thunk: =>S): S = {$/;"	f
wizardBottom	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  protected def wizardBottom: Box[Elem] = None$/;"	f
wizardTop	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-wizard/src/main/scala/net/liftweb/wizard/Wizard.scala	/^  protected def wizardTop: Box[Elem] = None$/;"	f
words	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var words: List[String] = Nil$/;"	v
wp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val wp = req.path.wholePath$/;"	V
wp	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftServlet.scala	/^      val wp = req.path.wholePath$/;"	V
wrap	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^  def wrap[a,b](i: a => b, j: b => a, pa: SPU[a]): SPU[b] =$/;"	f
wrapIt	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^  protected def wrapIt(in: NodeSeq): NodeSeq =$/;"	f
wrapQuery	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^  private def wrapQuery[B](f: () => B): B = {$/;"	f
write	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Serialization.scala	/^  def write[A <: AnyRef, W <: Writer](a: A, out: W)(implicit formats: Formats): W =$/;"	f
write	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/main/scala/net/liftweb/json/Serialization.scala	/^  def write[A <: AnyRef](a: A)(implicit formats: Formats): String =$/;"	f
write	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/ConcurrentLock.scala	/^  def write[T](f: => T): T = {$/;"	f
write	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/mocks/MockServletContext.scala	/^  def write(b: Int) {$/;"	f
write	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/Channel.scala	/^  def write(x: a) = synchronized {$/;"	f
write	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/SyncChannel.scala	/^  def write(data: A) {$/;"	f
write	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/pilib.scala	/^    def write(x: A) =$/;"	f
write	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^  final def write(w: java.io.Writer, node: Node, enc: String, xmlDecl: Boolean, doctype: dtd.DocType) {$/;"	f
writeLock	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/SoftReferenceCache.scala	/^  val writeLock = rwl.writeLock$/;"	V
writeNatPrefix	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    def writeNatPrefix(x: Int) {$/;"	f
writeObject	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  private def writeObject(out: ObjectOutputStream) {$/;"	f
writeObject	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/StringBuilder.scala	/^  private def writeObject(s: java.io.ObjectOutputStream) {$/;"	f
writePermission_	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^    override def writePermission_?  = true$/;"	f
writePermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBinary.scala	/^  override def writePermission_? = true$/;"	f
writePermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedBoolean.scala	/^  override def writePermission_? = true$/;"	f
writePermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDate.scala	/^  override def writePermission_? = true$/;"	f
writePermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDateTime.scala	/^  override def writePermission_? = true$/;"	f
writePermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  override def writePermission_? = true$/;"	f
writePermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDouble.scala	/^	override def writePermission_? = true$/;"	f
writePermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedField.scala	/^  def writePermission_? = false$/;"	f
writePermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  override def writePermission_? = false \/\/ not writable$/;"	f
writePermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedInt.scala	/^  override def writePermission_? = true$/;"	f
writePermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def writePermission_? = false \/\/ not writable$/;"	f
writePermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedLong.scala	/^  override def writePermission_? = true$/;"	f
writePermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedPassword.scala	/^  override def writePermission_? = true$/;"	f
writePermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedString.scala	/^  override def writePermission_? = true$/;"	f
writePermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedTime.scala	/^  override def writePermission_? = true$/;"	f
writePermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  override def writePermission_? = false \/\/ not writable$/;"	f
writePermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedUniqueId.scala	/^  override def writePermission_? = false$/;"	f
writePermission_	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/ProtoUser.scala	/^    override def writePermission_?  = true$/;"	f
writeReq	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/SyncChannel.scala	/^    val writeReq = new SyncVar[Boolean]$/;"	V
writeRequest	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^      def writeRequest(out: OutputStream) {$/;"	f
writer	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/Properties.scala	/^  private val writer = new java.io.PrintWriter(Console.err, true)$/;"	V
written	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/Channel.scala	/^  private var written = new LinkedList[a] \/\/ FIFO buffer, realized through$/;"	v
wrt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/testing/SUnit.scala	/^      val wrt = new StringWriter$/;"	V
ws	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/TextBuffer.scala	/^  var ws = true$/;"	v
ws	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/FactoryAdapter.scala	/^        var ws = false$/;"	v
wsc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def wsc(c: Char): Boolean = c == ' ' || c == '\\n' || c == '\\r' || c == '\\t'$/;"	f
wsc	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def wsc: Parser[Elem] = elem("wsc", wsc)$/;"	f
x	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/S.scala	/^    val x = _formGroup.is$/;"	V
x	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    def toJsCmd = """var x=document.getElementById(""" + select.encJs + """);$/;"	v
x	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-imaging/src/main/scala/net/liftweb/imaging/ImageHelpers.scala	/^        var x = 0 $/;"	v
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Enumeration.scala	/^      var x = underlyingAsLong$/;"	v
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^      val x = xs.next$/;"	V
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    while (elems.hasNext) { val x = elems.next; if (p(x)) buf += x }$/;"	V
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    while (elems.hasNext) { val x = elems.next; if (p(x)) matched += x else failed += x }$/;"	V
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^        if (hasNext) { val x = xs(i) ; i += 1 ; x }$/;"	V
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^      val x = next$/;"	V
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    val x = next$/;"	V
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/RandomAccessSeq.scala	/^    while (elems.hasNext) { val x = elems.next; if (p(x)) matched += x else failed += x }$/;"	V
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^    val x = table(index).asInstanceOf[T];$/;"	V
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^  def -= (key: A): Unit = { val x = jmap.remove(key); }$/;"	V
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaMapAdaptor.scala	/^  def update(key: A, value: B): Unit = { val x = jmap.put(key, value); }$/;"	V
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaSetAdaptor.scala	/^  def +=(elem: A): Unit = { val x = jset.add(elem); }$/;"	V
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/JavaSetAdaptor.scala	/^  def -=(elem: A): Unit = { val x = jset.remove(elem); }$/;"	V
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/Channel.scala	/^    val x = written.elem$/;"	V
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^        var x = 0$/;"	v
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^        var x = 0;$/;"	v
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/Source.scala	/^      def next = {val x = data.asInstanceOf[Char]; data = bufIn.read(); x}$/;"	V
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/mobile/Code.scala	/^      val x = value.asInstanceOf[JObject]$/;"	V
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/NondetWordAutom.scala	/^    val x = new mutable.BitSet(nstates)$/;"	V
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^              val x = new mutable.BitSet(pos)$/;"	V
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^            val x = new mutable.BitSet(pos)$/;"	V
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^    var x: MetaData = MetaData.this$/;"	v
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^        val x = it.next$/;"	V
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^    val x = toList filter f$/;"	V
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^        val x = it.next$/;"	V
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^      val x = Text(sb.toString())$/;"	V
x	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Xhtml.scala	/^        val x = it.next$/;"	V
x1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LD.scala	/^    val x1 = x.trim.toLowerCase.toList$/;"	V
xAttributeValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def xAttributeValue(): String = {$/;"	f
xAttributes	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^  override def xAttributes(pscope:NamespaceBinding): (MetaData,NamespaceBinding) = {$/;"	f
xAttributes	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def xAttributes(pscope:NamespaceBinding): (MetaData,NamespaceBinding) = {$/;"	f
xCharData	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/PCDataMarkupParser.scala	/^  override def xCharData: NodeSeq = {$/;"	f
xCharData	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def xCharData: NodeSeq = {$/;"	f
xCharData	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/XhtmlParser.scala	/^  override def xCharData: NodeSeq = {$/;"	f
xCharRef	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def xCharRef(ch: () => Char, nextch: () => Unit): String = {$/;"	f
xComment	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def xComment: NodeSeq = {$/;"	f
xEQ	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def xEQ = { xSpaceOpt; xToken('='); xSpaceOpt }$/;"	f
xEndTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def xEndTag(n: String) = {$/;"	f
xEntityValue	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def xEntityValue(): String = {$/;"	f
xName	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def xName: String = {$/;"	f
xProcInstr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def xProcInstr: NodeSeq = {$/;"	f
xSpace	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def xSpace =$/;"	f
xSpaceOpt	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def xSpaceOpt = while (isSpace(ch) && !eof) { nextch; }$/;"	f
xTag	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  protected def xTag(pscope:NamespaceBinding): Tuple3[String, MetaData, NamespaceBinding] = {$/;"	f
xText	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def xText: String = {$/;"	f
xToken	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def xToken(that: Char) {$/;"	f
xToken	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def xToken(that: Seq[Char]): Unit = {$/;"	f
xaxis	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def xaxis: Box[FlotAxisOptions] = Empty$/;"	f
xbind	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def xbind(namespace: String, xml: NodeSeq)(transform: PartialFunction[String, NodeSeq => NodeSeq]): NodeSeq = {$/;"	f
xc	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^            var xc = xs$/;"	v
xc	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^      var xc = xs$/;"	v
xc	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var xc = xs$/;"	v
xdatetime	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthConsumer.scala	/^  def xdatetime = _xdatetime.is$/;"	f
xdatetime	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth-mapper/src/main/scala/net/liftweb/oauth/mapper/OAuthToken.scala	/^    def xdatetime = _xdatetime.is$/;"	f
xdatetime	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/main/scala/net/liftweb/oauth/OAuthTraits.scala	/^  def xdatetime: Date$/;"	f
xdatetime	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-oauth/src/test/scala/net/liftweb/oauth/OAuthSignatureMethodSpec.scala	/^    def xdatetime: Date = new Date(0)$/;"	f
xform	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^  def xform(in: Char): Char = Character.toUpperCase(in)$/;"	f
xform	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/HeadHelper.scala	/^      def xform(in: NodeSeq, inBody: Boolean): NodeSeq = in flatMap {$/;"	f
xhtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BindHelpersSpec.scala	/^      val xhtml = <div> <stats:options\/> <\/div>$/;"	V
xhtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BindHelpersSpec.scala	/^      val xhtml = <input name="days"> <stats:options\/> <\/input>$/;"	V
xhtml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/test/scala/net/liftweb/util/BindHelpersSpec.scala	/^      val xhtml = <select name="days"> <stats:options\/> <\/select>$/;"	V
xhtml11	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  val xhtml11 = "<!DOCTYPE html PUBLIC \\"-\/\/W3C\/\/DTD XHTML 1.1\/\/EN\\" \\"http:\/\/www.w3.org\/TR\/xhtml11\/DTD\/xhtml11.dtd\\">"$/;"	V
xhtmlFrameset	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  val xhtmlFrameset = "<!DOCTYPE html PUBLIC \\"-\/\/W3C\/\/DTD XHTML 1.0 Frameset\/\/EN\\" \\"http:\/\/www.w3.org\/TR\/xhtml1\/DTD\/xhtml1-frameset.dtd\\">"$/;"	V
xhtmlMobile	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  val xhtmlMobile = "<!DOCTYPE html PUBLIC \\"-\/\/WAPFORUM\/\/DTD XHTML Mobile 1.0\/\/EN\\" \\"http:\/\/www.wapforum.org\/DTD\/xhtml-mobile10.dtd\\">"$/;"	V
xhtmlStrict	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  val xhtmlStrict = "<!DOCTYPE html PUBLIC \\"-\/\/W3C\/\/DTD XHTML 1.0 Strict\/\/EN\\" \\"http:\/\/www.w3.org\/TR\/xhtml1\/DTD\/xhtml1-strict.dtd\\">"$/;"	V
xhtmlTransitional	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftResponse.scala	/^  val xhtmlTransitional = "<!DOCTYPE html PUBLIC \\"-\/\/W3C\/\/DTD XHTML 1.0 Transitional\/\/EN\\" \\"http:\/\/www.w3.org\/TR\/xhtml1\/DTD\/xhtml1-transitional.dtd\\">"$/;"	V
xhtmlValidator	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^  @volatile var xhtmlValidator: Box[XHtmlValidator] = Empty \/\/ Full(TransitionalXHTML1_0Validator)$/;"	v
xml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^    val xml = <chars><char>a<\/char><char>b<\/char><char>c<\/char><\/chars>$/;"	V
xml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlExamples.scala	/^    val xml = toXml(lotto map {$/;"	V
xml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  val xml = _xml.flatMap(content => S.session.map(s => s.processSurroundAndInclude("JS SetHTML id: " + id, content)))$/;"	V
xml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftRules.scala	/^    val xml = List((MsgsErrorMeta.get, f(S.errors), S.??("msg.error")),$/;"	V
xml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^        val xml = merge(rawXml, request)$/;"	V
xml	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  lazy val xml: Box[Elem] = if (!xml_?) Empty$/;"	V
xml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def xml: Elem = throw (exception openOr new java.io.IOException("HTTP Failure"))$/;"	f
xml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  def xml: Elem$/;"	f
xml	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-testkit/src/main/scala/net/liftweb/http/testing/TestFramework.scala	/^  override lazy val xml: Elem = {$/;"	V
xml	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^  val xml       = "xml"$/;"	V
xml1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlBugs.scala	/^    val xml1 = <venue><id>123<\/id><\/venue>$/;"	V
xml2	/Users/Mads/Dev/liftweb/framework/lift-base/lift-json/src/test/scala/net/liftweb/json/XmlBugs.scala	/^    val xml2 = <venue> <id>{"1"}{"23"}<\/id> <\/venue>$/;"	V
xmlEvent	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/pull/XMLEventReader.scala	/^  var xmlEvent: XMLEvent = null$/;"	v
xmlParam	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/BindHelpers.scala	/^  def xmlParam(in: NodeSeq, param: String): Box[String] = {$/;"	f
xmlProcInstr	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupParser.scala	/^  def xmlProcInstr(): MetaData = {$/;"	f
xmlToMailBodyType	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/Mailer.scala	/^  implicit def xmlToMailBodyType(html: NodeSeq): MailBodyType = XHTMLMailBodyType(html)$/;"	f
xmlToXmlOrJsCmd	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/CometActor.scala	/^  implicit def xmlToXmlOrJsCmd(in: NodeSeq): RenderOut = new RenderOut(Full(in), fixedRender, Empty, Empty, false)$/;"	f
xmlType	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Node.scala	/^  def xmlType(): TypeSymbol = null$/;"	f
xml_	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/Req.scala	/^  def xml_? = contentType != null && contentType.dmap(false)(_.toLowerCase.startsWith("text\/xml"))$/;"	f
xmlb	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/LiftSession.scala	/^                val xmlb = try {$/;"	V
xmlns	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/XML.scala	/^  val xmlns     = "xmlns"$/;"	V
xmpp	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-xmpp/src/main/scala/net/liftweb/xmpp/XMPPDispatcher.scala	/^  val xmpp = new XMPPDispatcher(connf, login)$/;"	V
xs	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/CombParserHelpers.scala	/^      val xs = new _root_.scala.collection.mutable.ListBuffer[T]$/;"	V
xs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^          val xs = x.elements$/;"	V
xs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^    val xs = seq.elements$/;"	V
xs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^    var xs: List[A] = Nil$/;"	v
xs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var xs: List[B] = this$/;"	v
xs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayBuffer.scala	/^    val xs = iter.elements.toList$/;"	V
xs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^      var xs = l._1$/;"	v
xs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinator/Parsers.scala	/^    val xs = new scala.collection.mutable.ListBuffer[T]$/;"	V
xs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/combinatorold/Parsers.scala	/^      val xs = new scala.collection.mutable.ListBuffer[T]$/;"	V
xs1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/MailBox.scala	/^      var xs1 = xs.next$/;"	v
y	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/JsCommands.scala	/^    var y = null;$/;"	v
y	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-imaging/src/main/scala/net/liftweb/imaging/ImageHelpers.scala	/^      var y = 0 $/;"	v
y	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^    val y = new Array[AnyRef](x.length * 2);$/;"	V
y	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ArrayStack.scala	/^    val y = new Array[AnyRef](x.length);$/;"	V
y	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/concurrent/ops.scala	/^    val y = new SyncVar[Either[B, Throwable]]$/;"	V
y	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^      val y = x >>> 7;$/;"	V
y	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/io/BytePickle.scala	/^    val y = x >>> 7;$/;"	V
y	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/MetaData.scala	/^      val y = x$/;"	V
y	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^          val y = jt.next$/;"	V
y	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^        val y = this(0)$/;"	V
y	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^    val y = toList flatMap { x => f(x).toList }$/;"	V
y	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Parsing.scala	/^      val y = z.elements$/;"	V
y	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^        val y =  ParameterEntityDecl(name, edef)$/;"	V
y	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/MarkupHandler.scala	/^      val y = ParsedEntityDecl(name, edef)$/;"	V
y	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/TokenTests.scala	/^      val y           = s.elements;$/;"	V
y	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/parsing/TokenTests.scala	/^      val y = s.elements;$/;"	V
y1	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/LD.scala	/^    val y1 = y.trim.toLowerCase.toList$/;"	V
yaxis	/Users/Mads/Dev/liftweb/framework/lift-modules/lift-widgets/src/main/scala/net/liftweb/widgets/flot/FlotOptions.scala	/^  def yaxis: Box[FlotAxisOptions] = Empty$/;"	f
yc	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var yc = ys$/;"	v
year	/Users/Mads/Dev/liftweb/framework/lift-base/lift-util/src/main/scala/net/liftweb/util/TimeHelpers.scala	/^  def year(in: Date): Int =  {$/;"	f
year	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Award.scala	/^	object year extends MappedInt(this) {$/;"	o
year	/Users/Mads/Dev/logicOfScientificDiscovery/src/main/scala/sidewayscoding/model/Discovery.scala	/^	object year extends MappedInt(this){$/;"	o
yieldFunction	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^  def yieldFunction: JsExp = toJs$/;"	f
yieldFunction	/Users/Mads/Dev/liftweb/framework/lift-base/lift-webkit/src/main/scala/net/liftweb/http/js/Jx.scala	/^  def yieldFunction: JsExp$/;"	f
ys	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterable.scala	/^          val ys = y.elements$/;"	V
ys	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^      var ys: List[A] = Nil$/;"	v
ys1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^          val ys1 = head1 :: mapConserve(ys.tail)(f)$/;"	V
yss	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var yss = xss$/;"	v
z	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/mutable/ListBuffer.scala	/^        val z = cursor.asInstanceOf[scala.::[A]]$/;"	V
z	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^	val z = it.next$/;"	V
z	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/BaseBerrySethi.scala	/^        val z = it.next$/;"	V
z	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Parsing.scala	/^      val z: Seq[Char] = s$/;"	V
z	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Parsing.scala	/^      val z:Seq[Char] = s$/;"	V
z	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/UnprefixedAttribute.scala	/^    this(key, if (!value.isEmpty) value.get else {val z:NodeSeq=null;z}, next)$/;"	V
z	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/UnprefixedAttribute.scala	/^    this(key, if (value ne null) Text(value) else {val z:NodeSeq=null;z}, next)$/;"	V
z1	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/automata/WordBerrySethi.scala	/^       val z1 = z.asInstanceOf[this.lang._regexpT]$/;"	V
zc	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^    var zc = zs$/;"	v
zero	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-mapper/src/main/scala/net/liftweb/mapper/MappedDecimal.scala	/^  private val zero = BigDecimal("0")$/;"	V
zero	/Users/Mads/Dev/liftweb/framework/lift-persistence/lift-record/src/main/scala/net/liftweb/record/field/DecimalField.scala	/^  private val zero = BigDecimal("0")$/;"	V
zero	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/IntMap.scala	/^  def zero(i : Int, mask : Int) = (i & mask) == 0;    $/;"	f
zero	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/collection/immutable/LongMap.scala	/^  def zero(i : Long, mask : Long) = (i & mask) == 0;    $/;"	f
zero	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/util/parsing/json/Lexer.scala	/^  def zero: Parser[String] = '0' ^^^ "0"$/;"	f
zip	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def zip[B](that: Array[B]): Array[(A, B)] = throw new Error()$/;"	f
zip	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def zip[B](that: Iterator[B]) = new Iterator[(A, B)] {$/;"	f
zip	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def zip[B](that: List[B]): List[(A, B)] = {$/;"	f
zip	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  def zip[B](that: Stream[B]): Stream[(A, B)] =$/;"	f
zip	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  final def zip[b](that: Array[b]): Array[(Any,b)] = {$/;"	f
zipAll	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def zipAll[B, C >: A, D >: B](that: List[B], thisElem: C, thatElem: D): List[(C, D)] = {$/;"	f
zipWithIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Array.scala	/^  def zipWithIndex: Array[(A, Int)] = throw new Error()$/;"	f
zipWithIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Iterator.scala	/^  def zipWithIndex = new Iterator[(A, Int)] {$/;"	f
zipWithIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/List.scala	/^  def zipWithIndex: List[(A, Int)] = {$/;"	f
zipWithIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/Stream.scala	/^  def zipWithIndex: Stream[(A, Int)] =$/;"	f
zipWithIndex	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/runtime/BoxedArray.scala	/^  final def zipWithIndex: Array[(Any,Int)] = {$/;"	f
zs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/NodeSeq.scala	/^      var zs: List[Node] = Nil$/;"	v
zs	/Users/Mads/Dev/scala-2.7.7.final-sources/src/library/scala/xml/Utility.scala	/^    val zs: Seq[Char] = value$/;"	V
